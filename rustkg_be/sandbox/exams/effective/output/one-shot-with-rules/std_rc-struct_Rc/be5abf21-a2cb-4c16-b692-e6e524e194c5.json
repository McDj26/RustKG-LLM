{"create_time":"2025-03-29T05:06:58.035Z","id":"be5abf21-a2cb-4c16-b692-e6e524e194c5","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.10-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Rc.html","relations":["contains","excludes","has argument","has declaration","has description","has full name","has method","has return type","has stability","implements","is a","stable since"],"add_triples":[{"triples":[["Rc","is a","struct"],["Rc","has full name","std::rc::Rc"],["Rc","stable since","1.0.0"],["Rc","has declaration","pub struct Rc<T> where T: ?Sized { // some fields omitted }"],["Rc","has description","A reference-counted pointer type over an immutable value."],["Rc::new","is a","function"],["Rc::new","has full name","std::rc::Rc::new"],["Rc::new","has argument","value"],["value","has type","T"],["Rc::new","has return type","Rc<T>"],["Rc::new","has description","Constructs a new Rc<T>."],["Rc::try_unwrap","is a","function"],["Rc::try_unwrap","stable since","1.4.0"],["Rc::try_unwrap","has argument","this"],["this","has type","Rc<T>"],["Rc::try_unwrap","has return type","Result<T, Rc<T>>"],["Rc::try_unwrap","has description","Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."],["Rc::would_unwrap","is a","function"],["Rc::would_unwrap","has stability","Unstable (rc_would_unwrap #28356): just added for niche usecase"],["Rc::would_unwrap","has description","Checks if Rc::try_unwrap would return Ok."],["Rc::downgrade","stable since","1.4.0"],["Rc::downgrade","has return type","Weak<T>"],["Rc::downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."],["Rc<T>","implements","Clone"],["Rc<T>","implements","Deref"],["Rc<T>::Deref","has associated type","Target = T"],["Rc<T>","implements","Drop"],["Rc<T>","excludes","Send"],["Rc<T>","excludes","Sync"],["std::rc","contains","Rc"],["std::rc","contains","Weak"],["Rc::make_mut","stable since","1.4.0"],["Rc::make_mut","has description","Make a mutable reference into the given Rc<T> by cloning the inner data..."],["Rc::get_mut","stable since","1.4.0"],["Rc::get_mut","has description","Returns a mutable reference to the contained value if the Rc<T> is unique."]],"startIndex":0,"endIndex":39000},{"triples":[["Rc<T>","implements","Display"],["Rc<T>","implements","Debug"],["Rc<T>","implements","Pointer"],["Rc<T>","implements","From<T>"],["Rc<T>","implements","Borrow<T>"],["Rc<T>","implements","AsRef<T>"],["Rc<T>","implements","UnwindSafe"],["Rc<T>::Display::fmt","is a","function"],["Rc<T>::Display::fmt","has argument","self"],["self","has type","&Rc<T>"],["Rc<T>::Display::fmt","has argument","f"],["f","has type","&mut Formatter"],["Rc<T>::Display::fmt","has return type","Result<(), Error>"],["Rc<T>::Display::fmt","has description","Formats the value using the given formatter."],["Rc<T>::Debug::fmt","is a","function"],["Rc<T>::Debug::fmt","has argument","self"],["Rc<T>::Debug::fmt","has argument","f"],["Rc<T>::Debug::fmt","has return type","Result<(), Error>"],["Rc<T>::Debug::fmt","has description","Formats the value using the given formatter."],["Rc<T>::Pointer::fmt","is a","function"],["Rc<T>::Pointer::fmt","has argument","self"],["self","has type","Rc<T>"],["Rc<T>::Pointer::fmt","has argument","f"],["Rc<T>::Pointer::fmt","has return type","Result<(), Error>"],["Rc<T>::Pointer::fmt","has description","Formats the value using the given formatter."],["Rc<T>::from","is a","function"],["Rc<T>::from","has argument","t"],["t","has type","T"],["Rc<T>::from","has return type","Rc<T>"],["Rc<T>::from","has description","Performs the conversion."],["Rc<T>::from","stable since","1.6.0"],["Rc<T>::borrow","is a","function"],["Rc<T>::borrow","has argument","self"],["Rc<T>::borrow","has return type","&T"],["Rc<T>::borrow","has description","Immutably borrows from an owned value."],["Rc<T>::as_ref","is a","function"],["Rc<T>::as_ref","has argument","self"],["Rc<T>::as_ref","has return type","&T"],["Rc<T>::as_ref","has description","Performs the conversion."],["Rc<T>::as_ref","stable since","1.5.0"],["Rc<T>","stable since","1.9.0"]],"startIndex":39000,"endIndex":78000}],"metrics":{"escapeCount":0,"costTime":644958,"totalUsage":{"prompt_tokens":22465,"completion_tokens":19102,"cached_tokens":0,"reasoning_tokens":17455},"chunkLength":2,"chunksInfo":[{"contextLength":0,"contentLength":39000,"costTime":125771},{"contextLength":200,"contentLength":8738,"costTime":519187}]},"model":"deepseek-r1-250120","extraInfo":{}}