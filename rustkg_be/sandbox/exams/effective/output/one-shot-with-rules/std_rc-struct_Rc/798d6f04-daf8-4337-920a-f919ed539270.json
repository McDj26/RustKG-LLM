{"create_time":"2025-03-29T05:55:07.171Z","id":"798d6f04-daf8-4337-920a-f919ed539270","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.40-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Rc.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_rc-struct_Rc\\merged_3d6d5812-9420-4b1c-a763-024666cb963c.json","relations":["contains","excludes","has argument","has associated type","has declaration","has description","has example","has feature","has full name","has generic parameter","has method","has return type","has stability","has type","has version","implements","is a","stable since"],"delete_triples":[{"triples":[["downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."],["Weak","has description","`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."],["Rc","implements","From<Box<T>>"],["Rc","implements","From<&'a [T]>"]],"startIndex":217,"endIndex":37439},{"triples":[["Rc::ptr_eq","has description","Returns true if the two Rcs point to the same value"],["Rc::downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."],["Rc::get_mut","has description","Returns a mutable reference to the inner value if there are no other Rc or Weak pointers to the same value"]],"startIndex":37434,"endIndex":76431},{"triples":[],"startIndex":76436,"endIndex":115436},{"triples":[["Rc","implements","From<&[T]>"]],"startIndex":115437,"endIndex":154437},{"triples":[],"startIndex":154474,"endIndex":185808}],"add_triples":[{"triples":[["downgrade","has description","Creates a new Weak pointer to this value."],["Weak","has description","`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed allocation. The allocation is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."],["Rc","has method","assume_init"],["assume_init","is a","method"],["assume_init","has full name","std::rc::Rc::assume_init"],["assume_init","has description","Converts to Rc<T>."],["assume_init","has stability","Unstable (new_uninit #63291)"],["Rc","has method","get_mut_unchecked"],["get_mut_unchecked","is a","method"],["get_mut_unchecked","has full name","std::rc::Rc::get_mut_unchecked"],["Rc","has method","into_raw_non_null"],["into_raw_non_null","is a","method"],["into_raw_non_null","has full name","std::rc::Rc::into_raw_non_null"],["into_raw_non_null","has return type","NonNull<T>"],["Rc","has method","new_uninit"],["new_uninit","is a","method"],["new_uninit","has full name","std::rc::Rc::new_uninit"],["new_uninit","has description","Constructs a new Rc with uninitialized contents."],["new_uninit","has stability","Unstable (new_uninit #63291)"],["Rc","has method","new_uninit_slice"],["new_uninit_slice","is a","method"],["new_uninit_slice","has full name","std::rc::Rc::new_uninit_slice"],["new_uninit_slice","has description","Constructs a new reference-counted slice with uninitialized contents."],["new_uninit_slice","has stability","Unstable (new_uninit #63291)"],["Rc","has method","pin"],["pin","is a","method"],["pin","has full name","std::rc::Rc::pin"],["pin","has description","Constructs a new Pin<Rc<T>>."],["pin","stable since","1.33.0"],["Rc","implements","FromIterator<T>"],["Rc","implements","DispatchFromDyn<Rc<U>>"]],"startIndex":217,"endIndex":37439},{"triples":[["into_raw_non_null","has stability","Unstable (rc_into_raw_non_null #47336)"],["get_mut_unchecked","has stability","Unstable (get_mut_unchecked #63292)"],["Rc::ptr_eq","has description","Returns true if the two Rcs point to the same value (not just values that compare as equal)"],["Rc::downgrade","has description","Creates a new Weak pointer to this allocation"],["Rc::get_mut","has description","Returns a mutable reference into the given Rc if there are no other Rc or Weak pointers to the same allocation"],["assume_init","has description","Converts to Rc<T>"]],"startIndex":37434,"endIndex":76431},{"triples":[["Rc","implements","Ord"],["Rc","has method","cmp"],["cmp","is a","method"],["cmp","has description","Comparison for two Rcs."],["Rc","implements","From<&str>"],["Rc","has method","max"],["max","is a","method"],["max","has description","Compares and returns the maximum of two values."],["Rc","has method","min"],["min","is a","method"],["min","has description","Compares and returns the minimum of two values."],["Rc","implements","DispatchFromDyn"],["Rc","implements","Borrow"]],"startIndex":76436,"endIndex":115436},{"triples":[["Rc","implements","PartialOrd"],["Rc","has method","partial_cmp"],["partial_cmp","is a","method"],["partial_cmp","has description","Partial comparison for two Rcs."],["Rc","has method","lt"],["lt","is a","method"],["lt","has description","Less-than comparison for two Rcs."],["Rc","has method","le"],["le","is a","method"],["le","has description","Less-than or equal to comparison for two Rcs."],["Rc","has method","gt"],["gt","is a","method"],["gt","has description","Greater-than comparison for two Rcs."],["Rc","has method","ge"],["ge","is a","method"],["ge","has description","Greater-than or equal to comparison for two Rcs."],["Rc","implements","Default"],["Rc","has method","default"],["default","is a","method"],["default","has description","Creates a new Rc<T>, with the Default value for T."],["Rc","implements","Unpin"],["Rc","implements","FromIterator"],["Rc","has method","from_iter"],["from_iter","is a","method"],["from_iter","has description","Takes each element in the Iterator and collects it into an Rc<[T]>."]],"startIndex":115437,"endIndex":154437},{"triples":[["Rc","implements","From<PathBuf>"],["Rc","implements","From<&'_ OsStr>"],["Rc","implements","From<&'_ Path>"],["Rc<Path>","implements","From<PathBuf>"],["Rc<Path>::from","has description","Converts a PathBuf into an Rc<Path> by moving the PathBuf data into a new Rc buffer."],["Rc<OsStr>::from","has description","Converts a OsString into an Rc<OsStr> without copying or allocating."],["Rc<Path>::from","stable since","1.24.0"],["Rc<OsStr>::from","stable since","1.24.0"]],"startIndex":154474,"endIndex":185808}],"metrics":{"escapeCount":0,"costTime":979146,"totalUsage":{"prompt_tokens":139307,"completion_tokens":25896,"cached_tokens":0,"reasoning_tokens":23260},"chunkLength":5,"chunksInfo":[{"oldContextLength":227,"oldStrLength":16486,"newContextLength":227,"newStrLength":37243,"costTime":107590},{"oldContextLength":227,"oldStrLength":28061,"newContextLength":227,"newStrLength":39018,"costTime":57502},{"oldContextLength":227,"oldStrLength":34187,"newContextLength":227,"newStrLength":39021,"costTime":289612},{"oldContextLength":227,"oldStrLength":33450,"newContextLength":227,"newStrLength":39021,"costTime":284519},{"oldContextLength":227,"oldStrLength":30330,"newContextLength":227,"newStrLength":31355,"costTime":239923}]},"model":"deepseek-r1-250120","extraInfo":{}}