{"create_time":"2025-03-29T06:21:16.815Z","id":"c8fc03ac-23e1-4a1d-986a-e6da57b10f2d","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.50-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Rc.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_rc-struct_Rc\\merged_1f549011-c46d-438f-8922-b15e0b710685.json","relations":["excludes","has Target type","has argument","has associated type","has declaration","has description","has example","has feature","has full name","has generic parameter","has method","has return type","has stability","has type","has version","implements","is a","stable since"],"delete_triples":[{"triples":[["Rc","has method","into_raw_non_null"],["into_raw_non_null","is a","method"],["into_raw_non_null","has full name","std::rc::Rc::into_raw_non_null"],["into_raw_non_null","has return type","NonNull<T>"],["into_raw_non_null","has description","Consumes the Rc, returning the wrapped pointer as NonNull<T>."],["into_raw_non_null","has stability","Unstable (rc_into_raw_non_null #47336)"]],"startIndex":242,"endIndex":38963},{"triples":[["downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."],["Rc::from_raw","has description","Constructs an Rc from a raw pointer."]],"startIndex":39607,"endIndex":78607},{"triples":[["Rc<str>","has method","from"],["from","has argument","v"],["from::v","has type","&str"],["from","has return type","Rc<str>"],["Rc<T>","implements","From<&str>"],["Rc<[T]>","has method","from"],["from::v","has type","&[T]"],["from","has return type","Rc<[T]>"],["Rc<T>","implements","From<&[T]>"]],"startIndex":79225,"endIndex":110248},{"triples":[],"startIndex":110247,"endIndex":140416},{"triples":[],"startIndex":140425,"endIndex":179425},{"triples":[["&'_ mut F","implements","Future"],["Future","has associated type","Output"],["Output","has type","F::Output"],["&'_ mut I","implements","Iterator"],["Iterator","has associated type","Item"],["Item","has type","I::Item"]],"startIndex":179452,"endIndex":194454}],"add_triples":[{"triples":[["Rc","has method","as_ptr"],["Rc","has method","new_cyclic"],["Rc","has method","new_zeroed"],["Rc","has method","new_zeroed_slice"],["new_cyclic","has stability","Unstable (arc_new_cyclic #75861)"],["new_zeroed","has stability","Unstable (new_uninit #63291)"],["new_zeroed_slice","has stability","Unstable (new_uninit #63291)"]],"startIndex":242,"endIndex":38963},{"triples":[["as_ptr","is a","method"],["as_ptr","has full name","std::rc::Rc::as_ptr"],["as_ptr","has return type","*const T"],["as_ptr","stable since","1.45.0"],["as_ptr","has description","Provides a raw pointer to the data."],["as_ptr","has argument","this"],["as_ptr::this","has type","&Rc<T>"],["Rc::from_raw","has description","Constructs an Rc<T> from a raw pointer."],["downgrade","has description","Creates a new Weak pointer to this allocation."],["Rc::downgrade","has description","Creates a new Weak pointer to this allocation."]],"startIndex":39607,"endIndex":78607},{"triples":[["Rc<T>","implements","Clone"],["Rc","has method","clone"],["clone","is a","method"],["clone","has description","Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."],["Rc::clone","has description","Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."],["Rc<T>","implements","Borrow<T>"],["Rc<T>","implements","AsRef<T>"],["Rc<T>","implements","Deref"],["Rc<T>","implements","Drop"],["Rc<T>","excludes","Sync"],["Rc<T>","excludes","Send"],["Rc<T>","implements","CoerceUnsized<Rc<U>>"]],"startIndex":79225,"endIndex":110248},{"triples":[["Rc<CStr>","implements","From<&CStr>"],["Rc<OsStr>","implements","From<&OsStr>"],["Rc<Path>","implements","From<&Path>"],["Rc<str>","implements","From<&str>"],["Rc<T>","implements","From<Box<T>>"],["Rc<CStr>","implements","From<CString>"],["Rc<OsStr>","implements","From<OsString>"],["Rc<Path>","implements","From<PathBuf>"],["Rc<str>","implements","From<String>"],["Rc<T>","implements","From<T>"],["Rc<[T]>","implements","From<Vec<T>>"],["Rc<[T]>","implements","FromIterator<T>"]],"startIndex":110247,"endIndex":140416},{"triples":[["Rc<T>","implements","Ord"],["Rc<T>","implements","PartialEq"],["Rc<T>","implements","PartialOrd"],["Rc<T>","implements","Pointer"],["Rc<T>","implements","Hash"],["Rc<T>","implements","Unpin"],["Rc<T>","implements","UnwindSafe"],["Rc<[T]>","implements","TryFrom<Rc<[T]>>"],["Rc<T>","has method","cmp"],["cmp","is a","method"],["cmp","has full name","std::rc::Rc::cmp"],["cmp","has return type","Ordering"],["cmp","has description","Comparison for two Rcs."],["Rc<T>","has method","eq"],["eq","is a","method"],["eq","has full name","std::rc::Rc::eq"],["eq","has return type","bool"],["eq","has description","Equality for two Rcs."],["Rc<T>","has method","partial_cmp"],["partial_cmp","is a","method"],["partial_cmp","has full name","std::rc::Rc::partial_cmp"],["partial_cmp","has return type","Option<Ordering>"],["partial_cmp","has description","Partial comparison for two Rcs."],["Rc<T>","has method","lt"],["lt","is a","method"],["lt","has full name","std::rc::Rc::lt"],["lt","has return type","bool"],["lt","has description","Less-than comparison for two Rcs."],["Rc<T>","has method","le"],["le","is a","method"],["le","has full name","std::rc::Rc::le"],["le","has return type","bool"],["le","has description","'Less than or equal to' comparison for two Rcs."],["Rc<T>","has method","gt"],["gt","is a","method"],["gt","has full name","std::rc::Rc::gt"],["gt","has return type","bool"],["gt","has description","Greater-than comparison for two Rcs."],["Rc<T>","has method","ge"],["ge","is a","method"],["ge","has full name","std::rc::Rc::ge"],["ge","has return type","bool"],["ge","has description","'Greater than or equal to' comparison for two Rcs."],["Rc<T>","has method","hash"],["hash","is a","method"],["hash","has full name","std::rc::Rc::hash"],["hash","has argument","state"],["hash::state","has type","&mut H"],["hash","has description","Feeds this value into the given Hasher."],["Rc<T>","has method","fmt"],["fmt","is a","method"],["fmt","has full name","std::rc::Rc::fmt"],["fmt","has argument","f"],["fmt::f","has type","&mut Formatter<'_>"],["fmt","has return type","Result<(), Error>"],["fmt","has description","Formats the value using the given formatter."]],"startIndex":140425,"endIndex":179425},{"triples":[["T","implements","From<!>"],["From<!>","has method","from"],["from","has argument","t"],["t","has type","!"],["from","has return type","T"],["T","implements","From<T>"],["From<T>","has method","from"],["T","implements","Into<U>"],["Into<U>","has method","into"],["into","has return type","U"],["T","implements","TryFrom<U>"],["TryFrom<U>","has associated type","Error"],["Error","has type","Infallible"],["TryFrom<U>","has method","try_from"],["try_from","has argument","value"],["value","has type","U"],["try_from","has return type","Result<T, Error>"],["T","implements","TryInto<U>"],["TryInto<U>","has associated type","Error"],["TryInto<U>","has method","try_into"],["try_into","has return type","Result<U, Error>"],["T","implements","ToString"],["ToString","has method","to_string"],["to_string","has return type","String"]],"startIndex":179452,"endIndex":194454}],"metrics":{"escapeCount":0,"costTime":1060877,"totalUsage":{"prompt_tokens":158807,"completion_tokens":28374,"cached_tokens":0,"reasoning_tokens":25246},"chunkLength":6,"chunksInfo":[{"oldContextLength":227,"oldStrLength":32390,"newContextLength":227,"newStrLength":38742,"costTime":222748},{"oldContextLength":227,"oldStrLength":38473,"newContextLength":227,"newStrLength":39021,"costTime":176948},{"oldContextLength":227,"oldStrLength":38927,"newContextLength":227,"newStrLength":31044,"costTime":60703},{"oldContextLength":227,"oldStrLength":39021,"newContextLength":227,"newStrLength":30190,"costTime":152699},{"oldContextLength":227,"oldStrLength":25544,"newContextLength":227,"newStrLength":39021,"costTime":240064},{"oldContextLength":227,"oldStrLength":10040,"newContextLength":227,"newStrLength":15023,"costTime":207715}]},"model":"deepseek-r1-250120","extraInfo":{}}