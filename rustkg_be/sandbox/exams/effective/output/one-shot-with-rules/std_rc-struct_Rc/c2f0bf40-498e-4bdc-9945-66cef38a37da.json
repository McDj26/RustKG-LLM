{"create_time":"2025-03-29T05:11:56.175Z","id":"c2f0bf40-498e-4bdc-9945-66cef38a37da","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Rc.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_rc-struct_Rc\\merged_594fdbbc-c08d-4f25-934e-f31190614a24.json","relations":["contains","excludes","has argument","has associated type","has declaration","has description","has example","has full name","has generic parameter","has method","has return type","has stability","has type","implements","is a","stable since"],"delete_triples":[{"triples":[["Rc","has description","A reference-counted pointer type over an immutable value."],["Weak","has description","A weak version of `Rc<T>`."],["try_unwrap","has description","Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>. This will succeed even if there are outstanding weak references."],["downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."]],"startIndex":215,"endIndex":39215},{"triples":[["Rc<T>","implements","PartialEq"],["Rc<T>","implements","Eq"],["Rc<T>","implements","PartialOrd"],["Rc<T>","implements","From"],["Rc<T>","implements","Borrow"],["Rc<T>","implements","AsRef"],["Rc<T>","implements","UnwindSafe"]],"startIndex":39228,"endIndex":66648}],"add_triples":[{"triples":[["Rc","has description","A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."],["Weak","has description","`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."],["Rc","has method","into_raw"],["into_raw","is a","method"],["into_raw","has description","Consumes the Rc, returning the wrapped pointer."],["Rc","has method","from_raw"],["from_raw","is a","method"],["from_raw","has description","Constructs an Rc from a raw pointer."],["Rc","has method","ptr_eq"],["ptr_eq","is a","method"],["ptr_eq","has description","Returns true if the two Rcs point to the same value (not just values that compare as equal)."],["try_unwrap","has description","Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."],["downgrade","has description","Creates a new Weak pointer to this value."],["Rc","has method","weak_count"],["weak_count","has description","Get the number of weak references to this value."],["Rc","has method","strong_count"],["strong_count","has description","Get the number of strong references to this value."]],"startIndex":215,"endIndex":39215},{"triples":[["Rc<T>","implements","Borrow<T>"],["Rc<T>","implements","Hash"],["Rc<T>","implements","Ord"],["Rc<T>","implements","Clone"],["Rc<T>","implements","Deref"],["Rc<T>","implements","Drop"],["Rc<T>","implements","Display"],["Rc<T>","implements","Debug"],["Rc<T>","implements","Pointer"],["Rc<T>","implements","PartialEq<Rc<T>>"],["Rc<T>","excludes","Sync"],["Rc<T>","excludes","Send"],["Rc<T>","implements","CoerceUnsized<Rc<U>>"],["Rc<T>","implements","AsRef<T>"]],"startIndex":39228,"endIndex":66648}],"metrics":{"escapeCount":1,"costTime":92911,"totalUsage":{"prompt_tokens":46697,"completion_tokens":2665,"cached_tokens":0,"reasoning_tokens":1641},"chunkLength":2,"chunksInfo":[{"oldContextLength":227,"oldStrLength":28370,"newContextLength":227,"newStrLength":39021,"costTime":52751},{"oldContextLength":227,"oldStrLength":18307,"newContextLength":227,"newStrLength":27441,"costTime":40160}]},"model":"deepseek-r1-250120","extraInfo":{}}