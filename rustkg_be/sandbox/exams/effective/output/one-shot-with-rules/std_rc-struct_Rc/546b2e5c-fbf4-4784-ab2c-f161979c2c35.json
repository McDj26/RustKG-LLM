{"create_time":"2025-03-29T05:11:21.135Z","id":"546b2e5c-fbf4-4784-ab2c-f161979c2c35","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Rc.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_rc-struct_Rc\\merged_594fdbbc-c08d-4f25-934e-f31190614a24.json","relations":["contains","excludes","has argument","has associated type","has description","has example","has full name","has generic parameter","has method","has return type","has stability","implements","is a","stable since"],"delete_triples":[{"triples":[["Rc","has description","A reference-counted pointer type over an immutable value."],["Weak","has description","A weak version of `Rc<T>`."],["Rc::try_unwrap","has description","Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."]],"startIndex":215,"endIndex":39215},{"triples":[["Rc","has method","partial_cmp"],["Rc","has method","lt"],["Rc","has method","le"],["Rc","has method","gt"],["Rc","has method","ge"],["Rc","has method","cmp"]],"startIndex":39228,"endIndex":66648}],"add_triples":[{"triples":[["Rc","has description","A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."],["Weak","has description","`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value."],["Rc","has method","into_raw"],["into_raw","is a","method"],["into_raw","has argument","this"],["into_raw","has return type","*const T"],["into_raw","has description","Consumes the Rc, returning the wrapped pointer."],["Rc","has method","from_raw"],["from_raw","is a","method"],["from_raw","has argument","ptr"],["from_raw","has return type","Rc<T>"],["from_raw","has description","Constructs an Rc from a raw pointer."],["Rc","has method","ptr_eq"],["ptr_eq","is a","method"],["ptr_eq","has argument","this"],["ptr_eq","has argument","other"],["ptr_eq","has return type","bool"],["ptr_eq","has description","Returns true if the two Rcs point to the same value"],["Rc","implements","Eq"],["Rc","implements","PartialOrd"],["Rc::try_unwrap","has description","Returns the contained value if the Rc has exactly one strong reference"]],"startIndex":215,"endIndex":39215},{"triples":[["Rc","implements","CoerceUnsized"],["Rc","has method","max"],["max","is a","method"],["max","has stability","Unstable (ord_max_min #25663)"],["Rc","has method","min"],["min","is a","method"],["min","has stability","Unstable (ord_max_min #25663)"],["Rc::drop","has description","Drops the Rc. This will decrement the strong reference count. If the strong reference count reaches zero then the only other references (if any) are Weak, so we drop the inner value."],["Rc::clone","has description","Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."],["Rc::hash","has description","Feeds this value into the given Hasher. Read more"]],"startIndex":39228,"endIndex":66648}],"metrics":{"escapeCount":0,"costTime":220979,"totalUsage":{"prompt_tokens":46615,"completion_tokens":6389,"cached_tokens":0,"reasoning_tokens":5418},"chunkLength":2,"chunksInfo":[{"oldContextLength":227,"oldStrLength":28370,"newContextLength":227,"newStrLength":39021,"costTime":78932},{"oldContextLength":227,"oldStrLength":18307,"newContextLength":227,"newStrLength":27441,"costTime":142047}]},"model":"deepseek-r1-250120","extraInfo":{}}