{"create_time":"2025-03-29T05:12:19.273Z","id":"05b24fdc-88d5-4a68-8bda-e00b4d268359","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Rc.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_rc-struct_Rc\\merged_594fdbbc-c08d-4f25-934e-f31190614a24.json","relations":["Borrow","Clone","CoerceUnsized","Default","Deref","Drop","Eq","PartialEq","PartialOrd","contains","excludes","has Target","has Target type","has argument","has associated type","has declaration","has description","has example","has full name","has generic parameter","has method","has return type","has stability","has type","implements","is a","stable since"],"delete_triples":[{"triples":[["Rc","has description","A reference-counted pointer type over an immutable value."],["try_unwrap","has description","Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>. This will succeed even if there are outstanding weak references."],["downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."],["Rc::downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."]],"startIndex":215,"endIndex":39215},{"triples":[["Rc<T>","implements","Hash"],["Rc<T>::hash","has description","Feeds this value into the state given, updating the hasher as necessary."],["Rc<T>::hash_slice","has description","Feeds a slice of this type into the state provided."],["clone","has description","Makes a clone of the Rc<T>. When you clone an Rc<T>, it will create another pointer to the data and increase the strong reference counter."]],"startIndex":39228,"endIndex":66648}],"add_triples":[{"triples":[["Rc","has description","A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."],["Rc","has method","into_raw"],["into_raw","is a","method"],["into_raw","has full name","std::rc::Rc::into_raw"],["into_raw","has return type","*const T"],["into_raw","stable since","1.17.0"],["Rc","has method","from_raw"],["from_raw","is a","method"],["from_raw","has full name","std::rc::Rc::from_raw"],["from_raw","has argument","ptr"],["ptr","has type","*const T"],["from_raw","stable since","1.17.0"],["Rc","has method","ptr_eq"],["ptr_eq","is a","method"],["ptr_eq","has full name","std::rc::Rc::ptr_eq"],["ptr_eq","has return type","bool"],["ptr_eq","stable since","1.17.0"],["Rc<T>","implements","Eq"],["Rc<T>","implements","PartialOrd"],["downgrade","has description","Creates a new Weak pointer to this value."],["Rc::downgrade","has description","Creates a new Weak pointer to this value."],["try_unwrap","has description","Returns the contained value if the Rc has exactly one strong reference."],["Rc::try_unwrap","has description","Returns the contained value if the Rc has exactly one strong reference."]],"startIndex":215,"endIndex":39215},{"triples":[["Rc<T>","implements","CoerceUnsized"],["Rc<T>::hash","has description","Feeds this value into the given [Hasher]."],["Rc<T>::hash_slice","has description","Feeds a slice of this type into the given [Hasher]."],["max","has stability","Unstable (ord_max_min #25663)"],["min","has stability","Unstable (ord_max_min #25663)"],["clone","has description","Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."]],"startIndex":39228,"endIndex":66648}],"metrics":{"escapeCount":0,"costTime":278854,"totalUsage":{"prompt_tokens":46741,"completion_tokens":8140,"cached_tokens":0,"reasoning_tokens":7086},"chunkLength":2,"chunksInfo":[{"oldContextLength":227,"oldStrLength":28370,"newContextLength":227,"newStrLength":39021,"costTime":57270},{"oldContextLength":227,"oldStrLength":18307,"newContextLength":227,"newStrLength":27441,"costTime":221584}]},"model":"deepseek-r1-250120","extraInfo":{}}