{"create_time":"2025-03-29T05:24:51.535Z","id":"3d6d5812-9420-4b1c-a763-024666cb963c","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Rc.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_rc-struct_Rc\\merged_05b24fdc-88d5-4a68-8bda-e00b4d268359.json","relations":["contains","excludes","has argument","has description","has feature","has full name","has method","has return type","has stability","has type","has version","implements","is a","stable since"],"delete_triples":[{"triples":[],"startIndex":0,"endIndex":38899},{"triples":[["Rc::downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."],["Rc::try_unwrap","has description","Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."]],"startIndex":38884,"endIndex":77765},{"triples":[["max","has stability","Unstable (ord_max_min #25663)"],["min","has stability","Unstable (ord_max_min #25663)"],["Rc<T>::hash","has description","Feeds this value into the given [Hasher]."],["Rc<T>::hash_slice","has description","Feeds a slice of this type into the given [Hasher]."]],"startIndex":77772,"endIndex":116732},{"triples":[],"startIndex":116739,"endIndex":142663}],"add_triples":[{"triples":[["std::rc","contains","Rc"],["Rc","is a","struct"],["Rc","has description","A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."],["Rc","has method","new"],["Rc::new","has description","Constructs a new `Rc<T>`."],["Rc","has method","try_unwrap"],["Rc::try_unwrap","has version","1.4.0"],["Rc::try_unwrap","has description","Returns the contained value, if the `Rc` has exactly one strong reference."],["Rc","has method","into_raw"],["Rc::into_raw","has version","1.17.0"],["Rc","has method","from_raw"],["Rc::from_raw","has feature","unsafe"],["Rc::from_raw","has version","1.17.0"],["Rc::from_raw","has description","Constructs an `Rc` from a raw pointer."],["Rc","has method","downgrade"],["Rc::downgrade","has version","1.4.0"],["Rc::downgrade","has description","Creates a new `Weak` pointer to this value."],["Rc","has method","weak_count"],["Rc::weak_count","has version","1.15.0"],["Rc::weak_count","has description","Gets the number of `Weak` pointers to this value."],["Rc","has method","strong_count"],["Rc::strong_count","has version","1.15.0"],["Rc::strong_count","has description","Gets the number of strong (`Rc`) pointers to this value."],["Rc","has method","get_mut"],["Rc::get_mut","has version","1.4.0"],["Rc::get_mut","has description","Returns a mutable reference to the inner value, if there are no other `Rc` or `Weak` pointers to the same value."],["Rc","has method","ptr_eq"],["Rc::ptr_eq","has version","1.17.0"],["Rc::ptr_eq","has description","Returns true if the two `Rc`s point to the same value (not just values that compare as equal)."],["Rc","has method","make_mut"],["Rc::make_mut","has version","1.4.0"],["Rc::make_mut","has description","Makes a mutable reference into the given `Rc`."],["Rc","has method","downcast"],["Rc::downcast","has version","1.29.0"],["Rc::downcast","has description","Attempt to downcast the `Rc<Any>` to a concrete type."],["Rc","implements","Eq"],["Rc","implements","Default"],["Rc","implements","Clone"],["Rc","implements","Drop"],["Rc","implements","Deref"],["Rc","implements","Borrow<T>"],["Rc","implements","PartialOrd<Rc<T>>"],["Rc","implements","AsRef<T>"],["Rc","implements","!Sync"],["Rc","implements","!Send"],["Rc","implements","Unpin"],["Rc","implements","Display"],["Rc","implements","From<Vec<T>>"],["Rc","implements","From<String>"],["Rc","implements","From<T>"],["Rc","implements","From<&'a str>"],["Rc","implements","From<&'a [T]>"],["Rc","implements","From<Box<T>>"],["Rc","implements","Hash"],["Rc","implements","Debug"],["Rc","implements","CoerceUnsized<Rc<U>>"],["Rc","implements","PartialEq<Rc<T>>"],["Rc","implements","Pointer"],["Rc","implements","Ord"],["Rc","implements","From<CString>"],["Rc","implements","From<&'a CStr>"],["Rc","implements","From<OsString>"],["Rc","implements","From<&'a OsStr>"],["Rc","implements","UnwindSafe"],["Rc","implements","From<PathBuf>"],["Rc","implements","From<&'a Path>"]],"startIndex":0,"endIndex":38899},{"triples":[["Rc::downgrade","has description","Creates a new Weak pointer to this value."],["Rc::try_unwrap","has description","Returns the contained value if the Rc has exactly one strong reference."],["Rc","has method","as_ref"],["as_ref","is a","method"],["as_ref","has full name","std::rc::Rc::as_ref"],["as_ref","has description","Returns a reference to the inner value."]],"startIndex":38884,"endIndex":77765},{"triples":[["Rc<T>::hash","has description","Feeds this value into the given Hasher. Read more"],["Rc<T>::hash_slice","has description","Feeds a slice of this type into the given Hasher. Read more"]],"startIndex":77772,"endIndex":116732},{"triples":[],"startIndex":116739,"endIndex":142663}],"metrics":{"escapeCount":1,"costTime":649086,"totalUsage":{"prompt_tokens":91591,"completion_tokens":18588,"cached_tokens":0,"reasoning_tokens":16583},"chunkLength":4,"chunksInfo":[{"oldContextLength":27,"oldStrLength":29942,"newContextLength":27,"newStrLength":38920,"costTime":248481},{"oldContextLength":227,"oldStrLength":15570,"newContextLength":227,"newStrLength":38902,"costTime":152294},{"oldContextLength":227,"oldStrLength":13903,"newContextLength":227,"newStrLength":38981,"costTime":214240},{"oldContextLength":227,"oldStrLength":8192,"newContextLength":227,"newStrLength":25945,"costTime":34071}]},"model":"deepseek-r1-250120","extraInfo":{}}