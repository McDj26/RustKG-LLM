{"create_time":"2025-03-29T05:57:57.179Z","id":"f7009ff1-a001-472f-b1dd-472bc9ebaaa7","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.40-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Rc.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_rc-struct_Rc\\merged_3d6d5812-9420-4b1c-a763-024666cb963c.json","relations":["excludes","has argument","has associated type","has declaration","has description","has example","has feature","has full name","has generic parameter","has method","has return type","has stability","has type","has version","implements","is a","stable since"],"delete_triples":[{"triples":[["Rc","has method","into_raw"],["Rc","has method","from_raw"],["Rc","has method","downgrade"],["Rc","has method","weak_count"],["Rc","has method","strong_count"],["Rc","has method","get_mut"],["Rc","has method","ptr_eq"],["Rc","has method","make_mut"],["Rc","has method","downcast"],["Rc::downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."],["Rc::try_unwrap","has description","Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."],["downgrade","has description","Downgrades the Rc<T> to a Weak<T> reference."]],"startIndex":217,"endIndex":37439},{"triples":[],"startIndex":37434,"endIndex":76431},{"triples":[],"startIndex":76436,"endIndex":115436},{"triples":[["Rc<T>","implements","PartialEq<Rc<T>>"]],"startIndex":115437,"endIndex":154437},{"triples":[["Rc<Path>::from<PathBuf>","has description","Performs the conversion."],["Rc<Path>::from<&'_ Path>","has description","Performs the conversion."]],"startIndex":154474,"endIndex":185808}],"add_triples":[{"triples":[["Rc","has method","assume_init"],["Rc","has method","get_mut_unchecked"],["Rc","has method","new_uninit"],["Rc","has method","new_uninit_slice"],["Rc","has method","pin"],["Rc","has method","into_raw_non_null"],["Rc::assume_init","is a","method"],["Rc::assume_init","has description","Converts to Rc<T>."],["Rc::assume_init","has feature","unsafe"],["Rc::get_mut_unchecked","is a","method"],["Rc::get_mut_unchecked","has description","Returns a mutable reference to the inner value if there are no other Rc or Weak pointers to the same value."],["Rc::new_uninit","is a","method"],["Rc::new_uninit","has description","Constructs a new Rc with uninitialized contents."],["Rc::new_uninit","has stability","Unstable (new_uninit #63291)"],["Rc::new_uninit_slice","is a","method"],["Rc::new_uninit_slice","has description","Constructs a new reference-counted slice with uninitialized contents."],["Rc::new_uninit_slice","has stability","Unstable (new_uninit #63291)"],["Rc::pin","is a","method"],["Rc::pin","has return type","Pin<Rc<T>>"],["Rc::pin","has description","Constructs a new Pin<Rc<T>>. If T does not implement Unpin, then value will be pinned in memory and unable to be moved."],["Rc::into_raw_non_null","is a","method"],["Rc::into_raw_non_null","has return type","NonNull<T>"],["Rc::downgrade","has description","Creates a new Weak pointer to this value."],["Rc::try_unwrap","has description","Returns the contained value, if the Rc has exactly one strong reference."]],"startIndex":217,"endIndex":37439},{"triples":[["Rc::into_raw_non_null","has description","Consumes the Rc, returning the wrapped pointer as NonNull<T>."],["Rc::into_raw_non_null","has stability","Unstable (rc_into_raw_non_null #47336)"],["Rc::get_mut_unchecked","has feature","unsafe"]],"startIndex":37434,"endIndex":76431},{"triples":[["Rc<T>","implements","Ord"],["Rc","has method","cmp"],["cmp","is a","method"],["cmp","has description","Comparison for two Rcs. The two are compared by calling cmp() on their inner values."],["cmp","has return type","Ordering"],["Rc","has method","eq"],["eq","is a","method"],["eq","has description","Equality for two Rcs. Two Rcs are equal if their inner values are equal."],["eq","has return type","bool"],["Rc","has method","ne"],["ne","is a","method"],["ne","has description","Inequality for two Rcs. Two Rcs are unequal if their inner values are unequal."],["ne","has return type","bool"],["Rc","implements","From<&str>"],["Rc","implements","From<Box<T>>"],["Rc","implements","From<Vec<T>>"]],"startIndex":76436,"endIndex":115436},{"triples":[["Rc<T>","implements","PartialOrd"],["Rc","has method","lt"],["Rc","has method","le"],["Rc","has method","gt"],["Rc","has method","ge"],["lt","is a","method"],["lt","has description","Less-than comparison for two Rcs. The two are compared by calling < on their inner values."],["lt","has return type","bool"],["le","is a","method"],["le","has description","Less than or equal to comparison for two Rcs. The two are compared by calling <= on their inner values."],["le","has return type","bool"],["gt","is a","method"],["gt","has description","Greater-than comparison for two Rcs. The two are compared by calling > on their inner values."],["gt","has return type","bool"],["ge","is a","method"],["ge","has description","Greater than or equal to comparison for two Rcs. The two are compared by calling >= on their inner values."],["ge","has return type","bool"],["Rc","has method","partial_cmp"],["partial_cmp","is a","method"],["partial_cmp","has description","Comparison for two Rcs. The two are compared by calling partial_cmp() on their inner values."],["partial_cmp","has argument","self"],["partial_cmp","has argument","other"],["partial_cmp::self","has type","&Rc<T>"],["partial_cmp::other","has type","&Rc<T>"],["partial_cmp","has return type","Option<Ordering>"]],"startIndex":115437,"endIndex":154437},{"triples":[["Rc<Path>::from<PathBuf>","has description","Converts a PathBuf into an Rc by moving the PathBuf data into a new Rc buffer."],["Rc<Path>::from<&'_ Path>","has description","Converts a Path into an Rc by copying the Path data into a new Rc buffer."]],"startIndex":154474,"endIndex":185808}],"metrics":{"escapeCount":3,"costTime":857934,"totalUsage":{"prompt_tokens":138715,"completion_tokens":22328,"cached_tokens":0,"reasoning_tokens":19577},"chunkLength":5,"chunksInfo":[{"oldContextLength":227,"oldStrLength":16486,"newContextLength":227,"newStrLength":37243,"costTime":171731},{"oldContextLength":227,"oldStrLength":28061,"newContextLength":227,"newStrLength":39018,"costTime":198498},{"oldContextLength":227,"oldStrLength":34187,"newContextLength":227,"newStrLength":39021,"costTime":156882},{"oldContextLength":227,"oldStrLength":33450,"newContextLength":227,"newStrLength":39021,"costTime":120573},{"oldContextLength":227,"oldStrLength":30330,"newContextLength":227,"newStrLength":31355,"costTime":210250}]},"model":"deepseek-r1-250120","extraInfo":{}}