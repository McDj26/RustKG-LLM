{"create_time":"2025-04-04T13:33:37.847Z","id":"76588fe8-503e-40f9-af67-bc62bea8d5b2","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/ffi/index.html","relations":["contains","has description","has full name","is a"],"add_triples":[{"triples":[["alloc","is a","module"],["alloc","has full name","core::alloc"],["alloc","has description","Memory allocation APIs"],["core","contains","alloc"],["any","is a","module"],["any","has full name","core::any"],["any","has description","This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."],["core","contains","any"],["arch","is a","module"],["arch","has full name","core::arch"],["arch","has description","Platform dependent vendor intrinsics."],["core","contains","arch"],["array","is a","module"],["array","has full name","core::array"],["array","has description","Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."],["core","contains","array"],["ascii","is a","module"],["ascii","has full name","core::ascii"],["ascii","has description","Operations on ASCII strings and characters."],["core","contains","ascii"],["borrow","is a","module"],["borrow","has full name","core::borrow"],["borrow","has description","A module for working with borrowed data."],["core","contains","borrow"],["cell","is a","module"],["cell","has full name","core::cell"],["cell","has description","Shareable mutable containers."],["core","contains","cell"],["char","is a","module"],["char","has full name","core::char"],["char","has description","A character type."],["core","contains","char"],["clone","is a","module"],["clone","has full name","core::clone"],["clone","has description","The `Clone` trait for types that cannot be 'implicitly copied'."],["core","contains","clone"],["cmp","is a","module"],["cmp","has full name","core::cmp"],["cmp","has description","Functionality for ordering and comparison."],["core","contains","cmp"],["convert","is a","module"],["convert","has full name","core::convert"],["convert","has description","Traits for conversions between types."],["core","contains","convert"],["default","is a","module"],["default","has full name","core::default"],["default","has description","The `Default` trait for types which may have meaningful default values."],["core","contains","default"],["f32","is a","module"],["f32","has full name","core::f32"],["f32","has description","This module provides constants which are specific to the implementation of the `f32` floating point data type."],["core","contains","f32"],["f64","is a","module"],["f64","has full name","core::f64"],["f64","has description","This module provides constants which are specific to the implementation of the `f64` floating point data type."],["core","contains","f64"],["ffi","is a","module"],["ffi","has full name","core::ffi"],["ffi","has description","Utilities related to FFI bindings."],["core","contains","ffi"],["fmt","is a","module"],["fmt","has full name","core::fmt"],["fmt","has description","Utilities for formatting and printing strings."],["core","contains","fmt"],["future","is a","module"],["future","has full name","core::future"],["future","has description","Asynchronous values."],["core","contains","future"],["hash","is a","module"],["hash","has full name","core::hash"],["hash","has description","Generic hashing support."],["core","contains","hash"],["hint","is a","module"],["hint","has full name","core::hint"],["hint","has description","Hints to compiler that affects how code should be emitted or optimized."],["core","contains","hint"],["i128","is a","module"],["i128","has full name","core::i128"],["i128","has description","The 128-bit signed integer type."],["core","contains","i128"],["i16","is a","module"],["i16","has full name","core::i16"],["i16","has description","The 16-bit signed integer type."],["core","contains","i16"],["i32","is a","module"],["i32","has full name","core::i32"],["i32","has description","The 32-bit signed integer type."],["core","contains","i32"],["i64","is a","module"],["i64","has full name","core::i64"],["i64","has description","The 64-bit signed integer type."],["core","contains","i64"],["i8","is a","module"],["i8","has full name","core::i8"],["i8","has description","The 8-bit signed integer type."],["core","contains","i8"],["intrinsics","is a","module"],["intrinsics","has full name","core::intrinsics"],["intrinsics","has description","rustc compiler intrinsics."],["core","contains","intrinsics"],["isize","is a","module"],["isize","has full name","core::isize"],["isize","has description","The pointer-sized signed integer type."],["core","contains","isize"],["iter","is a","module"],["iter","has full name","core::iter"],["iter","has description","Composable external iteration."],["core","contains","iter"],["marker","is a","module"],["marker","has full name","core::marker"],["marker","has description","Primitive traits and types representing basic properties of types."],["core","contains","marker"],["mem","is a","module"],["mem","has full name","core::mem"],["mem","has description","Basic functions for dealing with memory."],["core","contains","mem"],["num","is a","module"],["num","has full name","core::num"],["num","has description","Numeric traits and functions for the built-in numeric types."],["core","contains","num"],["ops","is a","module"],["ops","has full name","core::ops"],["ops","has description","Overloadable operators."],["core","contains","ops"],["option","is a","module"],["option","has full name","core::option"],["option","has description","Optional values."],["core","contains","option"],["panic","is a","module"],["panic","has full name","core::panic"],["panic","has description","Panic support in the standard library."],["core","contains","panic"],["panicking","is a","module"],["panicking","has full name","core::panicking"],["panicking","has description","Panic support for libcore"],["core","contains","panicking"],["pin","is a","module"],["pin","has full name","core::pin"],["pin","has description","Types which pin data to its location in memory"],["core","contains","pin"],["prelude","is a","module"],["prelude","has full name","core::prelude"],["prelude","has description","The libcore prelude"],["core","contains","prelude"],["ptr","is a","module"],["ptr","has full name","core::ptr"],["ptr","has description","Raw, unsafe pointers, `*const T`, and `*mut T`."],["core","contains","ptr"],["raw","is a","module"],["raw","has full name","core::raw"],["raw","has description","Contains struct definitions for the layout of compiler built-in types."],["core","contains","raw"],["result","is a","module"],["result","has full name","core::result"],["result","has description","Error handling with the `Result` type."],["core","contains","result"],["slice","is a","module"],["slice","has full name","core::slice"],["slice","has description","Slice management and manipulation"],["core","contains","slice"],["str","is a","module"],["str","has full name","core::str"],["str","has description","String manipulation"],["core","contains","str"],["sync","is a","module"],["sync","has full name","core::sync"],["sync","has description","Synchronization primitives"],["core","contains","sync"],["task","is a","module"],["task","has full name","core::task"],["task","has description","Types and Traits for working with asynchronous tasks."],["core","contains","task"],["time","is a","module"],["time","has full name","core::time"],["time","has description","Temporal quantification."],["core","contains","time"],["u128","is a","module"],["u128","has full name","core::u128"],["u128","has description","The 128-bit unsigned integer type."],["core","contains","u128"],["u16","is a","module"],["u16","has full name","core::u16"],["u16","has description","The 16-bit unsigned integer type."],["core","contains","u16"],["u32","is a","module"],["u32","has full name","core::u32"],["u32","has description","The 32-bit unsigned integer type."],["core","contains","u32"],["u64","is a","module"],["u64","has full name","core::u64"],["u64","has description","The 64-bit unsigned integer type."],["core","contains","u64"],["u8","is a","module"],["u8","has full name","core::u8"],["u8","has description","The 8-bit unsigned integer type."],["core","contains","u8"],["unicode","is a","module"],["unicode","has full name","core::unicode"],["core","contains","unicode"],["usize","is a","module"],["usize","has full name","core::usize"],["usize","has description","The pointer-sized unsigned integer type."],["core","contains","usize"],["c_void","is a","enum"],["c_void","has description","Equivalent to C's void type when used as a pointer."],["ffi","contains","c_void"],["assert","is a","macro"],["assert","has description","Ensure that a boolean expression is `true` at runtime."],["core","contains","assert"],["assert_eq","is a","macro"],["assert_eq","has description","Asserts that two expressions are equal to each other (using [`PartialEq`])."],["core","contains","assert_eq"],["assert_ne","is a","macro"],["assert_ne","has description","Asserts that two expressions are not equal to each other (using [`PartialEq`])."],["core","contains","assert_ne"],["cfg","is a","macro"],["cfg","has description","Boolean evaluation of configuration flags, at compile-time."],["core","contains","cfg"],["column","is a","macro"],["column","has description","A macro which expands to the column number on which it was invoked."],["core","contains","column"],["compile_error","is a","macro"],["compile_error","has description","Unconditionally causes compilation to fail with the given error message when encountered."],["core","contains","compile_error"],["concat","is a","macro"],["concat","has description","Concatenates literals into a static string slice."],["core","contains","concat"],["concat_idents","is a","macro"],["concat_idents","has description","Concatenate identifiers into one identifier."],["core","contains","concat_idents"],["debug_assert","is a","macro"],["debug_assert","has description","Ensure that a boolean expression is `true` at runtime."],["core","contains","debug_assert"],["debug_assert_eq","is a","macro"],["debug_assert_eq","has description","Asserts that two expressions are equal to each other."],["core","contains","debug_assert_eq"],["debug_assert_ne","is a","macro"],["debug_assert_ne","has description","Asserts that two expressions are not equal to each other."],["core","contains","debug_assert_ne"],["env","is a","macro"],["env","has description","Inspect an environment variable at compile time."],["core","contains","env"],["file","is a","macro"],["file","has description","A macro which expands to the file name from which it was invoked."],["core","contains","file"],["format_args","is a","macro"],["format_args","has description","The core macro for formatted string creation & output."],["core","contains","format_args"],["include","is a","macro"],["include","has description","Parse a file as an expression or an item according to the context."],["core","contains","include"],["include_bytes","is a","macro"],["include_bytes","has description","Includes a file as a reference to a byte array."],["core","contains","include_bytes"],["include_str","is a","macro"],["include_str","has description","Includes a utf8-encoded file as a string."],["core","contains","include_str"],["line","is a","macro"],["line","has description","A macro which expands to the line number on which it was invoked."],["core","contains","line"],["module_path","is a","macro"],["module_path","has description","Expands to a string that represents the current module path."],["core","contains","module_path"],["option_env","is a","macro"],["option_env","has description","Optionally inspect an environment variable at compile time."],["core","contains","option_env"],["panic","is a","macro"],["panic","has description","Entry point of thread panic, for details, see std::macros"],["stringify","is a","macro"],["stringify","has description","A macro which stringifies its arguments."],["core","contains","stringify"],["try","is a","macro"],["try","has description","Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."],["core","contains","try"],["unimplemented","is a","macro"],["unimplemented","has description","A standardized placeholder for marking unfinished code."],["core","contains","un"]],"startIndex":0,"endIndex":39000}],"metrics":{"escapeCount":0,"costTime":374333,"totalUsage":{"prompt_tokens":6259,"completion_tokens":10203,"cached_tokens":0,"reasoning_tokens":6108},"chunkLength":1,"chunksInfo":[{"contextLength":0,"contentLength":12731,"costTime":374333}]},"model":"deepseek-r1-250120","extraInfo":{}}