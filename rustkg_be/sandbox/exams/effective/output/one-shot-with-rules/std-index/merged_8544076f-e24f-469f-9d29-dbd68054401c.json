{"create_time":"2025-04-04T13:38:16.962Z","id":"merged_8544076f-e24f-469f-9d29-dbd68054401c","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","merged_triples":[{"triples":[["std","is a","crate"],["std","stable since","1.0.0"],["std","has source code","src/std/up/src/libstd/lib.rs.html#11-473"],["std","has description","The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."],["std","contains","any"],["any","has description","This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."],["std","contains","ascii"],["ascii","has description","Operations on ASCII strings and characters."],["std","contains","borrow"],["borrow","has description","A module for working with borrowed data."],["std","contains","boxed"],["boxed","has description","A pointer type for heap allocation."],["std","contains","cell"],["cell","has description","Shareable mutable containers."],["std","contains","char"],["char","has description","A character type."],["std","contains","collections"],["collections","has description","Collection types."],["std","contains","env"],["env","has description","Inspection and manipulation of the process's environment."],["std","contains","fs"],["fs","has description","Filesystem manipulation operations."],["std","contains","net"],["net","has description","Networking primitives for TCP/UDP communication."],["std","contains","thread"],["thread","has description","Native threads."],["array","is a","primitive type"],["array","has description","A fixed-size array, denoted [T; N]"],["std","contains","array"],["bool","is a","primitive type"],["bool","has description","The boolean type."],["std","contains","bool"],["str","is a","primitive type"],["str","has description","String slices."],["std","contains","str"],["assert!","is a","macro"],["assert!","has description","Ensure that a boolean expression is true at runtime."],["std","contains","assert!"],["format!","is a","macro"],["format!","has description","Use the syntax described in std::fmt to create a value of type String."],["std","contains","format!"],["vec!","is a","macro"],["vec!","has description","Creates a Vec containing the arguments."],["std","contains","vec!"],["intrinsics","has stability","Unstable"],["intrinsics","has description","rustc compiler intrinsics."],["std","contains","intrinsics"],["raw","has stability","Unstable"],["raw","has description","Contains struct definitions for the layout of compiler built-in types."],["std","contains","raw"],["std","has description","The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."],["std","contains","clone"],["std","contains","cmp"],["std","contains","convert"],["std","contains","default"],["std","contains","error"],["std","contains","f32"],["std","contains","f64"],["std","contains","ffi"],["std","contains","fmt"],["std","contains","hash"],["std","contains","i16"],["std","contains","i32"],["std","contains","i64"],["std","contains","i8"],["std","contains","io"],["std","contains","isize"],["std","contains","iter"],["std","contains","marker"],["std","contains","mem"],["std","contains","num"],["std","contains","ops"],["std","contains","option"],["std","contains","os"],["std","contains","panic"],["std","contains","path"],["std","contains","prelude"],["std","contains","process"],["std","contains","ptr"],["std","contains","rc"],["std","contains","result"],["std","contains","slice"],["std","contains","string"],["std","contains","sync"],["std","contains","time"],["std","contains","u16"],["std","contains","u32"],["std","contains","u64"],["std","contains","u8"],["std","contains","usize"],["std","contains","vec"],["array","has description","A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."],["char","is a","primitive type"],["f32","is a","primitive type"],["f32","has description","The 32-bit floating point type."],["f64","is a","primitive type"],["f64","has description","The 64-bit floating point type."],["i16","is a","primitive type"],["i16","has description","The 16-bit signed integer type."],["i32","is a","primitive type"],["i32","has description","The 32-bit signed integer type."],["i64","is a","primitive type"],["i64","has description","The 64-bit signed integer type."],["i8","is a","primitive type"],["i8","has description","The 8-bit signed integer type."],["isize","is a","primitive type"],["isize","has description","The pointer-sized signed integer type."],["pointer","is a","primitive type"],["pointer","has description","Raw, unsafe pointers, *const T, and *mut T."],["slice","is a","primitive type"],["slice","has description","A dynamically-sized view into a contiguous sequence, [T]."],["tuple","is a","primitive type"],["tuple","has description","A finite heterogeneous sequence, (T, U, ..)."],["u16","is a","primitive type"],["u16","has description","The 16-bit unsigned integer type."],["u32","is a","primitive type"],["u32","has description","The 32-bit unsigned integer type."],["u64","is a","primitive type"],["u64","has description","The 64-bit unsigned integer type."],["u8","is a","primitive type"],["u8","has description","The 8-bit unsigned integer type."],["usize","is a","primitive type"],["usize","has description","The pointer-sized unsigned integer type."],["any","is a","module"],["any","has description","This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."],["ascii","is a","module"],["borrow","is a","module"],["boxed","is a","module"],["cell","is a","module"],["char","is a","module"],["clone","is a","module"],["clone","has description","The Clone trait for types that cannot be 'implicitly copied'."],["cmp","is a","module"],["cmp","has description","Functionality for ordering and comparison."],["collections","is a","module"],["convert","is a","module"],["convert","has description","Traits for conversions between types."],["default","is a","module"],["default","has description","The Default trait for types which may have meaningful default values."],["env","is a","module"],["error","is a","module"],["error","has description","Traits for working with Errors."],["f32","is a","module"],["f64","is a","module"],["ffi","is a","module"],["ffi","has description","Utilities related to FFI bindings."],["fmt","is a","module"],["fmt","has description","Utilities for formatting and printing strings"],["fs","is a","module"],["hash","is a","module"],["hash","has description","Generic hashing support."],["i16","is a","module"],["i32","is a","module"],["i64","is a","module"],["i8","is a","module"],["io","is a","module"],["io","has description","Traits, helpers, and type definitions for core I/O functionality."],["isize","is a","module"],["iter","is a","module"],["iter","has description","Composable external iteration."],["marker","is a","module"],["marker","has description","Primitive traits and marker types representing basic 'kinds' of types."],["mem","is a","module"],["mem","has description","Basic functions for dealing with memory."],["net","is a","module"],["num","is a","module"],["num","has description","Additional functionality for numerics."],["ops","is a","module"],["ops","has description","Overloadable operators."],["option","is a","module"],["option","has description","Optional values."],["os","is a","module"],["os","has description","OS-specific functionality."],["panic","is a","module"],["panic","has description","Panic support in the standard library"],["path","is a","module"],["path","has description","Cross-platform path manipulation."],["prelude","is a","module"],["prelude","has description","The Rust Prelude."],["process","is a","module"],["process","has description","Working with processes."],["ptr","is a","module"],["ptr","has description","Raw, unsafe pointers, *const T, and *mut T."],["rc","is a","module"],["rc","has description","Thread-local reference-counted boxes (the Rc<T> type)."],["result","is a","module"],["result","has description","Error handling with the Result type."],["slice","is a","module"],["str","is a","module"],["str","has description","Unicode string slices."],["string","is a","module"],["string","has description","A UTF-8 encoded, growable string."],["sync","is a","module"],["sync","has description","Useful synchronization primitives."],["thread","is a","module"],["time","is a","module"],["time","has description","Temporal quantification."],["u16","is a","module"],["u32","is a","module"],["u64","is a","module"],["u8","is a","module"],["usize","is a","module"],["vec","is a","module"],["vec","has description","A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."],["intrinsics","is a","module"],["intrinsics","has attribute","unstable"],["raw","is a","module"],["raw","has attribute","unstable"],["assert_eq!","is a","macro"],["assert_eq!","has description","Asserts that two expressions are equal to each other."],["cfg!","is a","macro"],["cfg!","has description","Boolean evaluation of configuration flags."],["column!","is a","macro"],["column!","has description","A macro which expands to the column number on which it was invoked."],["concat!","is a","macro"],["concat!","has description","Concatenates literals into a static string slice."],["concat_idents!","is a","macro"],["concat_idents!","has description","Concatenate identifiers into one identifier."],["debug_assert!","is a","macro"],["debug_assert!","has description","Ensure that a boolean expression is true at runtime."],["debug_assert_eq!","is a","macro"],["debug_assert_eq!","has description","Asserts that two expressions are equal to each other."],["env!","is a","macro"],["env!","has description","Inspect an environment variable at compile time."],["file!","is a","macro"],["file!","has description","A macro which expands to the file name from which it was invoked."],["format!","has description","Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."],["format_args!","is a","macro"],["format_args!","has description","The core macro for formatted string creation & output."],["include!","is a","macro"],["include!","has description","Parse the current given file as an expression."],["include_bytes!","is a","macro"],["include_bytes!","has description","Includes a file as a reference to a byte array."],["include_str!","is a","macro"],["include_str!","has description","Includes a utf8-encoded file as a string."],["line!","is a","macro"],["line!","has description","A macro which expands to the line number on which it was invoked."],["module_path!","is a","macro"],["module_path!","has description","Expands to a string that represents the current module path."],["option_env!","is a","macro"],["option_env!","has description","Optionally inspect an environment variable at compile time."],["panic!","is a","macro"],["panic!","has description","The entry point for panic of Rust threads."],["print!","is a","macro"],["print!","has description","Macro for printing to the standard output."],["println!","is a","macro"],["println!","has description","Macro for printing to the standard output, with a newline."],["stringify!","is a","macro"],["stringify!","has description","A macro which stringifies its argument."],["thread_local!","is a","macro"],["thread_local!","has description","Declare a new thread local storage key of type std::thread::LocalKey."],["scoped_thread_local!","is a","macro"],["scoped_thread_local!","has attribute","deprecated"],["scoped_thread_local!","has description","Declare a new scoped thread local storage key."],["select!","is a","macro"],["select!","has attribute","unstable"],["select!","has description","A macro to select an event from a number of receivers."],["try!","is a","macro"],["try!","has description","Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."],["unimplemented!","is a","macro"],["unimplemented!","has description","A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."],["unreachable!","is a","macro"],["unreachable!","has description","A utility macro for indicating unreachable code."],["write!","is a","macro"],["write!","has description","Use the format! syntax to write data into a buffer."],["writeln!","is a","macro"],["writeln!","has description","Use the format! syntax to write data into a buffer, appending a newline."],["std","has source code","../src/std/up/src/libstd/lib.rs.html#11-473"],["std","contains","alloc"],["std","contains","core"],["std","contains","libc"],["std","contains","rustc_unicode"],["any","has full name","std::any"],["ascii","has full name","std::ascii"],["borrow","has full name","std::borrow"],["boxed","has full name","std::boxed"],["cell","has full name","std::cell"],["char","has full name","std::char"],["clone","has full name","std::clone"],["cmp","has full name","std::cmp"],["collections","has full name","std::collections"],["convert","has full name","std::convert"],["default","has full name","std::default"],["env","has full name","std::env"],["error","has full name","std::error"],["f32","has full name","std::f32"],["f64","has full name","std::f64"],["ffi","has full name","std::ffi"],["fmt","has full name","std::fmt"],["fs","has full name","std::fs"],["hash","has full name","std::hash"],["i16","has full name","std::i16"],["i32","has full name","std::i32"],["i64","has full name","std::i64"],["i8","has full name","std::i8"],["io","has full name","std::io"],["isize","has full name","std::isize"],["iter","has full name","std::iter"],["marker","has full name","std::marker"],["mem","has full name","std::mem"],["net","has full name","std::net"],["num","has full name","std::num"],["ops","has full name","std::ops"],["option","has full name","std::option"],["os","has full name","std::os"],["panic","has full name","std::panic"],["path","has full name","std::path"],["prelude","has full name","std::prelude"],["process","has full name","std::process"],["ptr","has full name","std::ptr"],["rc","has full name","std::rc"],["result","has full name","std::result"],["slice","has full name","std::slice"],["str","has full name","std::str"],["string","has full name","std::string"],["sync","has full name","std::sync"],["thread","has full name","std::thread"],["time","has full name","std::time"],["u16","has full name","std::u16"],["u32","has full name","std::u32"],["u64","has full name","std::u64"],["u8","has full name","std::u8"],["usize","has full name","std::usize"],["vec","has full name","std::vec"],["vec","has description","A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"],["intrinsics","has full name","std::intrinsics"],["raw","has full name","std::raw"],["scoped_thread_local!","has stability","Deprecated"],["scoped_thread_local!","has stability","Unstable"],[""],["std","contains","proc_macro"],["std","contains","std_unicode"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#11-493"],["process","has description","A module for working with processes."],["i128","is a","primitive type"],["i128","has description","The 128-bit signed integer type."],["i128","has attribute","unstable"],["u128","is a","primitive type"],["u128","has description","The 128-bit unsigned integer type."],["u128","has attribute","unstable"],["eprint!","is a","macro"],["eprint!","has description","Macro for printing to the standard error."],["eprintln!","is a","macro"],["eprintln!","has description","Macro for printing to the standard error, with a newline."],["assert_ne!","is a","macro"],["assert_ne!","has description","Asserts that two expressions are not equal to each other."],["debug_assert_ne!","is a","macro"],["debug_assert_ne!","has description","Asserts that two expressions are not equal to each other."],["intrinsics","has attribute","Experimental"],["raw","has attribute","Experimental"],["proc_macro","is a","crate"],["proc_macro","has description","A support library for macro authors when defining new macros."],["std_unicode","is a","crate"],["std_unicode","has description","The Unicode Library"],["select!","has attribute","Experimental"],["try!","has description","Helper macro for reducing boilerplate for matching Result together with converting downstream errors."],["include!","has description","Parse a file as an expression or an item according to the context"],["println!","has description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."],["write!","has description","Write formatted data into a buffer."],["writeln!","has description","Write formatted data into a buffer, with a newline appended."],["f32","has description","This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["f64","has description","This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["intrinsics","has stability","Experimental"],["raw","has stability","Experimental"],["println!","has description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."],["scoped_thread_local!","has stability","Experimental"],["select!","has stability","Experimental"],["write!","has description","Write formatted data into a buffer"],["rc","has description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["std","contains","i128"],["i128","has stability","Experimental"],["std","contains","u128"],["u128","has stability","Experimental"],["std","contains","eprint!"],["std","contains","eprintln!"],["std","contains","compile_error!"],["compile_error!","is a","macro"],["compile_error!","has description","Unconditionally causes compilation to fail with the given error message."],["include!","has description","Parse a file as an expression or an item according to the context."],["writeln!","has description","Write formatted data into a buffer with appended newline."],["println!","has description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."]],"startIndex":0,"endIndex":39000},{"triples":[["test","is a","crate"],["test","has description","Support code for rustc's built in unit-test and micro-benchmarking framework."],["std","contains","test"],["unit","is a","primitive type"],["unit","has description","The () type, sometimes called 'unit' or 'nil'."],["std","contains","unit"],["never","is a","primitive type"],["never","has description","The ! type, also called 'never'."],["never","has attribute","Experimental"],["std","contains","never"],["fn","is a","primitive type"],["fn","has description","Function pointers, like fn(usize) -> bool."],["std","contains","fn"],["reference","is a","primitive type"],["reference","has description","References, both shared and mutable."],["std","contains","reference"],["alloc","is a","module"],["alloc","has description","Memory allocation APIs"],["arch","is a","module"],["arch","has description","SIMD and vendor intrinsics module."],["std","contains","arch"],["hint","is a","module"],["hint","has description","Hints to compiler that affects how code should be emitted or optimized."],["std","contains","hint"],["is_x86_feature_detected!","is a","macro"],["is_x86_feature_detected!","has description","A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."],["std","contains","is_x86_feature_detected!"],["await!","is a","macro"],["await!","has attribute","Experimental"],["std","contains","await!"],["format!","has description","Creates a String using interpolation of runtime expressions."],["std","has version","1.30.1"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#11-540"],["fn","has description","Function pointers, like `fn(usize) -> bool`."],["unit","has description","The `()` type, sometimes called 'unit' or 'nil'."],["never","has description","The `!` type, also called 'never'."],["ptr","has description","Manually manage memory through raw pointers"],["std","contains","future"],["future","is a","module"],["future","has stability","Experimental"],["future","has description","Asynchronous values."],["std","contains","pin"],["pin","is a","module"],["pin","has stability","Experimental"],["pin","has description","Types which pin data to its location in memory"],["std","contains","task"],["task","is a","module"],["task","has stability","Experimental"],["task","has description","Types and Traits for working with asynchronous tasks"],["select!","has attribute","Experimental"],["process","has description","A module for working with processes."]],"startIndex":39035,"endIndex":78987}],"changes_info_triples":[],"model":"deepseek-r1-250120"}