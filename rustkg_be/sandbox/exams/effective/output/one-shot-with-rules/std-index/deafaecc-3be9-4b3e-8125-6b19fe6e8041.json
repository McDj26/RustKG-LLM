{"create_time":"2025-04-04T13:43:47.550Z","id":"deafaecc-3be9-4b3e-8125-6b19fe6e8041","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.40-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std-index\\merged_8544076f-e24f-469f-9d29-dbd68054401c.json","relations":["contains","has attribute","has description","has source code","has stability","has version","is a","stable since"],"delete_triples":[{"triples":[["std","has version","1.30.1"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#11-473"],["ptr","has description","Raw, unsafe pointers, *const T, and *mut T."]],"startIndex":29234,"endIndex":69637},{"triples":[["future","has stability","Experimental"],["pin","has stability","Experimental"],["pin","has description","Types which pin data to its location in memory"],["task","has stability","Experimental"],["task","has description","Types and Traits for working with asynchronous tasks"],["is_x86_feature_detected!","has description","A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."]],"startIndex":42550,"endIndex":83011},{"triples":[],"startIndex":43859,"endIndex":48801}],"add_triples":[{"triples":[["std","has version","1.40.0"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#1-571"],["ptr","has description","Manually manage memory through raw pointers"],["slice","has description","A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."],["std","contains","future"],["future","is a","module"],["future","has description","Asynchronous values."],["std","contains","pin"],["pin","is a","module"],["pin","has description","Types that pin data to its location in memory."],["std","contains","task"],["task","is a","module"],["task","has description","Types and Traits for working with asynchronous tasks."]],"startIndex":29234,"endIndex":69637},{"triples":[["std","contains","backtrace"],["backtrace","is a","module"],["backtrace","has attribute","Experimental"],["backtrace","has description","Support for capturing a stack backtrace of an OS thread"],["std","contains","intrinsics"],["intrinsics","is a","module"],["intrinsics","has attribute","Experimental"],["intrinsics","has description","Compiler intrinsics."],["std","contains","raw"],["raw","is a","module"],["raw","has attribute","Experimental"],["raw","has description","Contains struct definitions for the layout of compiler built-in types."],["dbg","is a","macro"],["dbg","has description","Prints and returns the value of a given expression for quick and dirty debugging."],["format_args_nl","is a","macro"],["format_args_nl","has attribute","Experimental"],["format_args_nl","has description","Same as format_args, but adds a newline in the end."],["std","contains","async"],["async","is a","keyword"],["async","has description","Return a Future instead of blocking the current thread."],["std","contains","await"],["await","is a","keyword"],["await","has description","Suspend execution until the result of a Future is ready."]],"startIndex":42550,"endIndex":83011},{"triples":[["std","contains","super"],["super","is a","keyword"],["super","has description","The parent of the current module."],["std","contains","trait"],["trait","is a","keyword"],["trait","has description","A common interface for a class of types."],["std","contains","true"],["true","is a","keyword"],["true","has description","A value of type bool representing logical true."],["std","contains","type"],["type","is a","keyword"],["type","has description","Define an alias for an existing type."],["std","contains","union"],["union","is a","keyword"],["union","has description","The Rust equivalent of a C-style union."],["std","contains","unsafe"],["unsafe","is a","keyword"],["unsafe","has description","Code or interfaces whose memory safety cannot be verified by the type system."],["std","contains","use"],["use","is a","keyword"],["use","has description","Import or rename items from other crates or modules."],["std","contains","where"],["where","is a","keyword"],["where","has description","Add constraints that must be upheld to use an item."],["std","contains","while"],["while","is a","keyword"],["while","has description","Loop while a condition is upheld."]],"startIndex":43859,"endIndex":48801}],"metrics":{"escapeCount":0,"costTime":325931,"totalUsage":{"prompt_tokens":40086,"completion_tokens":8465,"cached_tokens":0,"reasoning_tokens":6581},"chunkLength":3,"chunksInfo":[{"chunkIndex":0,"strLength":40403,"costTime":36211},{"chunkIndex":1,"strLength":40461,"costTime":55916},{"chunkIndex":2,"strLength":4942,"costTime":233804}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std","updates version","1.40.0"],["std","updates source code","../src/std/up/src/libstd/lib.rs.html#1-571"],["ptr","updates description","Manually manage memory through raw pointers"],["std","adds module","future"],["std","adds module","pin"],["std","adds module","task"],["std","adds module","backtrace"],["std","adds module","intrinsics"],["std","adds module","raw"],["future","removes stability","Experimental"],["pin","removes stability","Experimental"],["task","removes stability","Experimental"],["pin","updates description","Types that pin data to its location in memory."],["task","updates description","Types and Traits for working with asynchronous tasks."],["std","adds keyword","async"],["std","adds keyword","await"],["std","adds keyword","super"],["std","adds keyword","trait"],["std","adds keyword","true"],["std","adds keyword","type"],["std","adds keyword","union"],["std","adds keyword","unsafe"],["std","adds keyword","use"],["std","adds keyword","where"],["std","adds keyword","while"],["std","adds macro","dbg"],["std","adds macro","format_args_nl"],["format_args_nl","adds attribute","Experimental"],["backtrace","adds attribute","Experimental"],["intrinsics","adds attribute","Experimental"],["raw","adds attribute","Experimental"],["is_x86_feature_detected!","removes description","A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."]]}