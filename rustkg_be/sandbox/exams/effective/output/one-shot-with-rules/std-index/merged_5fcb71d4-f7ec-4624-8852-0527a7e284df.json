{"create_time":"2025-04-04T14:27:54.887Z","id":"merged_5fcb71d4-f7ec-4624-8852-0527a7e284df","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.70-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","merged_triples":[{"triples":[["std","is a","crate"],["std","stable since","1.0.0"],["std","has source code","src/std/up/src/libstd/lib.rs.html#11-473"],["std","has description","The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."],["std","contains","any"],["any","has description","This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."],["std","contains","ascii"],["ascii","has description","Operations on ASCII strings and characters."],["std","contains","borrow"],["borrow","has description","A module for working with borrowed data."],["std","contains","boxed"],["boxed","has description","A pointer type for heap allocation."],["std","contains","cell"],["cell","has description","Shareable mutable containers."],["std","contains","char"],["char","has description","A character type."],["std","contains","collections"],["collections","has description","Collection types."],["std","contains","env"],["env","has description","Inspection and manipulation of the process's environment."],["std","contains","fs"],["fs","has description","Filesystem manipulation operations."],["std","contains","net"],["net","has description","Networking primitives for TCP/UDP communication."],["std","contains","thread"],["thread","has description","Native threads."],["array","is a","primitive type"],["array","has description","A fixed-size array, denoted [T; N]"],["std","contains","array"],["bool","is a","primitive type"],["bool","has description","The boolean type."],["std","contains","bool"],["str","is a","primitive type"],["str","has description","String slices."],["std","contains","str"],["assert!","is a","macro"],["assert!","has description","Ensure that a boolean expression is true at runtime."],["std","contains","assert!"],["format!","is a","macro"],["format!","has description","Use the syntax described in std::fmt to create a value of type String."],["std","contains","format!"],["vec!","is a","macro"],["vec!","has description","Creates a Vec containing the arguments."],["std","contains","vec!"],["intrinsics","has stability","Unstable"],["intrinsics","has description","rustc compiler intrinsics."],["std","contains","intrinsics"],["raw","has stability","Unstable"],["raw","has description","Contains struct definitions for the layout of compiler built-in types."],["std","contains","raw"],["std","has description","The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."],["std","contains","clone"],["std","contains","cmp"],["std","contains","convert"],["std","contains","default"],["std","contains","error"],["std","contains","f32"],["std","contains","f64"],["std","contains","ffi"],["std","contains","fmt"],["std","contains","hash"],["std","contains","i16"],["std","contains","i32"],["std","contains","i64"],["std","contains","i8"],["std","contains","io"],["std","contains","isize"],["std","contains","iter"],["std","contains","marker"],["std","contains","mem"],["std","contains","num"],["std","contains","ops"],["std","contains","option"],["std","contains","os"],["std","contains","panic"],["std","contains","path"],["std","contains","prelude"],["std","contains","process"],["std","contains","ptr"],["std","contains","rc"],["std","contains","result"],["std","contains","slice"],["std","contains","string"],["std","contains","sync"],["std","contains","time"],["std","contains","u16"],["std","contains","u32"],["std","contains","u64"],["std","contains","u8"],["std","contains","usize"],["std","contains","vec"],["array","has description","A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."],["char","is a","primitive type"],["f32","is a","primitive type"],["f32","has description","The 32-bit floating point type."],["f64","is a","primitive type"],["f64","has description","The 64-bit floating point type."],["i16","is a","primitive type"],["i16","has description","The 16-bit signed integer type."],["i32","is a","primitive type"],["i32","has description","The 32-bit signed integer type."],["i64","is a","primitive type"],["i64","has description","The 64-bit signed integer type."],["i8","is a","primitive type"],["i8","has description","The 8-bit signed integer type."],["isize","is a","primitive type"],["isize","has description","The pointer-sized signed integer type."],["pointer","is a","primitive type"],["pointer","has description","Raw, unsafe pointers, *const T, and *mut T."],["slice","is a","primitive type"],["slice","has description","A dynamically-sized view into a contiguous sequence, [T]."],["tuple","is a","primitive type"],["tuple","has description","A finite heterogeneous sequence, (T, U, ..)."],["u16","is a","primitive type"],["u16","has description","The 16-bit unsigned integer type."],["u32","is a","primitive type"],["u32","has description","The 32-bit unsigned integer type."],["u64","is a","primitive type"],["u64","has description","The 64-bit unsigned integer type."],["u8","is a","primitive type"],["u8","has description","The 8-bit unsigned integer type."],["usize","is a","primitive type"],["usize","has description","The pointer-sized unsigned integer type."],["any","is a","module"],["any","has description","This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."],["ascii","is a","module"],["borrow","is a","module"],["boxed","is a","module"],["cell","is a","module"],["char","is a","module"],["clone","is a","module"],["clone","has description","The Clone trait for types that cannot be 'implicitly copied'."],["cmp","is a","module"],["cmp","has description","Functionality for ordering and comparison."],["collections","is a","module"],["convert","is a","module"],["convert","has description","Traits for conversions between types."],["default","is a","module"],["default","has description","The Default trait for types which may have meaningful default values."],["env","is a","module"],["error","is a","module"],["error","has description","Traits for working with Errors."],["f32","is a","module"],["f64","is a","module"],["ffi","is a","module"],["ffi","has description","Utilities related to FFI bindings."],["fmt","is a","module"],["fmt","has description","Utilities for formatting and printing strings"],["fs","is a","module"],["hash","is a","module"],["hash","has description","Generic hashing support."],["i16","is a","module"],["i32","is a","module"],["i64","is a","module"],["i8","is a","module"],["io","is a","module"],["io","has description","Traits, helpers, and type definitions for core I/O functionality."],["isize","is a","module"],["iter","is a","module"],["iter","has description","Composable external iteration."],["marker","is a","module"],["marker","has description","Primitive traits and marker types representing basic 'kinds' of types."],["mem","is a","module"],["mem","has description","Basic functions for dealing with memory."],["net","is a","module"],["num","is a","module"],["num","has description","Additional functionality for numerics."],["ops","is a","module"],["ops","has description","Overloadable operators."],["option","is a","module"],["option","has description","Optional values."],["os","is a","module"],["os","has description","OS-specific functionality."],["panic","is a","module"],["panic","has description","Panic support in the standard library"],["path","is a","module"],["path","has description","Cross-platform path manipulation."],["prelude","is a","module"],["prelude","has description","The Rust Prelude."],["process","is a","module"],["process","has description","Working with processes."],["ptr","is a","module"],["ptr","has description","Raw, unsafe pointers, *const T, and *mut T."],["rc","is a","module"],["rc","has description","Thread-local reference-counted boxes (the Rc<T> type)."],["result","is a","module"],["result","has description","Error handling with the Result type."],["slice","is a","module"],["str","is a","module"],["str","has description","Unicode string slices."],["string","is a","module"],["string","has description","A UTF-8 encoded, growable string."],["sync","is a","module"],["sync","has description","Useful synchronization primitives."],["thread","is a","module"],["time","is a","module"],["time","has description","Temporal quantification."],["u16","is a","module"],["u32","is a","module"],["u64","is a","module"],["u8","is a","module"],["usize","is a","module"],["vec","is a","module"],["vec","has description","A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."],["intrinsics","is a","module"],["intrinsics","has attribute","unstable"],["raw","is a","module"],["raw","has attribute","unstable"],["assert_eq!","is a","macro"],["assert_eq!","has description","Asserts that two expressions are equal to each other."],["cfg!","is a","macro"],["cfg!","has description","Boolean evaluation of configuration flags."],["column!","is a","macro"],["column!","has description","A macro which expands to the column number on which it was invoked."],["concat!","is a","macro"],["concat!","has description","Concatenates literals into a static string slice."],["concat_idents!","is a","macro"],["concat_idents!","has description","Concatenate identifiers into one identifier."],["debug_assert!","is a","macro"],["debug_assert!","has description","Ensure that a boolean expression is true at runtime."],["debug_assert_eq!","is a","macro"],["debug_assert_eq!","has description","Asserts that two expressions are equal to each other."],["env!","is a","macro"],["env!","has description","Inspect an environment variable at compile time."],["file!","is a","macro"],["file!","has description","A macro which expands to the file name from which it was invoked."],["format!","has description","Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."],["format_args!","is a","macro"],["format_args!","has description","The core macro for formatted string creation & output."],["include!","is a","macro"],["include!","has description","Parse the current given file as an expression."],["include_bytes!","is a","macro"],["include_bytes!","has description","Includes a file as a reference to a byte array."],["include_str!","is a","macro"],["include_str!","has description","Includes a utf8-encoded file as a string."],["line!","is a","macro"],["line!","has description","A macro which expands to the line number on which it was invoked."],["module_path!","is a","macro"],["module_path!","has description","Expands to a string that represents the current module path."],["option_env!","is a","macro"],["option_env!","has description","Optionally inspect an environment variable at compile time."],["panic!","is a","macro"],["panic!","has description","The entry point for panic of Rust threads."],["print!","is a","macro"],["print!","has description","Macro for printing to the standard output."],["println!","is a","macro"],["println!","has description","Macro for printing to the standard output, with a newline."],["stringify!","is a","macro"],["stringify!","has description","A macro which stringifies its argument."],["thread_local!","is a","macro"],["thread_local!","has description","Declare a new thread local storage key of type std::thread::LocalKey."],["scoped_thread_local!","is a","macro"],["scoped_thread_local!","has attribute","deprecated"],["scoped_thread_local!","has description","Declare a new scoped thread local storage key."],["select!","is a","macro"],["select!","has attribute","unstable"],["select!","has description","A macro to select an event from a number of receivers."],["try!","is a","macro"],["try!","has description","Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."],["unimplemented!","is a","macro"],["unimplemented!","has description","A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."],["unreachable!","is a","macro"],["unreachable!","has description","A utility macro for indicating unreachable code."],["write!","is a","macro"],["write!","has description","Use the format! syntax to write data into a buffer."],["writeln!","is a","macro"],["writeln!","has description","Use the format! syntax to write data into a buffer, appending a newline."],["std","has source code","../src/std/up/src/libstd/lib.rs.html#11-473"],["std","contains","alloc"],["std","contains","core"],["std","contains","libc"],["std","contains","rustc_unicode"],["any","has full name","std::any"],["ascii","has full name","std::ascii"],["borrow","has full name","std::borrow"],["boxed","has full name","std::boxed"],["cell","has full name","std::cell"],["char","has full name","std::char"],["clone","has full name","std::clone"],["cmp","has full name","std::cmp"],["collections","has full name","std::collections"],["convert","has full name","std::convert"],["default","has full name","std::default"],["env","has full name","std::env"],["error","has full name","std::error"],["f32","has full name","std::f32"],["f64","has full name","std::f64"],["ffi","has full name","std::ffi"],["fmt","has full name","std::fmt"],["fs","has full name","std::fs"],["hash","has full name","std::hash"],["i16","has full name","std::i16"],["i32","has full name","std::i32"],["i64","has full name","std::i64"],["i8","has full name","std::i8"],["io","has full name","std::io"],["isize","has full name","std::isize"],["iter","has full name","std::iter"],["marker","has full name","std::marker"],["mem","has full name","std::mem"],["net","has full name","std::net"],["num","has full name","std::num"],["ops","has full name","std::ops"],["option","has full name","std::option"],["os","has full name","std::os"],["panic","has full name","std::panic"],["path","has full name","std::path"],["prelude","has full name","std::prelude"],["process","has full name","std::process"],["ptr","has full name","std::ptr"],["rc","has full name","std::rc"],["result","has full name","std::result"],["slice","has full name","std::slice"],["str","has full name","std::str"],["string","has full name","std::string"],["sync","has full name","std::sync"],["thread","has full name","std::thread"],["time","has full name","std::time"],["u16","has full name","std::u16"],["u32","has full name","std::u32"],["u64","has full name","std::u64"],["u8","has full name","std::u8"],["usize","has full name","std::usize"],["vec","has full name","std::vec"],["vec","has description","A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"],["intrinsics","has full name","std::intrinsics"],["raw","has full name","std::raw"],["scoped_thread_local!","has stability","Deprecated"],["scoped_thread_local!","has stability","Unstable"],[""],["std","contains","proc_macro"],["std","contains","std_unicode"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#11-493"],["process","has description","A module for working with processes."],["i128","is a","primitive type"],["i128","has description","The 128-bit signed integer type."],["i128","has attribute","unstable"],["u128","is a","primitive type"],["u128","has description","The 128-bit unsigned integer type."],["u128","has attribute","unstable"],["eprint!","is a","macro"],["eprint!","has description","Macro for printing to the standard error."],["eprintln!","is a","macro"],["eprintln!","has description","Macro for printing to the standard error, with a newline."],["assert_ne!","is a","macro"],["assert_ne!","has description","Asserts that two expressions are not equal to each other."],["debug_assert_ne!","is a","macro"],["debug_assert_ne!","has description","Asserts that two expressions are not equal to each other."],["intrinsics","has attribute","Experimental"],["raw","has attribute","Experimental"],["proc_macro","is a","crate"],["proc_macro","has description","A support library for macro authors when defining new macros."],["std_unicode","is a","crate"],["std_unicode","has description","The Unicode Library"],["select!","has attribute","Experimental"],["try!","has description","Helper macro for reducing boilerplate for matching Result together with converting downstream errors."],["include!","has description","Parse a file as an expression or an item according to the context"],["println!","has description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."],["write!","has description","Write formatted data into a buffer."],["writeln!","has description","Write formatted data into a buffer, with a newline appended."],["f32","has description","This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["f64","has description","This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["intrinsics","has stability","Experimental"],["raw","has stability","Experimental"],["println!","has description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."],["scoped_thread_local!","has stability","Experimental"],["select!","has stability","Experimental"],["write!","has description","Write formatted data into a buffer"],["rc","has description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["std","contains","i128"],["i128","has stability","Experimental"],["std","contains","u128"],["u128","has stability","Experimental"],["std","contains","eprint!"],["std","contains","eprintln!"],["std","contains","compile_error!"],["compile_error!","is a","macro"],["compile_error!","has description","Unconditionally causes compilation to fail with the given error message."],["include!","has description","Parse a file as an expression or an item according to the context."],["writeln!","has description","Write formatted data into a buffer with appended newline."],["println!","has description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."],["std","stable since","1.40.0"],["std","contains","future"],["std","contains","pin"],["std","contains","task"],["ptr","has description","Manually manage memory through raw pointers"],["slice","has description","A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."],["future","is a","module"],["future","has description","Asynchronous values."],["pin","is a","module"],["pin","has description","Types that pin data to its location in memory."],["task","is a","module"],["task","has description","Types and Traits for working with asynchronous tasks."],["std","has version","1.40.0"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#1-571"],["array","is a","module"],["array","has description","Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."],["std","stable since","1.50.0"],["f32","has description","A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."],["f64","has description","A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."],["std","contains","backtrace"],["backtrace","is a","module"],["backtrace","has description","Support for capturing a stack backtrace of an OS thread."],["backtrace","has attribute","Experimental"],["format_args_nl","is a","macro"],["format_args_nl","has attribute","Experimental"],["format_args_nl","has description","Same as format_args, but adds a newline in the end."],["std","has version","1.50.0"],["backtrace","has description","Support for capturing a stack backtrace of an OS thread"],["backtrace","has stability","Experimental"],["unit","has description","The () type, also called \"unit\"."],["format_args_nl!","is a","macro"],["std","contains","format_args_nl!"],["format_args_nl!","has description","Same as format_args, but adds a newline in the end."],["format_args_nl!","has stability","Experimental"],["unit","has description","The () type, also called \"unit\""],["format_args_nl","has description","Same as format_args, but adds a newline in the end"],["format_args_nl","has stability","Experimental"],["std","stable since","1.60.0"],["std","contains","async_iter"],["async_iter","is a","module"],["async_iter","has description","Composable asynchronous iteration."],["std","contains","assert_matches"],["assert_matches","is a","module"],["assert_matches","has description","Unstable module containing the unstable assert_matches macro."],["std","contains","simd"],["simd","is a","module"],["simd","has description","Portable SIMD module."],["ptr","has description","Manually manage memory through raw pointers."],["std","contains","hint"],["hint","is a","module"],["hint","has description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["f32","has description","Constants specific to the f32 single-precision floating point type."],["f64","has description","Constants specific to the f64 double-precision floating point type."],["i8","has description","Constants for the 8-bit signed integer type."],["i8","has attribute","deprecated"],["i16","has description","Constants for the 16-bit signed integer type."],["i16","has attribute","deprecated"],["i32","has description","Constants for the 32-bit signed integer type."],["i32","has attribute","deprecated"],["i64","has description","Constants for the 64-bit signed integer type."],["i64","has attribute","deprecated"],["i128","has description","Constants for the 128-bit signed integer type."],["i128","has attribute","deprecated"],["isize","has description","Constants for the pointer-sized signed integer type."],["isize","has attribute","deprecated"],["u8","has description","Constants for the 8-bit unsigned integer type."],["u8","has attribute","deprecated"],["u16","has description","Constants for the 16-bit unsigned integer type."],["u16","has attribute","deprecated"],["u32","has description","Constants for the 32-bit unsigned integer type."],["u32","has attribute","deprecated"],["u64","has description","Constants for the 64-bit unsigned integer type."],["u64","has attribute","deprecated"],["u128","has description","Constants for the 128-bit unsigned integer type."],["u128","has attribute","deprecated"],["usize","has description","Constants for the pointer-sized unsigned integer type."],["usize","has attribute","deprecated"],["std","contains","concat_bytes!"],["concat_bytes!","is a","macro"],["concat_bytes!","has description","Concatenates literals into a byte slice."],["std","has version","1.60.0"],["format_args_nl!","has attribute","Experimental"],["std","contains","arch"],["arch","is a","module"],["arch","has description","SIMD and vendor intrinsics module."],["std","contains","concat_bytes"],["concat_bytes","is a","macro"],["concat_bytes","has description","Concatenates literals into a static string slice."],["std","contains","const_format_args"],["const_format_args","is a","macro"],["f32","has description","Constants specific to the implementation of the f32 floating point type."],["f64","has description","Constants specific to the implementation of the f64 floating point type."],["std","has version","1.70.0"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#1-686"],["std","stable since","1.70.0"],["never","has attribute","Experimental"],["never","is a","primitive type"],["never","has description","The ! type, also called 'never'."],["async_iter","has attribute","Experimental"],["simd","has attribute","Experimental"]],"startIndex":0,"endIndex":39000},{"triples":[["test","is a","crate"],["test","has description","Support code for rustc's built in unit-test and micro-benchmarking framework."],["std","contains","test"],["unit","is a","primitive type"],["unit","has description","The () type, sometimes called 'unit' or 'nil'."],["std","contains","unit"],["never","is a","primitive type"],["never","has description","The ! type, also called 'never'."],["never","has attribute","Experimental"],["std","contains","never"],["fn","is a","primitive type"],["fn","has description","Function pointers, like fn(usize) -> bool."],["std","contains","fn"],["reference","is a","primitive type"],["reference","has description","References, both shared and mutable."],["std","contains","reference"],["alloc","is a","module"],["alloc","has description","Memory allocation APIs"],["arch","is a","module"],["arch","has description","SIMD and vendor intrinsics module."],["std","contains","arch"],["hint","is a","module"],["hint","has description","Hints to compiler that affects how code should be emitted or optimized."],["std","contains","hint"],["is_x86_feature_detected!","is a","macro"],["is_x86_feature_detected!","has description","A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."],["std","contains","is_x86_feature_detected!"],["await!","is a","macro"],["await!","has attribute","Experimental"],["std","contains","await!"],["format!","has description","Creates a String using interpolation of runtime expressions."],["std","has version","1.30.1"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#11-540"],["fn","has description","Function pointers, like `fn(usize) -> bool`."],["unit","has description","The `()` type, sometimes called 'unit' or 'nil'."],["never","has description","The `!` type, also called 'never'."],["ptr","has description","Manually manage memory through raw pointers"],["std","contains","future"],["future","is a","module"],["future","has stability","Experimental"],["future","has description","Asynchronous values."],["std","contains","pin"],["pin","is a","module"],["pin","has stability","Experimental"],["pin","has description","Types which pin data to its location in memory"],["std","contains","task"],["task","is a","module"],["task","has stability","Experimental"],["task","has description","Types and Traits for working with asynchronous tasks"],["select!","has attribute","Experimental"],["process","has description","A module for working with processes."],["backtrace","is a","module"],["backtrace","has description","Support for capturing OS thread backtraces"],["intrinsics","has description","Compiler intrinsics module"],["dbg","is a","macro"],["dbg","has description","Prints and returns the value of a given expression for quick and dirty debugging."],["debug_assert","has description","Asserts that a boolean expression is true at runtime."],["debug_assert_eq","has description","Asserts that two expressions are equal to each other"],["debug_assert_ne","has description","Asserts that two expressions are not equal to each other"],["format_args_nl","is a","macro"],["format_args_nl","has attribute","Experimental"],["global_asm","is a","macro"],["global_asm","has attribute","Experimental"],["std","contains","super"],["super","has description","The parent of the current module"],["std","contains","trait"],["trait","has description","A common interface for a class of types."],["std","contains","true"],["true","has description","A value of type bool representing logical true."],["std","contains","type"],["type","has description","Define an alias for an existing type."],["std","contains","union"],["union","has description","The Rust equivalent of a C-style union"],["std","contains","unsafe"],["unsafe","has description","Code or interfaces whose memory safety cannot be verified by the type system."],["std","contains","use"],["use","has description","Import or rename items from other crates or modules."],["std","contains","where"],["where","has description","Add constraints that must be upheld to use an item."],["std","contains","while"],["while","has description","Loop while a condition is upheld."],["std","contains","backtrace"],["backtrace","has attribute","Experimental"],["backtrace","has description","Support for capturing a stack backtrace of an OS thread"],["std","contains","intrinsics"],["intrinsics","is a","module"],["intrinsics","has attribute","Experimental"],["intrinsics","has description","Compiler intrinsics."],["std","contains","raw"],["raw","is a","module"],["raw","has attribute","Experimental"],["raw","has description","Contains struct definitions for the layout of compiler built-in types."],["format_args_nl","has description","Same as format_args, but adds a newline in the end."],["std","contains","async"],["async","is a","keyword"],["async","has description","Return a Future instead of blocking the current thread."],["std","contains","await"],["await","is a","keyword"],["await","has description","Suspend execution until the result of a Future is ready."],["super","is a","keyword"],["super","has description","The parent of the current module."],["trait","is a","keyword"],["true","is a","keyword"],["type","is a","keyword"],["union","is a","keyword"],["union","has description","The Rust equivalent of a C-style union."],["unsafe","is a","keyword"],["use","is a","keyword"],["where","is a","keyword"],["while","is a","keyword"],["backtrace","has description","Support for capturing stack backtraces"],["todo","is a","macro"],["todo","has description","Indicates unfinished code."],["asm","is a","macro"],["asm","has description","Inline assembly."],["format_args_nl","has description","Same as format_args but adds a newline"],["backtrace","has stability","Experimental"],["assert","has description","Asserts that a boolean expression is true at runtime."],["trait","has description","A common interface for a class of types"],["true","has description","A value of type bool representing logical true"],["type","has description","Define an alias for an existing type"],["unsafe","has description","Code or interfaces whose memory safety cannot be verified by the type system"],["use","has description","Import or rename items from other crates or modules"],["where","has description","Add constraints that must be upheld to use an item"],["while","has description","Loop while a condition is upheld"],["assert_eq","has description","Asserts that two expressions are equal to each other."],["assert_ne","has description","Asserts that two expressions are not equal to each other."],["cfg","has description","Evaluates boolean combinations of configuration flags at compile-time."],["debug_assert_eq","has description","Asserts that two expressions are equal to each other."],["debug_assert_ne","has description","Asserts that two expressions are not equal to each other."],["const","has description","Compile-time constants and compile-time evaluable functions."],["dyn","has description","dyn is a prefix of a trait object's type."],["static","has description","A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."],["option_env","has description","Optionally inspects an environment variable at compile time."],["assert","is a","macro"],["assert_eq","is a","macro"],["assert_ne","is a","macro"],["cfg","is a","macro"],["assert","has description","Asserts that a boolean expression is true at runtime"],["assert_eq","has description","Asserts that two expressions are equal to each other"],["assert_ne","has description","Asserts that two expressions are not equal to each other"],["cfg","has description","Evaluates boolean combinations of configuration flags at compile-time"],["dbg","has description","Prints and returns the value of a given expression for quick and dirty debugging"],["debug_assert","has description","Asserts that a boolean expression is true at runtime"],["env","has description","Inspects an environment variable at compile time"],["eprint","has description","Prints to the standard error"],["eprintln","has description","Prints to the standard error, with a newline"],["file","has description","Expands to the file name in which it was invoked"],["format","has description","Creates a String using interpolation of runtime expressions"],["static","has description","A static item is a value which is valid for the entire duration of your program"],["log_syntax","is a","macro"],["log_syntax","has description","Prints passed tokens into the standard output"],["SelfTy","is a","keyword"],["SelfTy","has description","The implementing type within a trait or impl block, or the current type within a type definition"],["const","has description","Compile-time constants, compile-time evaluable functions, and raw pointers"],["hint","has description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime"],["trait","has description","A common interface for a group of types."],["const","has description","Compile-time constants, compile-time evaluable functions, and raw pointers."],["log_syntax","has description","Prints passed tokens into the standard output."],["SelfTy","has description","The implementing type within a trait or impl block, or the current type within a type definition."],["trace_macros","has description","Enables or disables tracing functionality used for debugging other macros."],["format_args!","is a","macro"],["format_args!","has description","Constructs parameters for the other string-formatting macros."],["format_args_nl!","is a","macro"],["format_args_nl!","has description","Same as format_args but adds a newline"],["log_syntax!","is a","macro"],["log_syntax!","has description","Prints passed tokens into the standard output."],["is_x86_feature_detected!","has attribute","x86 or x86-64"],["char","has description","Utilities for the char primitive type."],["cmp","has description","Utilities for comparing and ordering values."],["future","has description","Asynchronous basic functionality."],["slice","has description","Utilities for the slice primitive type."],["str","has description","Utilities for the str primitive type."],["i8","has description","Redundant constants module for the i8 primitive type."],["i16","has description","Redundant constants module for the i16 primitive type."],["i32","has description","Redundant constants module for the i32 primitive type."],["i64","has description","Redundant constants module for the i64 primitive type."],["i128","has description","Redundant constants module for the i128 primitive type."],["isize","has description","Redundant constants module for the isize primitive type."],["u8","has description","Redundant constants module for the u8 primitive type."],["u16","has description","Redundant constants module for the u16 primitive type."],["u32","has description","Redundant constants module for the u32 primitive type."],["u64","has description","Redundant constants module for the u64 primitive type."],["u128","has description","Redundant constants module for the u128 primitive type."],["usize","has description","Redundant constants module for the usize primitive type."],["i8","has attribute","Deprecation planned"],["i16","has attribute","Deprecation planned"],["i32","has attribute","Deprecation planned"],["i64","has attribute","Deprecation planned"],["i128","has attribute","Deprecation planned"],["isize","has attribute","Deprecation planned"],["u8","has attribute","Deprecation planned"],["u16","has attribute","Deprecation planned"],["u32","has attribute","Deprecation planned"],["u64","has attribute","Deprecation planned"],["u128","has attribute","Deprecation planned"],["usize","has attribute","Deprecation planned"],["default","has description","The Default trait for types with a default value."],["error","has description","Interfaces for working with Errors."],["f32","has description","Constants for the f32 single-precision floating point type."],["f64","has description","Constants for the f64 double-precision floating point type."],["concat_bytes!","has attribute","Experimental"],["concat_bytes","has attribute","Experimental"],["concat_idents","has attribute","Experimental"],["const_format_args","has attribute","Experimental"],["log_syntax","has attribute","Experimental"],["trace_macros","has attribute","Experimental"],["std::cfg","is a","macro"],["std::cfg","has description","Evaluates boolean combinations of configuration flags at compile-time"],["std::column","is a","macro"],["std::column","has description","Expands to the column number at which it was invoked"],["std::compile_error","is a","macro"],["std::compile_error","has description","Causes compilation to fail with the given error message when encountered"],["std::concat","is a","macro"],["std::concat","has description","Concatenates literals into a static string slice"],["std::dbg","is a","macro"],["std::dbg","has description","Prints and returns the value of a given expression for quick and dirty debugging"],["std::debug_assert","is a","macro"],["std::debug_assert","has description","Asserts that a boolean expression is <code>true</code> at runtime"],["std::debug_assert_eq","is a","macro"],["std::debug_assert_eq","has description","Asserts that two expressions are equal to each other"],["std::debug_assert_ne","is a","macro"],["std::debug_assert_ne","has description","Asserts that two expressions are not equal to each other"],["std::env","is a","macro"],["std::env","has description","Inspects an environment variable at compile time"],["std::eprint","is a","macro"],["std::eprint","has description","Prints to the standard error"],["std::eprintln","is a","macro"],["std::eprintln","has description","Prints to the standard error, with a newline"],["std::file","is a","macro"],["std::file","has description","Expands to the file name in which it was invoked"],["std::format","is a","macro"],["std::format","has description","Creates a <code>String</code> using interpolation of runtime expressions"],["std::format_args","is a","macro"],["std::format_args","has description","Constructs parameters for the other string-formatting macros"],["std::include","is a","macro"],["std::include","has description","Parses a file as an expression or an item according to the context"],["std::include_bytes","is a","macro"],["std::include_bytes","has description","Includes a file as a reference to a byte array"],["std::include_str","is a","macro"],["std::include_str","has description","Includes a UTF-8 encoded file as a string"],["std::is_x86_feature_detected!","has attribute","x86 or x86-64"],["std::line","is a","macro"],["std::line","has description","Expands to the line number on which it was invoked"],["std::matches","is a","macro"],["std::matches","has description","Returns whether the given expression matches any of the given patterns"],["std::module_path","is a","macro"],["std::module_path","has description","Expands to a string that represents the current module path"],["std::option_env","is a","macro"],["std::option_env","has description","Optionally inspects an environment variable at compile time"],["std::panic","is a","macro"],["std::panic","has description","Panics the current thread"],["std::print","is a","macro"],["std::print","has description","Prints to the standard output"],["std::println","is a","macro"],["std::println","has description","Prints to the standard output, with a newline"],["std::stringify","is a","macro"],["std::stringify","has description","Stringifies its arguments"],["std::thread_local","is a","macro"],["std::thread_local","has description","Declare a new thread local storage key of type <a href='thread/struct.LocalKey.html' title='struct std::thread::LocalKey'><code>std::thread::LocalKey</code></a>"],["std::todo","is a","macro"],["std::todo","has description","Indicates unfinished code"],["std::try","is a","macro"],["std::try","has attribute","Deprecated"],["std::unimplemented","is a","macro"],["std::unimplemented","has description","Indicates unimplemented code by panicking with a message of 'not implemented'"],["std::unreachable","is a","macro"],["std::unreachable","has description","Indicates unreachable code"],["std::vec","is a","macro"],["std::vec","has description","Creates a <a href='vec/struct.Vec.html' title='struct std::vec::Vec'><code>Vec</code></a> containing the arguments"],["std::write","is a","macro"],["std::write","has description","Writes formatted data into a buffer"],["std::writeln","is a","macro"],["std::writeln","has description","Write formatted data into a buffer, with a newline appended"],["std::try","is a","keyword"],["std::try","has description","Unwraps a result or propagates its error. (Deprecated)"],["column","has description","Expands to the column number at which it was invoked"],["compile_error","has description","Causes compilation to fail with the given error message when encountered"],["concat","has description","Concatenates literals into a static string slice"],["format_args","has description","Constructs parameters for the other string-formatting macros"],["include","has description","Parses a file as an expression or an item according to the context"],["include_bytes","has description","Includes a file as a reference to a byte array"],["include_str","has description","Includes a UTF-8 encoded file as a string"],["is_x86_feature_detected!","has description","A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms"],["line","has description","Expands to the line number on which it was invoked"],["matches","has description","Returns whether the given expression matches any of the given patterns"],["module_path","has description","Expands to a string that represents the current module path"],["option_env","has description","Optionally inspects an environment variable at compile time"],["panic","has description","Panics the current thread"],["print","has description","Prints to the standard output"],["println","has description","Prints to the standard output, with a newline"],["stringify","has description","Stringifies its arguments"],["thread_local","has description","Declare a new thread local storage key of type std::thread::LocalKey"],["todo","has description","Indicates unfinished code"],["unimplemented","has description","Indicates unimplemented code by panicking with a message of “not implemented”"],["unreachable","has description","Indicates unreachable code"],["vec","has description","Creates a Vec containing the arguments"],["write","has description","Writes formatted data into a buffer"],["writeln","has description","Write formatted data into a buffer, with a newline appended"]],"startIndex":39035,"endIndex":78987}],"changes_info_triples":[],"model":"deepseek-r1-250120"}