{"create_time":"2025-04-04T13:34:32.212Z","id":"eee19ef5-f4ee-4b60-924f-202226763fdf","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std-index\\merged_59fe4ced-355c-430f-8fd9-b32af4bb9b71.json","relations":["contains","has attribute","has description","has full name","has source code","has stability","is a","stable since"],"delete_triples":[{"triples":[["std","contains","libc"],["std","contains","rustc_unicode"],["f32","has description","The 32-bit floating point type."],["f64","has description","The 64-bit floating point type."],["rc","has description","Thread-local reference-counted boxes (the Rc<T> type)."],["intrinsics","has stability","Unstable"],["raw","has stability","Unstable"],["std","has source code","src/std/up/src/libstd/lib.rs.html#11-473"]],"startIndex":28364,"endIndex":68221},{"triples":[["include!","has description","Parse the current given file as an expression."],["scoped_thread_local!","is a","macro"],["scoped_thread_local!","has attribute","deprecated"],["scoped_thread_local!","has description","Declare a new scoped thread local storage key."],["select!","has attribute","unstable"],["try!","has description","Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."],["write!","has description","Use the format! syntax to write data into a buffer."],["writeln!","has description","Use the format! syntax to write data into a buffer, appending a newline."]],"startIndex":34692,"endIndex":45266}],"add_triples":[{"triples":[["std","contains","proc_macro"],["std","contains","std_unicode"],["f32","has description","This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["f64","has description","This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["rc","has description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["std","contains","i128"],["i128","is a","primitive type"],["i128","has description","The 128-bit signed integer type."],["i128","has stability","Experimental"],["std","contains","u128"],["u128","is a","primitive type"],["u128","has description","The 128-bit unsigned integer type."],["u128","has stability","Experimental"],["std","contains","eprint!"],["eprint!","is a","macro"],["eprint!","has description","Macro for printing to the standard error."],["std","contains","eprintln!"],["eprintln!","is a","macro"],["eprintln!","has description","Macro for printing to the standard error, with a newline."],["concat!","is a","macro"],["concat!","has description","Concatenates literals into a static string slice."],["std","contains","compile_error!"],["compile_error!","is a","macro"],["compile_error!","has description","Unconditionally causes compilation to fail with the given error message."],["intrinsics","has stability","Experimental"],["raw","has stability","Experimental"],["std","has source code","../src/std/up/src/libstd/lib.rs.html#11-493"]],"startIndex":28364,"endIndex":68221},{"triples":[["include!","has description","Parse a file as an expression or an item according to the context."],["concat_idents!","is a","macro"],["concat_idents!","has description","Concatenate identifiers into one identifier."],["select!","has stability","Experimental"],["try!","has description","Helper macro for reducing boilerplate for matching Result together with converting downstream errors."],["write!","has description","Write formatted data into a buffer."],["writeln!","has description","Write formatted data into a buffer with appended newline."],["println!","has description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."]],"startIndex":34692,"endIndex":45266}],"metrics":{"escapeCount":0,"costTime":163064,"totalUsage":{"prompt_tokens":28289,"completion_tokens":4170,"cached_tokens":0,"reasoning_tokens":3033},"chunkLength":2,"chunksInfo":[{"chunkIndex":0,"strLength":39857,"costTime":110583},{"chunkIndex":1,"strLength":10574,"costTime":52481}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["rustc_unicode","renamed to","std_unicode"],["std","adds feature","proc_macro"],["std","adds feature","i128"],["std","adds feature","u128"],["std","adds feature","eprint!"],["std","adds feature","eprintln!"],["std","adds feature","compile_error!"],["std","removes feature","libc"],["std","removes feature","scoped_thread_local!"],["f32","updates description","This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["f64","updates description","This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["rc","updates description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["intrinsics","changes stability to","Experimental"],["raw","changes stability to","Experimental"],["std","updates source code","../src/std/up/src/libstd/lib.rs.html#11-493"],["include!","updates description","Parse a file as an expression or an item according to the context."],["select!","changes stability to","Experimental"],["try!","updates description","Helper macro for reducing boilerplate for matching Result together with converting downstream errors."],["write!","updates description","Write formatted data into a buffer."],["writeln!","updates description","Write formatted data into a buffer with appended newline."]]}