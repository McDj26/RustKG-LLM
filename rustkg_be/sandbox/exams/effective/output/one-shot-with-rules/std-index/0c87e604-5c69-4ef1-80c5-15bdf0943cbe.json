{"create_time":"2025-04-04T13:59:20.392Z","id":"0c87e604-5c69-4ef1-80c5-15bdf0943cbe","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std-index\\merged_32ea299b-076e-4b54-819b-d9ff716efd81.json","relations":["contains","has attribute","has description","has source code","has stability","is a","stable since"],"delete_triples":[{"triples":[["std","stable since","1.50.0"]],"startIndex":21415,"endIndex":61628},{"triples":[["ptr","has description","Raw, unsafe pointers, *const T, and *mut T."],["f32","has description","This module provides constants which are specific to the implementation of the f32 floating point data type."],["f64","has description","This module provides constants which are specific to the implementation of the f64 floating point data type."],["i8","has description","The 8-bit signed integer type."],["i16","has description","The 16-bit signed integer type."],["i32","has description","The 32-bit signed integer type."],["i64","has description","The 64-bit signed integer type."],["i128","has description","The 128-bit signed integer type."],["isize","has description","The pointer-sized signed integer type."],["u8","has description","The 8-bit unsigned integer type."],["u16","has description","The 16-bit unsigned integer type."],["u32","has description","The 32-bit unsigned integer type."],["u64","has description","The 64-bit unsigned integer type."],["u128","has description","The 128-bit unsigned integer type."],["usize","has description","The pointer-sized unsigned integer type."]],"startIndex":35045,"endIndex":75737},{"triples":[["is_arm_feature_detected","is a","macro"],["is_arm_feature_detected","has description","Prevents compilation if is_arm_feature_detected is used somewhere else than ARM targets"],["is_mips64_feature_detected","is a","macro"],["is_mips64_feature_detected","has description","Prevents compilation if is_mips64_feature_detected is used somewhere else than MIPS64 targets"],["is_mips_feature_detected","is a","macro"],["is_mips_feature_detected","has description","Prevents compilation if is_mips_feature_detected is used somewhere else than MIPS targets"],["is_powerpc64_feature_detected","is a","macro"],["is_powerpc64_feature_detected","has description","Prevents compilation if is_powerpc64_feature_detected is used somewhere else than PowerPC64 targets"],["is_powerpc_feature_detected","is a","macro"],["is_powerpc_feature_detected","has description","Prevents compilation if is_powerpc_feature_detected is used somewhere else than PowerPC targets"],["llvm_asm","is a","macro"],["llvm_asm","has description","LLVM-style inline assembly"],["Self","is a","keyword"],["Self","has description","The implementing type within a trait or impl block, or the current type within a type definition"]],"startIndex":51690,"endIndex":92247},{"triples":[["trait","has description","A common interface for a class of types"]],"startIndex":55311,"endIndex":64533}],"add_triples":[{"triples":[["std","stable since","1.60.0"],["std","contains","async_iter"],["async_iter","is a","module"],["async_iter","has description","Composable asynchronous iteration."],["std","contains","assert_matches"],["assert_matches","is a","module"],["assert_matches","has description","Unstable module containing the unstable assert_matches macro."],["std","contains","simd"],["simd","is a","module"],["simd","has description","Portable SIMD module."]],"startIndex":21415,"endIndex":61628},{"triples":[["ptr","has description","Manually manage memory through raw pointers."],["std","contains","hint"],["hint","is a","module"],["hint","has description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["f32","has description","Constants specific to the f32 single-precision floating point type."],["f64","has description","Constants specific to the f64 double-precision floating point type."],["i8","has description","Constants for the 8-bit signed integer type."],["i8","has attribute","deprecated"],["i16","has description","Constants for the 16-bit signed integer type."],["i16","has attribute","deprecated"],["i32","has description","Constants for the 32-bit signed integer type."],["i32","has attribute","deprecated"],["i64","has description","Constants for the 64-bit signed integer type."],["i64","has attribute","deprecated"],["i128","has description","Constants for the 128-bit signed integer type."],["i128","has attribute","deprecated"],["isize","has description","Constants for the pointer-sized signed integer type."],["isize","has attribute","deprecated"],["u8","has description","Constants for the 8-bit unsigned integer type."],["u8","has attribute","deprecated"],["u16","has description","Constants for the 16-bit unsigned integer type."],["u16","has attribute","deprecated"],["u32","has description","Constants for the 32-bit unsigned integer type."],["u32","has attribute","deprecated"],["u64","has description","Constants for the 64-bit unsigned integer type."],["u64","has attribute","deprecated"],["u128","has description","Constants for the 128-bit unsigned integer type."],["u128","has attribute","deprecated"],["usize","has description","Constants for the pointer-sized unsigned integer type."],["usize","has attribute","deprecated"],["std","contains","concat_bytes!"],["concat_bytes!","is a","macro"],["concat_bytes!","has description","Concatenates literals into a byte slice."]],"startIndex":35045,"endIndex":75737},{"triples":[["format_args_nl","is a","macro"],["format_args_nl","has description","Same as format_args but adds a newline"],["log_syntax","is a","macro"],["log_syntax","has description","Prints passed tokens into the standard output"],["SelfTy","is a","keyword"],["SelfTy","has description","The implementing type within a trait or impl block, or the current type within a type definition"],["const","has description","Compile-time constants, compile-time evaluable functions, and raw pointers"],["hint","has description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime"]],"startIndex":51690,"endIndex":92247},{"triples":[["trait","has description","A common interface for a group of types."]],"startIndex":55311,"endIndex":64533}],"metrics":{"escapeCount":0,"costTime":562718,"totalUsage":{"prompt_tokens":68197,"completion_tokens":14555,"cached_tokens":0,"reasoning_tokens":12584},"chunkLength":4,"chunksInfo":[{"chunkIndex":0,"strLength":40213,"costTime":95657},{"chunkIndex":1,"strLength":40692,"costTime":220571},{"chunkIndex":2,"strLength":40557,"costTime":86494},{"chunkIndex":3,"strLength":9222,"costTime":159996}]},"model":"deepseek-r1-250120","extraInfo":{}}