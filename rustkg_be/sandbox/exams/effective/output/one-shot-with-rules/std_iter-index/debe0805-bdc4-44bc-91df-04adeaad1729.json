{"create_time":"2025-03-29T05:26:13.990Z","id":"debe0805-bdc4-44bc-91df-04adeaad1729","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.50-x86_64-pc-windows-msvc/share/doc/rust/html/std/iter/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_iter-index\\merged_06100999-f051-46ed-814d-c39db403ea81.json","relations":["contains","has adapter","has argument","has associated type","has description","has feature","has full name","has method","has return type","has version","implements","is a","stable since"],"delete_triples":[{"triples":[["unit","has description","The `()` type, sometimes called \"unit\" or \"nil\"."],["f32","has description","The 32-bit floating point type."],["f64","has description","The 64-bit floating point type."]],"startIndex":242,"endIndex":39242},{"triples":[["std::iter::Chain","has description","An iterator that strings two iterators together."],["std::iter::Rev","has description","An double-ended iterator with the direction inverted."]],"startIndex":40802,"endIndex":69482}],"add_triples":[{"triples":[["std","contains","lazy"],["lazy","is a","module"],["lazy","has description","Lazy values and one-time initialization of static data."],["std","contains","primitive"],["primitive","is a","module"],["primitive","has description","This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."],["std","contains","llvm_asm"],["llvm_asm","is a","macro"],["llvm_asm","has description","LLVM-style inline assembly."],["unit","has description","The `()` type, also called \"unit\"."],["f32","has description","A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."],["f64","has description","A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."]],"startIndex":242,"endIndex":39242},{"triples":[["std::iter::Chain","has description","An iterator that links two iterators together, in a chain."],["std::iter::MapWhile","is a","struct"],["std::iter::MapWhile","has description","An iterator that only accepts elements while predicate returns Some(_)."],["std::iter::MapWhile","has feature","Experimental"],["std::iter","contains","std::iter::MapWhile"],["std::iter::InPlaceIterable","is a","trait"],["std::iter::InPlaceIterable","has description","An iterator that when yielding an item will have taken at least one element from its underlying SourceIter."],["std::iter::InPlaceIterable","has feature","Experimental"],["std::iter","contains","std::iter::InPlaceIterable"],["std::iter::SourceIter","is a","trait"],["std::iter::SourceIter","has description","This trait provides transitive access to source-stage in an iterator-adapter pipeline"],["std::iter::SourceIter","has feature","Experimental"],["std::iter","contains","std::iter::SourceIter"],["std::iter::Rev","has description","A double-ended iterator with the direction inverted."],["std::iter::OnceWith","is a","struct"],["std::iter::OnceWith","has description","An iterator that yields a single element of type A by applying the provided closure F: FnOnce() -> A."]],"startIndex":40802,"endIndex":69482}],"metrics":{"escapeCount":0,"costTime":142385,"totalUsage":{"prompt_tokens":54552,"completion_tokens":3791,"cached_tokens":0,"reasoning_tokens":2883},"chunkLength":2,"chunksInfo":[{"oldContextLength":227,"oldStrLength":37730,"newContextLength":227,"newStrLength":39021,"costTime":63188},{"oldContextLength":227,"oldStrLength":23489,"newContextLength":227,"newStrLength":28701,"costTime":79197}]},"model":"deepseek-r1-250120","extraInfo":{}}