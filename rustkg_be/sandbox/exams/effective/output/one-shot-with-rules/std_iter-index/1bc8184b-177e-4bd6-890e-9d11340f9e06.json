{"create_time":"2025-03-29T05:26:20.873Z","id":"1bc8184b-177e-4bd6-890e-9d11340f9e06","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.50-x86_64-pc-windows-msvc/share/doc/rust/html/std/iter/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_iter-index\\merged_06100999-f051-46ed-814d-c39db403ea81.json","relations":["contains","has adapter","has argument","has associated type","has description","has feature","has full name","has method","has return type","implements","is a","stable since"],"delete_triples":[{"triples":[["unit","has description","The `()` type, sometimes called \"unit\" or \"nil\"."],["hint","has description","Hints to compiler that affects how code should be emitted or optimized."],["dyn","has description","Name the type of a [trait object]."],["fn","has description","Function pointers, like `fn(usize) -> bool`."]],"startIndex":242,"endIndex":39242},{"triples":[["std::iter::Chain","has description","An iterator that strings two iterators together."],["std::iter::Rev","has description","An double-ended iterator with the direction inverted."],["std::iter::OnceWith","has feature","Experimental"]],"startIndex":40802,"endIndex":69482}],"add_triples":[{"triples":[["std","contains","lazy"],["lazy","is a","module"],["lazy","has description","Lazy values and one-time initialization of static data."],["unit","has description","The `()` type, also called \"unit\"."],["hint","has description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["dyn","has description","`dyn` is a prefix of a trait object's type."],["fn","has description","A function or function pointer."],["std","contains","llvm_asm"],["llvm_asm","is a","macro"],["llvm_asm","has description","LLVM-style inline assembly."],["primitive","is a","module"],["primitive","has description","This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."],["std","contains","primitive"]],"startIndex":242,"endIndex":39242},{"triples":[["std::iter::Chain","has description","An iterator that links two iterators together, in a chain."],["std::iter::Rev","has description","A double-ended iterator with the direction inverted."],["std::iter::MapWhile","is a","struct"],["std::iter::MapWhile","has description","An iterator that only accepts elements while predicate returns Some(_)."],["std::iter","contains","std::iter::MapWhile"],["std::iter::MapWhile","has feature","Experimental"],["std::iter::InPlaceIterable","is a","trait"],["std::iter::InPlaceIterable","has description","An iterator that when yielding an item will have taken at least one element from its underlying SourceIter."],["std::iter","contains","std::iter::InPlaceIterable"],["std::iter::InPlaceIterable","has feature","Experimental"],["std::iter::SourceIter","is a","trait"],["std::iter::SourceIter","has description","This trait provides transitive access to source-stage in an iterator-adapter pipeline under the conditions that"],["std::iter","contains","std::iter::SourceIter"],["std::iter::SourceIter","has feature","Experimental"]],"startIndex":40802,"endIndex":69482}],"metrics":{"escapeCount":0,"costTime":150000,"totalUsage":{"prompt_tokens":54577,"completion_tokens":4103,"cached_tokens":0,"reasoning_tokens":3258},"chunkLength":2,"chunksInfo":[{"oldContextLength":227,"oldStrLength":37730,"newContextLength":227,"newStrLength":39021,"costTime":37982},{"oldContextLength":227,"oldStrLength":23489,"newContextLength":227,"newStrLength":28701,"costTime":112018}]},"model":"deepseek-r1-250120","extraInfo":{}}