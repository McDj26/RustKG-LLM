{"create_time":"2025-03-29T05:09:01.770Z","id":"1991936e-b449-4f8b-893d-e75602c32681","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/iter/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_iter-index\\merged_439e6ff6-d6d0-46e0-8f21-8810707a8777.json","relations":["contains","has adapter","has argument","has associated type","has description","has feature","has full name","has method","has return type","implements","is a","stable since"],"delete_triples":[{"triples":[["assert!","is a","macro"],["assert!","description","Ensure that a boolean expression is `true` at runtime."],["assert_eq!","is a","macro"],["assert_eq!","description","Asserts that two expressions are equal to each other."],["cfg!","is a","macro"],["cfg!","description","Boolean evaluation of configuration flags."],["scoped_thread_local!","is a","macro"],["scoped_thread_local!","description","Declare a new scoped thread local storage key."],["iter","description","Composable external iteration."],["iter","description","If you've found yourself with a collection of some kind..."],["any","description","This module implements the `Any` trait..."],["ascii","description","Operations on ASCII strings and characters."],["borrow","description","A module for working with borrowed data."],["boxed","description","A pointer type for heap allocation."],["cell","description","Shareable mutable containers."]],"startIndex":215,"endIndex":39215},{"triples":[["std::iter::StepBy","has description","An adapter for stepping range iterators by a custom amount."],["std::iter::Rev","has description","An double-ended iterator with the direction inverted."]],"startIndex":39229,"endIndex":47480}],"add_triples":[{"triples":[["assert","is a","macro"],["assert","has description","Ensure that a boolean expression is `true` at runtime."],["assert_eq","is a","macro"],["assert_eq","has description","Asserts that two expressions are equal to each other (using `PartialEq`)."],["assert_ne","is a","macro"],["assert_ne","has description","Asserts that two expressions are not equal to each other (using `PartialEq`)."],["debug_assert_ne","is a","macro"],["debug_assert_ne","has description","Asserts that two expressions are not equal to each other."],["eprint","is a","macro"],["eprint","has description","Macro for printing to the standard error."],["eprintln","is a","macro"],["eprintln","has description","Macro for printing to the standard error, with a newline."],["std","contains","heap"],["heap","is a","module"],["heap","has description","dox"],["iter","has description","Composable external iteration."],["iter","has description","If you've found yourself with a collection of some kind..."],["any","has description","This module implements the `Any` trait..."],["ascii","has description","Operations on ASCII strings and characters."],["borrow","has description","A module for working with borrowed data."],["boxed","has description","A pointer type for heap allocation."],["cell","has description","Shareable mutable containers."]],"startIndex":215,"endIndex":39215},{"triples":[["std::iter::StepBy","has description","An adapter for stepping iterators by a custom amount."],["std::iter::StepBy","has feature","Experimental"],["std::iter::Rev","has description","A double-ended iterator with the direction inverted."],["std::iter::Product","is a","trait"],["std::iter::Product","has description","Trait to represent types that can be created by multiplying elements of an iterator."],["std::iter","contains","std::iter::Product"],["std::iter::Sum","is a","trait"],["std::iter::Sum","has description","Trait to represent types that can be created by summing up an iterator."],["std::iter","contains","std::iter::Sum"],["std::iter::FusedIterator","is a","trait"],["std::iter::FusedIterator","has description","An iterator that always continues to yield None when exhausted."],["std::iter","contains","std::iter::FusedIterator"],["std::iter::FusedIterator","has feature","Experimental"],["std::iter::TrustedLen","is a","trait"],["std::iter::TrustedLen","has description","An iterator that reports an accurate length using size_hint."],["std::iter","contains","std::iter::TrustedLen"],["std::iter::TrustedLen","has feature","Experimental"]],"startIndex":39229,"endIndex":47480}],"metrics":{"escapeCount":0,"costTime":437967,"totalUsage":{"prompt_tokens":36486,"completion_tokens":13329,"cached_tokens":0,"reasoning_tokens":12150},"chunkLength":2,"chunksInfo":[{"oldContextLength":227,"oldStrLength":32280,"newContextLength":227,"newStrLength":39021,"costTime":297097},{"oldContextLength":227,"oldStrLength":6988,"newContextLength":227,"newStrLength":8272,"costTime":140870}]},"model":"deepseek-r1-250120","extraInfo":{}}