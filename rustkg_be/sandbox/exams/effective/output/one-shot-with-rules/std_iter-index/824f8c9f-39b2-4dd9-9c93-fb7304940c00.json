{"create_time":"2025-03-29T05:11:24.675Z","id":"824f8c9f-39b2-4dd9-9c93-fb7304940c00","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/iter/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_iter-index\\merged_1991936e-b449-4f8b-893d-e75602c32681.json","relations":["contains","experimental","has adapter","has argument","has associated type","has description","has full name","has method","has return type","implements","is a","stable since"],"delete_triples":[{"triples":[["std","contains","heap"],["heap","is a","module"],["heap","has description","dox"],["f32","has description","This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."],["f64","has description","This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."]],"startIndex":0,"endIndex":39000},{"triples":[["std::iter::StepBy","is a","struct"],["std::iter::StepBy","has description","An adapter for stepping range iterators by a custom amount."],["std::iter","contains","std::iter::StepBy"]],"startIndex":39671,"endIndex":53692}],"add_triples":[{"triples":[["std","contains","fn"],["fn","is a","primitive type"],["fn","has description","Function pointers, like `fn(usize) -> bool`."],["std","contains","never"],["never","is a","primitive type"],["never","has description","The `!` type, also called \"never\"."],["std","contains","reference"],["reference","is a","primitive type"],["reference","has description","References, both shared and mutable."],["std","contains","unit"],["unit","is a","primitive type"],["unit","has description","The `()` type, sometimes called \"unit\" or \"nil\"."],["std","contains","alloc"],["alloc","is a","module"],["alloc","has description","Memory allocation APIs"],["std","contains","future"],["future","is a","module"],["future","has description","Asynchronous values."],["std","contains","hint"],["hint","is a","module"],["hint","has description","Hints to compiler that affects how code should be emitted or optimized."],["std","contains","pin"],["pin","is a","module"],["pin","has description","Types which pin data to its location in memory"],["std","contains","task"],["task","is a","module"],["task","has description","Types and Traits for working with asynchronous tasks."],["std","contains","await"],["await","is a","macro"],["f32","has description","This module provides constants which are specific to the implementation of the `f32` floating point data type."],["f64","has description","This module provides constants which are specific to the implementation of the `f64` floating point data type."],["fn","is a","keyword"],["std","contains","let"],["let","is a","keyword"],["std","contains","struct"],["struct","is a","keyword"]],"startIndex":0,"endIndex":39000},{"triples":[["std::iter::Flatten","is a","struct"],["std::iter::Flatten","has full name","std::iter::Flatten"],["std::iter::Flatten","has description","An iterator that flattens one level of nesting in an iterator of things that can be turned into iterators."],["std::iter","contains","std::iter::Flatten"],["std::iter::RepeatWith","is a","struct"],["std::iter::RepeatWith","has full name","std::iter::RepeatWith"],["std::iter::RepeatWith","has description","An iterator that repeats elements of type A endlessly by applying the provided closure F: FnMut() -> A."],["std::iter","contains","std::iter::RepeatWith"],["std::iter::repeat_with","is a","function"],["std::iter::repeat_with","has full name","std::iter::repeat_with"],["std::iter::repeat_with","has description","Creates a new iterator that repeats elements of type A endlessly by applying the provided closure, the repeater, F: FnMut() -> A."],["std::iter","contains","std::iter::repeat_with"],["std::iter::FusedIterator","is a","trait"],["std::iter::FusedIterator","has full name","std::iter::FusedIterator"],["std::iter::FusedIterator","has description","An iterator that always continues to yield None when exhausted."],["std::iter","contains","std::iter::FusedIterator"],["std::iter::StepBy","has description","An iterator for stepping iterators by a custom amount."]],"startIndex":39671,"endIndex":53692}],"metrics":{"escapeCount":0,"costTime":139400,"totalUsage":{"prompt_tokens":39824,"completion_tokens":3916,"cached_tokens":0,"reasoning_tokens":2687},"chunkLength":2,"chunksInfo":[{"oldContextLength":27,"oldStrLength":36445,"newContextLength":27,"newStrLength":39021,"costTime":93476},{"oldContextLength":227,"oldStrLength":11308,"newContextLength":227,"newStrLength":14042,"costTime":45924}]},"model":"deepseek-r1-250120","extraInfo":{}}