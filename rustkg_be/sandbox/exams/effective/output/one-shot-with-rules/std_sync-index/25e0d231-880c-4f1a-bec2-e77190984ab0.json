{"create_time":"2025-04-04T14:15:27.571Z","id":"25e0d231-880c-4f1a-bec2-e77190984ab0","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.70-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_sync-index\\merged_49ba5c75-454a-4364-94f8-c40a80238cde.json","relations":["contains","has attribute","has description","has full name","is a","stable since"],"delete_triples":[{"triples":[],"startIndex":18764,"endIndex":49144}],"add_triples":[{"triples":[["Exclusive","is a","struct"],["Exclusive","has full name","std::sync::Exclusive"],["Exclusive","has description","Exclusive provides only mutable access, also referred to as exclusive access to the underlying value. It provides no immutable, or shared access to the underlying value."],["Exclusive","has attribute","unstable"],["LazyLock","is a","struct"],["LazyLock","has full name","std::sync::LazyLock"],["LazyLock","has description","A value which is initialized on the first access."],["LazyLock","has attribute","unstable"],["OnceLock","is a","struct"],["OnceLock","has full name","std::sync::OnceLock"],["OnceLock","has description","A synchronization primitive which can be written to only once."],["std::sync","contains","OnceLock"]],"startIndex":18764,"endIndex":49144}],"metrics":{"escapeCount":0,"costTime":41587,"totalUsage":{"prompt_tokens":15077,"completion_tokens":1109,"cached_tokens":0,"reasoning_tokens":837},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":30380,"costTime":41587}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::sync","adds","OnceLock"]]}