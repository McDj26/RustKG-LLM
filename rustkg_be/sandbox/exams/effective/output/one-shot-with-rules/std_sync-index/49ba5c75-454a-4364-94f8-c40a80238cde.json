{"create_time":"2025-04-04T13:47:51.674Z","id":"49ba5c75-454a-4364-94f8-c40a80238cde","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_sync-index\\merged_13c0cdae-f365-4bbb-8872-5fa9e9405c70.json","relations":["contains","has attribute","has description","has full name","has version","is a","is a constant","is a enum","is a keyword","is a macro","is a module","is a primitive","is a struct","is a type","is a type definition","stable since"],"delete_triples":[{"triples":[],"startIndex":28567,"endIndex":68299},{"triples":[],"startIndex":40596,"endIndex":63008}],"add_triples":[{"triples":[],"startIndex":28567,"endIndex":68299},{"triples":[["std::sync","contains","atomic"],["atomic","is a module","module"],["atomic","has description","Atomic types"],["std::sync","contains","mpsc"],["mpsc","is a module","module"],["mpsc","has description","Multi-producer, single-consumer FIFO queue communication primitives."],["std::sync","contains","Arc"],["Arc","is a struct","struct"],["Arc","has description","A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."],["std::sync","contains","Barrier"],["Barrier","is a struct","struct"],["Barrier","has description","A barrier enables multiple threads to synchronize the beginning of some computation."],["std::sync","contains","Condvar"],["Condvar","is a struct","struct"],["Condvar","has description","A Condition Variable"],["std::sync","contains","Mutex"],["Mutex","is a struct","struct"],["Mutex","has description","A mutual exclusion primitive useful for protecting shared data"],["std::sync","contains","Once"],["Once","is a struct","struct"],["Once","has description","A synchronization primitive which can be used to run a one-time global initialization."],["std::sync","contains","RwLock"],["RwLock","is a struct","struct"],["RwLock","has description","A reader-writer lock"],["std::sync","contains","TryLockError"],["TryLockError","is a enum","enum"],["TryLockError","has description","An enumeration of possible errors associated with a TryLockResult"],["std::sync","contains","ONCE_INIT"],["ONCE_INIT","is a constant","constant"],["ONCE_INIT","has attribute","deprecated"],["ONCE_INIT","has description","Initialization value for static Once values."]],"startIndex":40596,"endIndex":63008}],"metrics":{"escapeCount":0,"costTime":281369,"totalUsage":{"prompt_tokens":26526,"completion_tokens":6641,"cached_tokens":0,"reasoning_tokens":5950},"chunkLength":2,"chunksInfo":[{"chunkIndex":0,"strLength":39732,"costTime":220738},{"chunkIndex":1,"strLength":22412,"costTime":60631}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::sync","adds module","atomic"],["std::sync","adds module","mpsc"],["std::sync","adds struct","Arc"],["std::sync","adds struct","Barrier"],["std::sync","adds struct","Condvar"],["std::sync","adds struct","Mutex"],["std::sync","adds struct","Once"],["std::sync","adds struct","RwLock"],["std::sync","adds enum","TryLockError"],["std::sync","adds constant","ONCE_INIT"],["ONCE_INIT","marks as deprecated","deprecated"]]}