{"create_time":"2025-04-04T14:16:57.437Z","id":"9fc99364-892e-445c-9227-283df843ccf7","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.80-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_sync-index\\merged_1da289e4-251a-48be-9d5f-7e2875cfb696.json","relations":["contains","has attribute","has description","has full name","is a","stable since"],"delete_triples":[{"triples":[],"startIndex":18821,"endIndex":52782}],"add_triples":[{"triples":[["std::sync","contains","Exclusive"],["Exclusive","is a","struct"],["Exclusive","has full name","std::sync::Exclusive"],["Exclusive","has attribute","unstable"],["Exclusive","has description","Exclusive provides only mutable access, also referred to as exclusive access to the underlying value. It provides no immutable, or shared access to the underlying value."],["std::sync","contains","LazyLock"],["LazyLock","is a","struct"],["LazyLock","has full name","std::sync::LazyLock"],["LazyLock","has attribute","unstable"],["LazyLock","has description","A value which is initialized on the first access."]],"startIndex":18821,"endIndex":52782}],"metrics":{"escapeCount":0,"costTime":64983,"totalUsage":{"prompt_tokens":16409,"completion_tokens":1661,"cached_tokens":0,"reasoning_tokens":1427},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":33961,"costTime":64983}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::sync","adds feature","Exclusive"],["std::sync","adds feature","LazyLock"]]}