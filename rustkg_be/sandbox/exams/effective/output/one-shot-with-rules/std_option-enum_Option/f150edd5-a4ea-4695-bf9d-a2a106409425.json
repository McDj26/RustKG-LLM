{"create_time":"2025-03-26T15:49:31.099Z","id":"f150edd5-a4ea-4695-bf9d-a2a106409425","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/option/enum.Option.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\merged_a7ac278b-e05c-45d2-b512-80a6297e8001.json","relations":["has argument","has associated type","has description","has feature","has method","has return type","implements","returns"],"delete_triples":[{"triples":[["std::option::Option::as_pin_mut","has feature","nightly-only experimental"],["Option","contains","expect_none"]],"startIndex":15,"endIndex":38758},{"triples":[["Option","contains","insert"],["Option","has method","insert"],["Option::insert","has feature","nightly-only experimental"]],"startIndex":38757,"endIndex":77638},{"triples":[["Option::filter","has description","Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."],["std::option::Option::filter","has description","Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."],["Option::xor","has feature","nightly-only experimental"],["std::option::Option::xor","has feature","nightly-only experimental"]],"startIndex":77638,"endIndex":114837},{"triples":[["Option::expect_none","has feature","option_expect_none"],["Option::unwrap_none","has feature","option_unwrap_none"]],"startIndex":114837,"endIndex":143123},{"triples":[],"startIndex":143660,"endIndex":182660},{"triples":[],"startIndex":182720,"endIndex":218463},{"triples":[["T","implements","From<!>"],["T","implements","From<T>"]],"startIndex":218462,"endIndex":231716}],"add_triples":[{"triples":[["Option","has method","get_or_insert_default"],["Option","has method","inspect"],["Option","has method","is_some_with"],["Option","has method","unwrap_unchecked"],["Option","has method","unzip"],["Option::unwrap_unchecked","has feature","unsafe"]],"startIndex":15,"endIndex":38758},{"triples":[],"startIndex":38757,"endIndex":77638},{"triples":[["Option::filter","has description","Returns None if the option is None, otherwise calls predicate with the wrapped value and returns: Some(t) if predicate returns true (where t is the wrapped value), and None if predicate returns false."],["std::option::Option::filter","has description","Returns None if the option is None, otherwise calls predicate with the wrapped value and returns: Some(t) if predicate returns true (where t is the wrapped value), and None if predicate returns false."],["Option::get_or_insert_default","has feature","nightly-only experimental"],["Option","has method","contains"],["Option::contains","has feature","nightly-only experimental"]],"startIndex":77638,"endIndex":114837},{"triples":[["Option","has method","zip"],["Option","has method","zip_with"],["zip_with","has feature","nightly-only experimental"],["unzip","has feature","nightly-only experimental"]],"startIndex":114837,"endIndex":143123},{"triples":[["Option<T>","implements","FromResidual"],["Option<T>","has method","from_residual"],["from_residual","has description","Constructs the type from a compatible Residual type."]],"startIndex":143660,"endIndex":182660},{"triples":[["Option<T>","implements","Iterator"],["Option<T>","implements","Ord"],["Option<T>","implements","PartialEq"],["Option<T>","implements","PartialOrd"],["Option<T>","implements","Product"],["Option<T>","implements","Sum"],["Option<T>","implements","Try"],["IntoIter<T>","implements","Iterator"],["IntoIter<T>","has associated type","Item"],["IntoIter<T>::Item","has description","The type of the elements being iterated over"],["Option<T>","has method","cmp"],["Option<T>","has method","eq"],["Option<T>","has method","partial_cmp"],["Option<T>","has method","product"],["Option<T>","has method","sum"]],"startIndex":182720,"endIndex":218463},{"triples":[["BorrowMut<T>","implements","BorrowMut"],["BorrowMut<T>","has method","borrow_mut"],["From<!> for T","has method","from"],["From<T> for T","has method","from"],["From<T>","has description","Returns the argument unchanged"],["Into<U> for T","has description","Calls U::from(self)"],["ToOwned","has associated type","Owned = T"],["ToOwned","has method","to_owned"],["ToOwned","has method","clone_into"],["TryFrom<U> for T","has associated type","Error = Infallible"],["TryInto<U> for T","has associated type","Error = <U as TryFrom<T>>::Error"],["BorrowMut::borrow_mut","has description","Mutably borrows from an owned value"],["ToOwned::clone_into","has feature","toowned_clone_into"]],"startIndex":218462,"endIndex":231716}],"metrics":{"escapeCount":0,"costTime":856803,"totalUsage":{"prompt_tokens":179808,"completion_tokens":29711,"cached_tokens":0,"reasoning_tokens":28185},"chunkLength":7,"chunksInfo":[{"oldContextLength":42,"oldStrLength":33767,"newContextLength":42,"newStrLength":38764,"costTime":162677},{"oldContextLength":227,"oldStrLength":32067,"newContextLength":227,"newStrLength":38902,"costTime":143901},{"oldContextLength":227,"oldStrLength":39013,"newContextLength":227,"newStrLength":37220,"costTime":119456},{"oldContextLength":227,"oldStrLength":39021,"newContextLength":227,"newStrLength":28307,"costTime":104209},{"oldContextLength":227,"oldStrLength":38321,"newContextLength":227,"newStrLength":39021,"costTime":242760},{"oldContextLength":227,"oldStrLength":39017,"newContextLength":227,"newStrLength":35764,"costTime":46649},{"oldContextLength":227,"oldStrLength":14288,"newContextLength":227,"newStrLength":13275,"costTime":37151}]},"model":"deepseek-r1-250120","extraInfo":{}}