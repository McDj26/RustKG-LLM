{"create_time":"2025-03-26T15:57:27.329Z","id":"f911e886-9754-4d95-b709-8dc0add64509","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/option/enum.Option.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\merged_a7ac278b-e05c-45d2-b512-80a6297e8001.json","relations":["contains","has associated type","has description","has feature","has method","implements","is a"],"delete_triples":[{"triples":[["Option","has method","expect_none"],["Option","has method","unwrap_none"],["Option","contains","get_or_insert_default"],["Option","contains","expect_none"],["Option","contains","unwrap_none"]],"startIndex":15,"endIndex":38758},{"triples":[],"startIndex":38757,"endIndex":77638},{"triples":[["Option::xor","requires feature","option_xor"],["Option::insert","has description","Inserts value into the option if it is None, then returns a mutable reference to the contained value."]],"startIndex":77638,"endIndex":114837},{"triples":[["Option::expect_none","has feature","option_expect_none"],["Option::unwrap_none","has feature","option_unwrap_none"],["Option::expect_none","has description","Consumes self while expecting None and returning nothing. Panics if the value is a Some, with a custom panic message provided by the Some's value."],["Option::unwrap_none","has description","Consumes self while expecting None and returning nothing. Panics if the value is a Some, with a custom panic message provided by the Some's value."],["Option::expect_none","has feature","nightly-only experimental"],["Option::unwrap_none","has feature","nightly-only experimental"]],"startIndex":114837,"endIndex":143123},{"triples":[["Option<T>","implements","From<&'a mut Option<T>>"],["Option<T>","implements","From<&'a Option<T>>"],["Option<T>","implements","From<T>"],["Option<T>","implements","FromIterator<Option<A>>"],["Option<T>","implements","Sum<Option<U>>"],["Option<T>","has method","sum"],["sum","has description","Takes each element in the Iterator: if it is a None, no further elements are taken, and the None is returned. Should no None occur, the sum of all elements is returned."],["sum","returns","Option<T>"]],"startIndex":143660,"endIndex":182660},{"triples":[],"startIndex":182720,"endIndex":218463},{"triples":[["From<!> for T","has method","from"],["T","implements","From<!>"],["From<T> for T","has method","from"],["T","implements","From<T>"]],"startIndex":218462,"endIndex":231716}],"add_triples":[{"triples":[["Option","has method","is_some_with"],["Option","has method","inspect"],["Option","has method","unzip"],["Option","has method","unwrap_unchecked"],["Option","contains","is_some_with"],["Option","contains","inspect"],["Option","contains","unzip"],["Option","contains","unwrap_unchecked"],["Option::is_some_with","has feature","nightly-only experimental"]],"startIndex":15,"endIndex":38758},{"triples":[["Option::inspect","has feature","nightly-only experimental"],["Option::inspect","has description","Calls the provided closure with a reference to the contained value (if Some)."],["Option::unwrap_unchecked","has description","Returns the contained Some value, consuming the self value, without checking that the value is not None."]],"startIndex":38757,"endIndex":77638},{"triples":[["Option","has method","get_or_insert_default"],["Option::get_or_insert_default","has feature","nightly-only experimental"],["Option::get_or_insert_default","has description","Inserts the default value into the option if it is None, then returns a mutable reference to the contained value."],["std::option::Option::xor","has feature","nightly-only experimental"],["Option::insert","has description","Inserts `value` into the option then returns a mutable reference to it."]],"startIndex":77638,"endIndex":114837},{"triples":[["Option","has method","zip"],["Option::zip","has version","1.46.0"],["Option::zip","has description","Zips self with another Option."],["Option::zip","has feature","nightly-only experimental"],["Option","has method","zip_with"],["Option::zip_with","has description","Zips self and another Option with function f."],["Option::zip_with","has feature","option_zip"],["Option::unzip","has description","Unzips an option containing a tuple of two options."],["Option::unzip","has feature","unzip_option"]],"startIndex":114837,"endIndex":143123},{"triples":[["Option<T>","implements","FromResidual"],["Option<T>","has method","zip"],["Option<T>","has method","zip_with"]],"startIndex":143660,"endIndex":182660},{"triples":[["Option::sum","has description","Takes each element in the Iterator: if it is a None, no further elements are taken, and the None is returned. Should no None occur, the sum of all elements is returned."]],"startIndex":182720,"endIndex":218463},{"triples":[["From<T> for T","has description","Returns the argument unchanged."],["ToOwned::clone_into","has feature","toowned_clone_into"],["Into<U> for T","has description","Calls U::from(self)."]],"startIndex":218462,"endIndex":231716}],"metrics":{"escapeCount":3,"costTime":886471,"totalUsage":{"prompt_tokens":180702,"completion_tokens":27455,"cached_tokens":0,"reasoning_tokens":25663},"chunkLength":7,"chunksInfo":[{"oldContextLength":42,"oldStrLength":33767,"newContextLength":42,"newStrLength":38764,"costTime":52951},{"oldContextLength":227,"oldStrLength":32067,"newContextLength":227,"newStrLength":38902,"costTime":193506},{"oldContextLength":227,"oldStrLength":39013,"newContextLength":227,"newStrLength":37220,"costTime":142452},{"oldContextLength":227,"oldStrLength":39021,"newContextLength":227,"newStrLength":28307,"costTime":164427},{"oldContextLength":227,"oldStrLength":38321,"newContextLength":227,"newStrLength":39021,"costTime":78177},{"oldContextLength":227,"oldStrLength":39017,"newContextLength":227,"newStrLength":35764,"costTime":30247},{"oldContextLength":227,"oldStrLength":14288,"newContextLength":227,"newStrLength":13275,"costTime":224711}]},"model":"deepseek-r1-250120","extraInfo":{}}