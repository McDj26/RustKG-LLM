{"create_time":"2025-03-26T13:38:08.144Z","id":"bc2f170d-00cb-4253-868c-f7619c6344a9","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/option/enum.Option.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\merged_b4be24c6-537d-4081-a85a-d967b0cde3aa.json","relations":["contains","has argument","has declaration","has description","has full name","has generic parameter","has method","has parameter","has return type","has type","has variant","is a","panics with","requires trait","returns","stable since"],"delete_triples":[{"triples":[["IntoIter","has description","An iterator over the item contained inside an Option."],["Iter","has description","An iterator over a reference of the contained item in an Option."],["IterMut","has description","An iterator over a mutable reference of the contained item in an Option."]],"startIndex":215,"endIndex":39215},{"triples":[["and_then","has description","Returns None if the option is None, otherwise calls f with the wrapped value and returns the result."]],"startIndex":39217,"endIndex":78217},{"triples":[],"startIndex":78242,"endIndex":89034}],"add_triples":[{"triples":[["IntoIter","has description","An iterator over the value in [`Some`] variant of an [`Option`]."],["Iter","has description","An iterator over a reference to the [`Some`] variant of an [`Option`]."],["IterMut","has description","An iterator over a mutable reference to the [`Some`] variant of an [`Option`]."]],"startIndex":215,"endIndex":39215},{"triples":[["Option","has method","get_or_insert"],["get_or_insert","has full name","std::option::Option::get_or_insert"],["get_or_insert","has argument","self"],["get_or_insert","has argument","v"],["get_or_insert::self","has type","&mut self"],["get_or_insert::v","has type","T"],["get_or_insert","returns","&mut T"],["get_or_insert","has description","Inserts v into the option if it is None, then returns a mutable reference to the contained value."],["Option","has method","get_or_insert_with"],["get_or_insert_with","has full name","std::option::Option::get_or_insert_with"],["get_or_insert_with","has argument","self"],["get_or_insert_with","has argument","f"],["get_or_insert_with::self","has type","&mut self"],["get_or_insert_with::f","has type","F"],["F","requires trait","FnOnce() -> T"],["get_or_insert_with","returns","&mut T"],["get_or_insert_with","has description","Inserts a value computed from f into the option if it is None, then returns a mutable reference to the contained value."],["Option","has method","cloned"],["cloned","has full name","std::option::Option::cloned"],["cloned","returns","Option<T>"],["cloned","has description","Maps an Option<&T> to an Option<T> by cloning the contents of the option."],["Option","has method","unwrap_or_default"],["unwrap_or_default","has full name","std::option::Option::unwrap_or_default"],["unwrap_or_default","returns","T"],["unwrap_or_default","has argument","self"],["unwrap_or_default::self","has type","&self"],["unwrap_or_default","has description","Returns the contained value or a default"],["and_then","has description","Returns None if the option is None, otherwise calls f with the wrapped value and returns the result. Some languages call this operation flatmap."]],"startIndex":39217,"endIndex":78217},{"triples":[["Option","has method","max"],["max","has full name","std::option::Option::max"],["max","returns","Self"],["max","has argument","self"],["max::self","has type","self"],["max","has argument","other"],["max::other","has type","Self"],["max","has description","Compares and returns the maximum of two values."],["Option","has method","min"],["min","has full name","std::option::Option::min"],["min","returns","Self"],["min","has argument","self"],["min::self","has type","self"],["min","has argument","other"],["min::other","has type","Self"],["min","has description","Compares and returns the minimum of two values."],["&Option<T>","implements","IntoIterator"],["&Option<T> as IntoIterator","has associated type","Item = &T"],["&Option<T> as IntoIterator","has associated type","IntoIter = Iter<T>"],["Iter<T>","is a","struct"],["&Option<T>","has method","into_iter"],["into_iter","has full name","std::option::Option::into_iter"],["into_iter","returns","Iter<T>"],["into_iter","has description","Creates an iterator from a value. Read more"],["&mut Option<T>","implements","IntoIterator"],["&mut Option<T> as IntoIterator","has associated type","Item = &mut T"],["&mut Option<T> as IntoIterator","has associated type","IntoIter = IterMut<T>"],["IterMut<T>","is a","struct"],["&mut Option<T>","has method","into_iter"],["into_iter","returns","IterMut<T>"]],"startIndex":78242,"endIndex":89034}],"metrics":{"escapeCount":0,"costTime":502744,"totalUsage":{"prompt_tokens":65594,"completion_tokens":14650,"cached_tokens":0,"reasoning_tokens":13189},"chunkLength":3,"chunksInfo":[{"oldContextLength":227,"oldStrLength":33654,"newContextLength":227,"newStrLength":39021,"costTime":70045},{"oldContextLength":227,"oldStrLength":27288,"newContextLength":227,"newStrLength":39021,"costTime":175096},{"oldContextLength":227,"oldStrLength":9032,"newContextLength":227,"newStrLength":10813,"costTime":257603}]},"model":"deepseek-r1-250120","extraInfo":{}}