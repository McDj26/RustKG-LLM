{"create_time":"2025-03-26T15:47:23.650Z","id":"b178bafc-aaff-4e69-9f90-b8629e7af226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/option/enum.Option.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\merged_a7ac278b-e05c-45d2-b512-80a6297e8001.json","relations":["FromResidual","Residual","contains","has argument","has description","has feature","has generic parameter","has method","has stability","has type","implements","is a","requires trait","returns"],"delete_triples":[{"triples":[["Option","contains","get_or_insert"],["Option","contains","get_or_insert_with"],["Option","has method","expect_none"],["Option","has method","unwrap_none"]],"startIndex":15,"endIndex":38758},{"triples":[["Option","has method","insert"],["Option","contains","insert"],["Option::insert","has feature","nightly-only experimental"]],"startIndex":38757,"endIndex":77638},{"triples":[],"startIndex":77638,"endIndex":114837},{"triples":[["Option::expect_none","has description","Consumes self while expecting None and returning nothing. Panics if the value is a Some, with a custom panic message provided by the Some's value."],["Option::unwrap_none","has description","Consumes self while expecting None and returning nothing. Panics if the value is a Some, with a custom panic message provided by the Some's value."]],"startIndex":114837,"endIndex":143123},{"triples":[["Option<T>","implements","From<&'a mut Option<T>>"],["Option<T>","implements","From<&'a Option<T>>"],["Option<T>","implements","From<T>"]],"startIndex":143660,"endIndex":182660},{"triples":[],"startIndex":182720,"endIndex":218463},{"triples":[["T","implements","From<!>"],["T","implements","From<T>"],["T","implements","Into<U>"],["TryFrom<U> for T","has associated type","Error = Infallible"],["T","implements","TryFrom<U>"],["T","implements","TryInto<U>"],["TryInto<U> for T","has associated type","Error = <U as TryFrom<T>>::Error"]],"startIndex":218462,"endIndex":231716}],"add_triples":[{"triples":[["Option","contains","get_or_insert_default"],["Option","contains","inspect"],["Option","contains","is_some_with"],["Option","has method","get_or_insert_default"],["Option","has method","inspect"],["Option","has method","is_some_with"],["Option","implements","FromResidual"],["Option","implements","Residual"]],"startIndex":15,"endIndex":38758},{"triples":[["Option::inspect","has feature","nightly-only experimental"],["Option::inspect","has description","Calls the provided closure with a reference to the contained value (if Some)."],["Option","has method","unwrap_unchecked"],["Option::unwrap_unchecked","has description","Returns the contained Some value, consuming the self value, without checking that the value is not None."],["Option::unwrap_unchecked","has feature","unsafe"]],"startIndex":38757,"endIndex":77638},{"triples":[["Option::get_or_insert_default","has description","Inserts the default value into the option if it is None, then returns a mutable reference to the contained value."],["Option::get_or_insert_default","has feature","option_get_or_insert_default"],["Option","has method","contains"],["Option::contains","has description","Returns true if the option is a Some value containing the given value."],["Option::contains","has generic parameter","U"],["U","requires trait","PartialEq<T>"],["Option::contains","has argument","x"],["Option::contains::x","has type","&U"],["Option::contains","has feature","option_result_contains"]],"startIndex":77638,"endIndex":114837},{"triples":[["Option","has method","zip"],["zip","has description","Zips self with another Option."],["zip","returns","Option<(T, U)>"],["zip","has stability","1.46.0"],["zip","has feature","const unstable"],["Option","has method","zip_with"],["zip_with","has description","Zips self and another Option with function f."],["zip_with","has feature","option_zip"],["zip_with","has stability","nightly-only experimental"],["Option","has method","unzip"],["unzip","has description","Unzips an option containing a tuple of two options."],["unzip","returns","(Option<T>, Option<U>)"],["unzip","has feature","unzip_option"]],"startIndex":114837,"endIndex":143123},{"triples":[["Option<T>","implements","FromResidual"],["Option<T>","implements","Residual"],["Option<T>","has method","from_residual"],["Option<T>","has method","from_iter"],["from_residual","has description","Constructs the type from a compatible Residual type."],["from_iter","has description","Takes each element in the Iterator: if it is None, no further elements are taken, and the None is returned. Should no None occur, a container with the values of each Option is returned."]],"startIndex":143660,"endIndex":182660},{"triples":[["Option::zip","returns","Option<(T, U)>"],["Option::zip","has stability","1.46.0"],["Option::zip","has feature","const unstable"],["Option::zip_with","has feature","option_zip"],["Option::zip_with","has stability","nightly-only experimental"],["Option::unzip","returns","(Option<T>, Option<U>)"],["Option::unzip","has feature","unzip_option"]],"startIndex":182720,"endIndex":218463},{"triples":[["BorrowMut<T> for T","has feature","const unstable"],["From<!> for T","has method","from"],["From<T> for T","has method","from"],["From<T> for T","has description","Returns the argument unchanged."],["Into<U> for T","has method","into"],["Into<U> for T","has description","Calls U::from(self). This conversion is whatever the implementation of From<T> for U chooses to do."],["ToOwned","has method","clone_into"],["ToOwned::clone_into","has feature","nightly-only experimental"],["TryFrom<U> for T","has method","try_from"],["TryFrom<U> for T","has description","Performs the conversion."],["TryInto<U> for T","has method","try_into"],["TryInto<U> for T","has description","Performs the conversion."]],"startIndex":218462,"endIndex":231716}],"metrics":{"escapeCount":2,"costTime":527090,"totalUsage":{"prompt_tokens":180831,"completion_tokens":15169,"cached_tokens":0,"reasoning_tokens":12841},"chunkLength":7,"chunksInfo":[{"oldContextLength":42,"oldStrLength":33767,"newContextLength":42,"newStrLength":38764,"costTime":47749},{"oldContextLength":227,"oldStrLength":32067,"newContextLength":227,"newStrLength":38902,"costTime":149934},{"oldContextLength":227,"oldStrLength":39013,"newContextLength":227,"newStrLength":37220,"costTime":84873},{"oldContextLength":227,"oldStrLength":39021,"newContextLength":227,"newStrLength":28307,"costTime":58108},{"oldContextLength":227,"oldStrLength":38321,"newContextLength":227,"newStrLength":39021,"costTime":52361},{"oldContextLength":227,"oldStrLength":39017,"newContextLength":227,"newStrLength":35764,"costTime":80549},{"oldContextLength":227,"oldStrLength":14288,"newContextLength":227,"newStrLength":13275,"costTime":53516}]},"model":"deepseek-r1-250120","extraInfo":{}}