{"create_time":"2025-03-26T14:39:31.050Z","id":"92de3f3e-1f8e-4499-b415-48f15652d3b2","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.40-x86_64-pc-windows-msvc/share/doc/rust/html/std/option/enum.Option.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\merged_59ecd04b-e3cf-4878-b641-f770bf3116a7.json","relations":["contains","has argument","has associated type","has description","has feature","has method","has return type","has type","implements","is a","returns"],"delete_triples":[{"triples":[["Option","has method","deref"]],"startIndex":217,"endIndex":39217},{"triples":[],"startIndex":39727,"endIndex":78060},{"triples":[],"startIndex":79121,"endIndex":118116},{"triples":[["transpose","has description","Transposes an Option of a Result into a Result of an Option. None will be mapped to Ok(None). Some(Ok(_)) and Some(Err(_)) will be mapped to Ok(Some(_)) and Err(_)."]],"startIndex":118116,"endIndex":157109},{"triples":[],"startIndex":157108,"endIndex":196102},{"triples":[["Option<T>","implements","From<&'a mut Option<T>>"],["Option<T>","implements","From<&'a Option<T>>"],["Option<T> as Try","has associated type","Ok = T"],["Option<T> as Try","has associated type","Error = NoneError"]],"startIndex":196103,"endIndex":218118}],"add_triples":[{"triples":[["Option","has method","contains"],["Option","has method","copied"],["Option","has method","expect_none"],["Option","has method","flatten"],["Option","has method","as_deref"],["Option","has method","as_deref_mut"],["Option","has method","as_pin_ref"],["Option","has method","unwrap_none"],["Option","implements","Product"],["Option","implements","StructuralEq"],["Option","implements","StructuralPartialEq"],["Option","implements","Sum"]],"startIndex":217,"endIndex":39217},{"triples":[],"startIndex":39727,"endIndex":78060},{"triples":[["Option","has method","replace"],["Option::replace","has feature","option_replace"],["Option::replace","returns","Option<T>"],["Option","has method","take"],["Option::take","returns","Option<T>"],["Option","has method","get_or_insert_with"],["Option::get_or_insert_with","has argument","f"],["Option::get_or_insert_with::f","has type","F"],["Option::expect_none","has feature","nightly-only experimental"],["Option::unwrap_none","has feature","nightly-only experimental"]],"startIndex":79121,"endIndex":118116},{"triples":[["Option","implements","Try"],["Option","implements","From"],["Option","implements","Default"],["Option","implements","Hash"],["Option","implements","Clone"],["Option","implements","Eq"],["Option","implements","PartialEq"],["Option","implements","Ord"],["Option","implements","PartialOrd"],["transpose","has description","Transposes an Option of a Result into a Result of an Option. None maps to Ok(None), Some(Ok(_)) and Some(Err(_)) map to Ok(Some(_)) and Err(_)."],["as_deref_mut","returns","Option<&mut <T as Deref>::Target>"],["as_deref_mut","has argument","self"],["as_deref_mut::self","has type","&mut self"],["flatten","returns","Option<T>"],["flatten","has argument","self"],["flatten::self","has type","self"]],"startIndex":118116,"endIndex":157109},{"triples":[["Option<T>","implements","FromIterator<Option<A>>"],["Option<T>","implements","Sum<Option<U>>"],["Option<T>","implements","Clone"],["Option<T>","has method","sum"]],"startIndex":157108,"endIndex":196102},{"triples":[["T","implements","Borrow<T>"],["T","implements","BorrowMut<T>"],["T","implements","Any"],["T","implements","ToOwned"],["T","has method","borrow"],["T","has method","borrow_mut"],["T","has method","type_id"],["T","has method","to_owned"],["TryFrom<T>","has associated type","Error = Infallible"],["T","implements","TryFrom<U>"],["T","implements","Into<U>"],["T","implements","TryInto<U>"],["IntoIterator","has associated type","Item = <I as Iterator>::Item"],["IntoIterator","has associated type","IntoIter = I"],["I","has method","into_iter"],["T","has method","try_into"],["T","has method","clone_into"]],"startIndex":196103,"endIndex":218118}],"metrics":{"escapeCount":0,"costTime":1082240,"totalUsage":{"prompt_tokens":150470,"completion_tokens":30913,"cached_tokens":0,"reasoning_tokens":29344},"chunkLength":6,"chunksInfo":[{"oldContextLength":227,"oldStrLength":33467,"newContextLength":227,"newStrLength":39021,"costTime":212844},{"oldContextLength":227,"oldStrLength":38494,"newContextLength":227,"newStrLength":38354,"costTime":119268},{"oldContextLength":227,"oldStrLength":21956,"newContextLength":227,"newStrLength":39016,"costTime":248370},{"oldContextLength":227,"oldStrLength":29959,"newContextLength":227,"newStrLength":39014,"costTime":300961},{"oldContextLength":227,"oldStrLength":30988,"newContextLength":227,"newStrLength":39015,"costTime":144822},{"oldContextLength":227,"oldStrLength":20374,"newContextLength":227,"newStrLength":22036,"costTime":55975}]},"model":"deepseek-r1-250120","extraInfo":{}}