{"create_time":"2025-04-03T19:45:46.608Z","id":"46bbbe75-acc7-48f5-83b5-b7830b7ea892","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_io-enum_ErrorKind\\merged_0bf67c34-5256-4816-9c36-38efb054be5a.json","relations":["belongs to module","has argument","has description","has full name","has return type","has variant","implements","is a","stable since","used with"],"delete_triples":[{"triples":[["ErrorKind::InvalidData","has description","Data not valid for the operation were encountered."],["ErrorKind::fmt","has return type","Result"]],"startIndex":15766,"endIndex":56077},{"triples":[["ErrorKind","implements","Copy"],["std::io::ErrorKind","implements","Copy"]],"startIndex":17120,"endIndex":21289}],"add_triples":[{"triples":[["ErrorKind::fmt","has return type","std::fmt::Result"],["ErrorKind","used with","io::Error"]],"startIndex":15766,"endIndex":56077},{"triples":[["ErrorKind","implements","PartialOrd"],["std::io::ErrorKind","implements","PartialOrd"],["ErrorKind::partial_cmp","is a","method"],["ErrorKind::partial_cmp","has argument","self"],["ErrorKind::partial_cmp","has argument","__arg_0"],["ErrorKind::partial_cmp","has return type","Option<Ordering>"],["ErrorKind::partial_cmp","has description","This method returns an ordering between self and other values if one exists."],["ErrorKind::lt","is a","method"],["ErrorKind::lt","has argument","self"],["ErrorKind::lt","has argument","other"],["ErrorKind::lt","has return type","bool"],["ErrorKind::lt","has description","This method tests less than (for self and other) and is used by the < operator."],["ErrorKind::le","is a","method"],["ErrorKind::le","has argument","self"],["ErrorKind::le","has argument","other"],["ErrorKind::le","has return type","bool"],["ErrorKind::le","has description","This method tests less than or equal to (for self and other) and is used by the <= operator."],["ErrorKind::gt","is a","method"],["ErrorKind::gt","has argument","self"],["ErrorKind::gt","has argument","other"],["ErrorKind::gt","has return type","bool"],["ErrorKind::gt","has description","This method tests greater than (for self and other) and is used by the > operator."],["ErrorKind::ge","is a","method"],["ErrorKind::ge","has argument","self"],["ErrorKind::ge","has argument","other"],["ErrorKind::ge","has return type","bool"],["ErrorKind::ge","has description","This method tests greater than or equal to (for self and other) and is used by the >= operator."]],"startIndex":17120,"endIndex":21289}],"metrics":{"escapeCount":0,"costTime":394552,"totalUsage":{"prompt_tokens":21991,"completion_tokens":12508,"cached_tokens":0,"reasoning_tokens":11713},"chunkLength":2,"chunksInfo":[{"chunkIndex":0,"strLength":40311,"costTime":203819},{"chunkIndex":1,"strLength":4169,"costTime":190733}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["ErrorKind","adds feature","PartialOrd"],["std::io::ErrorKind","adds feature","PartialOrd"],["ErrorKind::fmt","changes return type to","std::fmt::Result"],["ErrorKind","removes feature","Copy"],["std::io::ErrorKind","removes feature","Copy"],["ErrorKind","adds usage with","io::Error"],["ErrorKind","adds method","partial_cmp"],["ErrorKind","adds method","lt"],["ErrorKind","adds method","le"],["ErrorKind","adds method","gt"],["ErrorKind","adds method","ge"],["ErrorKind::InvalidData","removes description","Data not valid for the operation were encountered."]]}