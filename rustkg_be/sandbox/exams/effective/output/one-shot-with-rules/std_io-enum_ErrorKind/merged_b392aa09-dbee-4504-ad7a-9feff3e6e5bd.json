{"create_time":"2025-04-03T20:51:24.964Z","id":"merged_b392aa09-dbee-4504-ad7a-9feff3e6e5bd","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","merged_triples":[{"triples":[["ErrorKind","is a","enum"],["ErrorKind","has full name","std::io::ErrorKind"],["ErrorKind","stable since","1.0.0"],["ErrorKind","has description","A list specifying general categories of I/O error."],["ErrorKind","has variant","NotFound"],["NotFound","has description","An entity was not found, often a file."],["ErrorKind","has variant","PermissionDenied"],["PermissionDenied","has description","The operation lacked the necessary privileges to complete."],["ErrorKind","has variant","ConnectionRefused"],["ConnectionRefused","has description","The connection was refused by the remote server."],["ErrorKind","has variant","ConnectionReset"],["ConnectionReset","has description","The connection was reset by the remote server."],["ErrorKind","has variant","ConnectionAborted"],["ConnectionAborted","has description","The connection was aborted (terminated) by the remote server."],["ErrorKind","has variant","NotConnected"],["NotConnected","has description","The network operation failed because it was not connected yet."],["ErrorKind","has variant","AddrInUse"],["AddrInUse","has description","A socket address could not be bound because the address is already in use elsewhere."],["ErrorKind","has variant","AddrNotAvailable"],["AddrNotAvailable","has description","A nonexistent interface was requested or the requested address was not local."],["ErrorKind","has variant","BrokenPipe"],["BrokenPipe","has description","The operation failed because a pipe was closed."],["ErrorKind","has variant","AlreadyExists"],["AlreadyExists","has description","An entity already exists, often a file."],["ErrorKind","has variant","WouldBlock"],["WouldBlock","has description","The operation needs to block to complete, but the blocking operation was requested to not occur."],["ErrorKind","has variant","InvalidInput"],["InvalidInput","has description","A parameter was incorrect."],["ErrorKind","has variant","InvalidData"],["InvalidData","has description","Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."],["InvalidData","stable since","1.2.0"],["ErrorKind","has variant","TimedOut"],["TimedOut","has description","The I/O operation's timeout expired, causing it to be canceled."],["ErrorKind","has variant","WriteZero"],["WriteZero","has description","An error returned when an operation could not be completed because a call to write returned Ok(0)."],["ErrorKind","has variant","Interrupted"],["Interrupted","has description","This operation was interrupted. Interrupted operations can typically be retried."],["ErrorKind","has variant","Other"],["Other","has description","Any I/O error not part of this list."],["ErrorKind","has variant","UnexpectedEof"],["UnexpectedEof","has description","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."],["UnexpectedEof","stable since","1.6.0"],["ErrorKind","implements","Debug"],["ErrorKind","implements","Clone"],["ErrorKind","implements","Eq"],["ErrorKind","implements","PartialEq"],["ErrorKind","implements","Copy"],["ErrorKind::fmt","is a","method"],["ErrorKind::fmt","has argument","self"],["ErrorKind::fmt","has argument","__arg_0"],["ErrorKind::fmt","has return type","Result"],["ErrorKind::fmt","has description","Formats the value using the given formatter."],["ErrorKind::clone","is a","method"],["ErrorKind::clone","has return type","ErrorKind"],["ErrorKind::clone","has description","Returns a copy of the value."],["ErrorKind","belongs to module","std::io"],["ErrorKind","has description","A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."],["InvalidData","has description","Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."],["WriteZero","has description","An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."],["UnexpectedEof","has description","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."],["std::io::ErrorKind","is a","enum"],["std::io::ErrorKind","stable since","1.0.0"],["std::io::ErrorKind","has description","A list specifying general categories of I/O error."],["std::io::ErrorKind","has variant","NotFound"],["std::io::ErrorKind","has variant","PermissionDenied"],["std::io::ErrorKind","has variant","ConnectionRefused"],["std::io::ErrorKind","has variant","ConnectionReset"],["std::io::ErrorKind","has variant","ConnectionAborted"],["std::io::ErrorKind","has variant","NotConnected"],["std::io::ErrorKind","has variant","AddrInUse"],["std::io::ErrorKind","has variant","AddrNotAvailable"],["std::io::ErrorKind","has variant","BrokenPipe"],["std::io::ErrorKind","has variant","AlreadyExists"],["std::io::ErrorKind","has variant","WouldBlock"],["std::io::ErrorKind","has variant","InvalidInput"],["std::io::ErrorKind","has variant","InvalidData"],["std::io::ErrorKind","has variant","TimedOut"],["std::io::ErrorKind","has variant","WriteZero"],["std::io::ErrorKind","has variant","Interrupted"],["std::io::ErrorKind","has variant","Other"],["std::io::ErrorKind","has variant","UnexpectedEof"],["ErrorKind::NotFound","has description","An entity was not found, often a file."],["ErrorKind::PermissionDenied","has description","The operation lacked the necessary privileges to complete."],["ErrorKind::ConnectionRefused","has description","The connection was refused by the remote server."],["ErrorKind::ConnectionReset","has description","The connection was reset by the remote server."],["ErrorKind::ConnectionAborted","has description","The connection was aborted (terminated) by the remote server."],["ErrorKind::NotConnected","has description","The network operation failed because it was not connected yet."],["ErrorKind::AddrInUse","has description","A socket address could not be bound because the address is already in use elsewhere."],["ErrorKind::AddrNotAvailable","has description","A nonexistent interface was requested or the requested address was not local."],["ErrorKind::BrokenPipe","has description","The operation failed because a pipe was closed."],["ErrorKind::AlreadyExists","has description","An entity already exists, often a file."],["ErrorKind::WouldBlock","has description","The operation needs to block to complete, but the blocking operation was requested to not occur."],["ErrorKind::InvalidInput","has description","A parameter was incorrect."],["ErrorKind::InvalidData","has description","Data not valid for the operation were encountered."],["ErrorKind::InvalidData","stable since","1.2.0"],["ErrorKind::TimedOut","has description","The I/O operation's timeout expired, causing it to be canceled."],["ErrorKind::WriteZero","has description","An error returned when an operation could not be completed because a call to write returned Ok(0)."],["ErrorKind::Interrupted","has description","This operation was interrupted."],["ErrorKind::Other","has description","Any I/O error not part of this list."],["ErrorKind::UnexpectedEof","has description","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."],["ErrorKind::UnexpectedEof","stable since","1.6.0"],["std::io::ErrorKind","implements","Debug"],["std::io::ErrorKind","implements","Clone"],["std::io::ErrorKind","implements","Eq"],["std::io::ErrorKind","implements","PartialEq"],["std::io::ErrorKind","implements","Copy"],["ErrorKind::fmt","has return type","std::fmt::Result"],["ErrorKind","used with","io::Error"],["ErrorKind","implements","PartialOrd"],["std::io::ErrorKind","implements","PartialOrd"],["ErrorKind::partial_cmp","is a","method"],["ErrorKind::partial_cmp","has argument","self"],["ErrorKind::partial_cmp","has argument","__arg_0"],["ErrorKind::partial_cmp","has return type","Option<Ordering>"],["ErrorKind::partial_cmp","has description","This method returns an ordering between self and other values if one exists."],["ErrorKind::lt","is a","method"],["ErrorKind::lt","has argument","self"],["ErrorKind::lt","has argument","other"],["ErrorKind::lt","has return type","bool"],["ErrorKind::lt","has description","This method tests less than (for self and other) and is used by the < operator."],["ErrorKind::le","is a","method"],["ErrorKind::le","has argument","self"],["ErrorKind::le","has argument","other"],["ErrorKind::le","has return type","bool"],["ErrorKind::le","has description","This method tests less than or equal to (for self and other) and is used by the <= operator."],["ErrorKind::gt","is a","method"],["ErrorKind::gt","has argument","self"],["ErrorKind::gt","has argument","other"],["ErrorKind::gt","has return type","bool"],["ErrorKind::gt","has description","This method tests greater than (for self and other) and is used by the > operator."],["ErrorKind::ge","is a","method"],["ErrorKind::ge","has argument","self"],["ErrorKind::ge","has argument","other"],["ErrorKind::ge","has return type","bool"],["ErrorKind::ge","has description","This method tests greater than or equal to (for self and other) and is used by the >= operator."],["std::io::ErrorKind","has description","A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."],["ErrorKind::InvalidData","has description","Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."],["ErrorKind::WriteZero","has description","An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."],["ErrorKind::UnexpectedEof","has description","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."],["std::io::ErrorKind","implements","Hash"],["std::io::ErrorKind::partial_cmp","is a","method"],["std::io::ErrorKind::partial_cmp","has argument","self"],["std::io::ErrorKind::partial_cmp","has argument","__arg_0"],["std::io::ErrorKind::partial_cmp","has return type","Option<Ordering>"],["std::io::ErrorKind::partial_cmp","has description","This method returns an ordering between self and other values if one exists."],["std::io::ErrorKind::lt","is a","method"],["std::io::ErrorKind::lt","has argument","self"],["std::io::ErrorKind::lt","has argument","other"],["std::io::ErrorKind::lt","has return type","bool"],["std::io::ErrorKind::lt","has description","This method tests less than (for self and other) and is used by the < operator."],["std::io::ErrorKind::le","is a","method"],["std::io::ErrorKind::le","has argument","self"],["std::io::ErrorKind::le","has argument","other"],["std::io::ErrorKind::le","has return type","bool"],["std::io::ErrorKind::le","has description","This method tests less than or equal to (for self and other) and is used by the <= operator."],["std::io::ErrorKind::gt","is a","method"],["std::io::ErrorKind::gt","has argument","self"],["std::io::ErrorKind::gt","has argument","other"],["std::io::ErrorKind::gt","has return type","bool"],["std::io::ErrorKind::gt","has description","This method tests greater than (for self and other) and is used by the > operator."],["std::io::ErrorKind::ge","is a","method"],["std::io::ErrorKind::ge","has argument","self"],["std::io::ErrorKind::ge","has argument","other"],["std::io::ErrorKind::ge","has return type","bool"],["std::io::ErrorKind::ge","has description","This method tests greater than or equal to (for self and other) and is used by the >= operator."],["std::io::ErrorKind","implements","Ord"],["ErrorKind::partial_cmp","has argument","other"],["std::io::ErrorKind::partial_cmp","has argument","other"],["ErrorKind::fmt","has argument","f"],["std::io::ErrorKind::fmt","has argument","f"],["std::io::ErrorKind::fmt","has return type","std::fmt::Result"],["ErrorKind::lt","has attribute","#[must_use]"],["ErrorKind::le","has attribute","#[must_use]"],["ErrorKind::gt","has attribute","#[must_use]"],["ErrorKind::ge","has attribute","#[must_use]"],["std::io::ErrorKind","implements","From<ErrorKind>"],["std::io::ErrorKind","implements","PartialEq<ErrorKind>"],["std::io::ErrorKind","implements","PartialOrd<ErrorKind>"],["std::io::ErrorKind","implements","StructuralEq"],["std::io::ErrorKind","implements","StructuralPartialEq"],["std::io::ErrorKind","implements","RefUnwindSafe"],["std::io::ErrorKind","implements","Unpin"],["std::io::ErrorKind","implements","UnwindSafe"],["std::io::ErrorKind","implements","Send"],["std::io::ErrorKind","implements","Sync"],["std::io::Error","implements","From<ErrorKind>"],["std::io","contains","IoSlice"],["std::io","contains","IoSliceMut"],["IoSlice","is a","struct"],["IoSlice","has description","A buffer type used with `Write::write_vectored`."],["IoSliceMut","is a","struct"],["IoSliceMut","has description","A buffer type used with `Read::read_vectored`."],["std::io::ErrorKind::lt","has attribute","#[must_use]"],["ErrorKind","has variant","ArgumentListTooLong"],["ErrorKind","has variant","CrossesDevices"],["ErrorKind","has variant","Deadlock"],["ErrorKind","has variant","DirectoryNotEmpty"],["ErrorKind","has variant","ExecutableFileBusy"],["ErrorKind","has variant","FileTooLarge"],["ErrorKind","has variant","FilesystemLoop"],["ErrorKind","has variant","FilesystemQuotaExceeded"],["ErrorKind","has variant","HostUnreachable"],["ErrorKind","has variant","InvalidFilename"],["ErrorKind","has variant","IsADirectory"],["ErrorKind","has variant","NetworkDown"],["ErrorKind","has variant","NetworkUnreachable"],["ErrorKind","has variant","NotADirectory"],["ErrorKind","has variant","NotSeekable"],["ErrorKind","has variant","OutOfMemory"],["ErrorKind","has variant","ReadOnlyFilesystem"],["ErrorKind","has variant","ResourceBusy"],["ErrorKind","has variant","StaleNetworkFileHandle"],["ErrorKind","has variant","StorageFull"],["ErrorKind","has variant","TooManyLinks"],["ErrorKind","has variant","Unsupported"],["ErrorKind","implements","Display"],["ErrorKind","implements","From<ErrorKind>"],["ErrorKind","implements","Hash"],["ErrorKind","implements","Ord"],["ErrorKind::AddrNotAvailable","has description","A directory was specified when a non-directory was expected."],["ErrorKind::DirectoryNotEmpty","has description","A non-empty directory was specified where an empty directory was expected."],["ErrorKind::ReadOnlyFilesystem","has description","The filesystem or storage medium is read-only."],["ErrorKind::FilesystemLoop","has description","Loop in the filesystem or too many symbolic links."],["ErrorKind::DirectoryNotEmpty","has attribute","unstable"],["ErrorKind::ReadOnlyFilesystem","has attribute","unstable"],["ErrorKind::FilesystemLoop","has attribute","unstable"],["ErrorKind::StaleNetworkFileHandle","has attribute","unstable"],["ErrorKind::ResourceBusy","has attribute","unstable"],["ErrorKind::FilesystemQuotaExceeded","has attribute","unstable"],["ErrorKind::NetworkDown","has attribute","unstable"],["ErrorKind::ArgumentListTooLong","has attribute","unstable"],["std::io::ErrorKind","implements","Display"],["std::io::ErrorKind","has variant","ArgumentListTooLong"],["std::io::ErrorKind","has variant","CrossesDevices"],["std::io::ErrorKind","has variant","Deadlock"],["std::io::ErrorKind","has variant","DirectoryNotEmpty"],["std::io::ErrorKind","has variant","ExecutableFileBusy"],["std::io::ErrorKind","has variant","FileTooLarge"],["std::io::ErrorKind","has variant","FilesystemLoop"],["std::io::ErrorKind","has variant","FilesystemQuotaExceeded"],["std::io::ErrorKind","has variant","HostUnreachable"],["std::io::ErrorKind","has variant","InvalidFilename"],["std::io::ErrorKind","has variant","IsADirectory"],["std::io::ErrorKind","has variant","NetworkDown"],["std::io::ErrorKind","has variant","NetworkUnreachable"],["std::io::ErrorKind","has variant","NotADirectory"],["std::io::ErrorKind","has variant","NotSeekable"],["std::io::ErrorKind","has variant","OutOfMemory"],["std::io::ErrorKind","has variant","ReadOnlyFilesystem"],["std::io::ErrorKind","has variant","ResourceBusy"],["std::io::ErrorKind","has variant","StaleNetworkFileHandle"],["std::io::ErrorKind","has variant","StorageFull"],["std::io::ErrorKind","has variant","TooManyLinks"],["std::io::ErrorKind","has variant","Unsupported"],["ErrorKind::Interrupted","has description","This operation was interrupted. Interrupted operations can typically be retried."],["ErrorKind::Other","has description","Any I/O error not part of this list. Users are encouraged to consult the platform documentation to identify possible errors."],["ErrorKind::AddrNotAvailable","has description","The filesystem object is, unexpectedly, a directory."],["ErrorKind::BrokenPipe","has description","A directory was specified where a non-directory was expected."],["ErrorKind::AlreadyExists","has description","The filesystem or storage medium is read-only, but a write operation was attempted."],["ErrorKind::WouldBlock","has description","The network operation failed because it was not connected yet."],["ErrorKind::InvalidInput","has description","A directory was specified when a non-directory was expected."],["std::io::ErrorKind::DirectoryNotEmpty","has description","A non-empty directory was specified where an empty directory was expected."],["std::io::ErrorKind::ReadOnlyFilesystem","has description","The filesystem or storage medium is read-only."],["std::io::ErrorKind::FilesystemLoop","has description","Loop in the filesystem or IO subsystem; often too many levels of symbolic links."],["std::io::ErrorKind::AddrNotAvailable","has description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind::ReadOnlyFilesystem","has description","The filesystem or storage medium is read-only, but a write operation was attempted."],["std::io::ErrorKind::StaleNetworkFileHandle","has description","Stale network file handle. With some network filesystems, an open file can be invalidated by the server."],["std::io::ErrorKind::InvalidInput","has description","A parameter was incorrect."],["std::io::ErrorKind::WriteZero","has description","An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."],["std::io::ErrorKind::ResourceBusy","has description","Resource is busy."],["std::io::ErrorKind::Deadlock","has description","Deadlock (avoided). A file locking operation would result in deadlock."],["std::io::ErrorKind::OutOfMemory","has description","An operation could not be completed, because it failed to allocate enough memory."],["std::io::ErrorKind::ArgumentListTooLong","has description","Program argument list too long."],["std::io::ErrorKind::CrossesDevices","has description","Cross-device or cross-filesystem (hard) link or rename."],["std::io::ErrorKind::FileTooLarge","has description","File larger than allowed or supported."],["std::io::ErrorKind::FilesystemQuotaExceeded","has description","Filesystem quota was exceeded."],["std::io::ErrorKind::HostUnreachable","has description","Host is unreachable."],["std::io::ErrorKind::InvalidFilename","has description","A filename was invalid."],["std::io::ErrorKind::IsADirectory","has description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind::NetworkDown","has description","Network is down."],["std::io::ErrorKind::NetworkUnreachable","has description","Network is unreachable."],["std::io::ErrorKind::NotADirectory","has description","A directory was specified when a non-directory was expected."],["std::io::ErrorKind::NotSeekable","has description","Seek on unseekable file."],["std::io::ErrorKind::TooManyLinks","has description","Too many (hard) links to the same filesystem object."],["std::io::ErrorKind::Unsupported","has description","This operation is unsupported on this platform."]],"startIndex":0,"endIndex":39000},{"triples":[["std::io::ErrorKind","implements","PartialEq"],["std::io::ErrorKind","implements","PartialOrd"],["std::io::ErrorKind","implements","Eq"],["std::io::ErrorKind","is a","enum"],["std::io::ErrorKind","belongs to module","io"],["std::io::ErrorKind","implements","Clone"],["&'_ mut F","implements","Future"],["&'_ mut R","implements","Read"],["&'_ mut W","implements","Write"],["std::io::ErrorKind","implements","Unpin"],["std::io::ErrorKind","implements","Send"],["std::io::ErrorKind","implements","Sync"],["std::io::ErrorKind","implements","UnwindSafe"],["std::io::ErrorKind","implements","RefUnwindSafe"],["BorrowMut::borrow_mut","has description","Mutably borrows from an owned value."],["ToOwned::to_owned","has description","Creates owned data from borrowed data, usually by cloning."],["Any::type_id","has description","Gets the TypeId of self."],["ToOwned::clone_into","has description","Uses borrowed data to replace owned data, usually by cloning."],["ErrorKind","implements","Hash"],["ErrorKind","implements","Ord"],["ErrorKind","implements","PartialEq"],["PartialOrd::gt","has argument","other"],["PartialOrd::gt","has return type","bool"],["PartialOrd::gt","has attribute","must_use"],["PartialOrd::gt","has description","This method tests greater than (for self and other) and is used by the > operator"],["PartialOrd::gt","belongs to module","cmp"],["std::io::ErrorKind","has variant","AddrInUse"],["std::io::ErrorKind","has variant","AddrNotAvailable"],["std::io::ErrorKind","has variant","AlreadyExists"],["std::io::ErrorKind","has variant","BrokenPipe"],["std::io::ErrorKind","has variant","ConnectionRefused"],["std::io::ErrorKind","has variant","ConnectionReset"],["std::io::ErrorKind","has variant","Interrupted"],["std::io::ErrorKind","has variant","InvalidData"],["std::io::ErrorKind","has variant","InvalidInput"],["std::io::ErrorKind","has variant","NotConnected"],["std::io::ErrorKind","has variant","NotFound"],["std::io::ErrorKind","has variant","Other"],["std::io::ErrorKind","has variant","PermissionDenied"],["std::io::ErrorKind","has variant","TimedOut"],["std::io::ErrorKind","has variant","UnexpectedEof"],["std::io::ErrorKind","has variant","WouldBlock"],["std::io::ErrorKind","has variant","WriteZero"],["std::io::ErrorKind::fmt","has argument","f"],["std::io::ErrorKind","implements","Hash"],["std::io::ErrorKind","implements","Ord"],["&'_ mut I","implements","Iterator"],["ErrorKind","implements","Eq"],["Hash","has return type","&mut __H"],["Hash","has argument","self"],["Hash","has argument","state"],["Hash","stable since","1.3.0"],["PartialEq","has return type","bool"],["PartialEq","has argument","other"],["ErrorKind","has attribute","unsafe"],["PartialOrd::gt","has argument","self"],["Any::into","has description","Performs the conversion."],["std::io::ErrorKind::gt","has argument","other"],["std::io::ErrorKind::gt","has return type","bool"],["std::io::ErrorKind::gt","has attribute","#[must_use]"],["std::io::ErrorKind","implements","From<ErrorKind>"],["impl<T, U> Into<U> for T","has description","Performs the conversion."],["impl<T> From<T> for T","has description","Returns the argument unchanged."],["impl<T> BorrowMut<T> for T","implements","BorrowMut"],["impl<T> Borrow<T> for T","implements","Borrow"],["impl<T, U> Into<U> for T","implements","Into"],["impl<T> From<T> for T","implements","From"],["impl<T> ToString for T","implements","ToString"],["impl<T> ToString for T","has description","Converts the given value to a String"],["TryFrom","has description","Performs the conversion when possible."],["TryInto","has description","Attempts to convert the value into another type."],["std::io::ErrorKind::Interrupted","has description","This operation was interrupted. Interrupted operations can typically be retried."],["std::io::ErrorKind::Other","has description","Any I/O error not part of this list. Users are encouraged to consult the platform documentation to identify possible errors."],["std::io::ErrorKind::AddrNotAvailable","has description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind::BrokenPipe","has description","A directory was specified where a non-directory was expected."],["std::io::ErrorKind::AlreadyExists","has description","The filesystem or storage medium is read-only, but a write operation was attempted."],["std::io::ErrorKind::WouldBlock","has description","The network operation failed because it was not connected yet."],["std::io::ErrorKind::InvalidInput","has description","A directory was specified when a non-directory was expected."],["std::io::ErrorKind::lt","has attribute","#[must_use]"],["std::io::ErrorKind::le","has attribute","#[must_use]"],["std::io::ErrorKind::ge","has attribute","#[must_use]"],["ToString::to_string","has description","Converts the given value to a String"],["TryFrom<U>","implements","TryFrom"],["TryInto<U>","implements","TryInto"],["T","implements","TryFrom<U>"],["T","implements","TryInto<U>"],["TryFrom::try_from","has argument","value"],["TryFrom::try_from","has return type","Result<T, Error>"],["TryInto::try_into","has return type","Result<U, Error>"],["ToString::to_string","has description","Converts the given value to a String."],["TryFrom","implements","TryFrom<U>"],["TryInto","implements","TryInto<U>"],["TryFrom::try_from","has return type","Result<T, <T as TryFrom<U>>::Error>"],["TryInto::try_into","has return type","Result<U, <U as TryFrom<T>>::Error>"]],"startIndex":44910,"endIndex":85386}],"changes_info_triples":[["ErrorKind","renamed to","std::io::ErrorKind"],["ErrorKind","adds feature","Display"],["ErrorKind","adds feature","Hash"],["ErrorKind","adds feature","Ord"],["ErrorKind","adds feature","From<ErrorKind>"],["ErrorKind::AddrNotAvailable","adds feature","A directory was specified when a non-directory was expected."],["ErrorKind::DirectoryNotEmpty","adds feature","A non-empty directory was specified where an empty directory was expected."],["ErrorKind::ReadOnlyFilesystem","adds feature","The filesystem or storage medium is read-only."],["ErrorKind::FilesystemLoop","adds feature","Loop in the filesystem or too many symbolic links."],["ToOwned::to_owned","renamed to","ToOwned::clone_into"],["ErrorKind::Interrupted","renamed to","std::io::ErrorKind::Interrupted"],["ErrorKind::Other","renamed to","std::io::ErrorKind::Other"],["ErrorKind::AddrNotAvailable","renamed to","std::io::ErrorKind::AddrNotAvailable"],["ErrorKind::BrokenPipe","renamed to","std::io::ErrorKind::BrokenPipe"],["ErrorKind::AlreadyExists","renamed to","std::io::ErrorKind::AlreadyExists"],["ErrorKind::WouldBlock","renamed to","std::io::ErrorKind::WouldBlock"],["ErrorKind::InvalidInput","renamed to","std::io::ErrorKind::InvalidInput"],["ErrorKind","removes feature","Copy"],["ErrorKind","adds feature","PartialEq<ErrorKind>"],["ErrorKind","adds feature","PartialOrd<ErrorKind>"],["ErrorKind","adds feature","StructuralEq"],["ErrorKind","adds feature","StructuralPartialEq"],["ErrorKind","adds feature","RefUnwindSafe"],["ErrorKind","adds feature","Unpin"],["ErrorKind","adds feature","UnwindSafe"],["ErrorKind","adds feature","Send"],["ErrorKind","adds feature","Sync"],["std::io::ErrorKind","adds feature","ArgumentListTooLong"],["std::io::ErrorKind","adds feature","CrossesDevices"],["std::io::ErrorKind","adds feature","Deadlock"],["std::io::ErrorKind","adds feature","DirectoryNotEmpty"],["std::io::ErrorKind","adds feature","ExecutableFileBusy"],["std::io::ErrorKind","adds feature","FileTooLarge"],["std::io::ErrorKind","adds feature","FilesystemLoop"],["std::io::ErrorKind","adds feature","FilesystemQuotaExceeded"],["std::io::ErrorKind","adds feature","HostUnreachable"],["std::io::ErrorKind","adds feature","InvalidFilename"],["std::io::ErrorKind","adds feature","IsADirectory"],["std::io::ErrorKind","adds feature","NetworkDown"],["std::io::ErrorKind","adds feature","NetworkUnreachable"],["std::io::ErrorKind","adds feature","NotADirectory"],["std::io::ErrorKind","adds feature","NotSeekable"],["std::io::ErrorKind","adds feature","OutOfMemory"],["std::io::ErrorKind","adds feature","ReadOnlyFilesystem"],["std::io::ErrorKind","adds feature","ResourceBusy"],["std::io::ErrorKind","adds feature","StaleNetworkFileHandle"],["std::io::ErrorKind","adds feature","StorageFull"],["std::io::ErrorKind","adds feature","TooManyLinks"],["std::io::ErrorKind","adds feature","Unsupported"],["std::io::ErrorKind","adds feature","Display"],["std::io::ErrorKind","adds feature","Hash"],["std::io::ErrorKind","adds feature","Ord"],["std::io::ErrorKind","adds feature","From<ErrorKind>"],["std::io::ErrorKind","adds feature","PartialEq<ErrorKind>"],["std::io::ErrorKind","adds feature","PartialOrd<ErrorKind>"],["std::io::ErrorKind","adds feature","StructuralEq"],["std::io::ErrorKind","adds feature","StructuralPartialEq"],["std::io::ErrorKind","adds feature","RefUnwindSafe"],["std::io::ErrorKind","adds feature","Unpin"],["std::io::ErrorKind","adds feature","UnwindSafe"],["std::io::ErrorKind","adds feature","Send"],["std::io::ErrorKind","adds feature","Sync"],["std::io::ErrorKind","removes feature","BrokenPipe"],["std::io::ErrorKind","removes feature","AlreadyExists"],["std::io::ErrorKind","removes feature","WouldBlock"],["std::io::ErrorKind","removes feature","InvalidData"],["std::io::ErrorKind","removes feature","TimedOut"],["std::io::ErrorKind","removes feature","Interrupted"],["std::io::ErrorKind","removes feature","Other"],["std::io::ErrorKind","removes feature","UnexpectedEof"],["ErrorKind::AddrNotAvailable","updates description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind","removes feature","PartialEq"],["std::io::ErrorKind","removes feature","PartialOrd"],["ErrorKind::fmt","renames argument","__arg_0 to f"],["ErrorKind::fmt","changes return type to","std::fmt::Result"]],"model":"deepseek-r1-250120"}