{"create_time":"2025-04-03T20:46:19.636Z","id":"f07320fe-63db-4313-a04d-ee8a67c07ff4","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_io-enum_ErrorKind\\merged_034923a9-c06c-490d-969b-46e78d6492fd.json","relations":["belongs to module","has argument","has attribute","has description","has full name","has return type","has variant","implements","is a","stable since","used with"],"delete_triples":[{"triples":[],"startIndex":15193,"endIndex":55643},{"triples":[["ErrorKind::AddrNotAvailable","has description","A nonexistent interface was requested or the requested address was not local."],["ErrorKind::BrokenPipe","has description","The operation failed because a pipe was closed."],["ErrorKind::AlreadyExists","has description","An entity already exists, often a file."],["ErrorKind::WouldBlock","has description","The operation needs to block to complete, but the blocking operation was requested to not occur."],["ErrorKind::InvalidInput","has description","A parameter was incorrect."],["ErrorKind::InvalidData","has description","Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."],["ErrorKind::TimedOut","has description","The I/O operation's timeout expired, causing it to be canceled."],["ErrorKind::Interrupted","has description","This operation was interrupted. Interrupted operations can typically be retried."],["ErrorKind::Other","has description","Any I/O error not part of this list."],["ErrorKind::UnexpectedEof","has description","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."]],"startIndex":22634,"endIndex":63460},{"triples":[["ErrorKind::fmt","has return type","Result"],["ErrorKind::fmt","has argument","__arg_0"]],"startIndex":35714,"endIndex":76427},{"triples":[["std::io::ErrorKind","implements","PartialEq"],["std::io::ErrorKind","implements","PartialOrd"]],"startIndex":50737,"endIndex":91359},{"triples":[],"startIndex":60834,"endIndex":101905},{"triples":[["ToOwned::to_owned","has description","Creates owned data from borrowed data, usually by cloning."],["Any::into","has description","Performs the conversion."],["ToOwned::clone_into","has description","Uses borrowed data to replace owned data, usually by cloning."]],"startIndex":68905,"endIndex":92641}],"add_triples":[{"triples":[["std::io::ErrorKind","has variant","ArgumentListTooLong"],["std::io::ErrorKind","has variant","CrossesDevices"],["std::io::ErrorKind","has variant","Deadlock"],["std::io::ErrorKind","has variant","DirectoryNotEmpty"],["std::io::ErrorKind","has variant","ExecutableFileBusy"],["std::io::ErrorKind","has variant","FileTooLarge"],["std::io::ErrorKind","has variant","FilesystemLoop"],["std::io::ErrorKind","has variant","FilesystemQuotaExceeded"],["std::io::ErrorKind","has variant","HostUnreachable"],["std::io::ErrorKind","has variant","InvalidFilename"],["std::io::ErrorKind","has variant","IsADirectory"],["std::io::ErrorKind","has variant","NetworkDown"],["std::io::ErrorKind","has variant","NetworkUnreachable"],["std::io::ErrorKind","has variant","NotADirectory"],["std::io::ErrorKind","has variant","NotSeekable"],["std::io::ErrorKind","has variant","OutOfMemory"],["std::io::ErrorKind","has variant","ReadOnlyFilesystem"],["std::io::ErrorKind","has variant","ResourceBusy"],["std::io::ErrorKind","has variant","StaleNetworkFileHandle"],["std::io::ErrorKind","has variant","StorageFull"],["std::io::ErrorKind","has variant","TooManyLinks"],["std::io::ErrorKind","has variant","Unsupported"],["std::io::ErrorKind","implements","Display"],["std::io::ErrorKind","implements","Hash"],["std::io::ErrorKind","implements","Ord"],["std::io::ErrorKind","implements","From<ErrorKind>"],["std::io::ErrorKind","implements","PartialEq<ErrorKind>"],["std::io::ErrorKind","implements","PartialOrd<ErrorKind>"],["std::io::ErrorKind","implements","StructuralEq"],["std::io::ErrorKind","implements","StructuralPartialEq"],["std::io::ErrorKind","implements","RefUnwindSafe"],["std::io::ErrorKind","implements","Unpin"],["std::io::ErrorKind","implements","UnwindSafe"],["std::io::ErrorKind","implements","Send"],["std::io::ErrorKind","implements","Sync"]],"startIndex":15193,"endIndex":55643},{"triples":[["std::io::ErrorKind::AddrNotAvailable","has description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind::DirectoryNotEmpty","has description","A non-empty directory was specified where an empty directory was expected."],["std::io::ErrorKind::ReadOnlyFilesystem","has description","The filesystem or storage medium is read-only, but a write operation was attempted."],["std::io::ErrorKind::FilesystemLoop","has description","Loop in the filesystem or IO subsystem; often too many levels of symbolic links."],["std::io::ErrorKind::StaleNetworkFileHandle","has description","Stale network file handle. With some network filesystems, an open file can be invalidated by the server."],["std::io::ErrorKind::InvalidInput","has description","A parameter was incorrect."],["std::io::ErrorKind::WriteZero","has description","An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."],["std::io::ErrorKind::ResourceBusy","has description","Resource is busy."],["std::io::ErrorKind::Deadlock","has description","Deadlock (avoided). A file locking operation would result in deadlock."],["std::io::ErrorKind::OutOfMemory","has description","An operation could not be completed, because it failed to allocate enough memory."],["std::io::ErrorKind::ArgumentListTooLong","has description","Program argument list too long."],["std::io::ErrorKind::CrossesDevices","has description","Cross-device or cross-filesystem (hard) link or rename."],["std::io::ErrorKind::FileTooLarge","has description","File larger than allowed or supported."],["std::io::ErrorKind::FilesystemQuotaExceeded","has description","Filesystem quota was exceeded."],["std::io::ErrorKind::HostUnreachable","has description","Host is unreachable."],["std::io::ErrorKind::InvalidFilename","has description","A filename was invalid."],["std::io::ErrorKind::IsADirectory","has description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind::NetworkDown","has description","Network is down."],["std::io::ErrorKind::NetworkUnreachable","has description","Network is unreachable."],["std::io::ErrorKind::NotADirectory","has description","A directory was specified when a non-directory was expected."],["std::io::ErrorKind::NotSeekable","has description","Seek on unseekable file."],["std::io::ErrorKind::TooManyLinks","has description","Too many (hard) links to the same filesystem object."],["std::io::ErrorKind::Unsupported","has description","This operation is unsupported on this platform."]],"startIndex":22634,"endIndex":63460},{"triples":[["std::io::ErrorKind::fmt","has return type","std::fmt::Result"],["ErrorKind::fmt","has argument","f"],["std::io::ErrorKind::fmt","has argument","f"]],"startIndex":35714,"endIndex":76427},{"triples":[],"startIndex":50737,"endIndex":91359},{"triples":[],"startIndex":60834,"endIndex":101905},{"triples":[["ToString::to_string","has description","Converts the given value to a String."],["TryFrom","implements","TryFrom<U>"],["TryInto","implements","TryInto<U>"],["T","implements","TryFrom<U>"],["T","implements","TryInto<U>"],["TryFrom::try_from","has argument","value"],["TryFrom::try_from","has return type","Result<T, <T as TryFrom<U>>::Error>"],["TryInto::try_into","has return type","Result<U, <U as TryFrom<T>>::Error>"]],"startIndex":68905,"endIndex":92641}],"metrics":{"escapeCount":0,"costTime":701764,"totalUsage":{"prompt_tokens":109679,"completion_tokens":22256,"cached_tokens":0,"reasoning_tokens":18022},"chunkLength":6,"chunksInfo":[{"chunkIndex":0,"strLength":40450,"costTime":63612},{"chunkIndex":1,"strLength":40826,"costTime":252492},{"chunkIndex":2,"strLength":40713,"costTime":49160},{"chunkIndex":3,"strLength":40622,"costTime":191399},{"chunkIndex":4,"strLength":41071,"costTime":100581},{"chunkIndex":5,"strLength":23736,"costTime":44520}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::io::ErrorKind","adds feature","ArgumentListTooLong"],["std::io::ErrorKind","adds feature","CrossesDevices"],["std::io::ErrorKind","adds feature","Deadlock"],["std::io::ErrorKind","adds feature","DirectoryNotEmpty"],["std::io::ErrorKind","adds feature","ExecutableFileBusy"],["std::io::ErrorKind","adds feature","FileTooLarge"],["std::io::ErrorKind","adds feature","FilesystemLoop"],["std::io::ErrorKind","adds feature","FilesystemQuotaExceeded"],["std::io::ErrorKind","adds feature","HostUnreachable"],["std::io::ErrorKind","adds feature","InvalidFilename"],["std::io::ErrorKind","adds feature","IsADirectory"],["std::io::ErrorKind","adds feature","NetworkDown"],["std::io::ErrorKind","adds feature","NetworkUnreachable"],["std::io::ErrorKind","adds feature","NotADirectory"],["std::io::ErrorKind","adds feature","NotSeekable"],["std::io::ErrorKind","adds feature","OutOfMemory"],["std::io::ErrorKind","adds feature","ReadOnlyFilesystem"],["std::io::ErrorKind","adds feature","ResourceBusy"],["std::io::ErrorKind","adds feature","StaleNetworkFileHandle"],["std::io::ErrorKind","adds feature","StorageFull"],["std::io::ErrorKind","adds feature","TooManyLinks"],["std::io::ErrorKind","adds feature","Unsupported"],["std::io::ErrorKind","adds feature","Display"],["std::io::ErrorKind","adds feature","Hash"],["std::io::ErrorKind","adds feature","Ord"],["std::io::ErrorKind","adds feature","From<ErrorKind>"],["std::io::ErrorKind","adds feature","PartialEq<ErrorKind>"],["std::io::ErrorKind","adds feature","PartialOrd<ErrorKind>"],["std::io::ErrorKind","adds feature","StructuralEq"],["std::io::ErrorKind","adds feature","StructuralPartialEq"],["std::io::ErrorKind","adds feature","RefUnwindSafe"],["std::io::ErrorKind","adds feature","Unpin"],["std::io::ErrorKind","adds feature","UnwindSafe"],["std::io::ErrorKind","adds feature","Send"],["std::io::ErrorKind","adds feature","Sync"],["std::io::ErrorKind","removes feature","BrokenPipe"],["std::io::ErrorKind","removes feature","AlreadyExists"],["std::io::ErrorKind","removes feature","WouldBlock"],["std::io::ErrorKind","removes feature","InvalidData"],["std::io::ErrorKind","removes feature","TimedOut"],["std::io::ErrorKind","removes feature","Interrupted"],["std::io::ErrorKind","removes feature","Other"],["std::io::ErrorKind","removes feature","UnexpectedEof"],["ErrorKind::AddrNotAvailable","updates description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind","removes feature","PartialEq"],["std::io::ErrorKind","removes feature","PartialOrd"],["ErrorKind::fmt","renames argument","__arg_0 to f"],["ErrorKind::fmt","changes return type to","std::fmt::Result"]]}