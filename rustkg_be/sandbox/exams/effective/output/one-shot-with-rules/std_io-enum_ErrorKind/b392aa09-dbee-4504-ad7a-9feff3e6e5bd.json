{"create_time":"2025-04-03T20:44:36.119Z","id":"b392aa09-dbee-4504-ad7a-9feff3e6e5bd","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_io-enum_ErrorKind\\merged_034923a9-c06c-490d-969b-46e78d6492fd.json","relations":["belongs to module","has argument","has attribute","has description","has full name","has return type","has variant","implements","is a","stable since","used with"],"delete_triples":[{"triples":[],"startIndex":15193,"endIndex":55643},{"triples":[["ErrorKind::AddrNotAvailable","has description","A nonexistent interface was requested or the requested address was not local."],["ErrorKind::BrokenPipe","has description","The operation failed because a pipe was closed."],["ErrorKind::AlreadyExists","has description","An entity already exists, often a file."],["ErrorKind::WouldBlock","has description","The operation needs to block to complete, but the blocking operation was requested to not occur."],["ErrorKind::InvalidInput","has description","A parameter was incorrect."]],"startIndex":22634,"endIndex":63460},{"triples":[["ErrorKind::fmt","has return type","Result"],["std::io::ErrorKind::fmt","has return type","std::fmt::Result"]],"startIndex":35714,"endIndex":76427},{"triples":[["std::io::ErrorKind::fmt","has return type","Result"]],"startIndex":50737,"endIndex":91359},{"triples":[["&'_ mut F","implements","Future"],["&'_ mut R","implements","Read"],["&'_ mut W","implements","Write"],["&'_ mut I","implements","Iterator"]],"startIndex":60834,"endIndex":101905},{"triples":[["ToOwned::to_owned","has description","Creates owned data from borrowed data, usually by cloning."]],"startIndex":68905,"endIndex":92641}],"add_triples":[{"triples":[["ErrorKind","has variant","ArgumentListTooLong"],["ErrorKind","has variant","CrossesDevices"],["ErrorKind","has variant","Deadlock"],["ErrorKind","has variant","DirectoryNotEmpty"],["ErrorKind","has variant","ExecutableFileBusy"],["ErrorKind","has variant","FileTooLarge"],["ErrorKind","has variant","FilesystemLoop"],["ErrorKind","has variant","FilesystemQuotaExceeded"],["ErrorKind","has variant","HostUnreachable"],["ErrorKind","has variant","InvalidFilename"],["ErrorKind","has variant","IsADirectory"],["ErrorKind","has variant","NetworkDown"],["ErrorKind","has variant","NetworkUnreachable"],["ErrorKind","has variant","NotADirectory"],["ErrorKind","has variant","NotSeekable"],["ErrorKind","has variant","OutOfMemory"],["ErrorKind","has variant","ReadOnlyFilesystem"],["ErrorKind","has variant","ResourceBusy"],["ErrorKind","has variant","StaleNetworkFileHandle"],["ErrorKind","has variant","StorageFull"],["ErrorKind","has variant","TooManyLinks"],["ErrorKind","has variant","Unsupported"],["ErrorKind","implements","Display"],["ErrorKind","implements","From<ErrorKind>"],["ErrorKind","implements","Hash"],["ErrorKind","implements","Ord"]],"startIndex":15193,"endIndex":55643},{"triples":[["ErrorKind::AddrNotAvailable","has description","A directory was specified when a non-directory was expected."],["ErrorKind::DirectoryNotEmpty","has description","A non-empty directory was specified where an empty directory was expected."],["ErrorKind::ReadOnlyFilesystem","has description","The filesystem or storage medium is read-only."],["ErrorKind::FilesystemLoop","has description","Loop in the filesystem or too many symbolic links."],["ErrorKind::DirectoryNotEmpty","has attribute","unstable"],["ErrorKind::ReadOnlyFilesystem","has attribute","unstable"],["ErrorKind::FilesystemLoop","has attribute","unstable"],["ErrorKind::StaleNetworkFileHandle","has attribute","unstable"],["ErrorKind::ResourceBusy","has attribute","unstable"],["ErrorKind::FilesystemQuotaExceeded","has attribute","unstable"],["ErrorKind::NetworkDown","has attribute","unstable"],["ErrorKind::ArgumentListTooLong","has attribute","unstable"]],"startIndex":22634,"endIndex":63460},{"triples":[["std::io::ErrorKind","implements","Display"],["std::io::ErrorKind","implements","Hash"],["std::io::ErrorKind","implements","Ord"],["std::io::ErrorKind","has variant","ArgumentListTooLong"],["std::io::ErrorKind","has variant","CrossesDevices"],["std::io::ErrorKind","has variant","Deadlock"],["std::io::ErrorKind","has variant","DirectoryNotEmpty"],["std::io::ErrorKind","has variant","ExecutableFileBusy"],["std::io::ErrorKind","has variant","FileTooLarge"],["std::io::ErrorKind","has variant","FilesystemLoop"],["std::io::ErrorKind","has variant","FilesystemQuotaExceeded"],["std::io::ErrorKind","has variant","HostUnreachable"],["std::io::ErrorKind","has variant","InvalidFilename"],["std::io::ErrorKind","has variant","IsADirectory"],["std::io::ErrorKind","has variant","NetworkDown"],["std::io::ErrorKind","has variant","NetworkUnreachable"],["std::io::ErrorKind","has variant","NotADirectory"],["std::io::ErrorKind","has variant","NotSeekable"],["std::io::ErrorKind","has variant","OutOfMemory"],["std::io::ErrorKind","has variant","ReadOnlyFilesystem"],["std::io::ErrorKind","has variant","ResourceBusy"],["std::io::ErrorKind","has variant","StaleNetworkFileHandle"],["std::io::ErrorKind","has variant","StorageFull"],["std::io::ErrorKind","has variant","TooManyLinks"],["std::io::ErrorKind","has variant","Unsupported"],["ErrorKind::fmt","has argument","f"],["std::io::ErrorKind::fmt","has argument","f"]],"startIndex":35714,"endIndex":76427},{"triples":[["std::io::ErrorKind::gt","has argument","other"],["std::io::ErrorKind::gt","has return type","bool"],["std::io::ErrorKind::gt","has attribute","#[must_use]"],["std::io::ErrorKind","implements","From<ErrorKind>"]],"startIndex":50737,"endIndex":91359},{"triples":[["BorrowMut::borrow_mut","has description","Mutably borrows from an owned value."],["impl<T, U> Into<U> for T","has description","Performs the conversion."],["impl<T> From<T> for T","has description","Returns the argument unchanged."],["ToOwned::clone_into","has description","Uses borrowed data to replace owned data, usually by cloning."],["impl<T> BorrowMut<T> for T","implements","BorrowMut"],["impl<T> Borrow<T> for T","implements","Borrow"],["impl<T, U> Into<U> for T","implements","Into"],["impl<T> From<T> for T","implements","From"]],"startIndex":60834,"endIndex":101905},{"triples":[["impl<T> ToString for T","implements","ToString"],["impl<T> ToString for T","has description","Converts the given value to a String"],["TryFrom","has description","Performs the conversion when possible."],["TryInto","has description","Attempts to convert the value into another type."]],"startIndex":68905,"endIndex":92641}],"metrics":{"escapeCount":0,"costTime":597509,"totalUsage":{"prompt_tokens":107536,"completion_tokens":18771,"cached_tokens":0,"reasoning_tokens":16016},"chunkLength":6,"chunksInfo":[{"chunkIndex":0,"strLength":40450,"costTime":74636},{"chunkIndex":1,"strLength":40826,"costTime":184718},{"chunkIndex":2,"strLength":40713,"costTime":153750},{"chunkIndex":3,"strLength":40622,"costTime":103446},{"chunkIndex":4,"strLength":41071,"costTime":46493},{"chunkIndex":5,"strLength":23736,"costTime":34466}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["ErrorKind","renamed to","std::io::ErrorKind"],["ErrorKind","adds feature","Display"],["ErrorKind","adds feature","Hash"],["ErrorKind","adds feature","Ord"],["ErrorKind","adds feature","From<ErrorKind>"],["ErrorKind::AddrNotAvailable","adds feature","A directory was specified when a non-directory was expected."],["ErrorKind::DirectoryNotEmpty","adds feature","A non-empty directory was specified where an empty directory was expected."],["ErrorKind::ReadOnlyFilesystem","adds feature","The filesystem or storage medium is read-only."],["ErrorKind::FilesystemLoop","adds feature","Loop in the filesystem or too many symbolic links."],["ToOwned::to_owned","renamed to","ToOwned::clone_into"]]}