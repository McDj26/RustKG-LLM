{"create_time":"2025-04-04T14:25:00.450Z","id":"6105f768-0772-4926-9509-7a7dbb3f7812","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.70-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_io-enum_ErrorKind\\merged_b392aa09-dbee-4504-ad7a-9feff3e6e5bd.json","relations":["belongs to module","has argument","has attribute","has description","has full name","has return type","has variant","implements","is a","stable since","used with"],"delete_triples":[{"triples":[["ErrorKind::AddrNotAvailable","has description","A nonexistent interface was requested or the requested address was not local."],["ErrorKind::AlreadyExists","has description","An entity already exists, often a file."],["ErrorKind::BrokenPipe","has description","The operation failed because a pipe was closed."],["ErrorKind::IsADirectory","has description","A directory was specified when a non-directory was expected."]],"startIndex":24940,"endIndex":65007},{"triples":[["std::io::ErrorKind::AddrNotAvailable","has description","A nonexistent interface was requested or the requested address was not local."],["std::io::ErrorKind::AlreadyExists","has description","An entity already exists, often a file."],["std::io::ErrorKind::BrokenPipe","has description","The operation failed because a pipe was closed."],["std::io::ErrorKind::IsADirectory","has description","A directory was specified when a non-directory was expected."]],"startIndex":50616,"endIndex":90649},{"triples":[],"startIndex":73647,"endIndex":106014}],"add_triples":[{"triples":[["ErrorKind::AddrNotAvailable","has description","The filesystem object is, unexpectedly, a directory."],["ErrorKind::AlreadyExists","has description","The filesystem or storage medium is read-only, but a write operation was attempted."],["ErrorKind::BrokenPipe","has description","A directory was specified where a non-directory was expected."],["ErrorKind::IsADirectory","has description","The filesystem object is, unexpectedly, a directory. A directory was specified when a non-directory was expected."],["ErrorKind::NotConnected","has description","The network operation failed because it was not connected yet."],["ErrorKind::WouldBlock","has description","The operation needs to block to complete, but the blocking operation was requested to not occur."],["ErrorKind::DirectoryNotEmpty","has attribute","unstable"],["ErrorKind::ReadOnlyFilesystem","has attribute","unstable"],["ErrorKind::FilesystemLoop","has attribute","unstable"],["ErrorKind::StaleNetworkFileHandle","has attribute","unstable"],["ErrorKind::ResourceBusy","has attribute","unstable"],["ErrorKind::FilesystemQuotaExceeded","has attribute","unstable"],["ErrorKind::NetworkDown","has attribute","unstable"],["ErrorKind::ArgumentListTooLong","has attribute","unstable"]],"startIndex":24940,"endIndex":65007},{"triples":[["std::io::ErrorKind::AddrNotAvailable","has description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind::AlreadyExists","has description","The filesystem or storage medium is read-only, but a write operation was attempted."],["std::io::ErrorKind::BrokenPipe","has description","A directory was specified where a non-directory was expected."],["std::io::ErrorKind::IsADirectory","has description","The filesystem object is, unexpectedly, a directory. A directory was specified when a non-directory was expected."],["std::io::ErrorKind::NotConnected","has description","The network operation failed because it was not connected yet."],["std::io::ErrorKind::WouldBlock","has description","The operation needs to block to complete, but the blocking operation was requested to not occur."],["std::io::ErrorKind","has variant","DirectoryNotEmpty"],["std::io::ErrorKind::DirectoryNotEmpty","has attribute","unstable"],["std::io::ErrorKind","has variant","ReadOnlyFilesystem"],["std::io::ErrorKind::ReadOnlyFilesystem","has attribute","unstable"],["std::io::ErrorKind","has variant","FilesystemLoop"],["std::io::ErrorKind::FilesystemLoop","has attribute","unstable"],["std::io::ErrorKind","has variant","StaleNetworkFileHandle"],["std::io::ErrorKind::StaleNetworkFileHandle","has attribute","unstable"],["std::io::ErrorKind","has variant","ResourceBusy"],["std::io::ErrorKind::ResourceBusy","has attribute","unstable"],["std::io::ErrorKind","has variant","FilesystemQuotaExceeded"],["std::io::ErrorKind::FilesystemQuotaExceeded","has attribute","unstable"],["std::io::ErrorKind","has variant","NetworkDown"],["std::io::ErrorKind::NetworkDown","has attribute","unstable"],["std::io::ErrorKind","has variant","ArgumentListTooLong"],["std::io::ErrorKind::ArgumentListTooLong","has attribute","unstable"]],"startIndex":50616,"endIndex":90649},{"triples":[["std::io::ErrorKind","implements","Copy"],["std::io::ErrorKind","implements","Eq"],["std::io::ErrorKind","implements","StructuralEq"],["std::io::ErrorKind","implements","StructuralPartialEq"]],"startIndex":73647,"endIndex":106014}],"metrics":{"escapeCount":0,"costTime":610949,"totalUsage":{"prompt_tokens":51185,"completion_tokens":15881,"cached_tokens":0,"reasoning_tokens":14138},"chunkLength":3,"chunksInfo":[{"chunkIndex":0,"strLength":40067,"costTime":57738},{"chunkIndex":1,"strLength":40033,"costTime":295563},{"chunkIndex":2,"strLength":32367,"costTime":257648}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["ErrorKind::AddrNotAvailable","renamed to","std::io::ErrorKind::AddrNotAvailable"],["ErrorKind::AlreadyExists","renamed to","std::io::ErrorKind::AlreadyExists"],["ErrorKind::BrokenPipe","renamed to","std::io::ErrorKind::BrokenPipe"],["ErrorKind::IsADirectory","renamed to","std::io::ErrorKind::IsADirectory"],["std::io::ErrorKind","adds variant","DirectoryNotEmpty"],["std::io::ErrorKind","adds variant","ReadOnlyFilesystem"],["std::io::ErrorKind","adds variant","FilesystemLoop"],["std::io::ErrorKind","adds variant","StaleNetworkFileHandle"],["std::io::ErrorKind","adds variant","ResourceBusy"],["std::io::ErrorKind","adds variant","FilesystemQuotaExceeded"],["std::io::ErrorKind","adds variant","NetworkDown"],["std::io::ErrorKind","adds variant","ArgumentListTooLong"],["std::io::ErrorKind","adds implementation","Copy"],["std::io::ErrorKind","adds implementation","Eq"],["std::io::ErrorKind","adds implementation","StructuralEq"],["std::io::ErrorKind","adds implementation","StructuralPartialEq"]]}