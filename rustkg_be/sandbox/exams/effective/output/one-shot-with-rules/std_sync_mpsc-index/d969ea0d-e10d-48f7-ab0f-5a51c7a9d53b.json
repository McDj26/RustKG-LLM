{"create_time":"2025-04-04T13:35:31.943Z","id":"d969ea0d-e10d-48f7-ab0f-5a51c7a9d53b","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.40-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/mpsc/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_sync_mpsc-index\\merged_246daa25-992b-432d-82b9-59fe5bcad570.json","relations":["associated with","contains","has attribute","has description","has full name","has method","has source code","is a","stability","stable since"],"delete_triples":[{"triples":[["Weak","has description","A version of [`Arc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Arc`]`<T>>`."],["Handle","has attribute","Experimental"],["Select","has attribute","Experimental"],["std::sync::mpsc","has source code","src/std/sync/mpsc/mod.rs.html#11-3130"],["IntoIter","has description","An owning iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["Iter","has description","An iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["Receiver","has description","The receiving-half of Rust's channel type. This half can only be owned by one thread."]],"startIndex":23472,"endIndex":46116}],"add_triples":[{"triples":[["Weak","has description","A version of [`Arc`] that holds a non-owning reference to the managed allocation. The allocation is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Arc`]`<T>>`."],["std::sync::mpsc","has source code","src/std/sync/mpsc/mod.rs.html#3-3046"],["IntoIter","has description","An owning iterator over messages on a Receiver, created by Receiver::into_iter."],["Iter","has description","An iterator over messages on a Receiver, created by iter."],["Receiver","has description","The receiving half of Rust's channel (or sync_channel) type. This half can only be owned by one thread."]],"startIndex":23472,"endIndex":46116}],"metrics":{"escapeCount":0,"costTime":150955,"totalUsage":{"prompt_tokens":10756,"completion_tokens":3849,"cached_tokens":0,"reasoning_tokens":3346},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":22644,"costTime":150955}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["Handle","removes attribute","Experimental"],["Select","removes attribute","Experimental"]]}