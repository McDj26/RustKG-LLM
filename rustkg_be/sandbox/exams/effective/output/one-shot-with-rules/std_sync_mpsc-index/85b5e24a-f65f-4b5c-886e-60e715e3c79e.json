{"create_time":"2025-04-04T13:43:37.349Z","id":"85b5e24a-f65f-4b5c-886e-60e715e3c79e","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/mpsc/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_sync_mpsc-index\\merged_8292345c-37c1-421c-87e5-a8a5f27df5a6.json","relations":["associated with","contains","has attribute","has description","has full name","has method","has source code","is a","stability","stable since"],"delete_triples":[{"triples":[["std::sync::mpsc","has source code","src/std/up/src/libstd/sync/mpsc/mod.rs.html#11-2247"],["Receiver","has description","The receiving-half of Rust's channel type. This half can only be owned by one thread"],["Sender","has description","The sending-half of Rust's asynchronous channel type. This half can only be owned by one thread, but it can be cloned to send to other threads."],["Handle","stability","Unstable"],["Select","stability","Unstable"],["IntoIter","has description","An owning iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["Iter","has description","An iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["TryIter","has description","An iterator that attempts to yield all pending values for a Receiver, created by try_iter."]],"startIndex":21900,"endIndex":61981},{"triples":[["sync_channel","has description","Creates a new synchronous, bounded channel."]],"startIndex":23452,"endIndex":26342}],"add_triples":[{"triples":[["std::sync::mpsc","has source code","src/std/sync/mpsc/mod.rs.html#1-1626"],["Receiver","has description","The receiving half of Rust's channel (or sync_channel) type. This half can only be owned by one thread."],["Sender","has description","The sending-half of Rust's asynchronous channel type (using the channel). This half can only be owned by one thread, but it can be cloned to send to other threads."],["Handle","stability","Experimental"],["Select","stability","Experimental"],["IntoIter","has description","An owning iterator over messages on a Receiver, created by Receiver::into_iter."],["Iter","has description","An iterator over messages on a Receiver, created by iter."],["TryIter","has description","An iterator that attempts to yield all pending values for a Receiver, created by the try_iter method."]],"startIndex":21900,"endIndex":61981},{"triples":[["sync_channel","has description","Creates a new synchronous, bounded channel. All data sent on the SyncSender will become available on the Receiver in the same order as it was sent. Like asynchronous channels, the Receiver will block until a message becomes available. sync_channel differs greatly in the semantics of the sender, however."]],"startIndex":23452,"endIndex":26342}],"metrics":{"escapeCount":0,"costTime":368813,"totalUsage":{"prompt_tokens":22964,"completion_tokens":9607,"cached_tokens":0,"reasoning_tokens":8482},"chunkLength":2,"chunksInfo":[{"chunkIndex":0,"strLength":40081,"costTime":189206},{"chunkIndex":1,"strLength":2890,"costTime":179607}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["Handle","stability changed to","Experimental"],["Select","stability changed to","Experimental"],["Receiver","description updated","The receiving half of Rust's channel (or sync_channel) type. This half can only be owned by one thread."],["Sender","description updated","The sending-half of Rust's asynchronous channel type (using the channel). This half can only be owned by one thread, but it can be cloned to send to other threads."],["IntoIter","description updated","An owning iterator over messages on a Receiver, created by Receiver::into_iter."],["Iter","description updated","An iterator over messages on a Receiver, created by iter."],["TryIter","description updated","An iterator that attempts to yield all pending values for a Receiver, created by the try_iter method."],["sync_channel","description updated","Creates a new synchronous, bounded channel. All data sent on the SyncSender will become available on the Receiver in the same order as it was sent. Like asynchronous channels, the Receiver will block until a message becomes available. sync_channel differs greatly in the semantics of the sender, however."],["std::sync::mpsc","source code path changed to","src/std/sync/mpsc/mod.rs.html#1-1626"]]}