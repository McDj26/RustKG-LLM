{"create_time":"2025-04-04T13:32:57.559Z","id":"7a2a2852-51da-42cb-b841-57a6c12ac7cd","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/mpsc/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_sync_mpsc-index\\merged_1ab8a2a1-97e5-4eda-ad32-40a58df5657a.json","relations":["contains","has attribute","has description","has full name","has method","has source code","has stability","is a","stability","stable since"],"delete_triples":[{"triples":[["Handle","stability","Unstable"],["Select","stability","Unstable"],["std::sync::mpsc","has source code","src/std/sync/mpsc/mod.rs.html#11-3030"],["Weak","has description","A version of Arc that holds a non-owning reference to the managed value. The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Arc<T>>."]],"startIndex":22642,"endIndex":38407}],"add_triples":[{"triples":[["std::sync::mpsc","has source code","src/std/sync/mpsc/mod.rs.html#11-3130"],["Weak","has description","A version of [`Arc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Arc`]`<T>>`."],["Once","has method","new"],["TryLockError","has description","An enumeration of possible errors associated with a [`TryLockResult`] which can occur while trying to acquire a lock, from the [`try_lock`] method on a [`Mutex`] or the [`try_read`] and [`try_write`] methods on an [`RwLock`]."]],"startIndex":22642,"endIndex":38407}],"metrics":{"escapeCount":0,"costTime":334910,"totalUsage":{"prompt_tokens":8392,"completion_tokens":8700,"cached_tokens":0,"reasoning_tokens":8338},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":15765,"costTime":334910}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::sync::mpsc","updates source code","src/std/sync/mpsc/mod.rs.html#11-3130"],["Weak","updates description","A version of [`Arc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Arc`]`<T>>`."],["Once","adds method","new"],["TryLockError","adds description","An enumeration of possible errors associated with a [`TryLockResult`] which can occur while trying to acquire a lock, from the [`try_lock`] method on a [`Mutex`] or the [`try_read`] and [`try_write`] methods on an [`RwLock`]."],["Handle","marks as stable","Stable"],["Select","marks as stable","Stable"]]}