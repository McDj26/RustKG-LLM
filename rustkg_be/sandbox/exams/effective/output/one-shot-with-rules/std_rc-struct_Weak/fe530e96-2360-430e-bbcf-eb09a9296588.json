{"create_time":"2025-03-29T05:21:03.198Z","id":"fe530e96-2360-430e-bbcf-eb09a9296588","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.40-x86_64-pc-windows-msvc/share/doc/rust/html/std/rc/struct.Weak.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\std_rc-struct_Weak\\merged_1859afa1-9e71-44eb-be2b-965beb9aca99.json","relations":["contains","does not implement","has argument","has associated type","has declaration","has description","has full name","has generic parameter","has method","has return type","has type","has value","has version","has where clause","implements","is a","is a version of","is weak version of","returns","stable since"],"delete_triples":[{"triples":[["Weak","has method","fmt"],["Weak","has method","default"],["Weak","has description","Weak is a version of Rc that holds a non-owning reference to the managed value."],["Weak","has description","The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."],["Weak","has description","Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped."]],"startIndex":217,"endIndex":38837},{"triples":[["Weak::fmt","has description","Formats the value using the given formatter."]],"startIndex":39519,"endIndex":70878}],"add_triples":[{"triples":[["Weak","has method","as_raw"],["as_raw","is a","function"],["as_raw","has return type","*const T"],["as_raw","has description","Returns a raw pointer to the object T pointed to by this Weak<T>."],["Weak","has method","into_raw"],["into_raw","is a","function"],["into_raw","has return type","*const T"],["Weak","has method","from_raw"],["from_raw","is a","function"],["from_raw","has return type","Weak<T>"],["Weak","has method","strong_count"],["strong_count","has return type","usize"],["Weak","has method","weak_count"],["weak_count","has return type","Option<usize>"],["Weak","has method","ptr_eq"],["ptr_eq","stable since","1.39.0"],["ptr_eq","has return type","bool"],["Weak","implements","DispatchFromDyn"],["Weak","has description","Weak is a version of Rc that holds a non-owning reference to the managed allocation."],["Weak","has description","The allocation is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."],["Weak","has description","Since a Weak reference does not count towards ownership, it will not prevent the allocation itself (the backing store) from being deallocated."]],"startIndex":217,"endIndex":38837},{"triples":[["Weak","does not implement","Send"],["Weak","does not implement","Sync"],["Weak::clone","has description","Makes a clone of the Weak pointer that points to the same allocation."]],"startIndex":39519,"endIndex":70878}],"metrics":{"escapeCount":0,"costTime":360455,"totalUsage":{"prompt_tokens":48041,"completion_tokens":10581,"cached_tokens":0,"reasoning_tokens":9619},"chunkLength":2,"chunksInfo":[{"oldContextLength":227,"oldStrLength":19097,"newContextLength":227,"newStrLength":38641,"costTime":308972},{"oldContextLength":227,"oldStrLength":28355,"newContextLength":227,"newStrLength":31380,"costTime":51483}]},"model":"deepseek-r1-250120","extraInfo":{}}