{"create_time":"2025-04-05T09:16:08.215Z","id":"f86e2c15-6ac9-4713-9535-b631c7d88a4c","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/ffi/index.html","relations":["contains","description"],"add_triples":[{"triples":[["core","contains","core::alloc"],["core::alloc","description","Memory allocation APIs"],["core","contains","core::any"],["core::any","description","This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."],["core","contains","core::arch"],["core::arch","description","Platform dependent vendor intrinsics."],["core","contains","core::array"],["core::array","description","Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."],["core","contains","core::ascii"],["core::ascii","description","Operations on ASCII strings and characters."],["core","contains","core::borrow"],["core::borrow","description","A module for working with borrowed data."],["core","contains","core::cell"],["core::cell","description","Shareable mutable containers."],["core","contains","core::char"],["core::char","description","A character type."],["core","contains","core::clone"],["core::clone","description","The `Clone` trait for types that cannot be 'implicitly copied'."],["core","contains","core::cmp"],["core::cmp","description","Functionality for ordering and comparison."],["core","contains","core::convert"],["core::convert","description","Traits for conversions between types."],["core","contains","core::default"],["core::default","description","The `Default` trait for types which may have meaningful default values."],["core","contains","core::f32"],["core::f32","description","This module provides constants which are specific to the implementation of the `f32` floating point data type."],["core","contains","core::f64"],["core::f64","description","This module provides constants which are specific to the implementation of the `f64` floating point data type."],["core","contains","core::ffi"],["core::ffi","description","Utilities related to FFI bindings."],["core","contains","core::fmt"],["core::fmt","description","Utilities for formatting and printing strings."],["core","contains","core::future"],["core::future","description","Asynchronous values."],["core","contains","core::hash"],["core::hash","description","Generic hashing support."],["core","contains","core::hint"],["core::hint","description","Hints to compiler that affects how code should be emitted or optimized."],["core","contains","core::i128"],["core::i128","description","The 128-bit signed integer type."],["core","contains","core::i16"],["core::i16","description","The 16-bit signed integer type."],["core","contains","core::i32"],["core::i32","description","The 32-bit signed integer type."],["core","contains","core::i64"],["core::i64","description","The 64-bit signed integer type."],["core","contains","core::i8"],["core::i8","description","The 8-bit signed integer type."],["core","contains","core::intrinsics"],["core::intrinsics","description","rustc compiler intrinsics."],["core","contains","core::isize"],["core::isize","description","The pointer-sized signed integer type."],["core","contains","core::iter"],["core::iter","description","Composable external iteration."],["core","contains","core::marker"],["core::marker","description","Primitive traits and types representing basic properties of types."],["core","contains","core::mem"],["core::mem","description","Basic functions for dealing with memory."],["core","contains","core::num"],["core::num","description","Numeric traits and functions for the built-in numeric types."],["core","contains","core::ops"],["core::ops","description","Overloadable operators."],["core","contains","core::option"],["core::option","description","Optional values."],["core","contains","core::panic"],["core::panic","description","Panic support in the standard library."],["core","contains","core::panicking"],["core::panicking","description","Panic support for libcore"],["core","contains","core::pin"],["core::pin","description","Types which pin data to its location in memory"],["core","contains","core::prelude"],["core::prelude","description","The libcore prelude"],["core","contains","core::ptr"],["core::ptr","description","Raw, unsafe pointers, `*const T`, and `*mut T`."],["core","contains","core::raw"],["core::raw","description","Contains struct definitions for the layout of compiler built-in types."],["core","contains","core::result"],["core::result","description","Error handling with the `Result` type."],["core","contains","core::slice"],["core::slice","description","Slice management and manipulation"],["core","contains","core::str"],["core::str","description","String manipulation"],["core","contains","core::sync"],["core::sync","description","Synchronization primitives"],["core","contains","core::task"],["core::task","description","Types and Traits for working with asynchronous tasks."],["core","contains","core::time"],["core::time","description","Temporal quantification."],["core","contains","core::u128"],["core::u128","description","The 128-bit unsigned integer type."],["core","contains","core::u16"],["core::u16","description","The 16-bit unsigned integer type."],["core","contains","core::u32"],["core::u32","description","The 32-bit unsigned integer type."],["core","contains","core::u64"],["core::u64","description","The 64-bit unsigned integer type."],["core","contains","core::u8"],["core::u8","description","The 8-bit unsigned integer type."],["core","contains","core::unicode"],["core::unicode","description",""],["core","contains","core::usize"],["core::usize","description","The pointer-sized unsigned integer type."],["core","contains","core::assert"],["core::assert","description","Ensure that a boolean expression is `true` at runtime."],["core","contains","core::assert_eq"],["core::assert_eq","description","Asserts that two expressions are equal to each other (using [`PartialEq`])."],["core","contains","core::assert_ne"],["core::assert_ne","description","Asserts that two expressions are not equal to each other (using [`PartialEq`])."],["core","contains","core::cfg"],["core::cfg","description","Boolean evaluation of configuration flags, at compile-time."],["core","contains","core::column"],["core::column","description","A macro which expands to the column number on which it was invoked."],["core","contains","core::compile_error"],["core::compile_error","description","Unconditionally causes compilation to fail with the given error message when encountered."],["core","contains","core::concat"],["core::concat","description","Concatenates literals into a static string slice."],["core","contains","core::concat_idents"],["core::concat_idents","description","Concatenate identifiers into one identifier."],["core","contains","core::debug_assert"],["core::debug_assert","description","Ensure that a boolean expression is `true` at runtime."],["core","contains","core::debug_assert_eq"],["core::debug_assert_eq","description","Asserts that two expressions are equal to each other."],["core","contains","core::debug_assert_ne"],["core::debug_assert_ne","description","Asserts that two expressions are not equal to each other."],["core","contains","core::env"],["core::env","description","Inspect an environment variable at compile time."],["core","contains","core::file"],["core::file","description","A macro which expands to the file name from which it was invoked."],["core","contains","core::format_args"],["core::format_args","description","The core macro for formatted string creation & output."],["core","contains","core::include"],["core::include","description","Parse a file as an expression or an item according to the context."],["core","contains","core::include_bytes"],["core::include_bytes","description","Includes a file as a reference to a byte array."],["core","contains","core::include_str"],["core::include_str","description","Includes a utf8-encoded file as a string."],["core","contains","core::line"],["core::line","description","A macro which expands to the line number on which it was invoked."],["core","contains","core::module_path"],["core::module_path","description","Expands to a string that represents the current module path."],["core","contains","core::option_env"],["core::option_env","description","Optionally inspect an environment variable at compile time."],["core::panic","description","Entry point of thread panic, for details, see std::macros"],["core","contains","core::stringify"],["core::stringify","description","A macro which stringifies its arguments."],["core","contains","core::try"],["core::try","description","Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."],["core","contains","core::unimplemented"],["core::unimplemented","description","A standardized placeholder for marking unfinished code."],["core","contains","core::unreachable"],["core::unreachable","description","A utility macro for indicating unreachable code."],["core","contains","core::write"],["core::write","description","Write formatted data into a buffer."],["core","contains","core::writeln"],["core::writeln","description","Write formatted data into a buffer, with a newline appended."],["core::ffi","contains","core::ffi::c_void"],["core::ffi::c_void","description","Equivalent to C's void type when used as a pointer."]],"startIndex":0,"endIndex":39000}],"metrics":{"escapeCount":0,"costTime":414416,"totalUsage":{"prompt_tokens":4128,"completion_tokens":11488,"cached_tokens":0,"reasoning_tokens":8758},"chunkLength":1,"chunksInfo":[{"contextLength":0,"contentLength":12731,"costTime":414416}]},"model":"deepseek-r1-250120","extraInfo":{}}