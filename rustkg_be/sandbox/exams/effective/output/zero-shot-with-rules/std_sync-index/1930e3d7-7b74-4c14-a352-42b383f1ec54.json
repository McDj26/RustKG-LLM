{"create_time":"2025-04-05T09:17:25.351Z","id":"1930e3d7-7b74-4c14-a352-42b383f1ec54","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-with-rules\\std_sync-index\\merged_0f8f6ccc-8755-4c36-ad9f-001a322789d7.json","relations":["contains","description","has attribute","has feature"],"delete_triples":[{"triples":[["std::f32","description","The 32-bit floating point type."],["std::f64","description","The 64-bit floating point type."],["std::rc","description","Thread-local reference-counted boxes (the `Rc<T>` type)."],["std::assert_eq!","description","Asserts that two expressions are equal to each other."],["std::sync::Arc","description","An atomically reference counted wrapper for shared state."]],"startIndex":20539,"endIndex":54877}],"add_triples":[{"triples":[["std::f32","description","This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."],["std::f64","description","This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."],["std::rc","description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["std::assert_eq!","description","Asserts that two expressions are equal to each other (using [`PartialEq`])."],["std","contains","assert_ne!"],["std::assert_ne!","description","Asserts that two expressions are not equal to each other (using [`PartialEq`])."],["std","contains","debug_assert_ne!"],["std::debug_assert_ne!","description","Asserts that two expressions are not equal to each other."],["std","contains","eprint!"],["std::eprint!","description","Macro for printing to the standard error."],["std","contains","eprintln!"],["std::eprintln!","description","Macro for printing to the standard error, with a newline."],["std::sync::Arc","description","A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."],["std","contains","heap"],["std::heap","description","dox"]],"startIndex":20539,"endIndex":54877}],"metrics":{"escapeCount":0,"costTime":90768,"totalUsage":{"prompt_tokens":16857,"completion_tokens":2402,"cached_tokens":0,"reasoning_tokens":1874},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":34338,"costTime":90768}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std","adds feature","assert_ne!"],["std","adds feature","debug_assert_ne!"],["std","adds feature","eprint!"],["std","adds feature","eprintln!"],["std","adds feature","heap"]]}