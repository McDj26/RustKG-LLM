{"create_time":"2025-04-05T09:15:50.688Z","id":"fbc09400-5ff1-4d68-b282-e1eed8c56746","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.10-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","relations":["contains","description","has attribute"],"add_triples":[{"triples":[["std","contains","sync"],["sync","contains","atomic"],["sync","contains","mpsc"],["atomic","description","Atomic types"],["mpsc","description","Multi-producer, single-consumer FIFO queue communication primitives."],["sync","description","Useful synchronization primitives."],["sync","contains","Arc"],["Arc","description","An atomically reference counted wrapper for shared state."],["sync","contains","Barrier"],["Barrier","description","A barrier enables multiple threads to synchronize the beginning of some computation."],["sync","contains","BarrierWaitResult"],["BarrierWaitResult","description","A result returned from wait."],["sync","contains","Condvar"],["Condvar","description","A Condition Variable"],["sync","contains","Mutex"],["Mutex","description","A mutual exclusion primitive useful for protecting shared data"],["sync","contains","MutexGuard"],["MutexGuard","description","An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."],["sync","contains","Once"],["Once","description","A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."],["sync","contains","PoisonError"],["PoisonError","description","A type of error which can be returned whenever a lock is acquired."],["sync","contains","RwLock"],["RwLock","description","A reader-writer lock"],["sync","contains","RwLockReadGuard"],["RwLockReadGuard","description","RAII structure used to release the shared read access of a lock when dropped."],["sync","contains","RwLockWriteGuard"],["RwLockWriteGuard","description","RAII structure used to release the exclusive write access of a lock when dropped."],["sync","contains","WaitTimeoutResult"],["WaitTimeoutResult","description","A type indicating whether a timed wait on a condition variable returned due to a time out or not."],["sync","contains","Weak"],["Weak","description","A weak pointer to an Arc."],["sync","contains","OnceState"],["OnceState","description","State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."],["OnceState","has attribute","unstable"],["sync","contains","StaticCondvar"],["StaticCondvar","description","Statically allocated condition variables."],["StaticCondvar","has attribute","deprecated"],["StaticCondvar","has attribute","unstable"],["sync","contains","StaticMutex"],["StaticMutex","description","The static mutex type is provided to allow for static allocation of mutexes."],["StaticMutex","has attribute","deprecated"],["StaticMutex","has attribute","unstable"],["sync","contains","StaticRwLock"],["StaticRwLock","description","Structure representing a statically allocated RwLock."],["StaticRwLock","has attribute","deprecated"],["StaticRwLock","has attribute","unstable"],["sync","contains","TryLockError"],["TryLockError","description","An enumeration of possible errors which can occur while calling the try_lock method."],["sync","contains","ONCE_INIT"],["ONCE_INIT","description","Initialization value for static Once values."],["sync","contains","CONDVAR_INIT"],["CONDVAR_INIT","description","Constant initializer for a statically allocated condition variable."],["CONDVAR_INIT","has attribute","deprecated"],["CONDVAR_INIT","has attribute","unstable"],["sync","contains","MUTEX_INIT"],["MUTEX_INIT","description","Static initialization of a mutex. This constant can be used to initialize other mutex constants."],["MUTEX_INIT","has attribute","deprecated"],["MUTEX_INIT","has attribute","unstable"],["sync","contains","RW_LOCK_INIT"],["RW_LOCK_INIT","description","Constant initialization for a statically-initialized rwlock."],["RW_LOCK_INIT","has attribute","deprecated"],["RW_LOCK_INIT","has attribute","unstable"],["sync","contains","LockResult"],["LockResult","description","A type alias for the result of a lock method which can be poisoned."],["sync","contains","TryLockResult"],["TryLockResult","description","A type alias for the result of a nonblocking locking method."]],"startIndex":0,"endIndex":39000}],"metrics":{"escapeCount":0,"costTime":397122,"totalUsage":{"prompt_tokens":6486,"completion_tokens":10734,"cached_tokens":0,"reasoning_tokens":9524},"chunkLength":1,"chunksInfo":[{"contextLength":0,"contentLength":20539,"costTime":397122}]},"model":"deepseek-r1-250120","extraInfo":{}}