{"create_time":"2025-04-05T09:45:11.159Z","id":"b049b088-577a-4877-b3ee-a632bc481f31","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.70-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-with-rules\\std_sync-index\\merged_0a8fc3d5-c37e-44e9-8913-9bd3c71291e4.json","relations":["contains","description","has attribute"],"delete_triples":[{"triples":[],"startIndex":18764,"endIndex":49144}],"add_triples":[{"triples":[["std::sync","contains","Exclusive"],["std::sync","contains","LazyLock"],["std::sync","contains","OnceLock"],["std::sync::Exclusive","has attribute","Experimental"],["std::sync::LazyLock","has attribute","Experimental"],["std::sync::Exclusive","description","Exclusive provides only mutable access, also referred to as exclusive access to the underlying value. It provides no immutable, or shared access to the underlying value."],["std::sync::LazyLock","description","A value which is initialized on the first access."],["std::sync::OnceLock","description","A synchronization primitive which can be written to only once."]],"startIndex":18764,"endIndex":49144}],"metrics":{"escapeCount":0,"costTime":71553,"totalUsage":{"prompt_tokens":17341,"completion_tokens":1895,"cached_tokens":0,"reasoning_tokens":1688},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":30380,"costTime":71553}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::sync","adds feature","Exclusive"],["std::sync","adds feature","LazyLock"],["std::sync","adds feature","OnceLock"]]}