{"create_time":"2025-04-05T09:47:42.726Z","id":"4f99a45e-ef82-411a-a60d-18f0510d2515","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.80-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-with-rules\\std_sync-index\\merged_01dd3a7e-4030-4c50-a7f1-b8b5d4f9dcce.json","relations":["contains","description","has attribute"],"delete_triples":[{"triples":[],"startIndex":18821,"endIndex":52782}],"add_triples":[{"triples":[["std::sync","contains","Exclusive"],["std::sync::Exclusive","has attribute","Experimental"],["std::sync::Exclusive","description","Exclusive provides only mutable access, also referred to as exclusive access to the underlying value. It provides no immutable, or shared access to the underlying value."],["std::sync","contains","LazyLock"],["std::sync::LazyLock","has attribute","Experimental"],["std::sync::LazyLock","description","A value which is initialized on the first access."],["std::sync","contains","OnceLock"],["std::sync::OnceLock","description","A synchronization primitive which can be written to only once."]],"startIndex":18821,"endIndex":52782}],"metrics":{"escapeCount":0,"costTime":67875,"totalUsage":{"prompt_tokens":18622,"completion_tokens":1813,"cached_tokens":0,"reasoning_tokens":1606},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":33961,"costTime":67875}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::sync","adds feature","Exclusive"],["std::sync","adds feature","LazyLock"],["std::sync","adds feature","OnceLock"]]}