{"create_time":"2025-04-05T09:14:37.510Z","id":"e9ddb32f-f805-4ae2-84df-2ffe0915c5fc","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.10-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","relations":["contains","has attribute","has description"],"add_triples":[{"triples":[["std","contains","sync"],["sync","contains","atomic"],["atomic","has description","Atomic types"],["sync","contains","mpsc"],["mpsc","has description","Multi-producer, single-consumer FIFO queue communication primitives."],["sync","contains","Arc"],["Arc","has description","An atomically reference counted wrapper for shared state."],["sync","contains","Barrier"],["Barrier","has description","A barrier enables multiple threads to synchronize the beginning of some computation."],["sync","contains","BarrierWaitResult"],["BarrierWaitResult","has description","A result returned from wait."],["sync","contains","Condvar"],["Condvar","has description","A Condition Variable"],["sync","contains","Mutex"],["Mutex","has description","A mutual exclusion primitive useful for protecting shared data"],["sync","contains","MutexGuard"],["MutexGuard","has description","An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."],["sync","contains","Once"],["Once","has description","A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."],["sync","contains","PoisonError"],["PoisonError","has description","A type of error which can be returned whenever a lock is acquired."],["sync","contains","RwLock"],["RwLock","has description","A reader-writer lock"],["sync","contains","RwLockReadGuard"],["RwLockReadGuard","has description","RAII structure used to release the shared read access of a lock when dropped."],["sync","contains","RwLockWriteGuard"],["RwLockWriteGuard","has description","RAII structure used to release the exclusive write access of a lock when dropped."],["sync","contains","WaitTimeoutResult"],["WaitTimeoutResult","has description","A type indicating whether a timed wait on a condition variable returned due to a time out or not."],["sync","contains","Weak"],["Weak","has description","A weak pointer to an Arc."],["sync","contains","OnceState"],["OnceState","has attribute","Unstable"],["OnceState","has description","State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."],["sync","contains","StaticCondvar"],["StaticCondvar","has attribute","Deprecated"],["StaticCondvar","has attribute","Unstable"],["StaticCondvar","has description","Statically allocated condition variables."],["sync","contains","StaticMutex"],["StaticMutex","has attribute","Deprecated"],["StaticMutex","has attribute","Unstable"],["StaticMutex","has description","The static mutex type is provided to allow for static allocation of mutexes."],["sync","contains","StaticRwLock"],["StaticRwLock","has attribute","Deprecated"],["StaticRwLock","has attribute","Unstable"],["StaticRwLock","has description","Structure representing a statically allocated RwLock."],["sync","contains","TryLockError"],["TryLockError","has description","An enumeration of possible errors which can occur while calling the try_lock method."],["sync","contains","ONCE_INIT"],["ONCE_INIT","has description","Initialization value for static Once values."],["sync","contains","CONDVAR_INIT"],["CONDVAR_INIT","has attribute","Deprecated"],["CONDVAR_INIT","has attribute","Unstable"],["CONDVAR_INIT","has description","Constant initializer for a statically allocated condition variable."],["sync","contains","MUTEX_INIT"],["MUTEX_INIT","has attribute","Deprecated"],["MUTEX_INIT","has attribute","Unstable"],["MUTEX_INIT","has description","Static initialization of a mutex. This constant can be used to initialize other mutex constants."],["sync","contains","RW_LOCK_INIT"],["RW_LOCK_INIT","has attribute","Deprecated"],["RW_LOCK_INIT","has attribute","Unstable"],["RW_LOCK_INIT","has description","Constant initialization for a statically-initialized rwlock."],["sync","contains","LockResult"],["LockResult","has description","A type alias for the result of a lock method which can be poisoned."],["sync","contains","TryLockResult"],["TryLockResult","has description","A type alias for the result of a nonblocking locking method."]],"startIndex":0,"endIndex":39000}],"metrics":{"escapeCount":0,"costTime":324745,"totalUsage":{"prompt_tokens":6486,"completion_tokens":8810,"cached_tokens":0,"reasoning_tokens":7588},"chunkLength":1,"chunksInfo":[{"contextLength":0,"contentLength":20539,"costTime":324745}]},"model":"deepseek-r1-250120","extraInfo":{}}