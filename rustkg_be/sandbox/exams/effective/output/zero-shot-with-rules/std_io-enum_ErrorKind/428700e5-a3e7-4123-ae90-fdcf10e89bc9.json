{"create_time":"2025-04-05T09:16:38.710Z","id":"428700e5-a3e7-4123-ae90-fdcf10e89bc9","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.10-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","relations":["contains","description","has_variant","implements","is_a","since_version","title"],"add_triples":[{"triples":[["std::io","contains","std::io::prelude"],["std::io::prelude","is_a","module"],["std::io::prelude","title","The I/O Prelude"],["std::io","contains","std::io::BufReader"],["std::io::BufReader","is_a","struct"],["std::io::BufReader","description","The `BufReader` struct adds buffering to any reader."],["std::io","contains","std::io::BufWriter"],["std::io::BufWriter","is_a","struct"],["std::io::BufWriter","description","Wraps a writer and buffers its output."],["std::io","contains","std::io::Bytes"],["std::io::Bytes","is_a","struct"],["std::io::Bytes","description","An iterator over `u8` values of a reader."],["std::io","contains","std::io::Chain"],["std::io::Chain","is_a","struct"],["std::io::Chain","description","Adaptor to chain together two readers."],["std::io","contains","std::io::Chars"],["std::io::Chars","is_a","struct"],["std::io::Chars","description","An iterator over the `char`s of a reader."],["std::io","contains","std::io::Cursor"],["std::io::Cursor","is_a","struct"],["std::io::Cursor","description","A `Cursor` wraps another type and provides it with a `Seek` implementation."],["std::io","contains","std::io::Empty"],["std::io::Empty","is_a","struct"],["std::io::Empty","description","A reader which is always at EOF."],["std::io","contains","std::io::Error"],["std::io::Error","is_a","struct"],["std::io::Error","description","The error type for I/O operations of the `Read`, `Write`, `Seek`, and associated traits."],["std::io","contains","std::io::IntoInnerError"],["std::io::IntoInnerError","is_a","struct"],["std::io::IntoInnerError","description","An error returned by `into_inner` which combines an error that happened while writing out the buffer, and the buffered writer object which may be used to recover from the condition."],["std::io","contains","std::io::LineWriter"],["std::io::LineWriter","is_a","struct"],["std::io::LineWriter","description","Wraps a writer and buffers output to it, flushing whenever a newline (`0x0a`, `'\\n'`) is detected."],["std::io","contains","std::io::Lines"],["std::io::Lines","is_a","struct"],["std::io::Lines","description","An iterator over the lines of an instance of `BufRead`."],["std::io","contains","std::io::Repeat"],["std::io::Repeat","is_a","struct"],["std::io::Repeat","description","A reader which yields one byte over and over and over and over and over and..."],["std::io","contains","std::io::Sink"],["std::io::Sink","is_a","struct"],["std::io::Sink","description","A writer which will move data into the void."],["std::io","contains","std::io::Split"],["std::io::Split","is_a","struct"],["std::io::Split","description","An iterator over the contents of an instance of `BufRead` split on a particular byte."],["std::io","contains","std::io::Stderr"],["std::io::Stderr","is_a","struct"],["std::io::Stderr","description","A handle to the standard error stream of a process."],["std::io","contains","std::io::StderrLock"],["std::io::StderrLock","is_a","struct"],["std::io::StderrLock","description","A locked reference to the `Stderr` handle."],["std::io","contains","std::io::Stdin"],["std::io::Stdin","is_a","struct"],["std::io::Stdin","description","A handle to the standard input stream of a process."],["std::io","contains","std::io::StdinLock"],["std::io::StdinLock","is_a","struct"],["std::io::StdinLock","description","A locked reference to the `Stdin` handle."],["std::io","contains","std::io::Stdout"],["std::io::Stdout","is_a","struct"],["std::io::Stdout","description","A handle to the global standard output stream of the current process."],["std::io","contains","std::io::StdoutLock"],["std::io::StdoutLock","is_a","struct"],["std::io::StdoutLock","description","A locked reference to the `Stdout` handle."],["std::io","contains","std::io::Take"],["std::io::Take","is_a","struct"],["std::io::Take","description","Reader adaptor which limits the bytes read from an underlying reader."],["std::io","contains","std::io::CharsError"],["std::io::CharsError","is_a","enum"],["std::io::CharsError","description","An enumeration of possible errors that can be generated from the `Chars` adapter."],["std::io","contains","std::io::ErrorKind"],["std::io::ErrorKind","is_a","enum"],["std::io::ErrorKind","description","A list specifying general categories of I/O error."],["std::io","contains","std::io::SeekFrom"],["std::io::SeekFrom","is_a","enum"],["std::io::SeekFrom","description","Enumeration of possible methods to seek within an I/O object."],["std::io","contains","std::io::BufRead"],["std::io::BufRead","is_a","trait"],["std::io::BufRead","description","A `BufRead` is a type of `Read`er which has an internal buffer, allowing it to perform extra ways of reading."],["std::io","contains","std::io::Read"],["std::io::Read","is_a","trait"],["std::io::Read","description","The `Read` trait allows for reading bytes from a source."],["std::io","contains","std::io::Seek"],["std::io::Seek","is_a","trait"],["std::io::Seek","description","The `Seek` trait provides a cursor which can be moved within a stream of bytes."],["std::io","contains","std::io::Write"],["std::io::Write","is_a","trait"],["std::io::Write","description","A trait for objects which are byte-oriented sinks."],["std::io","contains","std::io::copy"],["std::io::copy","is_a","function"],["std::io::copy","description","Copies the entire contents of a reader into a writer."],["std::io","contains","std::io::empty"],["std::io::empty","is_a","function"],["std::io::empty","description","Constructs a new handle to an empty reader."],["std::io","contains","std::io::repeat"],["std::io::repeat","is_a","function"],["std::io::repeat","description","Creates an instance of a reader that infinitely repeats one byte."],["std::io","contains","std::io::sink"],["std::io::sink","is_a","function"],["std::io::sink","description","Creates an instance of a writer which will successfully consume all data."],["std::io","contains","std::io::stderr"],["std::io::stderr","is_a","function"],["std::io::stderr","description","Constructs a new handle to the standard error of the current process."],["std::io","contains","std::io::stdin"],["std::io::stdin","is_a","function"],["std::io::stdin","description","Constructs a new handle to the standard input of the current process."],["std::io","contains","std::io::stdout"],["std::io::stdout","is_a","function"],["std::io::stdout","description","Constructs a new handle to the standard output of the current process."],["std::io::ErrorKind","has_variant","NotFound"],["NotFound","description","An entity was not found, often a file."],["std::io::ErrorKind","has_variant","PermissionDenied"],["PermissionDenied","description","The operation lacked the necessary privileges to complete."],["std::io::ErrorKind","has_variant","ConnectionRefused"],["ConnectionRefused","description","The connection was refused by the remote server."],["std::io::ErrorKind","has_variant","ConnectionReset"],["ConnectionReset","description","The connection was reset by the remote server."],["std::io::ErrorKind","has_variant","ConnectionAborted"],["ConnectionAborted","description","The connection was aborted (terminated) by the remote server."],["std::io::ErrorKind","has_variant","NotConnected"],["NotConnected","description","The network operation failed because it was not connected yet."],["std::io::ErrorKind","has_variant","AddrInUse"],["AddrInUse","description","A socket address could not be bound because the address is already in use elsewhere."],["std::io::ErrorKind","has_variant","AddrNotAvailable"],["AddrNotAvailable","description","A nonexistent interface was requested or the requested address was not local."],["std::io::ErrorKind","has_variant","BrokenPipe"],["BrokenPipe","description","The operation failed because a pipe was closed."],["std::io::ErrorKind","has_variant","AlreadyExists"],["AlreadyExists","description","An entity already exists, often a file."],["std::io::ErrorKind","has_variant","WouldBlock"],["WouldBlock","description","The operation needs to block to complete, but the blocking operation was requested to not occur."],["std::io::ErrorKind","has_variant","InvalidInput"],["InvalidInput","description","A parameter was incorrect."],["std::io::ErrorKind","has_variant","InvalidData"],["InvalidData","description","Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."],["InvalidData","since_version","1.2.0"],["std::io::ErrorKind","has_variant","TimedOut"],["TimedOut","description","The I/O operation's timeout expired, causing it to be canceled."],["std::io::ErrorKind","has_variant","WriteZero"],["WriteZero","description","An error returned when an operation could not be completed because a call to `write` returned `Ok(0)`."],["std::io::ErrorKind","has_variant","Interrupted"],["Interrupted","description","This operation was interrupted. Interrupted operations can typically be retried."],["std::io::ErrorKind","has_variant","Other"],["Other","description","Any I/O error not part of this list."],["std::io::ErrorKind","has_variant","UnexpectedEof"],["UnexpectedEof","description","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."],["UnexpectedEof","since_version","1.6.0"],["std::io::ErrorKind","implements","Debug"],["std::io::ErrorKind","implements","Clone"],["std::io::ErrorKind","implements","Eq"],["std::io::ErrorKind","implements","PartialEq"],["std::io::ErrorKind","implements","Copy"]],"startIndex":0,"endIndex":39000}],"metrics":{"escapeCount":0,"costTime":448744,"totalUsage":{"prompt_tokens":5749,"completion_tokens":12589,"cached_tokens":0,"reasoning_tokens":9447},"chunkLength":1,"chunksInfo":[{"contextLength":0,"contentLength":17120,"costTime":448744}]},"model":"deepseek-r1-250120","extraInfo":{}}