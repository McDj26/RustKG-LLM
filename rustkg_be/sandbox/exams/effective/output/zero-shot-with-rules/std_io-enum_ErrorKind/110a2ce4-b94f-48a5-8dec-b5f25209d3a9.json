{"create_time":"2025-04-05T10:29:26.180Z","id":"110a2ce4-b94f-48a5-8dec-b5f25209d3a9","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-with-rules\\std_io-enum_ErrorKind\\merged_543b56fe-2055-4af6-b02e-dc819543031e.json","relations":["contains","has description","has function","has method","has struct","has variant","implements trait"],"delete_triples":[{"triples":[["std::io::Chain","has description","Adaptor to chain together two readers."],["std::io::Take","has description","Reader adaptor which limits the bytes read from an underlying reader."]],"startIndex":14955,"endIndex":55346},{"triples":[["std::io::ErrorKind","has variant","AddrNotAvailable"],["std::io::ErrorKind::AddrNotAvailable","has description","A nonexistent interface was requested or the requested address was not local."],["std::io::ErrorKind","has variant","BrokenPipe"],["std::io::ErrorKind::BrokenPipe","has description","The operation failed because a pipe was closed."],["std::io::ErrorKind","has variant","AlreadyExists"],["std::io::ErrorKind::AlreadyExists","has description","An entity already exists, often a file."],["std::io::ErrorKind","has variant","WouldBlock"],["std::io::ErrorKind::WouldBlock","has description","The operation needs to block to complete, but the blocking operation was requested to not occur."],["std::io::ErrorKind","has variant","InvalidInput"],["std::io::ErrorKind","has variant","InvalidData"],["std::io::ErrorKind::InvalidData","has description","Data not valid for the operation were encountered."],["std::io::ErrorKind","has variant","Other"],["std::io::ErrorKind::Other","has description","Any I/O error not part of this list."]],"startIndex":22311,"endIndex":63131},{"triples":[["std::io::ErrorKind","implements trait","std::marker::Copy"]],"startIndex":35485,"endIndex":76213},{"triples":[["ErrorKind","implements","PartialEq<ErrorKind>"],["std::io::ErrorKind","implements","std::cmp::PartialOrd"],["std::io::ErrorKind::le","has attribute","must_use"],["std::io::ErrorKind::gt","has attribute","must_use"],["std::io::ErrorKind::ge","has attribute","must_use"]],"startIndex":50565,"endIndex":91193},{"triples":[["&'_ mut F","implements trait","std::future::Future"],["&'_ mut I","implements trait","std::iter::Iterator"]],"startIndex":60649,"endIndex":101717},{"triples":[["T","implements trait","std::borrow::ToOwned"],["std::borrow::ToOwned::clone_into","has description","Creates owned data from borrowed data"],["std::convert::TryFrom","implements trait","std::clone::Clone"]],"startIndex":68900,"endIndex":93448}],"add_triples":[{"triples":[["std::io::ErrorKind","has variant","ArgumentListTooLong"],["std::io::ErrorKind","has variant","CrossesDevices"],["std::io::ErrorKind","has variant","Deadlock"],["std::io::ErrorKind","has variant","DirectoryNotEmpty"],["std::io::ErrorKind","has variant","ExecutableFileBusy"],["std::io::ErrorKind","has variant","FileTooLarge"],["std::io::ErrorKind","has variant","FilesystemLoop"],["std::io::ErrorKind","has variant","FilesystemQuotaExceeded"],["std::io::ErrorKind","has variant","HostUnreachable"],["std::io::ErrorKind","has variant","InvalidFilename"],["std::io::ErrorKind","has variant","IsADirectory"],["std::io::ErrorKind","has variant","NetworkDown"],["std::io::ErrorKind","has variant","NetworkUnreachable"],["std::io::ErrorKind","has variant","NotADirectory"],["std::io::ErrorKind","has variant","NotSeekable"],["std::io::ErrorKind","has variant","OutOfMemory"],["std::io::ErrorKind","has variant","ReadOnlyFilesystem"],["std::io::ErrorKind","has variant","ResourceBusy"],["std::io::ErrorKind","has variant","StaleNetworkFileHandle"],["std::io::ErrorKind","has variant","StorageFull"],["std::io::ErrorKind","has variant","TooManyLinks"],["std::io::ErrorKind","has variant","Unsupported"],["std::io::ErrorKind","implements trait","Display"],["std::io::ErrorKind","implements trait","From<ErrorKind>"],["std::io::ErrorKind","implements trait","Hash"],["std::io::ErrorKind","implements trait","Ord"],["std::io::ErrorKind","implements trait","PartialOrd<ErrorKind>"],["std::io::ErrorKind","implements trait","StructuralEq"],["std::io::ErrorKind","implements trait","StructuralPartialEq"],["std::io::ErrorKind","implements trait","RefUnwindSafe"],["std::io::ErrorKind","implements trait","Send"],["std::io::ErrorKind","implements trait","Sync"],["std::io::ErrorKind","implements trait","Unpin"],["std::io::ErrorKind","implements trait","UnwindSafe"],["std::io","has function","read_to_string"],["std::io","has function","stderr_locked"],["std::io","has function","stdin_locked"],["std::io","has function","stdout_locked"],["std::io","has struct","ReadBuf"],["std::io::ReadBuf","has description","A wrapper around a byte buffer that is incrementally filled and initialized."],["std::io","has struct","WriterPanicked"],["std::io::WriterPanicked","has description","Error returned for the buffered data from `BufWriter::into_parts`, when the underlying writer has previously panicked. Contains the (possibly partly written) buffered data."],["std::io::Chain","has description","Adapter to chain together two readers."],["std::io::Take","has description","Reader adapter which limits the bytes read from an underlying reader."]],"startIndex":14955,"endIndex":55346},{"triples":[["std::io::ErrorKind::IsADirectory","has description","The filesystem object is, unexpectedly, a directory."],["std::io::ErrorKind::DirectoryNotEmpty","has description","A non-empty directory was specified where an empty directory was expected."],["std::io::ErrorKind::ReadOnlyFilesystem","has description","The filesystem or storage medium is read-only."],["std::io::ErrorKind::FilesystemLoop","has description","Loop in the filesystem or IO subsystem; too many levels of symbolic links."],["std::io::ErrorKind::StaleNetworkFileHandle","has description","Stale network file handle."],["std::io::ErrorKind::InvalidInput","has description","A parameter was incorrect."],["std::io::ErrorKind::StorageFull","has description","The underlying storage (typically, a filesystem) is full."],["std::io::ErrorKind::ResourceBusy","has description","Resource is busy."],["std::io::ErrorKind::Deadlock","has description","Deadlock (avoided)."]],"startIndex":22311,"endIndex":63131},{"triples":[["std::io::ErrorKind","implements trait","std::fmt::Display"],["std::io::Error","implements trait","std::convert::From<std::io::ErrorKind>"]],"startIndex":35485,"endIndex":76213},{"triples":[["std::io::ErrorKind","implements trait","std::cmp::PartialEq"],["std::io::ErrorKind","implements trait","std::cmp::PartialOrd"],["std::io::ErrorKind","has method","eq"],["std::io::ErrorKind","has method","ne"],["std::io::ErrorKind","has method","lt"],["std::io::ErrorKind","has method","le"],["std::io::ErrorKind","has method","gt"],["std::io::ErrorKind","has method","ge"],["std::io::ErrorKind::eq","has feature","must_use"],["std::io::ErrorKind::ne","has feature","must_use"],["std::io::ErrorKind::lt","has feature","must_use"],["std::io::ErrorKind::le","has feature","must_use"],["std::io::ErrorKind::gt","has feature","must_use"],["std::io::ErrorKind::ge","has feature","must_use"]],"startIndex":50565,"endIndex":91193},{"triples":[["T","implements trait","std::convert::From"],["std::convert::From","has method","from"],["std::convert::Into","implements trait","std::convert::From"]],"startIndex":60649,"endIndex":101717},{"triples":[["std::borrow::ToOwned::clone_into","has description","Uses borrowed data to replace owned data, usually by cloning."],["T","implements trait","std::fmt::Display"],["std::string::ToString","has method","to_string"],["std::convert::TryFrom","implements trait","std::marker::Sized"],["std::convert::Infallible","implements trait","std::error::Error"]],"startIndex":68900,"endIndex":93448}],"metrics":{"escapeCount":0,"costTime":954108,"totalUsage":{"prompt_tokens":114920,"completion_tokens":27498,"cached_tokens":0,"reasoning_tokens":24424},"chunkLength":6,"chunksInfo":[{"chunkIndex":0,"strLength":40391,"costTime":115572},{"chunkIndex":1,"strLength":40820,"costTime":217278},{"chunkIndex":2,"strLength":40728,"costTime":211393},{"chunkIndex":3,"strLength":40628,"costTime":217217},{"chunkIndex":4,"strLength":41068,"costTime":148670},{"chunkIndex":5,"strLength":24548,"costTime":43978}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::io::ErrorKind","adds feature","ArgumentListTooLong"],["std::io::ErrorKind","adds feature","CrossesDevices"],["std::io::ErrorKind","adds feature","Deadlock"],["std::io::ErrorKind","adds feature","DirectoryNotEmpty"],["std::io::ErrorKind","adds feature","ExecutableFileBusy"],["std::io::ErrorKind","adds feature","FileTooLarge"],["std::io::ErrorKind","adds feature","FilesystemLoop"],["std::io::ErrorKind","adds feature","FilesystemQuotaExceeded"],["std::io::ErrorKind","adds feature","HostUnreachable"],["std::io::ErrorKind","adds feature","InvalidFilename"],["std::io::ErrorKind","adds feature","IsADirectory"],["std::io::ErrorKind","adds feature","NetworkDown"],["std::io::ErrorKind","adds feature","NetworkUnreachable"],["std::io::ErrorKind","adds feature","NotADirectory"],["std::io::ErrorKind","adds feature","NotSeekable"],["std::io::ErrorKind","adds feature","OutOfMemory"],["std::io::ErrorKind","adds feature","ReadOnlyFilesystem"],["std::io::ErrorKind","adds feature","ResourceBusy"],["std::io::ErrorKind","adds feature","StaleNetworkFileHandle"],["std::io::ErrorKind","adds feature","StorageFull"],["std::io::ErrorKind","adds feature","TooManyLinks"],["std::io::ErrorKind","adds feature","Unsupported"],["std::io::ErrorKind","adds feature","Display"],["std::io::ErrorKind","adds feature","From<ErrorKind>"],["std::io::ErrorKind","adds feature","Hash"],["std::io::ErrorKind","adds feature","Ord"],["std::io::ErrorKind","adds feature","PartialOrd"],["std::io::ErrorKind","adds feature","StructuralEq"],["std::io::ErrorKind","adds feature","StructuralPartialEq"],["std::io::ErrorKind","adds feature","RefUnwindSafe"],["std::io::ErrorKind","adds feature","Send"],["std::io::ErrorKind","adds feature","Sync"],["std::io::ErrorKind","adds feature","Unpin"],["std::io::ErrorKind","adds feature","UnwindSafe"],["std::io","adds feature","read_to_string"],["std::io","adds feature","stderr_locked"],["std::io","adds feature","stdin_locked"],["std::io","adds feature","stdout_locked"],["std::io","adds feature","ReadBuf"],["std::io","adds feature","WriterPanicked"],["std::io::ErrorKind","removes feature","AddrNotAvailable"],["std::io::ErrorKind","removes feature","BrokenPipe"],["std::io::ErrorKind","removes feature","AlreadyExists"],["std::io::ErrorKind","removes feature","WouldBlock"],["std::io::ErrorKind","removes feature","InvalidInput"],["std::io::ErrorKind","removes feature","InvalidData"],["std::io::ErrorKind","removes feature","Other"],["std::io::ErrorKind","removes feature","Copy"],["std::convert::TryFrom","removes feature","Clone"]]}