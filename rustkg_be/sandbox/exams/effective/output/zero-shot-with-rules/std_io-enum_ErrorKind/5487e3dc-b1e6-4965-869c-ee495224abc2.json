{"create_time":"2025-04-05T10:27:05.042Z","id":"5487e3dc-b1e6-4965-869c-ee495224abc2","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-with-rules\\std_io-enum_ErrorKind\\merged_543b56fe-2055-4af6-b02e-dc819543031e.json","relations":["has description","has function","has struct","has variant","implements","stable since version"],"delete_triples":[{"triples":[["std::io::Chain","has description","Adaptor to chain together two readers."]],"startIndex":14955,"endIndex":55346},{"triples":[["std::io::ErrorKind","has variant","AddrNotAvailable"],["std::io::ErrorKind","has variant","BrokenPipe"],["std::io::ErrorKind","has variant","AlreadyExists"],["std::io::ErrorKind","has variant","WouldBlock"]],"startIndex":22311,"endIndex":63131},{"triples":[["std::io::Error::from","has description","Performs the conversion."],["std::io::ErrorKind","implements","Clone"]],"startIndex":35485,"endIndex":76213},{"triples":[["std::io::ErrorKind","implements","PartialEq<ErrorKind>"],["std::io::ErrorKind","implements","std::cmp::PartialOrd"],["std::io::ErrorKind::le","has feature","must_use"],["std::io::ErrorKind::gt","has feature","must_use"],["std::io::ErrorKind::ge","has feature","must_use"]],"startIndex":50565,"endIndex":91193},{"triples":[],"startIndex":60649,"endIndex":101717},{"triples":[["std::borrow::BorrowMut::borrow_mut","has description","Performs the conversion."],["std::borrow::ToOwned::to_owned","has description","Creates owned data from borrowed data, usually by cloning."]],"startIndex":68900,"endIndex":93448}],"add_triples":[{"triples":[["std::io","has struct","ReadBuf"],["std::io::ReadBuf","has description","A wrapper around a byte buffer that is incrementally filled and initialized."],["std::io","has struct","WriterPanicked"],["std::io::WriterPanicked","has description","Error returned for the buffered data from `BufWriter::into_parts`, when the underlying writer has previously panicked. Contains the (possibly partly written) buffered data."],["std::io","has function","read_to_string"],["std::io::read_to_string","has description","Read all bytes from a reader into a new `String`."],["std::io","has function","stderr_locked"],["std::io::stderr_locked","has description","Constructs a new locked handle to the standard error of the current process."],["std::io","has function","stdin_locked"],["std::io::stdin_locked","has description","Constructs a new locked handle to the standard input of the current process."],["std::io","has function","stdout_locked"],["std::io::stdout_locked","has description","Constructs a new locked handle to the standard output of the current process."],["std::io::ErrorKind","has variant","HostUnreachable"],["std::io::ErrorKind","has variant","NetworkUnreachable"],["std::io::ErrorKind","has variant","NetworkDown"],["std::io::ErrorKind","has variant","ArgumentListTooLong"],["std::io::ErrorKind","has variant","CrossesDevices"],["std::io::ErrorKind","has variant","Deadlock"],["std::io::ErrorKind","has variant","DirectoryNotEmpty"],["std::io::ErrorKind","has variant","ExecutableFileBusy"],["std::io::ErrorKind","has variant","FileTooLarge"],["std::io::ErrorKind","has variant","FilesystemLoop"],["std::io::ErrorKind","has variant","FilesystemQuotaExceeded"],["std::io::ErrorKind","has variant","InvalidFilename"],["std::io::ErrorKind","has variant","IsADirectory"],["std::io::ErrorKind","has variant","NotADirectory"],["std::io::ErrorKind","has variant","NotSeekable"],["std::io::ErrorKind","has variant","OutOfMemory"],["std::io::ErrorKind","has variant","ReadOnlyFilesystem"],["std::io::ErrorKind","has variant","ResourceBusy"],["std::io::ErrorKind","has variant","StaleNetworkFileHandle"],["std::io::ErrorKind","has variant","StorageFull"],["std::io::ErrorKind","has variant","TooManyLinks"],["std::io::ErrorKind","has variant","Unsupported"],["std::io::ErrorKind","implements","Display"],["std::io::ErrorKind","implements","From<ErrorKind>"],["std::io::Chain","has description","Adapter to chain together two readers."]],"startIndex":14955,"endIndex":55346},{"triples":[],"startIndex":22311,"endIndex":63131},{"triples":[["std::io::Error::from","has description","Intended for use for errors not exposed to the user, where allocating onto the heap (for normal construction via Error::new) is too costly."],["std::io::ErrorKind","stable since version","1.60.0"]],"startIndex":35485,"endIndex":76213},{"triples":[],"startIndex":50565,"endIndex":91193},{"triples":[],"startIndex":60649,"endIndex":101717},{"triples":[["std::string::ToString::to_string","has description","Converts the given value to a String."],["std::borrow::BorrowMut::borrow_mut","has description","Uses borrowed data to replace owned data, usually by cloning."]],"startIndex":68900,"endIndex":93448}],"metrics":{"escapeCount":0,"costTime":811007,"totalUsage":{"prompt_tokens":112379,"completion_tokens":22793,"cached_tokens":0,"reasoning_tokens":21110},"chunkLength":6,"chunksInfo":[{"chunkIndex":0,"strLength":40391,"costTime":75939},{"chunkIndex":1,"strLength":40820,"costTime":70149},{"chunkIndex":2,"strLength":40728,"costTime":146373},{"chunkIndex":3,"strLength":40628,"costTime":130414},{"chunkIndex":4,"strLength":41068,"costTime":128681},{"chunkIndex":5,"strLength":24548,"costTime":259451}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::io","adds struct","ReadBuf"],["std::io","adds struct","WriterPanicked"],["std::io","adds function","read_to_string"],["std::io","adds function","stderr_locked"],["std::io","adds function","stdin_locked"],["std::io","adds function","stdout_locked"],["std::io::ErrorKind","adds variant","HostUnreachable"],["std::io::ErrorKind","adds variant","NetworkUnreachable"],["std::io::ErrorKind","adds variant","NetworkDown"],["std::io::ErrorKind","adds variant","ArgumentListTooLong"],["std::io::ErrorKind","adds variant","CrossesDevices"],["std::io::ErrorKind","adds variant","Deadlock"],["std::io::ErrorKind","adds variant","DirectoryNotEmpty"],["std::io::ErrorKind","adds variant","ExecutableFileBusy"],["std::io::ErrorKind","adds variant","FileTooLarge"],["std::io::ErrorKind","adds variant","FilesystemLoop"],["std::io::ErrorKind","adds variant","FilesystemQuotaExceeded"],["std::io::ErrorKind","adds variant","InvalidFilename"],["std::io::ErrorKind","adds variant","IsADirectory"],["std::io::ErrorKind","adds variant","NotADirectory"],["std::io::ErrorKind","adds variant","NotSeekable"],["std::io::ErrorKind","adds variant","OutOfMemory"],["std::io::ErrorKind","adds variant","ReadOnlyFilesystem"],["std::io::ErrorKind","adds variant","ResourceBusy"],["std::io::ErrorKind","adds variant","StaleNetworkFileHandle"],["std::io::ErrorKind","adds variant","StorageFull"],["std::io::ErrorKind","adds variant","TooManyLinks"],["std::io::ErrorKind","adds variant","Unsupported"],["std::io::ErrorKind","removes variant","AddrNotAvailable"],["std::io::ErrorKind","removes variant","BrokenPipe"],["std::io::ErrorKind","removes variant","AlreadyExists"],["std::io::ErrorKind","removes variant","WouldBlock"],["std::io::ErrorKind","adds feature","Display"],["std::io::ErrorKind","adds feature","From<ErrorKind>"],["std::io::ErrorKind","removes feature","Clone"],["std::io::ErrorKind","removes feature","PartialEq<ErrorKind>"],["std::io::ErrorKind","removes feature","std::cmp::PartialOrd"],["std::io::Chain","updates description","Adapter to chain together two readers."],["std::io::Error::from","updates description","Intended for use for errors not exposed to the user, where allocating onto the heap (for normal construction via Error::new) is too costly."],["std::borrow::BorrowMut::borrow_mut","updates description","Uses borrowed data to replace owned data, usually by cloning."],["std::borrow::ToOwned::to_owned","removes description","Creates owned data from borrowed data, usually by cloning."],["std::io::ErrorKind","adds stable since version","1.60.0"],["std::io::ErrorKind::le","removes feature","must_use"],["std::io::ErrorKind::gt","removes feature","must_use"],["std::io::ErrorKind::ge","removes feature","must_use"],["std::string::ToString::to_string","adds description","Converts the given value to a String."]]}