{"create_time":"2025-04-05T09:41:32.061Z","id":"3b3a671b-5fd6-4852-91a5-c816e63fcb66","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.70-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/mpsc/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-with-rules\\std_sync_mpsc-index\\merged_34dd9312-4f91-474e-a148-772320be81f3.json","relations":["contains","has_description","has_method","has_stability","is_a","is_returned_by","stable_since"],"delete_triples":[{"triples":[["std::sync::mpsc::IntoIter","has_description","An owning iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["std::sync::mpsc::Iter","has_description","An iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["mpsc","contains","Sender"],["mpsc","contains","SyncSender"],["mpsc","contains","Receiver"],["mpsc","contains","IntoIter"],["mpsc","contains","Iter"],["mpsc","contains","RecvError"],["mpsc","contains","SendError"],["mpsc","contains","Handle"],["mpsc","contains","Select"],["mpsc","contains","TryRecvError"],["mpsc","contains","TrySendError"],["mpsc","contains","channel"],["mpsc","contains","sync_channel"]],"startIndex":21210,"endIndex":61519},{"triples":[["std::sync::mpsc::sync_channel","has_description","Creates a new synchronous, bounded channel."]],"startIndex":22484,"endIndex":24478}],"add_triples":[{"triples":[["std::sync::mpsc::IntoIter","has_description","An owning iterator over messages on a Receiver created by Receiver::into_iter."],["std::sync::mpsc::Iter","has_description","An iterator over messages on a Receiver created by Receiver::iter."],["std::sync::mpsc::TryIter","has_description","An iterator that attempts to yield all pending values for a Receiver, created by try_iter."],["std::sync::mpsc::Receiver","has_method","into_iter"],["std::sync::mpsc::Receiver","has_method","iter"],["std::sync::mpsc::Receiver","has_method","try_iter"]],"startIndex":21210,"endIndex":61519},{"triples":[["std::sync::mpsc::Receiver","has_method","recv"],["std::sync::mpsc::sync_channel","has_description","Creates a new synchronous, bounded channel. All data sent on the SyncSender will become available on the Receiver in the same order as it was sent. Like asynchronous channels, the Receiver will block until a message becomes available. sync_channel differs greatly in the semantics of the sender, however."]],"startIndex":22484,"endIndex":24478}],"metrics":{"escapeCount":0,"costTime":255318,"totalUsage":{"prompt_tokens":23483,"completion_tokens":7031,"cached_tokens":0,"reasoning_tokens":6370},"chunkLength":2,"chunksInfo":[{"chunkIndex":0,"strLength":40309,"costTime":131995},{"chunkIndex":1,"strLength":1994,"costTime":123323}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::sync::mpsc::Receiver","adds feature","into_iter"],["std::sync::mpsc::Receiver","adds feature","iter"],["std::sync::mpsc::Receiver","adds feature","try_iter"],["std::sync::mpsc::Receiver","adds feature","recv"]]}