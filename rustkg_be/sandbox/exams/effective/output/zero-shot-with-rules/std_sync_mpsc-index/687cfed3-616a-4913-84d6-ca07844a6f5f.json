{"create_time":"2025-04-05T09:14:48.111Z","id":"687cfed3-616a-4913-84d6-ca07844a6f5f","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.10-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/mpsc/index.html","relations":["contains","has_description","has_stability","is_a","is_returned_by","returns","stable_since"],"add_triples":[{"triples":[["std::sync","contains","atomic"],["std::sync","contains","mpsc"],["std::sync::atomic","has_description","Atomic types"],["std::sync::mpsc","has_description","Multi-producer, single-consumer FIFO queue communication primitives."],["std::sync::mpsc","stable_since","1.0.0"],["std::sync::mpsc","contains","std::sync::mpsc::IntoIter"],["std::sync::mpsc::IntoIter","is_a","struct"],["std::sync::mpsc::IntoIter","has_description","An owning iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["std::sync::mpsc","contains","std::sync::mpsc::Iter"],["std::sync::mpsc::Iter","is_a","struct"],["std::sync::mpsc::Iter","has_description","An iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["std::sync::mpsc","contains","std::sync::mpsc::Receiver"],["std::sync::mpsc::Receiver","is_a","struct"],["std::sync::mpsc::Receiver","has_description","The receiving-half of Rust's channel type. This half can only be owned by one thread"],["std::sync::mpsc","contains","std::sync::mpsc::RecvError"],["std::sync::mpsc::RecvError","is_a","struct"],["std::sync::mpsc::RecvError","has_description","An error returned from the recv function on a Receiver."],["std::sync::mpsc::RecvError","is_returned_by","std::sync::mpsc::Receiver::recv"],["std::sync::mpsc","contains","std::sync::mpsc::SendError"],["std::sync::mpsc::SendError","is_a","struct"],["std::sync::mpsc::SendError","has_description","An error returned from the send function on channels."],["std::sync::mpsc::SendError","is_returned_by","std::sync::mpsc::Sender::send"],["std::sync::mpsc","contains","std::sync::mpsc::Sender"],["std::sync::mpsc::Sender","is_a","struct"],["std::sync::mpsc::Sender","has_description","The sending-half of Rust's asynchronous channel type. This half can only be owned by one thread, but it can be cloned to send to other threads."],["std::sync::mpsc","contains","std::sync::mpsc::SyncSender"],["std::sync::mpsc::SyncSender","is_a","struct"],["std::sync::mpsc::SyncSender","has_description","The sending-half of Rust's synchronous channel type. This half can only be owned by one thread, but it can be cloned to send to other threads."],["std::sync::mpsc","contains","std::sync::mpsc::TryRecvError"],["std::sync::mpsc::TryRecvError","is_a","enum"],["std::sync::mpsc::TryRecvError","has_description","This enumeration is the list of the possible reasons that try_recv could not return data when called."],["std::sync::mpsc::TryRecvError","is_returned_by","std::sync::mpsc::Receiver::try_recv"],["std::sync::mpsc","contains","std::sync::mpsc::TrySendError"],["std::sync::mpsc::TrySendError","is_a","enum"],["std::sync::mpsc::TrySendError","has_description","This enumeration is the list of the possible error outcomes for the SyncSender::try_send method."],["std::sync::mpsc::TrySendError","is_returned_by","std::sync::mpsc::SyncSender::try_send"],["std::sync::mpsc","contains","std::sync::mpsc::channel"],["std::sync::mpsc::channel","is_a","function"],["std::sync::mpsc::channel","has_description","Creates a new asynchronous channel, returning the sender/receiver halves."],["std::sync::mpsc::channel","returns","std::sync::mpsc::Sender"],["std::sync::mpsc::channel","returns","std::sync::mpsc::Receiver"],["std::sync::mpsc","contains","std::sync::mpsc::sync_channel"],["std::sync::mpsc::sync_channel","is_a","function"],["std::sync::mpsc::sync_channel","has_description","Creates a new synchronous, bounded channel."],["std::sync::mpsc::sync_channel","returns","std::sync::mpsc::SyncSender"],["std::sync::mpsc::sync_channel","returns","std::sync::mpsc::Receiver"],["std::sync::mpsc","contains","std::sync::mpsc::Handle"],["std::sync::mpsc::Handle","is_a","struct"],["std::sync::mpsc::Handle","has_stability","unstable"],["std::sync::mpsc","contains","std::sync::mpsc::Select"],["std::sync::mpsc::Select","is_a","struct"],["std::sync::mpsc::Select","has_stability","unstable"]],"startIndex":0,"endIndex":39000}],"metrics":{"escapeCount":0,"costTime":336723,"totalUsage":{"prompt_tokens":5883,"completion_tokens":9224,"cached_tokens":0,"reasoning_tokens":7759},"chunkLength":1,"chunksInfo":[{"contextLength":0,"contentLength":18066,"costTime":336723}]},"model":"deepseek-r1-250120","extraInfo":{}}