{"create_time":"2025-04-05T09:13:10.811Z","id":"ff498eb5-0b92-4b78-b4aa-615d69addafd","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.10-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/mpsc/index.html","relations":["can be cloned","contains","defines","has description","is a","provides","returns"],"add_triples":[{"triples":[["std::sync","contains","atomic"],["std::sync","contains","mpsc"],["std::sync::mpsc","contains","Receiver"],["std::sync::mpsc","contains","Sender"],["std::sync::mpsc","contains","SyncSender"],["std::sync::mpsc","contains","TryRecvError"],["std::sync::mpsc","contains","TrySendError"],["std::sync::mpsc","contains","channel"],["std::sync::mpsc","contains","sync_channel"],["Receiver","is a","struct"],["Sender","is a","struct"],["SyncSender","is a","struct"],["TryRecvError","is a","enum"],["TrySendError","is a","enum"],["channel","is a","function"],["sync_channel","is a","function"],["Receiver","has description","The receiving-half of Rust's channel type. This half can only be owned by one thread"],["Sender","has description","The sending-half of Rust's asynchronous channel type. This half can only be owned by one thread, but it can be cloned to send to other threads."],["SyncSender","has description","The sending-half of Rust's synchronous channel type. This half can only be owned by one thread, but it can be cloned to send to other threads."],["TryRecvError","has description","This enumeration is the list of the possible reasons that try_recv could not return data when called."],["TrySendError","has description","This enumeration is the list of the possible error outcomes for the SyncSender::try_send method."],["channel","has description","Creates a new asynchronous channel, returning the sender/receiver halves."],["sync_channel","has description","Creates a new synchronous, bounded channel."],["channel","returns","Sender"],["channel","returns","Receiver"],["sync_channel","returns","SyncSender"],["sync_channel","returns","Receiver"],["std::sync::mpsc","has description","Multi-producer, single-consumer FIFO queue communication primitives."],["std::sync::mpsc","provides","message-based communication over channels"],["std::sync::mpsc","defines","Sender"],["std::sync::mpsc","defines","SyncSender"],["std::sync::mpsc","defines","Receiver"],["Sender","can be cloned","to send to other threads"],["SyncSender","can be cloned","to send to other threads"]],"startIndex":0,"endIndex":39000}],"metrics":{"escapeCount":0,"costTime":240879,"totalUsage":{"prompt_tokens":5883,"completion_tokens":6501,"cached_tokens":0,"reasoning_tokens":5820},"chunkLength":1,"chunksInfo":[{"contextLength":0,"contentLength":18066,"costTime":240879}]},"model":"deepseek-r1-250120","extraInfo":{}}