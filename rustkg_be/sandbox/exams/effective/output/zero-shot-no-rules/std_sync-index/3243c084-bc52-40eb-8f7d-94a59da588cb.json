{"create_time":"2025-04-05T07:14:32.213Z","id":"3243c084-bc52-40eb-8f7d-94a59da588cb","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.40-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\std_sync-index\\merged_045988e1-6399-496e-8e65-59e6887ef6e9.json","relations":[],"delete_triples":[{"triples":[["std","包含子模块","arch"],["std","has_macro","await"],["std","has_keyword","fn"],["std","has_keyword","let"],["std","has_keyword","struct"],["arch","描述","SIMD and vendor intrinsics module."]],"startIndex":21144,"endIndex":60823},{"triples":[["std::sync::Weak","描述","A version of `Arc` that holds a non-owning reference to the managed value."],["Weak","描述","A version of Arc that holds a non-owning reference to the managed value."]],"startIndex":26174,"endIndex":33762}],"add_triples":[{"triples":[["std","包含子模块","array"],["array","描述","Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."],["std","has_macro","asm"],["std","has_macro","global_asm"],["std","has_keyword","as"],["std","has_keyword","async"],["std","has_keyword","Self"],["slice","描述","A contiguous growable array type with heap-allocated contents, written `Vec<T>`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."],["ptr","描述","Manually manage memory through raw pointers."]],"startIndex":21144,"endIndex":60823},{"triples":[["std::sync::Weak","描述","A version of `Arc` that holds a non-owning reference to the managed allocation."],["Weak","描述","A version of Arc that holds a non-owning reference to the managed allocation."]],"startIndex":26174,"endIndex":33762}],"metrics":{"escapeCount":0,"costTime":261296,"totalUsage":{"prompt_tokens":21289,"completion_tokens":7211,"cached_tokens":0,"reasoning_tokens":6777},"chunkLength":2,"chunksInfo":[{"chunkIndex":0,"strLength":39679,"costTime":89216},{"chunkIndex":1,"strLength":7588,"costTime":172080}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std","adds module","array"],["std","removes module","arch"],["std","adds macro","asm"],["std","adds macro","global_asm"],["std","removes macro","await"],["std","adds keyword","as"],["std","adds keyword","async"],["std","adds keyword","Self"],["std","removes keyword","fn"],["std","removes keyword","let"],["std","removes keyword","struct"],["array","adds description","Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."],["slice","adds description","A contiguous growable array type with heap-allocated contents, written `Vec<T>`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."],["ptr","adds description","Manually manage memory through raw pointers."],["std::sync::Weak","updates description","A version of `Arc` that holds a non-owning reference to the managed allocation."],["Weak","updates description","A version of Arc that holds a non-owning reference to the managed allocation."]]}