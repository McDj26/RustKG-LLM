{"create_time":"2025-04-05T07:02:01.663Z","id":"a50d3b99-be55-4835-b88d-c80ec24e078a","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.20-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\std_sync-index\\merged_3a226813-8e34-4c15-aadb-830fafa1a212.json","relations":["description","has constant","has enum","has struct","has submodule","has type definition","包含子模块","包含结构体","描述","状态"],"delete_triples":[{"triples":[["Arc","描述","An atomically reference counted wrapper for shared state."],["BarrierWaitResult","描述","A result returned from wait."],["Weak","描述","A weak pointer to an `Arc`."],["OnceState","描述","State yielded to the `call_once_force` method which can be used to query whether the `Once` was previously poisoned or not."]],"startIndex":20539,"endIndex":54877}],"add_triples":[{"triples":[["std::sync","description","Useful synchronization primitives."],["Arc","描述","A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."],["BarrierWaitResult","描述","A BarrierWaitResult is returned by wait when all threads in the Barrier have rendezvoused."],["Weak","描述","A version of Arc that holds a non-owning reference to the managed value."],["OnceState","描述","State yielded to call_once_force which can query if Once was previously poisoned."],["std::sync","has struct","std::sync::Weak"]],"startIndex":20539,"endIndex":54877}],"metrics":{"escapeCount":0,"costTime":44121,"totalUsage":{"prompt_tokens":13092,"completion_tokens":1145,"cached_tokens":0,"reasoning_tokens":833},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":34338,"costTime":44121}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["Arc","更新描述","A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."],["BarrierWaitResult","更新描述","A BarrierWaitResult is returned by wait when all threads in the Barrier have rendezvoused."],["Weak","更新描述","A version of Arc that holds a non-owning reference to the managed value."],["OnceState","更新描述","State yielded to call_once_force which can query if Once was previously poisoned."],["std::sync","添加描述","Useful synchronization primitives."],["std::sync","添加结构体","std::sync::Weak"]]}