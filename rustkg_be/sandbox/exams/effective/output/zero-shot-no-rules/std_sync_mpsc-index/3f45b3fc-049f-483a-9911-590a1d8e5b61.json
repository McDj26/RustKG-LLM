{"create_time":"2025-04-05T07:12:28.275Z","id":"3f45b3fc-049f-483a-9911-590a1d8e5b61","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/mpsc/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\std_sync_mpsc-index\\merged_3243d33e-1cfd-4d5a-a0f9-9d68e3be1be4.json","relations":[],"delete_triples":[{"triples":[["Receiver","description","The receiving-half of Rust's channel type. This half can only be owned by one thread"],["std::sync::mpsc","description","Multi-producer, single-consumer FIFO queue communication primitives."]],"startIndex":21900,"endIndex":61981},{"triples":[],"startIndex":23452,"endIndex":26342}],"add_triples":[{"triples":[["Receiver","description","The receiving-half of Rust's channel type. This half can only be owned by one thread, created by Receiver::into_iter, iter, and try_iter methods."],["std::sync::mpsc","description","Multi-producer, single-consumer FIFO queue communication primitives. This module provides both asynchronous and synchronous channels."]],"startIndex":21900,"endIndex":61981},{"triples":[],"startIndex":23452,"endIndex":26342}],"metrics":{"escapeCount":0,"costTime":271419,"totalUsage":{"prompt_tokens":19284,"completion_tokens":7401,"cached_tokens":0,"reasoning_tokens":7205},"chunkLength":2,"chunksInfo":[{"chunkIndex":0,"strLength":40081,"costTime":231692},{"chunkIndex":1,"strLength":2890,"costTime":39727}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["Receiver","updates description","The receiving-half of Rust's channel type. This half can only be owned by one thread, created by Receiver::into_iter, iter, and try_iter methods."],["std::sync::mpsc","updates description","Multi-producer, single-consumer FIFO queue communication primitives. This module provides both asynchronous and synchronous channels."]]}