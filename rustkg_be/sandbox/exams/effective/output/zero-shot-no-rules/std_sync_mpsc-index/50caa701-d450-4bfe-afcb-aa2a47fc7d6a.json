{"create_time":"2025-04-05T07:15:57.409Z","id":"50caa701-d450-4bfe-afcb-aa2a47fc7d6a","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.70-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/mpsc/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\std_sync_mpsc-index\\merged_3f45b3fc-049f-483a-9911-590a1d8e5b61.json","relations":["description"],"delete_triples":[{"triples":[["std::sync::mpsc","description","Multi-producer, single-consumer FIFO queue communication primitives."],["Receiver","description","The receiving-half of Rust's channel type. This half can only be owned by one thread"],["RecvTimeoutError","description","This enumeration is the list of possible errors that made recv_timeout unable to return data."],["IntoIter","description","An owning iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."],["Iter","description","An iterator over messages on a receiver, this iterator will block whenever next is called, waiting for a new message, and None will be returned when the corresponding channel has hung up."]],"startIndex":21210,"endIndex":61519},{"triples":[],"startIndex":22484,"endIndex":24478}],"add_triples":[{"triples":[["std::sync::mpsc","description","Multi-producer, single-consumer FIFO queue communication primitives. This module provides both asynchronous and synchronous channels."],["Receiver","description","The receiving-half of Rust's channel type. This half can only be owned by one thread, created by Receiver::into_iter, iter, and try_iter methods."],["RecvTimeoutError","description","This enumeration is the list of possible errors that made recv_timeout unable to return data when called. This can occur with both a channel and a sync_channel."],["IntoIter","description","An owning iterator over messages on a Receiver, created by into_iter."],["Iter","description","An iterator over messages on a Receiver, created by iter."]],"startIndex":21210,"endIndex":61519},{"triples":[],"startIndex":22484,"endIndex":24478}],"metrics":{"escapeCount":0,"costTime":206459,"totalUsage":{"prompt_tokens":19499,"completion_tokens":5801,"cached_tokens":0,"reasoning_tokens":5387},"chunkLength":2,"chunksInfo":[{"chunkIndex":0,"strLength":40309,"costTime":181169},{"chunkIndex":1,"strLength":1994,"costTime":25290}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::sync::mpsc","updates description","Multi-producer, single-consumer FIFO queue communication primitives. This module provides both asynchronous and synchronous channels."],["Receiver","updates description","The receiving-half of Rust's channel type. This half can only be owned by one thread, created by Receiver::into_iter, iter, and try_iter methods."],["RecvTimeoutError","updates description","This enumeration is the list of possible errors that made recv_timeout unable to return data when called. This can occur with both a channel and a sync_channel."],["IntoIter","updates description","An owning iterator over messages on a Receiver, created by into_iter."],["Iter","updates description","An iterator over messages on a Receiver, created by iter."]]}