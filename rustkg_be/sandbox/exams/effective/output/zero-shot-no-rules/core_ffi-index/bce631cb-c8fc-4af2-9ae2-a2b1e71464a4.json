{"create_time":"2025-04-05T07:07:22.360Z","id":"bce631cb-c8fc-4af2-9ae2-a2b1e71464a4","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/core/ffi/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\core_ffi-index\\merged_815481c6-19a8-467b-806a-27cd8f9a1473.json","relations":["contains","description","is_a","part_of"],"delete_triples":[{"triples":[["core::arch","description","Platform dependent vendor intrinsics."],["core::ptr","description","Raw, unsafe pointers, `*const T`, and `*mut T`."],["core::ffi","description","Utilities related to FFI bindings."],["core::assert","description","Ensure that a boolean expression is `true` at runtime."],["core::hint","description","Hints to compiler that affects how code should be emitted or optimized."]],"startIndex":16638,"endIndex":43938}],"add_triples":[{"triples":[["core::arch","description","SIMD and vendor intrinsics module."],["core::ptr","description","Manually manage memory through raw pointers."],["core::ffi","description","Utilities related to foreign function interface (FFI) bindings."],["core::assert","description","Asserts that a boolean expression is true at runtime."],["core::hint","description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["core::lazy","description","Lazy values and one-time initialization of static data."],["core::lazy","part_of","core"],["core::cfg_accessible","is_a","macro"],["core::cfg_accessible","description","Keeps the item it's applied to if the passed path is accessible, and removes it otherwise."],["core::cfg_accessible","part_of","core"],["core::llvm_asm","is_a","macro"],["core::llvm_asm","description","LLVM-style inline assembly."],["core::llvm_asm","part_of","core"],["core::raw_const","is_a","macro"],["core::raw_const","description","Create a `const` raw pointer to a place, without creating an intermediate reference."],["core::raw_const","part_of","core"],["core::raw_mut","is_a","macro"],["core::raw_mut","description","Create a `mut` raw pointer to a place, without creating an intermediate reference."],["core::raw_mut","part_of","core"],["core::ffi::VaList","description","A wrapper for a va_list"],["core::ffi::VaList","part_of","core::ffi"],["core::ffi::VaListImpl","description","Basic implementation of a va_list."],["core::ffi::VaListImpl","part_of","core::ffi"]],"startIndex":16638,"endIndex":43938}],"metrics":{"escapeCount":0,"costTime":75952,"totalUsage":{"prompt_tokens":16058,"completion_tokens":2144,"cached_tokens":0,"reasoning_tokens":1511},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":27300,"costTime":75952}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["core::arch","updates description","SIMD and vendor intrinsics module."],["core::ptr","updates description","Manually manage memory through raw pointers."],["core::ffi","updates description","Utilities related to foreign function interface (FFI) bindings."],["core::assert","updates description","Asserts that a boolean expression is true at runtime."],["core::hint","updates description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["core","adds module","core::lazy"],["core","adds macro","core::cfg_accessible"],["core","adds macro","core::llvm_asm"],["core","adds macro","core::raw_const"],["core","adds macro","core::raw_mut"],["core::ffi","adds struct","VaList"],["core::ffi","adds struct","VaListImpl"]]}