{"create_time":"2025-04-05T07:06:05.197Z","id":"815481c6-19a8-467b-806a-27cd8f9a1473","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.50-x86_64-pc-windows-msvc/share/doc/rust/html/core/ffi/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\core_ffi-index\\merged_26779ff3-822e-43e2-a4b1-4e553584aae6.json","relations":["contains","description","equivalent_to","has_description","is_a","is_part_of","part_of"],"delete_triples":[{"triples":[["core::ffi","description","Utilities related to FFI bindings."],["core::hint","description","Hints to compiler that affects how code should be emitted or optimized."],["core::include_str","description","Includes a utf8-encoded file as a string."],["core::unimplemented","description","A standardized placeholder for marking unfinished code."]],"startIndex":16701,"endIndex":30231}],"add_triples":[{"triples":[["core::ffi","description","Utilities related to foreign function interface (FFI) bindings."],["core::hint","description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["core::lazy","description","Lazy values and one-time initialization of static data."],["core::lazy","part_of","core"],["core::primitive","description","This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."],["core::primitive","part_of","core"],["core::cfg_accessible","is_a","macro"],["core::cfg_accessible","description","Keeps the item it's applied to if the passed path is accessible, and removes it otherwise."],["core::cfg_accessible","part_of","core"],["core::llvm_asm","is_a","macro"],["core::llvm_asm","description","LLVM-style inline assembly."],["core::llvm_asm","part_of","core"],["core::raw_const","is_a","macro"],["core::raw_const","description","Create a `const` raw pointer to a place, without creating an intermediate reference."],["core::raw_const","part_of","core"],["core::raw_mut","is_a","macro"],["core::raw_mut","description","Create a `mut` raw pointer to a place, without creating an intermediate reference."],["core::raw_mut","part_of","core"],["core::include_str","description","Includes a UTF-8 encoded file as a string."],["core::unimplemented","description","Indicates unimplemented code by panicking with a message of \"not implemented\"."],["core::ffi::VaList","description","A wrapper for a va_list"],["core::ffi::VaListImpl","description","Basic implementation of a va_list."]],"startIndex":16701,"endIndex":30231}],"metrics":{"escapeCount":0,"costTime":149864,"totalUsage":{"prompt_tokens":10425,"completion_tokens":4026,"cached_tokens":0,"reasoning_tokens":3404},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":13530,"costTime":149864}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["core::ffi","updates description","Utilities related to foreign function interface (FFI) bindings."],["core::hint","updates description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["core::include_str","updates description","Includes a UTF-8 encoded file as a string."],["core::unimplemented","updates description","Indicates unimplemented code by panicking with a message of \"not implemented\"."],["core::lazy","adds feature","core::lazy"],["core::primitive","adds feature","core::primitive"],["core::cfg_accessible","adds feature","core::cfg_accessible"],["core::llvm_asm","adds feature","core::llvm_asm"],["core::raw_const","adds feature","core::raw_const"],["core::raw_mut","adds feature","core::raw_mut"],["core::ffi::VaList","adds feature","core::ffi::VaList"],["core::ffi::VaListImpl","adds feature","core::ffi::VaListImpl"]]}