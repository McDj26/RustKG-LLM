{"create_time":"2025-04-05T07:07:00.657Z","id":"b5cf1ad0-e17f-4707-bd09-8c3f3c9b2942","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/core/ffi/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\core_ffi-index\\merged_815481c6-19a8-467b-806a-27cd8f9a1473.json","relations":["contains","description","equivalent_to","is_a","part_of"],"delete_triples":[{"triples":[["core::ffi","description","Utilities related to FFI bindings."],["core::hint","description","Hints to compiler that affects how code should be emitted or optimized."]],"startIndex":16638,"endIndex":43938}],"add_triples":[{"triples":[["core::ffi","description","Utilities related to foreign function interface (FFI) bindings."],["core::ffi::VaList","description","A wrapper for a va_list"],["core::ffi::VaListImpl","description","Basic implementation of a va_list."],["core::hint","description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["core::lazy","description","Lazy values and one-time initialization of static data."],["core::lazy","part_of","core"],["core::primitive","description","This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."],["core::primitive","part_of","core"],["core::cfg_accessible","is_a","macro"],["core::cfg_accessible","part_of","core"],["core::cfg_accessible","description","Keeps the item it's applied to if the passed path is accessible, and removes it otherwise."],["core::llvm_asm","is_a","macro"],["core::llvm_asm","part_of","core"],["core::llvm_asm","description","LLVM-style inline assembly."],["core::raw_const","is_a","macro"],["core::raw_const","part_of","core"],["core::raw_const","description","Create a `const` raw pointer to a place, without creating an intermediate reference."],["core::raw_mut","is_a","macro"],["core::raw_mut","part_of","core"],["core::raw_mut","description","Create a `mut` raw pointer to a place, without creating an intermediate reference."]],"startIndex":16638,"endIndex":43938}],"metrics":{"escapeCount":0,"costTime":53138,"totalUsage":{"prompt_tokens":16058,"completion_tokens":1435,"cached_tokens":0,"reasoning_tokens":920},"chunkLength":1,"chunksInfo":[{"chunkIndex":0,"strLength":27300,"costTime":53138}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["core::ffi","updated description","Utilities related to foreign function interface (FFI) bindings."],["core::hint","updated description","Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."],["core","adds feature","core::lazy"],["core","adds feature","core::primitive"],["core","adds feature","core::cfg_accessible"],["core","adds feature","core::llvm_asm"],["core","adds feature","core::raw_const"],["core","adds feature","core::raw_mut"],["core::ffi","adds feature","core::ffi::VaList"],["core::ffi","adds feature","core::ffi::VaListImpl"]]}