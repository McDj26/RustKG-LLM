{"create_time":"2025-04-05T07:57:44.702Z","id":"ce532b6e-77f4-4496-9dfa-c642bab4a18d","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\std-index\\merged_34565b54-bc30-4812-a09a-7fd7e8e50467.json","relations":["has_description","包含模块","是宏"],"delete_triples":[{"triples":[],"startIndex":21415,"endIndex":61628},{"triples":[["std","包含模块","array"],["asm","是宏","标准库"],["asm","has_description","Inline assembly."],["is_aarch64_feature_detected!","是宏","标准库"],["is_arm_feature_detected!","是宏","标准库"]],"startIndex":35045,"endIndex":75737},{"triples":[["trace_macros!","has_description","Enables or disables tracing functionality used for debugging macros"],["assert!","has_description","Asserts that a boolean expression is true at runtime"],["assert!","has_description","Asserts that a boolean expression is true at runtime."]],"startIndex":51690,"endIndex":92247},{"triples":[],"startIndex":55311,"endIndex":64533}],"add_triples":[{"triples":[],"startIndex":21415,"endIndex":61628},{"triples":[["std","包含模块","arch"],["std::arch","has_description","SIMD and vendor intrinsics module."],["concat_bytes","是宏","标准库"],["concat_bytes","has_description","Concatenates literals into a byte slice."],["concat_idents","是宏","标准库"],["concat_idents","has_description","Concatenates identifiers into one identifier."],["i8","has_description","Constants for the 8-bit signed integer type."],["i16","has_description","Constants for the 16-bit signed integer type."],["i32","has_description","Constants for the 32-bit signed integer type."],["i64","has_description","Constants for the 64-bit signed integer type."],["i128","has_description","Constants for the 128-bit signed integer type."],["isize","has_description","Constants for the pointer-sized signed integer type."],["u8","has_description","Constants for the 8-bit unsigned integer type."],["u16","has_description","Constants for the 16-bit unsigned integer type."],["u32","has_description","Constants for the 32-bit unsigned integer type."],["u64","has_description","Constants for the 64-bit unsigned integer type."],["u128","has_description","Constants for the 128-bit unsigned integer type."],["usize","has_description","Constants for the pointer-sized unsigned integer type."]],"startIndex":35045,"endIndex":75737},{"triples":[["trace_macros!","has_description","Enables or disables tracing functionality used for debugging other macros."],["format_args_nl!","has_description","Same as format_args, but adds a newline in the end."],["assert!","has_description","Asserts that a boolean expression is <code>true</code> at runtime."]],"startIndex":51690,"endIndex":92247},{"triples":[["mut","has_description","A mutable variable, reference, or pointer."],["pub","has_description","Make an item visible to others."],["ref","has_description","Bind by reference during pattern matching."],["return","has_description","Return a value from a function."],["self","has_description","The receiver of a method, or the current module."],["static","has_description","A static item is a value which is valid for the entire duration of your program (a 'static lifetime)."],["struct","has_description","A type that is composed of other types."],["super","has_description","The parent of the current module."],["trait","has_description","A common interface for a group of types."],["true","has_description","A value of type bool representing logical true."],["type","has_description","Define an alias for an existing type."],["union","has_description","The Rust equivalent of a C-style union."],["unsafe","has_description","Code or interfaces whose memory safety cannot be verified by the type system."],["use","has_description","Import or rename items from other crates or modules."],["where","has_description","Add constraints that must be upheld to use an item."],["while","has_description","Loop while a condition is upheld."]],"startIndex":55311,"endIndex":64533}],"metrics":{"escapeCount":0,"costTime":631648,"totalUsage":{"prompt_tokens":49645,"completion_tokens":16855,"cached_tokens":0,"reasoning_tokens":15812},"chunkLength":4,"chunksInfo":[{"chunkIndex":0,"strLength":40213,"costTime":70413},{"chunkIndex":1,"strLength":40692,"costTime":183731},{"chunkIndex":2,"strLength":40557,"costTime":141625},{"chunkIndex":3,"strLength":9222,"costTime":235879}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["array","replaced by","arch"],["std","adds module","arch"],["标准库","adds macro","concat_bytes"],["标准库","adds macro","concat_idents"],["trace_macros!","adds feature","Enables or disables tracing functionality used for debugging other macros."],["assert!","adds feature","Asserts that a boolean expression is <code>true</code> at runtime."],["i8","adds feature","Constants for the 8-bit signed integer type."],["i16","adds feature","Constants for the 16-bit signed integer type."],["i32","adds feature","Constants for the 32-bit signed integer type."],["i64","adds feature","Constants for the 64-bit signed integer type."],["i128","adds feature","Constants for the 128-bit signed integer type."],["isize","adds feature","Constants for the pointer-sized signed integer type."],["u8","adds feature","Constants for the 8-bit unsigned integer type."],["u16","adds feature","Constants for the 16-bit unsigned integer type."],["u32","adds feature","Constants for the 32-bit unsigned integer type."],["u64","adds feature","Constants for the 64-bit unsigned integer type."],["u128","adds feature","Constants for the 128-bit unsigned integer type."],["usize","adds feature","Constants for the pointer-sized unsigned integer type."],["mut","adds feature","A mutable variable, reference, or pointer."],["pub","adds feature","Make an item visible to others."],["ref","adds feature","Bind by reference during pattern matching."],["return","adds feature","Return a value from a function."],["self","adds feature","The receiver of a method, or the current module."],["static","adds feature","A static item is a value which is valid for the entire duration of your program (a 'static lifetime)."],["struct","adds feature","A type that is composed of other types."],["super","adds feature","The parent of the current module."],["trait","adds feature","A common interface for a group of types."],["true","adds feature","A value of type bool representing logical true."],["type","adds feature","Define an alias for an existing type."],["union","adds feature","The Rust equivalent of a C-style union."],["unsafe","adds feature","Code or interfaces whose memory safety cannot be verified by the type system."],["use","adds feature","Import or rename items from other crates or modules."],["where","adds feature","Add constraints that must be upheld to use an item."],["while","adds feature","Loop while a condition is upheld."]]}