{"create_time":"2025-04-05T07:58:52.203Z","id":"3b5c292c-a4be-4846-8f1f-39432b36ba27","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\std-index\\merged_34565b54-bc30-4812-a09a-7fd7e8e50467.json","relations":["has_description","包含模块","是宏"],"delete_triples":[{"triples":[],"startIndex":21415,"endIndex":61628},{"triples":[["std","包含模块","array"],["std::array","has_description","Implementations of things like Eq for fixed-length arrays up to certain length. Eventually, we should be able to generalize to all lengths."],["global_asm!","是宏","标准库"],["format_args_nl!","是宏","标准库"]],"startIndex":35045,"endIndex":75737},{"triples":[["is_arm_feature_detected!","是宏","标准库"],["trace_macros!","has_description","Enables or disables tracing functionality used for debugging macros"]],"startIndex":51690,"endIndex":92247},{"triples":[],"startIndex":55311,"endIndex":64533}],"add_triples":[{"triples":[],"startIndex":21415,"endIndex":61628},{"triples":[["std","包含模块","arch"],["std::arch","has_description","SIMD and vendor intrinsics module."],["concat_bytes!","是宏","标准库"],["const_format_args!","是宏","标准库"],["concat_idents!","是宏","标准库"]],"startIndex":35045,"endIndex":75737},{"triples":[["log_syntax!","是宏","标准库"],["log_syntax!","has_description","Prints passed tokens into the standard output."],["trace_macros!","has_description","Enables or disables tracing functionality used for debugging other macros."]],"startIndex":51690,"endIndex":92247},{"triples":[["mut","has_description","A mutable variable, reference, or pointer."],["pub","has_description","Make an item visible to others."],["ref","has_description","Bind by reference during pattern matching."],["return","has_description","Return a value from a function."],["self","has_description","The receiver of a method, or the current module."],["static","has_description","A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."],["struct","has_description","A type that is composed of other types."],["super","has_description","The parent of the current module."],["trait","has_description","A common interface for a group of types."],["true","has_description","A value of type bool representing logical true."],["type","has_description","Define an alias for an existing type."],["union","has_description","The Rust equivalent of a C-style union."],["unsafe","has_description","Code or interfaces whose memory safety cannot be verified by the type system."],["use","has_description","Import or rename items from other crates or modules."],["where","has_description","Add constraints that must be upheld to use an item."],["while","has_description","Loop while a condition is upheld."]],"startIndex":55311,"endIndex":64533}],"metrics":{"escapeCount":0,"costTime":698639,"totalUsage":{"prompt_tokens":49152,"completion_tokens":18626,"cached_tokens":0,"reasoning_tokens":17890},"chunkLength":4,"chunksInfo":[{"chunkIndex":0,"strLength":40213,"costTime":37606},{"chunkIndex":1,"strLength":40692,"costTime":283047},{"chunkIndex":2,"strLength":40557,"costTime":90976},{"chunkIndex":3,"strLength":9222,"costTime":287010}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std","removes module","array"],["std","adds module","arch"],["global_asm!","removes macro","标准库"],["format_args_nl!","removes macro","标准库"],["is_arm_feature_detected!","removes macro","标准库"],["trace_macros!","updates description","Enables or disables tracing functionality used for debugging other macros."],["std::array","removes description","Implementations of things like Eq for fixed-length arrays up to certain length. Eventually, we should be able to generalize to all lengths."],["mut","adds description","A mutable variable, reference, or pointer."],["pub","adds description","Make an item visible to others."],["ref","adds description","Bind by reference during pattern matching."],["return","adds description","Return a value from a function."],["self","adds description","The receiver of a method, or the current module."],["static","adds description","A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."],["struct","adds description","A type that is composed of other types."],["super","adds description","The parent of the current module."],["trait","adds description","A common interface for a group of types."],["true","adds description","A value of type bool representing logical true."],["type","adds description","Define an alias for an existing type."],["union","adds description","The Rust equivalent of a C-style union."],["unsafe","adds description","Code or interfaces whose memory safety cannot be verified by the type system."],["use","adds description","Import or rename items from other crates or modules."],["where","adds description","Add constraints that must be upheld to use an item."],["while","adds description","Loop while a condition is upheld."]]}