{"create_time":"2025-04-05T09:05:02.747Z","id":"merged_38229ce8-377d-474f-bdae-94c5e2f53883","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.40-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","merged_triples":[{"triples":[["std","stable_since_version","1.0.0"],["std","has_description","The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."],["array","has_description","A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."],["bool","has_description","The boolean type."],["char","has_description","A character type."],["f32","has_description","The 32-bit floating point type."],["f64","has_description","The 64-bit floating point type."],["i16","has_description","The 16-bit signed integer type."],["i32","has_description","The 32-bit signed integer type."],["i64","has_description","The 64-bit signed integer type."],["i8","has_description","The 8-bit signed integer type."],["isize","has_description","The pointer-sized signed integer type."],["pointer","has_description","Raw, unsafe pointers, *const T, and *mut T."],["slice","has_description","A dynamically-sized view into a contiguous sequence, [T]."],["str","has_description","String slices."],["tuple","has_description","A finite heterogeneous sequence, (T, U, ..)."],["u16","has_description","The 16-bit unsigned integer type."],["u32","has_description","The 32-bit unsigned integer type."],["u64","has_description","The 64-bit unsigned integer type."],["u8","has_description","The 8-bit unsigned integer type."],["usize","has_description","The pointer-sized unsigned integer type."],["std::any","has_description","This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."],["std::ascii","has_description","Operations on ASCII strings and characters."],["std::borrow","has_description","A module for working with borrowed data."],["std::boxed","has_description","A pointer type for heap allocation."],["std::cell","has_description","Shareable mutable containers."],["std::char","has_description","A character type."],["std::clone","has_description","The Clone trait for types that cannot be 'implicitly copied'."],["std::cmp","has_description","Functionality for ordering and comparison."],["std::collections","has_description","Collection types."],["std::convert","has_description","Traits for conversions between types."],["std::default","has_description","The Default trait for types which may have meaningful default values."],["std::env","has_description","Inspection and manipulation of the process's environment."],["std::error","has_description","Traits for working with Errors."],["std::f32","has_description","The 32-bit floating point type."],["std::f64","has_description","The 64-bit floating point type."],["std::ffi","has_description","Utilities related to FFI bindings."],["std::fmt","has_description","Utilities for formatting and printing strings"],["std::fs","has_description","Filesystem manipulation operations."],["std::hash","has_description","Generic hashing support."],["std::i16","has_description","The 16-bit signed integer type."],["std::i32","has_description","The 32-bit signed integer type."],["std::i64","has_description","The 64-bit signed integer type."],["std::i8","has_description","The 8-bit signed integer type."],["std::io","has_description","Traits, helpers, and type definitions for core I/O functionality."],["std::isize","has_description","The pointer-sized signed integer type."],["std::iter","has_description","Composable external iteration."],["std::marker","has_description","Primitive traits and marker types representing basic 'kinds' of types."],["std::mem","has_description","Basic functions for dealing with memory."],["std::net","has_description","Networking primitives for TCP/UDP communication."],["std::num","has_description","Additional functionality for numerics."],["std::ops","has_description","Overloadable operators."],["std::option","has_description","Optional values."],["std::os","has_description","OS-specific functionality."],["std::panic","has_description","Panic support in the standard library"],["std::path","has_description","Cross-platform path manipulation."],["std::prelude","has_description","The Rust Prelude."],["std::process","has_description","Working with processes."],["std::ptr","has_description","Raw, unsafe pointers, *const T, and *mut T."],["std::rc","has_description","Thread-local reference-counted boxes (the Rc<T> type)."],["std::result","has_description","Error handling with the Result type."],["std::slice","has_description","A dynamically-sized view into a contiguous sequence, [T]."],["std::str","has_description","Unicode string slices."],["std::string","has_description","A UTF-8 encoded, growable string."],["std::sync","has_description","Useful synchronization primitives."],["std::thread","has_description","Native threads."],["std::time","has_description","Temporal quantification."],["std::u16","has_description","The 16-bit unsigned integer type."],["std::u32","has_description","The 32-bit unsigned integer type."],["std::u64","has_description","The 64-bit unsigned integer type."],["std::u8","has_description","The 8-bit unsigned integer type."],["std::usize","has_description","The pointer-sized unsigned integer type."],["std::vec","has_description","A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"],["assert!","has_description","Ensure that a boolean expression is true at runtime."],["assert_eq!","has_description","Asserts that two expressions are equal to each other."],["cfg!","has_description","Boolean evaluation of configuration flags."],["column!","has_description","A macro which expands to the column number on which it was invoked."],["concat!","has_description","Concatenates literals into a static string slice."],["concat_idents!","has_description","Concatenate identifiers into one identifier."],["debug_assert!","has_description","Ensure that a boolean expression is true at runtime."],["debug_assert_eq!","has_description","Asserts that two expressions are equal to each other."],["env!","has_description","Inspect an environment variable at compile time."],["file!","has_description","A macro which expands to the file name from which it was invoked."],["format!","has_description","Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."],["format_args!","has_description","The core macro for formatted string creation & output."],["include!","has_description","Parse the current given file as an expression."],["include_bytes!","has_description","Includes a file as a reference to a byte array."],["include_str!","has_description","Includes a utf8-encoded file as a string."],["line!","has_description","A macro which expands to the line number on which it was invoked."],["module_path!","has_description","Expands to a string that represents the current module path."],["option_env!","has_description","Optionally inspect an environment variable at compile time."],["panic!","has_description","The entry point for panic of Rust threads."],["print!","has_description","Macro for printing to the standard output."],["println!","has_description","Macro for printing to the standard output, with a newline."],["stringify!","has_description","A macro which stringifies its argument."],["thread_local!","has_description","Declare a new thread local storage key of type std::thread::LocalKey."],["try!","has_description","Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."],["unimplemented!","has_description","A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."],["unreachable!","has_description","A utility macro for indicating unreachable code."],["vec!","has_description","Creates a Vec containing the arguments."],["write!","has_description","Use the format! syntax to write data into a buffer."],["writeln!","has_description","Use the format! syntax to write data into a buffer, appending a newline."],["std::collections","defines","HashMap<K, V>"],["std::vec","defines","Vec<T>"],["std","属于","Rust Standard Library"],["Rust Standard Library","是基础","portable Rust software"],["std","包含模块","alloc"],["std","包含模块","collections"],["std","包含模块","core"],["std","包含模块","libc"],["std","包含模块","rustc_unicode"],["std","提供","Vec<T>"],["std","提供","Option<T>"],["array","是原始类型","Rust"],["bool","是原始类型","Rust"],["char","是原始类型","Rust"],["f32","是原始类型","Rust"],["f64","是原始类型","Rust"],["i16","是原始类型","Rust"],["i32","是原始类型","Rust"],["i64","是原始类型","Rust"],["i8","是原始类型","Rust"],["isize","是原始类型","Rust"],["pointer","是原始类型","Rust"],["slice","是原始类型","Rust"],["str","是原始类型","Rust"],["tuple","是原始类型","Rust"],["u16","是原始类型","Rust"],["u32","是原始类型","Rust"],["u64","是原始类型","Rust"],["u8","是原始类型","Rust"],["usize","是原始类型","Rust"],["assert!","是宏","标准库"],["format!","是宏","标准库"],["vec!","是宏","标准库"],["collections模块","定义","HashMap<K, V>"],["sync模块","包含","Mutex"],["io模块","提供","I/O功能"],["vec模块","定义","Vec<T>"],["any模块","实现","Any trait"],["collections模块","定义","集合类型"],["thread模块","提供","多线程支持"],["alloc","属于","Rust Standard Library"],["collections","属于","Rust Standard Library"],["core","属于","Rust Standard Library"],["libc","属于","Rust Standard Library"],["rustc_unicode","属于","Rust Standard Library"],["std","包含模块","any"],["any","描述","This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."],["std","包含模块","ascii"],["ascii","描述","Operations on ASCII strings and characters."],["std","包含模块","borrow"],["borrow","描述","A module for working with borrowed data."],["std","包含模块","boxed"],["boxed","描述","A pointer type for heap allocation."],["std","包含原始类型","array"],["array","描述","A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."],["std","包含原始类型","bool"],["bool","描述","The boolean type."],["std","包含原始类型","char"],["char","描述","A character type."],["std","包含宏","assert!"],["assert!","描述","Ensure that a boolean expression is true at runtime."],["std","包含宏","format!"],["format!","描述","Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."],["Vec<T>","属于模块","vec"],["Option<T>","属于模块","option"],["Result<T, E>","属于模块","result"],["Iterator","定义于","iter"],["std","包含模块","proc_macro"],["std","包含模块","std_unicode"],["i128","是原始类型","Rust"],["u128","是原始类型","Rust"],["eprint!","是宏","标准库"],["eprintln!","是宏","标准库"],["std::rc","has_description","Single-threaded reference-counting pointers."],["concat_idents!","是宏","标准库"],["try!","has_description","Helper macro for reducing boilerplate for matching Result together with converting downstream errors."],["println!","has_description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."],["write!","has_description","Write formatted data into a buffer."],["writeln!","has_description","Write formatted data into a buffer, with a newline appended."],["select!","是宏","标准库"],["select!","has_description","A macro to select an event from a number of receivers."],["proc_macro","属于","Rust Standard Library"],["std_unicode","属于","Rust Standard Library"],["assert_ne!","是宏","标准库"],["debug_assert_ne!","是宏","标准库"],["std::rc","has_description","Single-threaded reference-counting pointers. Rc stands for 'Reference Counted'"],["std::f32","has_description","This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["std::f64","has_description","This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."],["std::marker","has_description","Primitive traits and types representing basic properties of types."],["assert_ne!","has_description","Asserts that two expressions are not equal to each other (using PartialEq)."],["eprint!","has_description","Macro for printing to the standard error."],["eprintln!","has_description","Macro for printing to the standard error, with a newline."],["include!","has_description","Parse a file as an expression or an item according to the context."],["println!","has_description","Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n) alone (no additional CARRIAGE RETURN (\\r))."],["std::rc","has_description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["std","stable_since_version","1.40.0"],["slice","has_description","A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."],["std::future","has_description","Asynchronous values."],["std::pin","has_description","Types that pin data to its location in memory."],["std::task","has_description","Types and Traits for working with asynchronous tasks."],["std","包含模块","future"],["std","包含模块","pin"],["std","包含模块","task"],["std::ptr","has_description","Manually manage memory through raw pointers."],["future","has_description","Asynchronous values."],["task","has_description","Types and Traits for working with asynchronous tasks."],["pin","has_description","Types that pin data to its location in memory."],["std::array","has_description","Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."],["debug_assert_ne!","has_description","Asserts that two expressions are not equal to each other (using PartialEq)."]],"startIndex":0,"endIndex":39000},{"triples":[["test","属于","Rust Standard Library"],["test","has_description","Support code for rustc's built in unit-test and micro-benchmarking framework."],["arch","包含模块","std"],["arch","has_description","SIMD and vendor intrinsics module."],["hint","包含模块","std"],["hint","has_description","Hints to compiler that affects how code should be emitted or optimized."],["fn","是原始类型","Rust"],["i128","是原始类型","Rust"],["u128","是原始类型","Rust"],["unit","是原始类型","Rust"],["never","是原始类型","Rust"],["eprint!","是宏","标准库"],["eprintln!","是宏","标准库"],["is_x86_feature_detected!","是宏","标准库"],["std::rc","has_description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["std","包含模块","arch"],["reference","是原始类型","Rust"],["select!","是宏","标准库"],["select!","has_description","A macro to select an event from a number of receivers."],["future","包含模块","std"],["intrinsics","包含模块","std"],["pin","包含模块","std"],["task","包含模块","std"],["await!","是宏","标准库"],["dbg!","是宏","标准库"],["dbg!","has_description","Prints and returns the value of a given expression for quick and dirty debugging."],["todo!","是宏","标准库"],["log_syntax!","是宏","标准库"],["log_syntax!","has_description","Prints passed tokens into the standard output."],["std","包含模块","backtrace"],["std","包含模块","intrinsics"],["std::backtrace","has_description","Support for capturing a stack backtrace of an OS thread."],["std::intrinsics","has_description","Compiler intrinsics."],["asm!","是宏","标准库"],["asm!","has_description","Inline assembly."],["global_asm!","是宏","标准库"],["global_asm!","has_description","Module-level inline assembly."],["trait","has_description","A common interface for a class of types."],["true","has_description","A value of type bool representing logical true."],["type","has_description","Define an alias for an existing type."],["union","has_description","The Rust equivalent of a C-style union."],["unsafe","has_description","Code or interfaces whose memory safety cannot be verified by the type system."],["use","has_description","Import or rename items from other crates or modules."],["where","has_description","Add constraints that must be upheld to use an item."],["while","has_description","Loop while a condition is upheld."],["backtrace","has_description","Support for capturing stack backtraces of an OS thread."],["intrinsics","has_description","Compiler intrinsics."],["todo!","has_description","Indicates unfinished code."],["assert!","has_description","Asserts that a boolean expression is true at runtime."],["super","has_description","The parent of the current module."],["bool","是原始类型","Rust"],["cfg!","has_description","Evaluates boolean combinations of configuration flags at compile-time."],["column!","has_description","Expands to the column number at which it was invoked."],["eprint!","has_description","Prints to the standard error."]],"startIndex":39035,"endIndex":78987}],"changes_info_triples":[["std","updated version to","1.40.0"],["slice","updated description to","A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."],["std","adds module","future"],["std","adds module","pin"],["std","adds module","task"],["std","adds module","backtrace"],["std","adds module","intrinsics"],["assert_ne!","adds macro","标准库"],["debug_assert_ne!","adds macro","标准库"],["dbg!","adds macro","标准库"],["todo!","adds macro","标准库"],["log_syntax!","adds macro","标准库"],["asm!","adds macro","标准库"],["global_asm!","adds macro","标准库"],["select!","removed macro","标准库"],["try!","removed macro","标准库"],["std::arch","removed description","SIMD and vendor intrinsics module"],["std::future","adds description","Asynchronous values."],["std::pin","adds description","Types that pin data to its location in memory."],["std::task","adds description","Types and Traits for working with asynchronous tasks."],["std::backtrace","adds description","Support for capturing a stack backtrace of an OS thread."],["std::intrinsics","adds description","Compiler intrinsics."],["dbg!","adds description","Prints and returns the value of a given expression for quick and dirty debugging."],["log_syntax!","adds description","Prints passed tokens into the standard output."],["asm!","adds description","Inline assembly."],["global_asm!","adds description","Module-level inline assembly."],["trait","adds description","A common interface for a class of types."],["true","adds description","A value of type bool representing logical true."],["type","adds description","Define an alias for an existing type."],["union","adds description","The Rust equivalent of a C-style union."],["unsafe","adds description","Code or interfaces whose memory safety cannot be verified by the type system."],["use","adds description","Import or rename items from other crates or modules."],["where","adds description","Add constraints that must be upheld to use an item."],["while","adds description","Loop while a condition is upheld."],["std","stable_since_version updated to","1.40.0"],["slice","has_description updated to","A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."],["std::ptr","has_description updated to","Manually manage memory through raw pointers."],["pin","has_description updated to","Types that pin data to its location in memory."],["assert!","has_description updated to","Asserts that a boolean expression is true at runtime."],["try!","removed 是宏","标准库"],["select!","added 是宏","标准库"],["todo!","added 是宏","标准库"],["asm!","added 是宏","标准库"],["dbg!","added 是宏","标准库"],["std","added 包含模块","future"],["std","added 包含模块","task"],["std","added 包含模块","backtrace"],["std","added 包含模块","intrinsics"],["future","added has_description","Asynchronous values."],["task","added has_description","Types and Traits for working with asynchronous tasks."],["backtrace","added has_description","Support for capturing stack backtraces of an OS thread."],["intrinsics","added has_description","Compiler intrinsics."],["select!","added has_description","A macro to select an event from a number of receivers."],["todo!","added has_description","Indicates unfinished code."],["asm!","added has_description","Inline assembly."],["dbg!","added has_description","Prints and returns the value of a given expression for quick and dirty debugging."],["super","added has_description","The parent of the current module."],["trait","added has_description","A common interface for a class of types."],["true","added has_description","A value of type bool representing logical true."],["type","added has_description","Define an alias for an existing type."],["union","added has_description","The Rust equivalent of a C-style union."],["unsafe","added has_description","Code or interfaces whose memory safety cannot be verified by the type system."],["use","added has_description","Import or rename items from other crates or modules."],["where","added has_description","Add constraints that must be upheld to use an item."],["while","added has_description","Loop while a condition is upheld."],["bool","added 是原始类型","Rust"],["std","upgraded to version","1.40.0"],["std","removes module","pin"],["std::ptr","updates description","Manually manage memory through raw pointers."],["std::rc","updates description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["slice","updates description","A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."],["标准库","adds macro","assert_ne!"],["标准库","adds macro","debug_assert_ne!"],["标准库","adds macro","asm!"],["标准库","adds macro","dbg!"],["标准库","adds macro","log_syntax!"],["标准库","removes macro","await!"],["标准库","removes macro","select!"],["assert!","updates description","Asserts that a boolean expression is true at runtime."],["cfg!","updates description","Evaluates boolean combinations of configuration flags at compile-time."],["column!","updates description","Expands to the column number at which it was invoked."],["eprint!","updates description","Prints to the standard error."]],"model":"deepseek-r1-250120"}