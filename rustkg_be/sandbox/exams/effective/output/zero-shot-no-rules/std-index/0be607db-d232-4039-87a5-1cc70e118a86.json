{"create_time":"2025-04-05T08:10:42.895Z","id":"0be607db-d232-4039-87a5-1cc70e118a86","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.70-x86_64-pc-windows-msvc/share/doc/rust/html/std/index.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\std-index\\merged_3b5c292c-a4be-4846-8f1f-39432b36ba27.json","relations":["contains_module","has_description","has_version","是宏"],"delete_triples":[{"triples":[["std","has_version","1.60.0"],["std","contains_module","backtrace"],["backtrace","has_description","Support for capturing a stack backtrace of an OS thread"],["std","contains_module","lazy"],["lazy","has_description","Lazy values and one-time initialization of static data"]],"startIndex":23930,"endIndex":64090},{"triples":[["std::future","has_description","Asynchronous values."],["slice","has_description","A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that every element is the same distance from its neighbors."],["std::char","has_description","A character type."],["std::cmp","has_description","Functionality for ordering and comparison"],["std::str","has_description","Unicode string slices."],["i8","has_description","Constants for the 8-bit signed integer type."],["i16","has_description","Constants for the 16-bit signed integer type."],["i32","has_description","Constants for the 32-bit signed integer type."],["i64","has_description","Constants for the 64-bit signed integer type."],["i128","has_description","Constants for the 128-bit signed integer type."],["isize","has_description","Constants for the pointer-sized signed integer type."],["u8","has_description","Constants for the 8-bit unsigned integer type."],["u16","has_description","Constants for the 16-bit unsigned integer type."],["u32","has_description","Constants for the 32-bit unsigned integer type."],["u64","has_description","Constants for the 64-bit unsigned integer type."],["u128","has_description","Constants for the 128-bit unsigned integer type."],["usize","has_description","Constants for the pointer-sized unsigned integer type."],["trace_macros!","has_description","Enables or disables tracing functionality used for debugging macros"]],"startIndex":41191,"endIndex":81847},{"triples":[],"startIndex":61240,"endIndex":101327}],"add_triples":[{"triples":[["std","has_version","1.70.0"],["std","contains_module","intrinsics"],["intrinsics","has_description","Compiler intrinsics."],["std","contains_module","simd"],["simd","has_description","Portable SIMD module"],["std","contains_module","alloc"],["alloc","has_description","Memory allocation APIs."]],"startIndex":23930,"endIndex":64090},{"triples":[["std::future","has_description","Asynchronous basic functionality."],["slice","has_description","Utilities for the slice primitive type."],["std::char","has_description","Utilities for the char primitive type."],["std::cmp","has_description","Utilities for comparing and ordering values."],["std::str","has_description","Utilities for the str primitive type."],["i8","has_description","Redundant constants module for the i8 primitive type."],["i16","has_description","Redundant constants module for the i16 primitive type."],["i32","has_description","Redundant constants module for the i32 primitive type."],["i64","has_description","Redundant constants module for the i64 primitive type."],["i128","has_description","Redundant constants module for the i128 primitive type."],["isize","has_description","Redundant constants module for the isize primitive type."],["u8","has_description","Redundant constants module for the u8 primitive type."],["u16","has_description","Redundant constants module for the u16 primitive type."],["u32","has_description","Redundant constants module for the u32 primitive type."],["u64","has_description","Redundant constants module for the u64 primitive type."],["u128","has_description","Redundant constants module for the u128 primitive type."],["usize","has_description","Redundant constants module for the usize primitive type."],["trace_macros!","has_description","Enables or disables tracing functionality used for debugging other macros."]],"startIndex":41191,"endIndex":81847},{"triples":[["cfg!","是宏","标准库"],["column!","是宏","标准库"],["column!","has_description","Expands to the column number at which it was invoked."],["compile_error!","是宏","标准库"],["compile_error!","has_description","Causes compilation to fail with the given error message when encountered."],["concat!","是宏","标准库"],["concat!","has_description","Concatenates literals into a static string slice."],["dbg!","是宏","标准库"],["dbg!","has_description","Prints and returns the value of a given expression for quick and dirty debugging."],["debug_assert!","是宏","标准库"],["debug_assert!","has_description","Asserts that a boolean expression is <code>true</code> at runtime."],["debug_assert_eq!","是宏","标准库"],["debug_assert_eq!","has_description","Asserts that two expressions are equal to each other."],["debug_assert_ne!","是宏","标准库"],["debug_assert_ne!","has_description","Asserts that two expressions are not equal to each other."],["env!","是宏","标准库"],["env!","has_description","Inspects an environment variable at compile time."],["eprint!","是宏","标准库"],["eprint!","has_description","Prints to the standard error."],["eprintln!","是宏","标准库"],["eprintln!","has_description","Prints to the standard error, with a newline."],["file!","是宏","标准库"],["file!","has_description","Expands to the file name in which it was invoked."],["format!","是宏","标准库"],["format!","has_description","Creates a <code>String</code> using interpolation of runtime expressions."],["format_args!","是宏","标准库"],["format_args!","has_description","Constructs parameters for the other string-formatting macros."],["include!","是宏","标准库"],["include!","has_description","Parses a file as an expression or an item according to the context."],["include_bytes!","是宏","标准库"],["include_bytes!","has_description","Includes a file as a reference to a byte array."],["include_str!","是宏","标准库"],["include_str!","has_description","Includes a UTF-8 encoded file as a string."],["is_x86_feature_detected!","是宏","标准库"],["is_x86_feature_detected!","has_description","A macro to test at <em>runtime</em> whether a CPU feature is available on x86/x86-64 platforms."],["line!","是宏","标准库"],["line!","has_description","Expands to the line number on which it was invoked."],["matches!","是宏","标准库"],["matches!","has_description","Returns whether the given expression matches any of the given patterns."],["module_path!","是宏","标准库"],["module_path!","has_description","Expands to a string that represents the current module path."],["option_env!","是宏","标准库"],["option_env!","has_description","Optionally inspects an environment variable at compile time."],["panic!","是宏","标准库"],["panic!","has_description","Panics the current thread."],["print!","是宏","标准库"],["print!","has_description","Prints to the standard output."],["println!","是宏","标准库"],["println!","has_description","Prints to the standard output, with a newline."],["stringify!","是宏","标准库"],["stringify!","has_description","Stringifies its arguments."],["thread_local!","是宏","标准库"],["thread_local!","has_description","Declare a new thread local storage key of type <code>std::thread::LocalKey</code>."],["todo!","是宏","标准库"],["todo!","has_description","Indicates unfinished code."],["try!","是宏","标准库"],["try!","has_description","Unwraps a result or propagates its error."],["unimplemented!","是宏","标准库"],["unimplemented!","has_description","Indicates unimplemented code by panicking with a message of “not implemented”."],["unreachable!","是宏","标准库"],["unreachable!","has_description","Indicates unreachable code."],["vec!","是宏","标准库"],["vec!","has_description","Creates a <code>Vec</code> containing the arguments."],["write!","是宏","标准库"],["write!","has_description","Writes formatted data into a buffer."],["writeln!","是宏","标准库"],["writeln!","has_description","Write formatted data into a buffer, with a newline appended."],["as","has_description","Cast between types, or rename an import."],["async","has_description","Return a Future instead of blocking the current thread."],["await","has_description","Suspend execution until the result of a Future is ready."],["break","has_description","Exit early from a loop."],["const","has_description","Compile-time constants, compile-time evaluable functions, and raw pointers."],["continue","has_description","Skip to the next iteration of a loop."],["crate","has_description","A Rust binary or library."],["dyn","has_description","dyn is a prefix of a trait object’s type."],["else","has_description","What expression to evaluate when an if condition evaluates to false."],["enum","has_description","A type that can be any one of several variants."],["extern","has_description","Link to or import external code."],["false","has_description","A value of type bool representing logical false."],["fn","has_description","A function or function pointer."],["for","has_description","Iteration with in, trait implementation with impl, or higher-ranked trait bounds."],["if","has_description","Evaluate a block if a condition holds."],["impl","has_description","Implement some functionality for a type."],["in","has_description","Iterate over a series of values with for."],["let","has_description","Bind a value to a variable."],["loop","has_description","Loop indefinitely."],["match","has_description","Control flow based on pattern matching."],["mod","has_description","Organize code into modules."],["move","has_description","Capture a closure’s environment by value."],["SelfTy","has_description","The implementing type within a trait or impl block, or the current type within a type definition."]],"startIndex":61240,"endIndex":101327}],"metrics":{"escapeCount":0,"costTime":701767,"totalUsage":{"prompt_tokens":46383,"completion_tokens":19454,"cached_tokens":0,"reasoning_tokens":16728},"chunkLength":3,"chunksInfo":[{"chunkIndex":0,"strLength":40160,"costTime":69942},{"chunkIndex":1,"strLength":40656,"costTime":244382},{"chunkIndex":2,"strLength":40087,"costTime":387443}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std","upgraded to","1.70.0"],["std","removes module","backtrace"],["std","removes module","lazy"],["std","adds module","intrinsics"],["std","adds module","simd"],["std","adds module","alloc"],["std::future","modified description","Asynchronous basic functionality."],["slice","modified description","Utilities for the slice primitive type."],["std::char","modified description","Utilities for the char primitive type."],["std::cmp","modified description","Utilities for comparing and ordering values."],["std::str","modified description","Utilities for the str primitive type."],["i8","modified description","Redundant constants module for the i8 primitive type."],["i16","modified description","Redundant constants module for the i16 primitive type."],["i32","modified description","Redundant constants module for the i32 primitive type."],["i64","modified description","Redundant constants module for the i64 primitive type."],["i128","modified description","Redundant constants module for the i128 primitive type."],["isize","modified description","Redundant constants module for the isize primitive type."],["u8","modified description","Redundant constants module for the u8 primitive type."],["u16","modified description","Redundant constants module for the u16 primitive type."],["u32","modified description","Redundant constants module for the u32 primitive type."],["u64","modified description","Redundant constants module for the u64 primitive type."],["u128","modified description","Redundant constants module for the u128 primitive type."],["usize","modified description","Redundant constants module for the usize primitive type."],["trace_macros!","modified description","Enables or disables tracing functionality used for debugging other macros."],["cfg!","是宏","标准库"],["column!","是宏","标准库"],["compile_error!","是宏","标准库"],["concat!","是宏","标准库"],["dbg!","是宏","标准库"],["debug_assert!","是宏","标准库"],["debug_assert_eq!","是宏","标准库"],["debug_assert_ne!","是宏","标准库"],["env!","是宏","标准库"],["eprint!","是宏","标准库"],["eprintln!","是宏","标准库"],["file!","是宏","标准库"],["format!","是宏","标准库"],["format_args!","是宏","标准库"],["include!","是宏","标准库"],["include_bytes!","是宏","标准库"],["include_str!","是宏","标准库"],["is_x86_feature_detected!","是宏","标准库"],["line!","是宏","标准库"],["matches!","是宏","标准库"],["module_path!","是宏","标准库"],["option_env!","是宏","标准库"],["panic!","是宏","标准库"],["print!","是宏","标准库"],["println!","是宏","标准库"],["stringify!","是宏","标准库"],["thread_local!","是宏","标准库"],["todo!","是 Macro","标准库"],["try!","是宏","标准库"],["unimplemented!","是宏","标准库"],["unreachable!","是宏","标准库"],["vec!","是宏","标准库"],["write!","是宏","标准库"],["writeln!","是宏","标准库"]]}