{"create_time":"2025-04-05T08:31:29.956Z","id":"10b96eae-c9e2-433c-b61b-bfb11caa9bcf","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.60-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/enum.ErrorKind.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\effective\\output\\zero-shot-no-rules\\std_io-enum_ErrorKind\\merged_6579c30e-cb3c-4834-8e36-4f017f284a72.json","relations":["converts_to","description","implements"],"delete_triples":[{"triples":[],"startIndex":14955,"endIndex":55346},{"triples":[["AddrNotAvailable","description","A nonexistent interface was requested, or the requested address was not local."],["BrokenPipe","description","The operation failed because a pipe was closed."],["AlreadyExists","description","An entity already exists, often a file."],["WouldBlock","description","The operation needs to block to complete but was requested not to."],["InvalidData","description","Data not valid for the operation were encountered."],["TimedOut","description","The I/O operationâ€™s timeout expired, causing it to be canceled."],["WriteZero","description","An error returned when a write operation could not complete as it wrote zero bytes."],["Interrupted","description","The operation was interrupted."],["UnexpectedEof","description","An error returned when an operation could not be completed because an end of file was reached prematurely."]],"startIndex":22311,"endIndex":63131},{"triples":[["std::io::ErrorKind","implements","StructuralEq"],["std::io::ErrorKind","implements","StructuralPartialEq"]],"startIndex":35485,"endIndex":76213},{"triples":[],"startIndex":50565,"endIndex":91193},{"triples":[],"startIndex":60649,"endIndex":101717},{"triples":[],"startIndex":68900,"endIndex":93448}],"add_triples":[{"triples":[],"startIndex":14955,"endIndex":55346},{"triples":[["IsADirectory","description","The filesystem object is, unexpectedly, a directory."],["DirectoryNotEmpty","description","A non-empty directory was specified where an empty directory was expected."],["ReadOnlyFilesystem","description","The filesystem or storage medium is read-only, but a write operation was attempted."],["FilesystemLoop","description","Loop in the filesystem or IO subsystem; too many levels of symbolic links."],["StaleNetworkFileHandle","description","Stale network file handle. With some network filesystems, notably NFS, an open file can be invalidated by problems with the network or server."],["InvalidInput","description","A parameter was incorrect."],["WriteZero","description","An error returned when an operation could not be completed because a call to write returned Ok(0)."],["ResourceBusy","description","Resource is busy."],["Deadlock","description","Deadlock (avoided). A file locking operation would result in deadlock."],["Interrupted","description","This operation was interrupted. Interrupted operations can typically be retried."]],"startIndex":22311,"endIndex":63131},{"triples":[["std::io::ErrorKind","implements","std::fmt::Display"],["std::io::ErrorKind","implements","std::fmt::Write"]],"startIndex":35485,"endIndex":76213},{"triples":[],"startIndex":50565,"endIndex":91193},{"triples":[["T","implements","std::convert::From<T>"],["T","implements","std::convert::Into<U>"],["std::borrow::Borrow<T>","implements","std::clone::Clone"]],"startIndex":60649,"endIndex":101717},{"triples":[],"startIndex":68900,"endIndex":93448}],"metrics":{"escapeCount":0,"costTime":888592,"totalUsage":{"prompt_tokens":87538,"completion_tokens":23619,"cached_tokens":0,"reasoning_tokens":22113},"chunkLength":6,"chunksInfo":[{"chunkIndex":0,"strLength":40391,"costTime":64632},{"chunkIndex":1,"strLength":40820,"costTime":144841},{"chunkIndex":2,"strLength":40728,"costTime":197169},{"chunkIndex":3,"strLength":40628,"costTime":49432},{"chunkIndex":4,"strLength":41068,"costTime":111061},{"chunkIndex":5,"strLength":24548,"costTime":321457}]},"model":"deepseek-r1-250120","extraInfo":{},"changes_info_triples":[["std::io::ErrorKind","adds feature","std::fmt::Display"],["std::io::ErrorKind","adds feature","std::fmt::Write"],["T","adds feature","std::convert::From<T>"],["T","adds feature","std::convert::Into<U>"],["std::borrow::Borrow<T>","adds feature","std::clone::Clone"]]}