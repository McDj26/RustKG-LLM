{
  "mergedTriples": [
    [
      "std::sync:1.80",
      "is a",
      "module"
    ],
    [
      "std::sync:1.80",
      "stable since",
      "1.0.0"
    ],
    [
      "std::sync:1.80",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::sync:1.80",
      "has description",
      "This module contains useful safe and unsafe synchronization primitives. Most of the primitives in this module do not provide any sort of locking and/or blocking at all, but rather provide the necessary tools to build other types of concurrent primitives."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::atomic:1.80"
    ],
    [
      "std::sync::atomic:1.80",
      "is a",
      "module"
    ],
    [
      "std::sync::atomic:1.80",
      "has description",
      "Atomic types"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::mpsc:1.80"
    ],
    [
      "std::sync::mpsc:1.80",
      "is a",
      "module"
    ],
    [
      "std::sync::mpsc:1.80",
      "has description",
      "Multi-producer, single-consumer FIFO queue communication primitives."
    ],
    [
      "std::sync::Arc:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::Arc:1.80",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::Arc:1.80",
      "has description",
      "An atomically reference counted wrapper for shared state."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::Arc:1.80"
    ],
    [
      "std::sync::Barrier:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::Barrier:1.80",
      "has alias",
      "Barrier"
    ],
    [
      "std::sync::Barrier:1.80",
      "has description",
      "A barrier enables multiple threads to synchronize the beginning of some computation."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::Barrier:1.80"
    ],
    [
      "std::sync::BarrierWaitResult:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::BarrierWaitResult:1.80",
      "has alias",
      "BarrierWaitResult"
    ],
    [
      "std::sync::BarrierWaitResult:1.80",
      "has description",
      "A result returned from wait."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::BarrierWaitResult:1.80"
    ],
    [
      "std::sync::Condvar:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::Condvar:1.80",
      "has alias",
      "Condvar"
    ],
    [
      "std::sync::Condvar:1.80",
      "has description",
      "A Condition Variable"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::Condvar:1.80"
    ],
    [
      "std::sync::Mutex:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::Mutex:1.80",
      "has alias",
      "Mutex"
    ],
    [
      "std::sync::Mutex:1.80",
      "has description",
      "A mutual exclusion primitive useful for protecting shared data"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::Mutex:1.80"
    ],
    [
      "std::sync::MutexGuard:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::MutexGuard:1.80",
      "has alias",
      "MutexGuard"
    ],
    [
      "std::sync::MutexGuard:1.80",
      "has description",
      "An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::MutexGuard:1.80"
    ],
    [
      "std::sync::Once:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::Once:1.80",
      "has alias",
      "Once"
    ],
    [
      "std::sync::Once:1.80",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::Once:1.80"
    ],
    [
      "std::sync::PoisonError:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::PoisonError:1.80",
      "has alias",
      "PoisonError"
    ],
    [
      "std::sync::PoisonError:1.80",
      "has description",
      "A type of error which can be returned whenever a lock is acquired."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::PoisonError:1.80"
    ],
    [
      "std::sync::RwLock:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLock:1.80",
      "has alias",
      "RwLock"
    ],
    [
      "std::sync::RwLock:1.80",
      "has description",
      "A reader-writer lock"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::RwLock:1.80"
    ],
    [
      "std::sync::RwLockReadGuard:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockReadGuard:1.80",
      "has alias",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockReadGuard:1.80",
      "has description",
      "RAII structure used to release the shared read access of a lock when dropped."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::RwLockReadGuard:1.80"
    ],
    [
      "std::sync::RwLockWriteGuard:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockWriteGuard:1.80",
      "has alias",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.80",
      "has description",
      "RAII structure used to release the exclusive write access of a lock when dropped."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::RwLockWriteGuard:1.80"
    ],
    [
      "std::sync::WaitTimeoutResult:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::WaitTimeoutResult:1.80",
      "has alias",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::WaitTimeoutResult:1.80",
      "has description",
      "A type indicating whether a timed wait on a condition variable returned due to a time out or not."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::WaitTimeoutResult:1.80"
    ],
    [
      "std::sync::Weak:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::Weak:1.80",
      "has alias",
      "Weak"
    ],
    [
      "std::sync::Weak:1.80",
      "has description",
      "A weak pointer to an Arc."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::Weak:1.80"
    ],
    [
      "std::sync::OnceState:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceState:1.80",
      "has alias",
      "OnceState"
    ],
    [
      "std::sync::OnceState:1.80",
      "has description",
      "State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."
    ],
    [
      "std::sync::OnceState:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::OnceState:1.80"
    ],
    [
      "std::sync::StaticCondvar:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticCondvar:1.80",
      "has alias",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticCondvar:1.80",
      "has description",
      "Statically allocated condition variables."
    ],
    [
      "std::sync::StaticCondvar:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::sync::StaticCondvar:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::StaticCondvar:1.80"
    ],
    [
      "std::sync::StaticMutex:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticMutex:1.80",
      "has alias",
      "StaticMutex"
    ],
    [
      "std::sync::StaticMutex:1.80",
      "has description",
      "The static mutex type is provided to allow for static allocation of mutexes."
    ],
    [
      "std::sync::StaticMutex:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::sync::StaticMutex:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::StaticMutex:1.80"
    ],
    [
      "std::sync::StaticRwLock:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticRwLock:1.80",
      "has alias",
      "StaticRwLock"
    ],
    [
      "std::sync::StaticRwLock:1.80",
      "has description",
      "Structure representing a statically allocated RwLock."
    ],
    [
      "std::sync::StaticRwLock:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::sync::StaticRwLock:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::StaticRwLock:1.80"
    ],
    [
      "std::sync::TryLockError:1.80",
      "is a",
      "enum"
    ],
    [
      "std::sync::TryLockError:1.80",
      "has alias",
      "TryLockError"
    ],
    [
      "std::sync::TryLockError:1.80",
      "has description",
      "An enumeration of possible errors which can occur while calling the try_lock method."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::TryLockError:1.80"
    ],
    [
      "std::sync::ONCE_INIT:1.80",
      "is a",
      "constant"
    ],
    [
      "std::sync::ONCE_INIT:1.80",
      "has alias",
      "ONCE_INIT"
    ],
    [
      "std::sync::ONCE_INIT:1.80",
      "has description",
      "Initialization value for static Once values."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::ONCE_INIT:1.80"
    ],
    [
      "std::sync::CONDVAR_INIT:1.80",
      "is a",
      "constant"
    ],
    [
      "std::sync::CONDVAR_INIT:1.80",
      "has alias",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.80",
      "has description",
      "Constant initializer for a statically allocated condition variable."
    ],
    [
      "std::sync::CONDVAR_INIT:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::sync::CONDVAR_INIT:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::CONDVAR_INIT:1.80"
    ],
    [
      "std::sync::MUTEX_INIT:1.80",
      "is a",
      "constant"
    ],
    [
      "std::sync::MUTEX_INIT:1.80",
      "has alias",
      "MUTEX_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.80",
      "has description",
      "Static initialization of a mutex. This constant can be used to initialize other mutex constants."
    ],
    [
      "std::sync::MUTEX_INIT:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::sync::MUTEX_INIT:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::MUTEX_INIT:1.80"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.80",
      "is a",
      "constant"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.80",
      "has alias",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.80",
      "has description",
      "Constant initialization for a statically-initialized rwlock."
    ],
    [
      "std::sync::RW_LOCK_INIT:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::RW_LOCK_INIT:1.80"
    ],
    [
      "std::sync::LockResult:1.80",
      "is a",
      "type"
    ],
    [
      "std::sync::LockResult:1.80",
      "has alias",
      "LockResult"
    ],
    [
      "std::sync::LockResult:1.80",
      "has description",
      "A type alias for the result of a lock method which can be poisoned."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::LockResult:1.80"
    ],
    [
      "std::sync::TryLockResult:1.80",
      "is a",
      "type"
    ],
    [
      "std::sync::TryLockResult:1.80",
      "has alias",
      "TryLockResult"
    ],
    [
      "std::sync::TryLockResult:1.80",
      "has description",
      "A type alias for the result of a nonblocking locking method."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::TryLockResult:1.80"
    ],
    [
      "std::sync::OnceState:1.80",
      "has attribute",
      "Unstable:1.80"
    ],
    [
      "std::sync::StaticCondvar:1.80",
      "has attribute",
      "Deprecated:1.80"
    ],
    [
      "std::sync::StaticCondvar:1.80",
      "has attribute",
      "Unstable:1.80"
    ],
    [
      "std::sync::StaticMutex:1.80",
      "has attribute",
      "Deprecated:1.80"
    ],
    [
      "std::sync::StaticMutex:1.80",
      "has attribute",
      "Unstable:1.80"
    ],
    [
      "std::sync::StaticRwLock:1.80",
      "has attribute",
      "Deprecated:1.80"
    ],
    [
      "std::sync::StaticRwLock:1.80",
      "has attribute",
      "Unstable:1.80"
    ],
    [
      "std::sync::CONDVAR_INIT:1.80",
      "has attribute",
      "Deprecated:1.80"
    ],
    [
      "std::sync::CONDVAR_INIT:1.80",
      "has attribute",
      "Unstable:1.80"
    ],
    [
      "std::sync::MUTEX_INIT:1.80",
      "has attribute",
      "Deprecated:1.80"
    ],
    [
      "std::sync::MUTEX_INIT:1.80",
      "has attribute",
      "Unstable:1.80"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.80",
      "has attribute",
      "Deprecated:1.80"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.80",
      "has attribute",
      "Unstable:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::sync:1.80"
    ],
    [
      "std::sync:1.80",
      "has alias",
      "sync"
    ],
    [
      "std::sync::atomic:1.80",
      "has alias",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.80",
      "has alias",
      "mpsc"
    ],
    [
      "std::sync::MutexGuard:1.80",
      "has description",
      "An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync::LockResult:1.80",
      "is a",
      "type definition"
    ],
    [
      "std::sync::TryLockResult:1.80",
      "is a",
      "type definition"
    ],
    [
      "process:1.80",
      "has description",
      "A module for working with processes"
    ],
    [
      "ptr:1.80",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "rc:1.80",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'"
    ],
    [
      "std::sync::Arc:1.80",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'"
    ],
    [
      "std::sync::Weak:1.80",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed value"
    ],
    [
      "marker:1.80",
      "has description",
      "Primitive traits and types representing basic properties of types"
    ],
    [
      "fmt:1.80",
      "has description",
      "Utilities for formatting and printing `String`s"
    ],
    [
      "vec:1.80",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`"
    ],
    [
      "std:1.80",
      "contains",
      "std::heap:1.80"
    ],
    [
      "std::heap:1.80",
      "is a",
      "module"
    ],
    [
      "std::heap:1.80",
      "has alias",
      "heap"
    ],
    [
      "std::heap:1.80",
      "has description",
      "dox"
    ],
    [
      "f32:1.80",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.80",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "marker:1.80",
      "has description",
      "Primitive traits and marker types representing basic properties of types."
    ],
    [
      "process:1.80",
      "has description",
      "A module for working with processes."
    ],
    [
      "rc:1.80",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "vec:1.80",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`."
    ],
    [
      "assert_ne:1.80",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.80",
      "is a",
      "macro"
    ],
    [
      "try!:1.80",
      "has description",
      "Helper macro for reducing boilerplate code for matching Result together with converting downstream errors."
    ],
    [
      "std:1.80",
      "contains",
      "assert_ne:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "debug_assert_ne:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "compile_error:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "eprint:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "eprintln:1.80"
    ],
    [
      "marker:1.80",
      "has description",
      "Primitive traits and properties of types."
    ],
    [
      "std::sync::Arc:1.80",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."
    ],
    [
      "std:1.80",
      "contains",
      "std::hint:1.80"
    ],
    [
      "std::hint:1.80",
      "is a",
      "module"
    ],
    [
      "std::hint:1.80",
      "has alias",
      "hint"
    ],
    [
      "std::hint:1.80",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "format:1.80",
      "has description",
      "Creates a `String` using interpolation of runtime expressions. See using interpolation for details."
    ],
    [
      "std::sync::OnceState:1.80",
      "has description",
      "State yielded to call_once_force’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std::sync::TryLockError:1.80",
      "has description",
      "An enumeration of possible errors associated with a `TryLockResult` which can occur while trying to acquire a lock, from the `try_lock` method on a `Mutex` or the `try_read` and `try_write` methods on an `RwLock`."
    ],
    [
      "std:1.80",
      "contains",
      "fn:1.80"
    ],
    [
      "fn:1.80",
      "is a",
      "keyword"
    ],
    [
      "std:1.80",
      "contains",
      "let:1.80"
    ],
    [
      "let:1.80",
      "is a",
      "keyword"
    ],
    [
      "std:1.80",
      "contains",
      "struct:1.80"
    ],
    [
      "struct:1.80",
      "is a",
      "keyword"
    ],
    [
      "fmt:1.80",
      "has description",
      "Utilities for formatting and printing `String`s."
    ],
    [
      "std:1.80",
      "contains",
      "alloc:1.80"
    ],
    [
      "alloc:1.80",
      "is a",
      "module"
    ],
    [
      "alloc:1.80",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.80",
      "contains",
      "arch:1.80"
    ],
    [
      "arch:1.80",
      "is a",
      "module"
    ],
    [
      "arch:1.80",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.80",
      "contains",
      "std::future:1.80"
    ],
    [
      "std::future:1.80",
      "is a",
      "module"
    ],
    [
      "std::future:1.80",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.80",
      "contains",
      "std::pin:1.80"
    ],
    [
      "std::pin:1.80",
      "is a",
      "module"
    ],
    [
      "std::pin:1.80",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.80",
      "contains",
      "task:1.80"
    ],
    [
      "task:1.80",
      "is a",
      "module"
    ],
    [
      "task:1.80",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "f32:1.80",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.80",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "format:1.80",
      "has description",
      "Creates a `String` using interpolation of runtime expressions."
    ],
    [
      "println:1.80",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "std:1.80",
      "contains",
      "never:1.80"
    ],
    [
      "never:1.80",
      "is a",
      "primitive"
    ],
    [
      "never:1.80",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.80",
      "contains",
      "unit:1.80"
    ],
    [
      "unit:1.80",
      "is a",
      "primitive"
    ],
    [
      "unit:1.80",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std::future:1.80",
      "has alias",
      "future"
    ],
    [
      "std::pin:1.80",
      "has alias",
      "pin"
    ],
    [
      "std:1.80",
      "contains",
      "array:1.80"
    ],
    [
      "array:1.80",
      "is a",
      "module"
    ],
    [
      "array:1.80",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.80",
      "contains",
      "backtrace:1.80"
    ],
    [
      "backtrace:1.80",
      "is a",
      "module"
    ],
    [
      "backtrace:1.80",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "slice:1.80",
      "has description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "std:1.80",
      "contains",
      "asm:1.80"
    ],
    [
      "asm:1.80",
      "is a",
      "macro"
    ],
    [
      "asm:1.80",
      "has description",
      "Inline assembly."
    ],
    [
      "std:1.80",
      "contains",
      "async:1.80"
    ],
    [
      "async:1.80",
      "is a",
      "keyword"
    ],
    [
      "std:1.80",
      "contains",
      "await:1.80"
    ],
    [
      "await:1.80",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.80",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync::TryLockError:1.80",
      "has description",
      "An enumeration of possible errors associated with a TryLockResult which can occur while trying to acquire a lock, from the try_lock method on a Mutex or the try_read and try_write methods on an RwLock."
    ],
    [
      "std:1.80",
      "contains",
      "Self:1.80"
    ],
    [
      "Self:1.80",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.80",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation"
    ],
    [
      "std::sync::ONCE_INIT:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::sync::Weak:1.80",
      "has description",
      "Weak is a version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync:1.80",
      "has description",
      "Advanced synchronization primitives for threading."
    ],
    [
      "std::sync:1.80",
      "stable since",
      "1.31.0"
    ],
    [
      "std::sync::OnceLock:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceLock:1.80",
      "has alias",
      "OnceLock"
    ],
    [
      "std::sync::OnceLock:1.80",
      "has description",
      "A synchronization primitive which can be written to only once."
    ],
    [
      "std::sync::Exclusive:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::Exclusive:1.80",
      "has alias",
      "Exclusive"
    ],
    [
      "std::sync::Exclusive:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync::Exclusive:1.80",
      "has description",
      "Exclusive provides only mutable access, also referred to as exclusive access to the underlying value."
    ],
    [
      "std::sync::LazyLock:1.80",
      "is a",
      "struct"
    ],
    [
      "std::sync::LazyLock:1.80",
      "has alias",
      "LazyLock"
    ],
    [
      "std::sync::LazyLock:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::sync::LazyLock:1.80",
      "has description",
      "A value which is initialized on the first access."
    ],
    [
      "std::sync::Exclusive:1.80",
      "has description",
      "Exclusive provides only mutable access, also referred to as exclusive access to the underlying value. It provides no immutable, or shared access to the underlying value."
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::OnceLock:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::Exclusive:1.80"
    ],
    [
      "std::sync:1.80",
      "contains",
      "std::sync::LazyLock:1.80"
    ],
    [
      "std::sync:1.80",
      "is current module",
      "true:1.80"
    ],
    [
      "lazy:1.80",
      "is a",
      "module"
    ],
    [
      "lazy:1.80",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "primitive:1.80",
      "is a",
      "module"
    ],
    [
      "primitive:1.80",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "f32:1.80",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "f64:1.80",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "unit:1.80",
      "has description",
      "The `()` type, also called \"unit\"."
    ],
    [
      "dyn:1.80",
      "has description",
      "`dyn` is a prefix of a trait object's type."
    ],
    [
      "static:1.80",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."
    ],
    [
      "llvm_asm:1.80",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.80",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "f32:1.80",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)"
    ],
    [
      "f64:1.80",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)"
    ],
    [
      "unit:1.80",
      "has description",
      "The () type, also called \"unit\""
    ],
    [
      "std:1.80",
      "contains",
      "lazy:1.80"
    ],
    [
      "static:1.80",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static lifetime)"
    ],
    [
      "std::sync::OnceState:1.80",
      "has description",
      "State yielded to Once::call_once_force()’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std:1.80",
      "contains",
      "primitive:1.80"
    ],
    [
      "const:1.80",
      "has description",
      "Compile-time constants and compile-time evaluable functions."
    ],
    [
      "unit:1.80",
      "has description",
      "The () type, also called 'unit'."
    ],
    [
      "include_str:1.80",
      "has description",
      "Includes a UTF-8 encoded file as a string."
    ],
    [
      "unimplemented:1.80",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'."
    ],
    [
      "array:1.80",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually, we should be able to generalize to all lengths."
    ],
    [
      "string:1.80",
      "has description",
      "A UTF-8–encoded, growable string."
    ],
    [
      "dyn:1.80",
      "has description",
      "dyn is a prefix of a trait object's type."
    ],
    [
      "else:1.80",
      "has description",
      "What expression to evaluate when an if condition evaluates to false."
    ],
    [
      "std::hint:1.80",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "std::sync::atomic:1.80",
      "is a module",
      "module:1.80"
    ],
    [
      "std::sync::mpsc:1.80",
      "is a module",
      "module:1.80"
    ],
    [
      "std::sync::Arc:1.80",
      "is a struct",
      "struct:1.80"
    ],
    [
      "std::sync::Barrier:1.80",
      "is a struct",
      "struct:1.80"
    ],
    [
      "std::sync::Condvar:1.80",
      "is a struct",
      "struct:1.80"
    ],
    [
      "std::sync::Mutex:1.80",
      "is a struct",
      "struct:1.80"
    ],
    [
      "std::sync::Once:1.80",
      "is a struct",
      "struct:1.80"
    ],
    [
      "std::sync::Once:1.80",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization."
    ],
    [
      "std::sync::RwLock:1.80",
      "is a struct",
      "struct:1.80"
    ],
    [
      "std::sync::TryLockError:1.80",
      "is a enum",
      "enum:1.80"
    ],
    [
      "std::sync::TryLockError:1.80",
      "has description",
      "An enumeration of possible errors associated with a TryLockResult"
    ],
    [
      "std::sync::ONCE_INIT:1.80",
      "is a constant",
      "constant:1.80"
    ],
    [
      "std::sync::Arc:1.80",
      "has description",
      "A thread-safe reference-counting pointer. ‘Arc’ stands for ‘Atomically Reference Counted’."
    ],
    [
      "std::sync::Barrier:1.80",
      "has description",
      "Ensures multiple threads will wait for each other to reach a point in the program, before continuing execution all together."
    ],
    [
      "std::sync::Once:1.80",
      "has description",
      "Used for thread-safe, one-time initialization of a global variable."
    ],
    [
      "Atomically Reference Counted:1.80",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::ONCE_INIT:1.80",
      "has attribute",
      "Deprecated:1.80"
    ],
    [
      "std::sync::ONCE_INIT:undefined",
      "replaced by",
      "std::sync::OnceLock:1.80"
    ],
    [
      "std::sync:undefined",
      "changes description",
      "Advanced synchronization primitives for threading.:1.80"
    ],
    [
      "std::sync:undefined",
      "changes stable since",
      "1.31.0:1.80"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::OnceLock:1.80"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::Exclusive:1.80"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::LazyLock:1.80"
    ],
    [
      "std::sync:undefined",
      "updates description",
      "Advanced synchronization primitives for threading.:1.80"
    ],
    [
      "std::sync:undefined",
      "updates stable since",
      "1.31.0:1.80"
    ],
    [
      "std::sync:undefined",
      "adds struct",
      "std::sync::OnceLock:1.80"
    ],
    [
      "std::sync:undefined",
      "adds unstable struct",
      "std::sync::Exclusive:1.80"
    ],
    [
      "std::sync:undefined",
      "adds unstable struct",
      "std::sync::LazyLock:1.80"
    ],
    [
      "std::sync:1.60",
      "is a",
      "module"
    ],
    [
      "std::sync:1.60",
      "stable since",
      "1.0.0"
    ],
    [
      "std::sync:1.60",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::sync:1.60",
      "has description",
      "This module contains useful safe and unsafe synchronization primitives. Most of the primitives in this module do not provide any sort of locking and/or blocking at all, but rather provide the necessary tools to build other types of concurrent primitives."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::atomic:1.60"
    ],
    [
      "std::sync::atomic:1.60",
      "is a",
      "module"
    ],
    [
      "std::sync::atomic:1.60",
      "has description",
      "Atomic types"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::mpsc:1.60"
    ],
    [
      "std::sync::mpsc:1.60",
      "is a",
      "module"
    ],
    [
      "std::sync::mpsc:1.60",
      "has description",
      "Multi-producer, single-consumer FIFO queue communication primitives."
    ],
    [
      "std::sync::Arc:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::Arc:1.60",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::Arc:1.60",
      "has description",
      "An atomically reference counted wrapper for shared state."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::Arc:1.60"
    ],
    [
      "std::sync::Barrier:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::Barrier:1.60",
      "has alias",
      "Barrier"
    ],
    [
      "std::sync::Barrier:1.60",
      "has description",
      "A barrier enables multiple threads to synchronize the beginning of some computation."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::Barrier:1.60"
    ],
    [
      "std::sync::BarrierWaitResult:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::BarrierWaitResult:1.60",
      "has alias",
      "BarrierWaitResult"
    ],
    [
      "std::sync::BarrierWaitResult:1.60",
      "has description",
      "A result returned from wait."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::BarrierWaitResult:1.60"
    ],
    [
      "std::sync::Condvar:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::Condvar:1.60",
      "has alias",
      "Condvar"
    ],
    [
      "std::sync::Condvar:1.60",
      "has description",
      "A Condition Variable"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::Condvar:1.60"
    ],
    [
      "std::sync::Mutex:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::Mutex:1.60",
      "has alias",
      "Mutex"
    ],
    [
      "std::sync::Mutex:1.60",
      "has description",
      "A mutual exclusion primitive useful for protecting shared data"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::Mutex:1.60"
    ],
    [
      "std::sync::MutexGuard:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::MutexGuard:1.60",
      "has alias",
      "MutexGuard"
    ],
    [
      "std::sync::MutexGuard:1.60",
      "has description",
      "An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::MutexGuard:1.60"
    ],
    [
      "std::sync::Once:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::Once:1.60",
      "has alias",
      "Once"
    ],
    [
      "std::sync::Once:1.60",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::Once:1.60"
    ],
    [
      "std::sync::PoisonError:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::PoisonError:1.60",
      "has alias",
      "PoisonError"
    ],
    [
      "std::sync::PoisonError:1.60",
      "has description",
      "A type of error which can be returned whenever a lock is acquired."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::PoisonError:1.60"
    ],
    [
      "std::sync::RwLock:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLock:1.60",
      "has alias",
      "RwLock"
    ],
    [
      "std::sync::RwLock:1.60",
      "has description",
      "A reader-writer lock"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::RwLock:1.60"
    ],
    [
      "std::sync::RwLockReadGuard:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockReadGuard:1.60",
      "has alias",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockReadGuard:1.60",
      "has description",
      "RAII structure used to release the shared read access of a lock when dropped."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::RwLockReadGuard:1.60"
    ],
    [
      "std::sync::RwLockWriteGuard:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockWriteGuard:1.60",
      "has alias",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.60",
      "has description",
      "RAII structure used to release the exclusive write access of a lock when dropped."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::RwLockWriteGuard:1.60"
    ],
    [
      "std::sync::WaitTimeoutResult:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::WaitTimeoutResult:1.60",
      "has alias",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::WaitTimeoutResult:1.60",
      "has description",
      "A type indicating whether a timed wait on a condition variable returned due to a time out or not."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::WaitTimeoutResult:1.60"
    ],
    [
      "std::sync::Weak:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::Weak:1.60",
      "has alias",
      "Weak"
    ],
    [
      "std::sync::Weak:1.60",
      "has description",
      "A weak pointer to an Arc."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::Weak:1.60"
    ],
    [
      "std::sync::OnceState:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceState:1.60",
      "has alias",
      "OnceState"
    ],
    [
      "std::sync::OnceState:1.60",
      "has description",
      "State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."
    ],
    [
      "std::sync::OnceState:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::OnceState:1.60"
    ],
    [
      "std::sync::StaticCondvar:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticCondvar:1.60",
      "has alias",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticCondvar:1.60",
      "has description",
      "Statically allocated condition variables."
    ],
    [
      "std::sync::StaticCondvar:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::sync::StaticCondvar:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::StaticCondvar:1.60"
    ],
    [
      "std::sync::StaticMutex:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticMutex:1.60",
      "has alias",
      "StaticMutex"
    ],
    [
      "std::sync::StaticMutex:1.60",
      "has description",
      "The static mutex type is provided to allow for static allocation of mutexes."
    ],
    [
      "std::sync::StaticMutex:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::sync::StaticMutex:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::StaticMutex:1.60"
    ],
    [
      "std::sync::StaticRwLock:1.60",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticRwLock:1.60",
      "has alias",
      "StaticRwLock"
    ],
    [
      "std::sync::StaticRwLock:1.60",
      "has description",
      "Structure representing a statically allocated RwLock."
    ],
    [
      "std::sync::StaticRwLock:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::sync::StaticRwLock:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::StaticRwLock:1.60"
    ],
    [
      "std::sync::TryLockError:1.60",
      "is a",
      "enum"
    ],
    [
      "std::sync::TryLockError:1.60",
      "has alias",
      "TryLockError"
    ],
    [
      "std::sync::TryLockError:1.60",
      "has description",
      "An enumeration of possible errors which can occur while calling the try_lock method."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::TryLockError:1.60"
    ],
    [
      "std::sync::ONCE_INIT:1.60",
      "is a",
      "constant"
    ],
    [
      "std::sync::ONCE_INIT:1.60",
      "has alias",
      "ONCE_INIT"
    ],
    [
      "std::sync::ONCE_INIT:1.60",
      "has description",
      "Initialization value for static Once values."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::ONCE_INIT:1.60"
    ],
    [
      "std::sync::CONDVAR_INIT:1.60",
      "is a",
      "constant"
    ],
    [
      "std::sync::CONDVAR_INIT:1.60",
      "has alias",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.60",
      "has description",
      "Constant initializer for a statically allocated condition variable."
    ],
    [
      "std::sync::CONDVAR_INIT:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::sync::CONDVAR_INIT:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::CONDVAR_INIT:1.60"
    ],
    [
      "std::sync::MUTEX_INIT:1.60",
      "is a",
      "constant"
    ],
    [
      "std::sync::MUTEX_INIT:1.60",
      "has alias",
      "MUTEX_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.60",
      "has description",
      "Static initialization of a mutex. This constant can be used to initialize other mutex constants."
    ],
    [
      "std::sync::MUTEX_INIT:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::sync::MUTEX_INIT:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::MUTEX_INIT:1.60"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.60",
      "is a",
      "constant"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.60",
      "has alias",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.60",
      "has description",
      "Constant initialization for a statically-initialized rwlock."
    ],
    [
      "std::sync::RW_LOCK_INIT:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::RW_LOCK_INIT:1.60"
    ],
    [
      "std::sync::LockResult:1.60",
      "is a",
      "type"
    ],
    [
      "std::sync::LockResult:1.60",
      "has alias",
      "LockResult"
    ],
    [
      "std::sync::LockResult:1.60",
      "has description",
      "A type alias for the result of a lock method which can be poisoned."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::LockResult:1.60"
    ],
    [
      "std::sync::TryLockResult:1.60",
      "is a",
      "type"
    ],
    [
      "std::sync::TryLockResult:1.60",
      "has alias",
      "TryLockResult"
    ],
    [
      "std::sync::TryLockResult:1.60",
      "has description",
      "A type alias for the result of a nonblocking locking method."
    ],
    [
      "std::sync:1.60",
      "contains",
      "std::sync::TryLockResult:1.60"
    ],
    [
      "std::sync::OnceState:1.60",
      "has attribute",
      "Unstable:1.60"
    ],
    [
      "std::sync::StaticCondvar:1.60",
      "has attribute",
      "Deprecated:1.60"
    ],
    [
      "std::sync::StaticCondvar:1.60",
      "has attribute",
      "Unstable:1.60"
    ],
    [
      "std::sync::StaticMutex:1.60",
      "has attribute",
      "Deprecated:1.60"
    ],
    [
      "std::sync::StaticMutex:1.60",
      "has attribute",
      "Unstable:1.60"
    ],
    [
      "std::sync::StaticRwLock:1.60",
      "has attribute",
      "Deprecated:1.60"
    ],
    [
      "std::sync::StaticRwLock:1.60",
      "has attribute",
      "Unstable:1.60"
    ],
    [
      "std::sync::CONDVAR_INIT:1.60",
      "has attribute",
      "Deprecated:1.60"
    ],
    [
      "std::sync::CONDVAR_INIT:1.60",
      "has attribute",
      "Unstable:1.60"
    ],
    [
      "std::sync::MUTEX_INIT:1.60",
      "has attribute",
      "Deprecated:1.60"
    ],
    [
      "std::sync::MUTEX_INIT:1.60",
      "has attribute",
      "Unstable:1.60"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.60",
      "has attribute",
      "Deprecated:1.60"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.60",
      "has attribute",
      "Unstable:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::sync:1.60"
    ],
    [
      "std::sync:1.60",
      "has alias",
      "sync"
    ],
    [
      "std::sync::atomic:1.60",
      "has alias",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.60",
      "has alias",
      "mpsc"
    ],
    [
      "std::sync::MutexGuard:1.60",
      "has description",
      "An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync::LockResult:1.60",
      "is a",
      "type definition"
    ],
    [
      "std::sync::TryLockResult:1.60",
      "is a",
      "type definition"
    ],
    [
      "process:1.60",
      "has description",
      "A module for working with processes"
    ],
    [
      "ptr:1.60",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "rc:1.60",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'"
    ],
    [
      "std::sync::Arc:1.60",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'"
    ],
    [
      "std::sync::Weak:1.60",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed value"
    ],
    [
      "marker:1.60",
      "has description",
      "Primitive traits and types representing basic properties of types"
    ],
    [
      "fmt:1.60",
      "has description",
      "Utilities for formatting and printing `String`s"
    ],
    [
      "vec:1.60",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`"
    ],
    [
      "std:1.60",
      "contains",
      "std::heap:1.60"
    ],
    [
      "std::heap:1.60",
      "is a",
      "module"
    ],
    [
      "std::heap:1.60",
      "has alias",
      "heap"
    ],
    [
      "std::heap:1.60",
      "has description",
      "dox"
    ],
    [
      "f32:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "marker:1.60",
      "has description",
      "Primitive traits and marker types representing basic properties of types."
    ],
    [
      "process:1.60",
      "has description",
      "A module for working with processes."
    ],
    [
      "rc:1.60",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "vec:1.60",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`."
    ],
    [
      "assert_ne:1.60",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.60",
      "is a",
      "macro"
    ],
    [
      "try!:1.60",
      "has description",
      "Helper macro for reducing boilerplate code for matching Result together with converting downstream errors."
    ],
    [
      "std:1.60",
      "contains",
      "assert_ne:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "debug_assert_ne:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "compile_error:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "eprint:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "eprintln:1.60"
    ],
    [
      "marker:1.60",
      "has description",
      "Primitive traits and properties of types."
    ],
    [
      "std::sync::Arc:1.60",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."
    ],
    [
      "std:1.60",
      "contains",
      "std::hint:1.60"
    ],
    [
      "std::hint:1.60",
      "is a",
      "module"
    ],
    [
      "std::hint:1.60",
      "has alias",
      "hint"
    ],
    [
      "std::hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "format:1.60",
      "has description",
      "Creates a `String` using interpolation of runtime expressions. See using interpolation for details."
    ],
    [
      "std::sync::OnceState:1.60",
      "has description",
      "State yielded to call_once_force’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std::sync::TryLockError:1.60",
      "has description",
      "An enumeration of possible errors associated with a `TryLockResult` which can occur while trying to acquire a lock, from the `try_lock` method on a `Mutex` or the `try_read` and `try_write` methods on an `RwLock`."
    ],
    [
      "std:1.60",
      "contains",
      "fn:1.60"
    ],
    [
      "fn:1.60",
      "is a",
      "keyword"
    ],
    [
      "std:1.60",
      "contains",
      "let:1.60"
    ],
    [
      "let:1.60",
      "is a",
      "keyword"
    ],
    [
      "std:1.60",
      "contains",
      "struct:1.60"
    ],
    [
      "struct:1.60",
      "is a",
      "keyword"
    ],
    [
      "fmt:1.60",
      "has description",
      "Utilities for formatting and printing `String`s."
    ],
    [
      "std:1.60",
      "contains",
      "alloc:1.60"
    ],
    [
      "alloc:1.60",
      "is a",
      "module"
    ],
    [
      "alloc:1.60",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.60",
      "contains",
      "arch:1.60"
    ],
    [
      "arch:1.60",
      "is a",
      "module"
    ],
    [
      "arch:1.60",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.60",
      "contains",
      "std::future:1.60"
    ],
    [
      "std::future:1.60",
      "is a",
      "module"
    ],
    [
      "std::future:1.60",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.60",
      "contains",
      "std::pin:1.60"
    ],
    [
      "std::pin:1.60",
      "is a",
      "module"
    ],
    [
      "std::pin:1.60",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.60",
      "contains",
      "task:1.60"
    ],
    [
      "task:1.60",
      "is a",
      "module"
    ],
    [
      "task:1.60",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "f32:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "format:1.60",
      "has description",
      "Creates a `String` using interpolation of runtime expressions."
    ],
    [
      "println:1.60",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "std:1.60",
      "contains",
      "never:1.60"
    ],
    [
      "never:1.60",
      "is a",
      "primitive"
    ],
    [
      "never:1.60",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.60",
      "contains",
      "unit:1.60"
    ],
    [
      "unit:1.60",
      "is a",
      "primitive"
    ],
    [
      "unit:1.60",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std::future:1.60",
      "has alias",
      "future"
    ],
    [
      "std::pin:1.60",
      "has alias",
      "pin"
    ],
    [
      "std:1.60",
      "contains",
      "array:1.60"
    ],
    [
      "array:1.60",
      "is a",
      "module"
    ],
    [
      "array:1.60",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.60",
      "contains",
      "backtrace:1.60"
    ],
    [
      "backtrace:1.60",
      "is a",
      "module"
    ],
    [
      "backtrace:1.60",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "slice:1.60",
      "has description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "std:1.60",
      "contains",
      "asm:1.60"
    ],
    [
      "asm:1.60",
      "is a",
      "macro"
    ],
    [
      "asm:1.60",
      "has description",
      "Inline assembly."
    ],
    [
      "std:1.60",
      "contains",
      "async:1.60"
    ],
    [
      "async:1.60",
      "is a",
      "keyword"
    ],
    [
      "std:1.60",
      "contains",
      "await:1.60"
    ],
    [
      "await:1.60",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.60",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync::TryLockError:1.60",
      "has description",
      "An enumeration of possible errors associated with a TryLockResult which can occur while trying to acquire a lock, from the try_lock method on a Mutex or the try_read and try_write methods on an RwLock."
    ],
    [
      "std:1.60",
      "contains",
      "Self:1.60"
    ],
    [
      "Self:1.60",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.60",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation"
    ],
    [
      "std::sync::ONCE_INIT:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::sync::Weak:1.60",
      "has description",
      "Weak is a version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync:1.60",
      "has description",
      "Advanced synchronization primitives for threading."
    ],
    [
      "std::sync:1.60",
      "stable since",
      "1.31.0"
    ],
    [
      "std::sync:1.60",
      "is current module",
      "true:1.60"
    ],
    [
      "lazy:1.60",
      "is a",
      "module"
    ],
    [
      "lazy:1.60",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "primitive:1.60",
      "is a",
      "module"
    ],
    [
      "primitive:1.60",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "f32:1.60",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "f64:1.60",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "unit:1.60",
      "has description",
      "The `()` type, also called \"unit\"."
    ],
    [
      "dyn:1.60",
      "has description",
      "`dyn` is a prefix of a trait object's type."
    ],
    [
      "static:1.60",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."
    ],
    [
      "llvm_asm:1.60",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.60",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "f32:1.60",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)"
    ],
    [
      "f64:1.60",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)"
    ],
    [
      "unit:1.60",
      "has description",
      "The () type, also called \"unit\""
    ],
    [
      "std:1.60",
      "contains",
      "lazy:1.60"
    ],
    [
      "static:1.60",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static lifetime)"
    ],
    [
      "std::sync::OnceState:1.60",
      "has description",
      "State yielded to Once::call_once_force()’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std:1.60",
      "contains",
      "primitive:1.60"
    ],
    [
      "const:1.60",
      "has description",
      "Compile-time constants and compile-time evaluable functions."
    ],
    [
      "unit:1.60",
      "has description",
      "The () type, also called 'unit'."
    ],
    [
      "include_str:1.60",
      "has description",
      "Includes a UTF-8 encoded file as a string."
    ],
    [
      "unimplemented:1.60",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'."
    ],
    [
      "array:1.60",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually, we should be able to generalize to all lengths."
    ],
    [
      "string:1.60",
      "has description",
      "A UTF-8–encoded, growable string."
    ],
    [
      "dyn:1.60",
      "has description",
      "dyn is a prefix of a trait object's type."
    ],
    [
      "else:1.60",
      "has description",
      "What expression to evaluate when an if condition evaluates to false."
    ],
    [
      "std::hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "std::sync::atomic:1.60",
      "is a module",
      "module:1.60"
    ],
    [
      "std::sync::mpsc:1.60",
      "is a module",
      "module:1.60"
    ],
    [
      "std::sync::Arc:1.60",
      "is a struct",
      "struct:1.60"
    ],
    [
      "std::sync::Barrier:1.60",
      "is a struct",
      "struct:1.60"
    ],
    [
      "std::sync::Condvar:1.60",
      "is a struct",
      "struct:1.60"
    ],
    [
      "std::sync::Mutex:1.60",
      "is a struct",
      "struct:1.60"
    ],
    [
      "std::sync::Once:1.60",
      "is a struct",
      "struct:1.60"
    ],
    [
      "std::sync::Once:1.60",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization."
    ],
    [
      "std::sync::RwLock:1.60",
      "is a struct",
      "struct:1.60"
    ],
    [
      "std::sync::TryLockError:1.60",
      "is a enum",
      "enum:1.60"
    ],
    [
      "std::sync::TryLockError:1.60",
      "has description",
      "An enumeration of possible errors associated with a TryLockResult"
    ],
    [
      "std::sync::ONCE_INIT:1.60",
      "is a constant",
      "constant:1.60"
    ],
    [
      "std::sync::Arc:1.60",
      "has description",
      "A thread-safe reference-counting pointer. ‘Arc’ stands for ‘Atomically Reference Counted’."
    ],
    [
      "std::sync::Barrier:1.60",
      "has description",
      "Ensures multiple threads will wait for each other to reach a point in the program, before continuing execution all together."
    ],
    [
      "std::sync::Once:1.60",
      "has description",
      "Used for thread-safe, one-time initialization of a global variable."
    ],
    [
      "Atomically Reference Counted:1.60",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::ONCE_INIT:1.60",
      "has attribute",
      "Deprecated:1.60"
    ],
    [
      "std::sync:undefined",
      "adds module",
      "std::sync::atomic:1.60"
    ],
    [
      "std::sync:undefined",
      "adds module",
      "std::sync::mpsc:1.60"
    ],
    [
      "std::sync:undefined",
      "adds struct",
      "std::sync::Arc:1.60"
    ],
    [
      "std::sync:undefined",
      "adds struct",
      "std::sync::Barrier:1.60"
    ],
    [
      "std::sync:undefined",
      "adds struct",
      "std::sync::Condvar:1.60"
    ],
    [
      "std::sync:undefined",
      "adds struct",
      "std::sync::Mutex:1.60"
    ],
    [
      "std::sync:undefined",
      "adds struct",
      "std::sync::Once:1.60"
    ],
    [
      "std::sync:undefined",
      "adds struct",
      "std::sync::RwLock:1.60"
    ],
    [
      "std::sync:undefined",
      "adds enum",
      "std::sync::TryLockError:1.60"
    ],
    [
      "std::sync:undefined",
      "adds constant",
      "std::sync::ONCE_INIT:1.60"
    ],
    [
      "std::sync::ONCE_INIT:undefined",
      "marks as deprecated",
      "deprecated:1.60"
    ],
    [
      "std::sync:undefined",
      "renamed to",
      "std::sync:1.60"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::atomic:1.60"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::mpsc:1.60"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::Arc:1.60"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::Barrier:1.60"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::Condvar:1.60"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::Mutex:1.60"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::Once:1.60"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::RwLock:1.60"
    ],
    [
      "std::sync::Arc:undefined",
      "adds full name",
      "Atomically Reference Counted:1.60"
    ],
    [
      "std::sync::ONCE_INIT:undefined",
      "adds attribute",
      "Deprecated:1.60"
    ],
    [
      "std::sync::OnceState:undefined",
      "removes attribute",
      "Experimental:1.60"
    ],
    [
      "std::sync:1.40",
      "is a",
      "module"
    ],
    [
      "std::sync:1.40",
      "stable since",
      "1.0.0"
    ],
    [
      "std::sync:1.40",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::sync:1.40",
      "has description",
      "This module contains useful safe and unsafe synchronization primitives. Most of the primitives in this module do not provide any sort of locking and/or blocking at all, but rather provide the necessary tools to build other types of concurrent primitives."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::atomic:1.40"
    ],
    [
      "std::sync::atomic:1.40",
      "is a",
      "module"
    ],
    [
      "std::sync::atomic:1.40",
      "has description",
      "Atomic types"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::mpsc:1.40"
    ],
    [
      "std::sync::mpsc:1.40",
      "is a",
      "module"
    ],
    [
      "std::sync::mpsc:1.40",
      "has description",
      "Multi-producer, single-consumer FIFO queue communication primitives."
    ],
    [
      "std::sync::Arc:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::Arc:1.40",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::Arc:1.40",
      "has description",
      "An atomically reference counted wrapper for shared state."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::Arc:1.40"
    ],
    [
      "std::sync::Barrier:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::Barrier:1.40",
      "has alias",
      "Barrier"
    ],
    [
      "std::sync::Barrier:1.40",
      "has description",
      "A barrier enables multiple threads to synchronize the beginning of some computation."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::Barrier:1.40"
    ],
    [
      "std::sync::BarrierWaitResult:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::BarrierWaitResult:1.40",
      "has alias",
      "BarrierWaitResult"
    ],
    [
      "std::sync::BarrierWaitResult:1.40",
      "has description",
      "A result returned from wait."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::BarrierWaitResult:1.40"
    ],
    [
      "std::sync::Condvar:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::Condvar:1.40",
      "has alias",
      "Condvar"
    ],
    [
      "std::sync::Condvar:1.40",
      "has description",
      "A Condition Variable"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::Condvar:1.40"
    ],
    [
      "std::sync::Mutex:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::Mutex:1.40",
      "has alias",
      "Mutex"
    ],
    [
      "std::sync::Mutex:1.40",
      "has description",
      "A mutual exclusion primitive useful for protecting shared data"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::Mutex:1.40"
    ],
    [
      "std::sync::MutexGuard:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::MutexGuard:1.40",
      "has alias",
      "MutexGuard"
    ],
    [
      "std::sync::MutexGuard:1.40",
      "has description",
      "An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::MutexGuard:1.40"
    ],
    [
      "std::sync::Once:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::Once:1.40",
      "has alias",
      "Once"
    ],
    [
      "std::sync::Once:1.40",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::Once:1.40"
    ],
    [
      "std::sync::PoisonError:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::PoisonError:1.40",
      "has alias",
      "PoisonError"
    ],
    [
      "std::sync::PoisonError:1.40",
      "has description",
      "A type of error which can be returned whenever a lock is acquired."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::PoisonError:1.40"
    ],
    [
      "std::sync::RwLock:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLock:1.40",
      "has alias",
      "RwLock"
    ],
    [
      "std::sync::RwLock:1.40",
      "has description",
      "A reader-writer lock"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::RwLock:1.40"
    ],
    [
      "std::sync::RwLockReadGuard:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockReadGuard:1.40",
      "has alias",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockReadGuard:1.40",
      "has description",
      "RAII structure used to release the shared read access of a lock when dropped."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::RwLockReadGuard:1.40"
    ],
    [
      "std::sync::RwLockWriteGuard:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockWriteGuard:1.40",
      "has alias",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.40",
      "has description",
      "RAII structure used to release the exclusive write access of a lock when dropped."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::RwLockWriteGuard:1.40"
    ],
    [
      "std::sync::WaitTimeoutResult:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::WaitTimeoutResult:1.40",
      "has alias",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::WaitTimeoutResult:1.40",
      "has description",
      "A type indicating whether a timed wait on a condition variable returned due to a time out or not."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::WaitTimeoutResult:1.40"
    ],
    [
      "std::sync::Weak:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::Weak:1.40",
      "has alias",
      "Weak"
    ],
    [
      "std::sync::Weak:1.40",
      "has description",
      "A weak pointer to an Arc."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::Weak:1.40"
    ],
    [
      "std::sync::OnceState:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceState:1.40",
      "has alias",
      "OnceState"
    ],
    [
      "std::sync::OnceState:1.40",
      "has description",
      "State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."
    ],
    [
      "std::sync::OnceState:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::OnceState:1.40"
    ],
    [
      "std::sync::StaticCondvar:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticCondvar:1.40",
      "has alias",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticCondvar:1.40",
      "has description",
      "Statically allocated condition variables."
    ],
    [
      "std::sync::StaticCondvar:1.40",
      "has attribute",
      "deprecated:1.40"
    ],
    [
      "std::sync::StaticCondvar:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::StaticCondvar:1.40"
    ],
    [
      "std::sync::StaticMutex:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticMutex:1.40",
      "has alias",
      "StaticMutex"
    ],
    [
      "std::sync::StaticMutex:1.40",
      "has description",
      "The static mutex type is provided to allow for static allocation of mutexes."
    ],
    [
      "std::sync::StaticMutex:1.40",
      "has attribute",
      "deprecated:1.40"
    ],
    [
      "std::sync::StaticMutex:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::StaticMutex:1.40"
    ],
    [
      "std::sync::StaticRwLock:1.40",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticRwLock:1.40",
      "has alias",
      "StaticRwLock"
    ],
    [
      "std::sync::StaticRwLock:1.40",
      "has description",
      "Structure representing a statically allocated RwLock."
    ],
    [
      "std::sync::StaticRwLock:1.40",
      "has attribute",
      "deprecated:1.40"
    ],
    [
      "std::sync::StaticRwLock:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::StaticRwLock:1.40"
    ],
    [
      "std::sync::TryLockError:1.40",
      "is a",
      "enum"
    ],
    [
      "std::sync::TryLockError:1.40",
      "has alias",
      "TryLockError"
    ],
    [
      "std::sync::TryLockError:1.40",
      "has description",
      "An enumeration of possible errors which can occur while calling the try_lock method."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::TryLockError:1.40"
    ],
    [
      "std::sync::ONCE_INIT:1.40",
      "is a",
      "constant"
    ],
    [
      "std::sync::ONCE_INIT:1.40",
      "has alias",
      "ONCE_INIT"
    ],
    [
      "std::sync::ONCE_INIT:1.40",
      "has description",
      "Initialization value for static Once values."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::ONCE_INIT:1.40"
    ],
    [
      "std::sync::CONDVAR_INIT:1.40",
      "is a",
      "constant"
    ],
    [
      "std::sync::CONDVAR_INIT:1.40",
      "has alias",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.40",
      "has description",
      "Constant initializer for a statically allocated condition variable."
    ],
    [
      "std::sync::CONDVAR_INIT:1.40",
      "has attribute",
      "deprecated:1.40"
    ],
    [
      "std::sync::CONDVAR_INIT:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::CONDVAR_INIT:1.40"
    ],
    [
      "std::sync::MUTEX_INIT:1.40",
      "is a",
      "constant"
    ],
    [
      "std::sync::MUTEX_INIT:1.40",
      "has alias",
      "MUTEX_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.40",
      "has description",
      "Static initialization of a mutex. This constant can be used to initialize other mutex constants."
    ],
    [
      "std::sync::MUTEX_INIT:1.40",
      "has attribute",
      "deprecated:1.40"
    ],
    [
      "std::sync::MUTEX_INIT:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::MUTEX_INIT:1.40"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.40",
      "is a",
      "constant"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.40",
      "has alias",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.40",
      "has description",
      "Constant initialization for a statically-initialized rwlock."
    ],
    [
      "std::sync::RW_LOCK_INIT:1.40",
      "has attribute",
      "deprecated:1.40"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::RW_LOCK_INIT:1.40"
    ],
    [
      "std::sync::LockResult:1.40",
      "is a",
      "type"
    ],
    [
      "std::sync::LockResult:1.40",
      "has alias",
      "LockResult"
    ],
    [
      "std::sync::LockResult:1.40",
      "has description",
      "A type alias for the result of a lock method which can be poisoned."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::LockResult:1.40"
    ],
    [
      "std::sync::TryLockResult:1.40",
      "is a",
      "type"
    ],
    [
      "std::sync::TryLockResult:1.40",
      "has alias",
      "TryLockResult"
    ],
    [
      "std::sync::TryLockResult:1.40",
      "has description",
      "A type alias for the result of a nonblocking locking method."
    ],
    [
      "std::sync:1.40",
      "contains",
      "std::sync::TryLockResult:1.40"
    ],
    [
      "std::sync::OnceState:1.40",
      "has attribute",
      "Unstable:1.40"
    ],
    [
      "std::sync::StaticCondvar:1.40",
      "has attribute",
      "Deprecated:1.40"
    ],
    [
      "std::sync::StaticCondvar:1.40",
      "has attribute",
      "Unstable:1.40"
    ],
    [
      "std::sync::StaticMutex:1.40",
      "has attribute",
      "Deprecated:1.40"
    ],
    [
      "std::sync::StaticMutex:1.40",
      "has attribute",
      "Unstable:1.40"
    ],
    [
      "std::sync::StaticRwLock:1.40",
      "has attribute",
      "Deprecated:1.40"
    ],
    [
      "std::sync::StaticRwLock:1.40",
      "has attribute",
      "Unstable:1.40"
    ],
    [
      "std::sync::CONDVAR_INIT:1.40",
      "has attribute",
      "Deprecated:1.40"
    ],
    [
      "std::sync::CONDVAR_INIT:1.40",
      "has attribute",
      "Unstable:1.40"
    ],
    [
      "std::sync::MUTEX_INIT:1.40",
      "has attribute",
      "Deprecated:1.40"
    ],
    [
      "std::sync::MUTEX_INIT:1.40",
      "has attribute",
      "Unstable:1.40"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.40",
      "has attribute",
      "Deprecated:1.40"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.40",
      "has attribute",
      "Unstable:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::sync:1.40"
    ],
    [
      "std::sync:1.40",
      "has alias",
      "sync"
    ],
    [
      "std::sync::atomic:1.40",
      "has alias",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.40",
      "has alias",
      "mpsc"
    ],
    [
      "std::sync::MutexGuard:1.40",
      "has description",
      "An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync::LockResult:1.40",
      "is a",
      "type definition"
    ],
    [
      "std::sync::TryLockResult:1.40",
      "is a",
      "type definition"
    ],
    [
      "process:1.40",
      "has description",
      "A module for working with processes"
    ],
    [
      "ptr:1.40",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "rc:1.40",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'"
    ],
    [
      "std::sync::Arc:1.40",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'"
    ],
    [
      "std::sync::Weak:1.40",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed value"
    ],
    [
      "marker:1.40",
      "has description",
      "Primitive traits and types representing basic properties of types"
    ],
    [
      "fmt:1.40",
      "has description",
      "Utilities for formatting and printing `String`s"
    ],
    [
      "vec:1.40",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`"
    ],
    [
      "std:1.40",
      "contains",
      "std::heap:1.40"
    ],
    [
      "std::heap:1.40",
      "is a",
      "module"
    ],
    [
      "std::heap:1.40",
      "has alias",
      "heap"
    ],
    [
      "std::heap:1.40",
      "has description",
      "dox"
    ],
    [
      "f32:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "marker:1.40",
      "has description",
      "Primitive traits and marker types representing basic properties of types."
    ],
    [
      "process:1.40",
      "has description",
      "A module for working with processes."
    ],
    [
      "rc:1.40",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "vec:1.40",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`."
    ],
    [
      "assert_ne:1.40",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.40",
      "is a",
      "macro"
    ],
    [
      "try!:1.40",
      "has description",
      "Helper macro for reducing boilerplate code for matching Result together with converting downstream errors."
    ],
    [
      "std:1.40",
      "contains",
      "assert_ne:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "debug_assert_ne:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "compile_error:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "eprint:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "eprintln:1.40"
    ],
    [
      "marker:1.40",
      "has description",
      "Primitive traits and properties of types."
    ],
    [
      "std::sync::Arc:1.40",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."
    ],
    [
      "std:1.40",
      "contains",
      "std::hint:1.40"
    ],
    [
      "std::hint:1.40",
      "is a",
      "module"
    ],
    [
      "std::hint:1.40",
      "has alias",
      "hint"
    ],
    [
      "std::hint:1.40",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "format:1.40",
      "has description",
      "Creates a `String` using interpolation of runtime expressions. See using interpolation for details."
    ],
    [
      "std::sync::OnceState:1.40",
      "has description",
      "State yielded to call_once_force’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std::sync::TryLockError:1.40",
      "has description",
      "An enumeration of possible errors associated with a `TryLockResult` which can occur while trying to acquire a lock, from the `try_lock` method on a `Mutex` or the `try_read` and `try_write` methods on an `RwLock`."
    ],
    [
      "std:1.40",
      "contains",
      "fn:1.40"
    ],
    [
      "fn:1.40",
      "is a",
      "keyword"
    ],
    [
      "std:1.40",
      "contains",
      "let:1.40"
    ],
    [
      "let:1.40",
      "is a",
      "keyword"
    ],
    [
      "std:1.40",
      "contains",
      "struct:1.40"
    ],
    [
      "struct:1.40",
      "is a",
      "keyword"
    ],
    [
      "fmt:1.40",
      "has description",
      "Utilities for formatting and printing `String`s."
    ],
    [
      "std:1.40",
      "contains",
      "alloc:1.40"
    ],
    [
      "alloc:1.40",
      "is a",
      "module"
    ],
    [
      "alloc:1.40",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.40",
      "contains",
      "arch:1.40"
    ],
    [
      "arch:1.40",
      "is a",
      "module"
    ],
    [
      "arch:1.40",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.40",
      "contains",
      "std::future:1.40"
    ],
    [
      "std::future:1.40",
      "is a",
      "module"
    ],
    [
      "std::future:1.40",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.40",
      "contains",
      "std::pin:1.40"
    ],
    [
      "std::pin:1.40",
      "is a",
      "module"
    ],
    [
      "std::pin:1.40",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.40",
      "contains",
      "task:1.40"
    ],
    [
      "task:1.40",
      "is a",
      "module"
    ],
    [
      "task:1.40",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "f32:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "format:1.40",
      "has description",
      "Creates a `String` using interpolation of runtime expressions."
    ],
    [
      "println:1.40",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "std:1.40",
      "contains",
      "never:1.40"
    ],
    [
      "never:1.40",
      "is a",
      "primitive"
    ],
    [
      "never:1.40",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.40",
      "contains",
      "unit:1.40"
    ],
    [
      "unit:1.40",
      "is a",
      "primitive"
    ],
    [
      "unit:1.40",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std::future:1.40",
      "has alias",
      "future"
    ],
    [
      "std::pin:1.40",
      "has alias",
      "pin"
    ],
    [
      "std:1.40",
      "contains",
      "array:1.40"
    ],
    [
      "array:1.40",
      "is a",
      "module"
    ],
    [
      "array:1.40",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.40",
      "contains",
      "backtrace:1.40"
    ],
    [
      "backtrace:1.40",
      "is a",
      "module"
    ],
    [
      "backtrace:1.40",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "slice:1.40",
      "has description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "std:1.40",
      "contains",
      "asm:1.40"
    ],
    [
      "asm:1.40",
      "is a",
      "macro"
    ],
    [
      "asm:1.40",
      "has description",
      "Inline assembly."
    ],
    [
      "std:1.40",
      "contains",
      "async:1.40"
    ],
    [
      "async:1.40",
      "is a",
      "keyword"
    ],
    [
      "std:1.40",
      "contains",
      "await:1.40"
    ],
    [
      "await:1.40",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.40",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync::TryLockError:1.40",
      "has description",
      "An enumeration of possible errors associated with a TryLockResult which can occur while trying to acquire a lock, from the try_lock method on a Mutex or the try_read and try_write methods on an RwLock."
    ],
    [
      "std:1.40",
      "contains",
      "Self:1.40"
    ],
    [
      "Self:1.40",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.40",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation"
    ],
    [
      "std::sync::ONCE_INIT:1.40",
      "has attribute",
      "deprecated:1.40"
    ],
    [
      "std::sync::Weak:1.40",
      "has description",
      "Weak is a version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std:undefined",
      "removes module",
      "arch:1.40"
    ],
    [
      "std:undefined",
      "adds module",
      "array:1.40"
    ],
    [
      "std:undefined",
      "adds module",
      "backtrace:1.40"
    ],
    [
      "std:undefined",
      "adds macro",
      "asm:1.40"
    ],
    [
      "std:undefined",
      "adds keyword",
      "async:1.40"
    ],
    [
      "std:undefined",
      "adds keyword",
      "await:1.40"
    ],
    [
      "slice:undefined",
      "updates description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors.:1.40"
    ],
    [
      "std::sync::Weak:undefined",
      "updates description",
      "A version of Arc that holds a non-owning reference to the managed allocation.:1.40"
    ],
    [
      "std::sync::TryLockError:undefined",
      "updates description",
      "An enumeration of possible errors associated with a TryLockResult which can occur while trying to acquire a lock, from the try_lock method on a Mutex or the try_read and try_write methods on an RwLock.:1.40"
    ],
    [
      "std::sync::OnceState:undefined",
      "updates description",
      "State yielded to call_once_force’s closure parameter. The state can be used to query the poison status of the Once.:1.40"
    ],
    [
      "std:undefined",
      "removes feature",
      "arch:1.40"
    ],
    [
      "std:undefined",
      "adds feature",
      "array:1.40"
    ],
    [
      "std:undefined",
      "removes feature",
      "fn:1.40"
    ],
    [
      "std:undefined",
      "adds feature",
      "Self:1.40"
    ],
    [
      "std:undefined",
      "adds feature",
      "asm:1.40"
    ],
    [
      "slice:undefined",
      "removes description",
      "A dynamically-sized view into a contiguous sequence, `[T]`.:1.40"
    ],
    [
      "slice:undefined",
      "adds description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors.:1.40"
    ],
    [
      "std::sync::Weak:undefined",
      "removes description",
      "A version of Arc that holds a non-owning reference to the managed value:1.40"
    ],
    [
      "std::sync::Weak:undefined",
      "adds description",
      "A version of Arc that holds a non-owning reference to the managed allocation:1.40"
    ],
    [
      "std::sync::OnceState:undefined",
      "removes attribute",
      "unstable:1.40"
    ],
    [
      "std::sync::ONCE_INIT:undefined",
      "removes attribute",
      "unstable:1.40"
    ],
    [
      "std::sync::ONCE_INIT:undefined",
      "adds attribute",
      "deprecated:1.40"
    ],
    [
      "std::sync::LockResult:undefined",
      "adds feature",
      "type definition:1.40"
    ],
    [
      "std::sync::TryLockResult:undefined",
      "adds feature",
      "type definition:1.40"
    ],
    [
      "std::sync::Weak:undefined",
      "updates description",
      "Weak is a version of Arc that holds a non-owning reference to the managed allocation.:1.40"
    ],
    [
      "std::sync:1.20",
      "is a",
      "module"
    ],
    [
      "std::sync:1.20",
      "stable since",
      "1.0.0"
    ],
    [
      "std::sync:1.20",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::sync:1.20",
      "has description",
      "This module contains useful safe and unsafe synchronization primitives. Most of the primitives in this module do not provide any sort of locking and/or blocking at all, but rather provide the necessary tools to build other types of concurrent primitives."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::atomic:1.20"
    ],
    [
      "std::sync::atomic:1.20",
      "is a",
      "module"
    ],
    [
      "std::sync::atomic:1.20",
      "has description",
      "Atomic types"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::mpsc:1.20"
    ],
    [
      "std::sync::mpsc:1.20",
      "is a",
      "module"
    ],
    [
      "std::sync::mpsc:1.20",
      "has description",
      "Multi-producer, single-consumer FIFO queue communication primitives."
    ],
    [
      "std::sync::Arc:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::Arc:1.20",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::Arc:1.20",
      "has description",
      "An atomically reference counted wrapper for shared state."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::Arc:1.20"
    ],
    [
      "std::sync::Barrier:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::Barrier:1.20",
      "has alias",
      "Barrier"
    ],
    [
      "std::sync::Barrier:1.20",
      "has description",
      "A barrier enables multiple threads to synchronize the beginning of some computation."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::Barrier:1.20"
    ],
    [
      "std::sync::BarrierWaitResult:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::BarrierWaitResult:1.20",
      "has alias",
      "BarrierWaitResult"
    ],
    [
      "std::sync::BarrierWaitResult:1.20",
      "has description",
      "A result returned from wait."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::BarrierWaitResult:1.20"
    ],
    [
      "std::sync::Condvar:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::Condvar:1.20",
      "has alias",
      "Condvar"
    ],
    [
      "std::sync::Condvar:1.20",
      "has description",
      "A Condition Variable"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::Condvar:1.20"
    ],
    [
      "std::sync::Mutex:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::Mutex:1.20",
      "has alias",
      "Mutex"
    ],
    [
      "std::sync::Mutex:1.20",
      "has description",
      "A mutual exclusion primitive useful for protecting shared data"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::Mutex:1.20"
    ],
    [
      "std::sync::MutexGuard:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::MutexGuard:1.20",
      "has alias",
      "MutexGuard"
    ],
    [
      "std::sync::MutexGuard:1.20",
      "has description",
      "An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::MutexGuard:1.20"
    ],
    [
      "std::sync::Once:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::Once:1.20",
      "has alias",
      "Once"
    ],
    [
      "std::sync::Once:1.20",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::Once:1.20"
    ],
    [
      "std::sync::PoisonError:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::PoisonError:1.20",
      "has alias",
      "PoisonError"
    ],
    [
      "std::sync::PoisonError:1.20",
      "has description",
      "A type of error which can be returned whenever a lock is acquired."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::PoisonError:1.20"
    ],
    [
      "std::sync::RwLock:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLock:1.20",
      "has alias",
      "RwLock"
    ],
    [
      "std::sync::RwLock:1.20",
      "has description",
      "A reader-writer lock"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::RwLock:1.20"
    ],
    [
      "std::sync::RwLockReadGuard:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockReadGuard:1.20",
      "has alias",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockReadGuard:1.20",
      "has description",
      "RAII structure used to release the shared read access of a lock when dropped."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::RwLockReadGuard:1.20"
    ],
    [
      "std::sync::RwLockWriteGuard:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockWriteGuard:1.20",
      "has alias",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.20",
      "has description",
      "RAII structure used to release the exclusive write access of a lock when dropped."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::RwLockWriteGuard:1.20"
    ],
    [
      "std::sync::WaitTimeoutResult:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::WaitTimeoutResult:1.20",
      "has alias",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::WaitTimeoutResult:1.20",
      "has description",
      "A type indicating whether a timed wait on a condition variable returned due to a time out or not."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::WaitTimeoutResult:1.20"
    ],
    [
      "std::sync::Weak:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::Weak:1.20",
      "has alias",
      "Weak"
    ],
    [
      "std::sync::Weak:1.20",
      "has description",
      "A weak pointer to an Arc."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::Weak:1.20"
    ],
    [
      "std::sync::OnceState:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceState:1.20",
      "has alias",
      "OnceState"
    ],
    [
      "std::sync::OnceState:1.20",
      "has description",
      "State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."
    ],
    [
      "std::sync::OnceState:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::OnceState:1.20"
    ],
    [
      "std::sync::StaticCondvar:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticCondvar:1.20",
      "has alias",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticCondvar:1.20",
      "has description",
      "Statically allocated condition variables."
    ],
    [
      "std::sync::StaticCondvar:1.20",
      "has attribute",
      "deprecated:1.20"
    ],
    [
      "std::sync::StaticCondvar:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::StaticCondvar:1.20"
    ],
    [
      "std::sync::StaticMutex:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticMutex:1.20",
      "has alias",
      "StaticMutex"
    ],
    [
      "std::sync::StaticMutex:1.20",
      "has description",
      "The static mutex type is provided to allow for static allocation of mutexes."
    ],
    [
      "std::sync::StaticMutex:1.20",
      "has attribute",
      "deprecated:1.20"
    ],
    [
      "std::sync::StaticMutex:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::StaticMutex:1.20"
    ],
    [
      "std::sync::StaticRwLock:1.20",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticRwLock:1.20",
      "has alias",
      "StaticRwLock"
    ],
    [
      "std::sync::StaticRwLock:1.20",
      "has description",
      "Structure representing a statically allocated RwLock."
    ],
    [
      "std::sync::StaticRwLock:1.20",
      "has attribute",
      "deprecated:1.20"
    ],
    [
      "std::sync::StaticRwLock:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::StaticRwLock:1.20"
    ],
    [
      "std::sync::TryLockError:1.20",
      "is a",
      "enum"
    ],
    [
      "std::sync::TryLockError:1.20",
      "has alias",
      "TryLockError"
    ],
    [
      "std::sync::TryLockError:1.20",
      "has description",
      "An enumeration of possible errors which can occur while calling the try_lock method."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::TryLockError:1.20"
    ],
    [
      "std::sync::ONCE_INIT:1.20",
      "is a",
      "constant"
    ],
    [
      "std::sync::ONCE_INIT:1.20",
      "has alias",
      "ONCE_INIT"
    ],
    [
      "std::sync::ONCE_INIT:1.20",
      "has description",
      "Initialization value for static Once values."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::ONCE_INIT:1.20"
    ],
    [
      "std::sync::CONDVAR_INIT:1.20",
      "is a",
      "constant"
    ],
    [
      "std::sync::CONDVAR_INIT:1.20",
      "has alias",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.20",
      "has description",
      "Constant initializer for a statically allocated condition variable."
    ],
    [
      "std::sync::CONDVAR_INIT:1.20",
      "has attribute",
      "deprecated:1.20"
    ],
    [
      "std::sync::CONDVAR_INIT:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::CONDVAR_INIT:1.20"
    ],
    [
      "std::sync::MUTEX_INIT:1.20",
      "is a",
      "constant"
    ],
    [
      "std::sync::MUTEX_INIT:1.20",
      "has alias",
      "MUTEX_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.20",
      "has description",
      "Static initialization of a mutex. This constant can be used to initialize other mutex constants."
    ],
    [
      "std::sync::MUTEX_INIT:1.20",
      "has attribute",
      "deprecated:1.20"
    ],
    [
      "std::sync::MUTEX_INIT:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::MUTEX_INIT:1.20"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.20",
      "is a",
      "constant"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.20",
      "has alias",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.20",
      "has description",
      "Constant initialization for a statically-initialized rwlock."
    ],
    [
      "std::sync::RW_LOCK_INIT:1.20",
      "has attribute",
      "deprecated:1.20"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::RW_LOCK_INIT:1.20"
    ],
    [
      "std::sync::LockResult:1.20",
      "is a",
      "type"
    ],
    [
      "std::sync::LockResult:1.20",
      "has alias",
      "LockResult"
    ],
    [
      "std::sync::LockResult:1.20",
      "has description",
      "A type alias for the result of a lock method which can be poisoned."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::LockResult:1.20"
    ],
    [
      "std::sync::TryLockResult:1.20",
      "is a",
      "type"
    ],
    [
      "std::sync::TryLockResult:1.20",
      "has alias",
      "TryLockResult"
    ],
    [
      "std::sync::TryLockResult:1.20",
      "has description",
      "A type alias for the result of a nonblocking locking method."
    ],
    [
      "std::sync:1.20",
      "contains",
      "std::sync::TryLockResult:1.20"
    ],
    [
      "std::sync::OnceState:1.20",
      "has attribute",
      "Unstable:1.20"
    ],
    [
      "std::sync::StaticCondvar:1.20",
      "has attribute",
      "Deprecated:1.20"
    ],
    [
      "std::sync::StaticCondvar:1.20",
      "has attribute",
      "Unstable:1.20"
    ],
    [
      "std::sync::StaticMutex:1.20",
      "has attribute",
      "Deprecated:1.20"
    ],
    [
      "std::sync::StaticMutex:1.20",
      "has attribute",
      "Unstable:1.20"
    ],
    [
      "std::sync::StaticRwLock:1.20",
      "has attribute",
      "Deprecated:1.20"
    ],
    [
      "std::sync::StaticRwLock:1.20",
      "has attribute",
      "Unstable:1.20"
    ],
    [
      "std::sync::CONDVAR_INIT:1.20",
      "has attribute",
      "Deprecated:1.20"
    ],
    [
      "std::sync::CONDVAR_INIT:1.20",
      "has attribute",
      "Unstable:1.20"
    ],
    [
      "std::sync::MUTEX_INIT:1.20",
      "has attribute",
      "Deprecated:1.20"
    ],
    [
      "std::sync::MUTEX_INIT:1.20",
      "has attribute",
      "Unstable:1.20"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.20",
      "has attribute",
      "Deprecated:1.20"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.20",
      "has attribute",
      "Unstable:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::sync:1.20"
    ],
    [
      "std::sync:1.20",
      "has alias",
      "sync"
    ],
    [
      "std::sync::atomic:1.20",
      "has alias",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.20",
      "has alias",
      "mpsc"
    ],
    [
      "std::sync::MutexGuard:1.20",
      "has description",
      "An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync::LockResult:1.20",
      "is a",
      "type definition"
    ],
    [
      "std::sync::TryLockResult:1.20",
      "is a",
      "type definition"
    ],
    [
      "process:1.20",
      "has description",
      "A module for working with processes"
    ],
    [
      "ptr:1.20",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "rc:1.20",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'"
    ],
    [
      "std::sync::Arc:1.20",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'"
    ],
    [
      "std::sync::Weak:1.20",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed value"
    ],
    [
      "marker:1.20",
      "has description",
      "Primitive traits and types representing basic properties of types"
    ],
    [
      "fmt:1.20",
      "has description",
      "Utilities for formatting and printing `String`s"
    ],
    [
      "vec:1.20",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`"
    ],
    [
      "std:1.20",
      "contains",
      "std::heap:1.20"
    ],
    [
      "std::heap:1.20",
      "is a",
      "module"
    ],
    [
      "std::heap:1.20",
      "has alias",
      "heap"
    ],
    [
      "std::heap:1.20",
      "has description",
      "dox"
    ],
    [
      "f32:1.20",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.20",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "marker:1.20",
      "has description",
      "Primitive traits and marker types representing basic properties of types."
    ],
    [
      "process:1.20",
      "has description",
      "A module for working with processes."
    ],
    [
      "rc:1.20",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "vec:1.20",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`."
    ],
    [
      "assert_ne:1.20",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.20",
      "is a",
      "macro"
    ],
    [
      "try!:1.20",
      "has description",
      "Helper macro for reducing boilerplate code for matching Result together with converting downstream errors."
    ],
    [
      "std:1.20",
      "contains",
      "assert_ne:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "debug_assert_ne:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "compile_error:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "eprint:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "eprintln:1.20"
    ],
    [
      "marker:1.20",
      "has description",
      "Primitive traits and properties of types."
    ],
    [
      "std::sync::Arc:1.20",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."
    ],
    [
      "std:undefined",
      "adds",
      "std::heap:1.20"
    ],
    [
      "std:undefined",
      "adds contains",
      "std::heap:1.20"
    ],
    [
      "std:undefined",
      "adds contains",
      "assert_ne:1.20"
    ],
    [
      "std:undefined",
      "adds contains",
      "debug_assert_ne:1.20"
    ],
    [
      "std:undefined",
      "adds contains",
      "compile_error:1.20"
    ],
    [
      "std:undefined",
      "adds contains",
      "eprint:1.20"
    ],
    [
      "std:undefined",
      "adds contains",
      "eprintln:1.20"
    ],
    [
      "f32:undefined",
      "updates description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module.:1.20"
    ],
    [
      "f64:undefined",
      "updates description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module.:1.20"
    ],
    [
      "marker:undefined",
      "updates description",
      "Primitive traits and marker types representing basic properties of types.:1.20"
    ],
    [
      "process:undefined",
      "updates description",
      "A module for working with processes.:1.20"
    ],
    [
      "rc:undefined",
      "updates description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'.:1.20"
    ],
    [
      "vec:undefined",
      "updates description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`.:1.20"
    ],
    [
      "fmt:undefined",
      "updates description",
      "Utilities for formatting and printing `String`s:1.20"
    ],
    [
      "try!:undefined",
      "updates description",
      "Helper macro for reducing boilerplate code for matching Result together with converting downstream errors.:1.20"
    ],
    [
      "marker:undefined",
      "updates description",
      "Primitive traits and properties of types.:1.20"
    ],
    [
      "std::sync::Arc:undefined",
      "updates description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'.:1.20"
    ],
    [
      "assert_ne:undefined",
      "adds feature",
      "macro:1.20"
    ],
    [
      "debug_assert_ne:undefined",
      "adds feature",
      "macro:1.20"
    ],
    [
      "std::sync:1.70",
      "is a",
      "module"
    ],
    [
      "std::sync:1.70",
      "stable since",
      "1.0.0"
    ],
    [
      "std::sync:1.70",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::sync:1.70",
      "has description",
      "This module contains useful safe and unsafe synchronization primitives. Most of the primitives in this module do not provide any sort of locking and/or blocking at all, but rather provide the necessary tools to build other types of concurrent primitives."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::atomic:1.70"
    ],
    [
      "std::sync::atomic:1.70",
      "is a",
      "module"
    ],
    [
      "std::sync::atomic:1.70",
      "has description",
      "Atomic types"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::mpsc:1.70"
    ],
    [
      "std::sync::mpsc:1.70",
      "is a",
      "module"
    ],
    [
      "std::sync::mpsc:1.70",
      "has description",
      "Multi-producer, single-consumer FIFO queue communication primitives."
    ],
    [
      "std::sync::Arc:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::Arc:1.70",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::Arc:1.70",
      "has description",
      "An atomically reference counted wrapper for shared state."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::Arc:1.70"
    ],
    [
      "std::sync::Barrier:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::Barrier:1.70",
      "has alias",
      "Barrier"
    ],
    [
      "std::sync::Barrier:1.70",
      "has description",
      "A barrier enables multiple threads to synchronize the beginning of some computation."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::Barrier:1.70"
    ],
    [
      "std::sync::BarrierWaitResult:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::BarrierWaitResult:1.70",
      "has alias",
      "BarrierWaitResult"
    ],
    [
      "std::sync::BarrierWaitResult:1.70",
      "has description",
      "A result returned from wait."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::BarrierWaitResult:1.70"
    ],
    [
      "std::sync::Condvar:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::Condvar:1.70",
      "has alias",
      "Condvar"
    ],
    [
      "std::sync::Condvar:1.70",
      "has description",
      "A Condition Variable"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::Condvar:1.70"
    ],
    [
      "std::sync::Mutex:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::Mutex:1.70",
      "has alias",
      "Mutex"
    ],
    [
      "std::sync::Mutex:1.70",
      "has description",
      "A mutual exclusion primitive useful for protecting shared data"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::Mutex:1.70"
    ],
    [
      "std::sync::MutexGuard:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::MutexGuard:1.70",
      "has alias",
      "MutexGuard"
    ],
    [
      "std::sync::MutexGuard:1.70",
      "has description",
      "An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::MutexGuard:1.70"
    ],
    [
      "std::sync::Once:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::Once:1.70",
      "has alias",
      "Once"
    ],
    [
      "std::sync::Once:1.70",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::Once:1.70"
    ],
    [
      "std::sync::PoisonError:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::PoisonError:1.70",
      "has alias",
      "PoisonError"
    ],
    [
      "std::sync::PoisonError:1.70",
      "has description",
      "A type of error which can be returned whenever a lock is acquired."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::PoisonError:1.70"
    ],
    [
      "std::sync::RwLock:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLock:1.70",
      "has alias",
      "RwLock"
    ],
    [
      "std::sync::RwLock:1.70",
      "has description",
      "A reader-writer lock"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::RwLock:1.70"
    ],
    [
      "std::sync::RwLockReadGuard:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockReadGuard:1.70",
      "has alias",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockReadGuard:1.70",
      "has description",
      "RAII structure used to release the shared read access of a lock when dropped."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::RwLockReadGuard:1.70"
    ],
    [
      "std::sync::RwLockWriteGuard:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockWriteGuard:1.70",
      "has alias",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.70",
      "has description",
      "RAII structure used to release the exclusive write access of a lock when dropped."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::RwLockWriteGuard:1.70"
    ],
    [
      "std::sync::WaitTimeoutResult:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::WaitTimeoutResult:1.70",
      "has alias",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::WaitTimeoutResult:1.70",
      "has description",
      "A type indicating whether a timed wait on a condition variable returned due to a time out or not."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::WaitTimeoutResult:1.70"
    ],
    [
      "std::sync::Weak:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::Weak:1.70",
      "has alias",
      "Weak"
    ],
    [
      "std::sync::Weak:1.70",
      "has description",
      "A weak pointer to an Arc."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::Weak:1.70"
    ],
    [
      "std::sync::OnceState:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceState:1.70",
      "has alias",
      "OnceState"
    ],
    [
      "std::sync::OnceState:1.70",
      "has description",
      "State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."
    ],
    [
      "std::sync::OnceState:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::OnceState:1.70"
    ],
    [
      "std::sync::StaticCondvar:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticCondvar:1.70",
      "has alias",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticCondvar:1.70",
      "has description",
      "Statically allocated condition variables."
    ],
    [
      "std::sync::StaticCondvar:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::sync::StaticCondvar:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::StaticCondvar:1.70"
    ],
    [
      "std::sync::StaticMutex:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticMutex:1.70",
      "has alias",
      "StaticMutex"
    ],
    [
      "std::sync::StaticMutex:1.70",
      "has description",
      "The static mutex type is provided to allow for static allocation of mutexes."
    ],
    [
      "std::sync::StaticMutex:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::sync::StaticMutex:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::StaticMutex:1.70"
    ],
    [
      "std::sync::StaticRwLock:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticRwLock:1.70",
      "has alias",
      "StaticRwLock"
    ],
    [
      "std::sync::StaticRwLock:1.70",
      "has description",
      "Structure representing a statically allocated RwLock."
    ],
    [
      "std::sync::StaticRwLock:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::sync::StaticRwLock:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::StaticRwLock:1.70"
    ],
    [
      "std::sync::TryLockError:1.70",
      "is a",
      "enum"
    ],
    [
      "std::sync::TryLockError:1.70",
      "has alias",
      "TryLockError"
    ],
    [
      "std::sync::TryLockError:1.70",
      "has description",
      "An enumeration of possible errors which can occur while calling the try_lock method."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::TryLockError:1.70"
    ],
    [
      "std::sync::ONCE_INIT:1.70",
      "is a",
      "constant"
    ],
    [
      "std::sync::ONCE_INIT:1.70",
      "has alias",
      "ONCE_INIT"
    ],
    [
      "std::sync::ONCE_INIT:1.70",
      "has description",
      "Initialization value for static Once values."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::ONCE_INIT:1.70"
    ],
    [
      "std::sync::CONDVAR_INIT:1.70",
      "is a",
      "constant"
    ],
    [
      "std::sync::CONDVAR_INIT:1.70",
      "has alias",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.70",
      "has description",
      "Constant initializer for a statically allocated condition variable."
    ],
    [
      "std::sync::CONDVAR_INIT:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::sync::CONDVAR_INIT:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::CONDVAR_INIT:1.70"
    ],
    [
      "std::sync::MUTEX_INIT:1.70",
      "is a",
      "constant"
    ],
    [
      "std::sync::MUTEX_INIT:1.70",
      "has alias",
      "MUTEX_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.70",
      "has description",
      "Static initialization of a mutex. This constant can be used to initialize other mutex constants."
    ],
    [
      "std::sync::MUTEX_INIT:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::sync::MUTEX_INIT:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::MUTEX_INIT:1.70"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.70",
      "is a",
      "constant"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.70",
      "has alias",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.70",
      "has description",
      "Constant initialization for a statically-initialized rwlock."
    ],
    [
      "std::sync::RW_LOCK_INIT:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::RW_LOCK_INIT:1.70"
    ],
    [
      "std::sync::LockResult:1.70",
      "is a",
      "type"
    ],
    [
      "std::sync::LockResult:1.70",
      "has alias",
      "LockResult"
    ],
    [
      "std::sync::LockResult:1.70",
      "has description",
      "A type alias for the result of a lock method which can be poisoned."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::LockResult:1.70"
    ],
    [
      "std::sync::TryLockResult:1.70",
      "is a",
      "type"
    ],
    [
      "std::sync::TryLockResult:1.70",
      "has alias",
      "TryLockResult"
    ],
    [
      "std::sync::TryLockResult:1.70",
      "has description",
      "A type alias for the result of a nonblocking locking method."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::TryLockResult:1.70"
    ],
    [
      "std::sync::OnceState:1.70",
      "has attribute",
      "Unstable:1.70"
    ],
    [
      "std::sync::StaticCondvar:1.70",
      "has attribute",
      "Deprecated:1.70"
    ],
    [
      "std::sync::StaticCondvar:1.70",
      "has attribute",
      "Unstable:1.70"
    ],
    [
      "std::sync::StaticMutex:1.70",
      "has attribute",
      "Deprecated:1.70"
    ],
    [
      "std::sync::StaticMutex:1.70",
      "has attribute",
      "Unstable:1.70"
    ],
    [
      "std::sync::StaticRwLock:1.70",
      "has attribute",
      "Deprecated:1.70"
    ],
    [
      "std::sync::StaticRwLock:1.70",
      "has attribute",
      "Unstable:1.70"
    ],
    [
      "std::sync::CONDVAR_INIT:1.70",
      "has attribute",
      "Deprecated:1.70"
    ],
    [
      "std::sync::CONDVAR_INIT:1.70",
      "has attribute",
      "Unstable:1.70"
    ],
    [
      "std::sync::MUTEX_INIT:1.70",
      "has attribute",
      "Deprecated:1.70"
    ],
    [
      "std::sync::MUTEX_INIT:1.70",
      "has attribute",
      "Unstable:1.70"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.70",
      "has attribute",
      "Deprecated:1.70"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.70",
      "has attribute",
      "Unstable:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::sync:1.70"
    ],
    [
      "std::sync:1.70",
      "has alias",
      "sync"
    ],
    [
      "std::sync::atomic:1.70",
      "has alias",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.70",
      "has alias",
      "mpsc"
    ],
    [
      "std::sync::MutexGuard:1.70",
      "has description",
      "An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync::LockResult:1.70",
      "is a",
      "type definition"
    ],
    [
      "std::sync::TryLockResult:1.70",
      "is a",
      "type definition"
    ],
    [
      "process:1.70",
      "has description",
      "A module for working with processes"
    ],
    [
      "ptr:1.70",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "rc:1.70",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'"
    ],
    [
      "std::sync::Arc:1.70",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'"
    ],
    [
      "std::sync::Weak:1.70",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed value"
    ],
    [
      "marker:1.70",
      "has description",
      "Primitive traits and types representing basic properties of types"
    ],
    [
      "fmt:1.70",
      "has description",
      "Utilities for formatting and printing `String`s"
    ],
    [
      "vec:1.70",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`"
    ],
    [
      "std:1.70",
      "contains",
      "std::heap:1.70"
    ],
    [
      "std::heap:1.70",
      "is a",
      "module"
    ],
    [
      "std::heap:1.70",
      "has alias",
      "heap"
    ],
    [
      "std::heap:1.70",
      "has description",
      "dox"
    ],
    [
      "f32:1.70",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.70",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "marker:1.70",
      "has description",
      "Primitive traits and marker types representing basic properties of types."
    ],
    [
      "process:1.70",
      "has description",
      "A module for working with processes."
    ],
    [
      "rc:1.70",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "vec:1.70",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`."
    ],
    [
      "assert_ne:1.70",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.70",
      "is a",
      "macro"
    ],
    [
      "try!:1.70",
      "has description",
      "Helper macro for reducing boilerplate code for matching Result together with converting downstream errors."
    ],
    [
      "std:1.70",
      "contains",
      "assert_ne:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "debug_assert_ne:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "compile_error:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "eprint:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "eprintln:1.70"
    ],
    [
      "marker:1.70",
      "has description",
      "Primitive traits and properties of types."
    ],
    [
      "std::sync::Arc:1.70",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."
    ],
    [
      "std:1.70",
      "contains",
      "std::hint:1.70"
    ],
    [
      "std::hint:1.70",
      "is a",
      "module"
    ],
    [
      "std::hint:1.70",
      "has alias",
      "hint"
    ],
    [
      "std::hint:1.70",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "format:1.70",
      "has description",
      "Creates a `String` using interpolation of runtime expressions. See using interpolation for details."
    ],
    [
      "std::sync::OnceState:1.70",
      "has description",
      "State yielded to call_once_force’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std::sync::TryLockError:1.70",
      "has description",
      "An enumeration of possible errors associated with a `TryLockResult` which can occur while trying to acquire a lock, from the `try_lock` method on a `Mutex` or the `try_read` and `try_write` methods on an `RwLock`."
    ],
    [
      "std:1.70",
      "contains",
      "fn:1.70"
    ],
    [
      "fn:1.70",
      "is a",
      "keyword"
    ],
    [
      "std:1.70",
      "contains",
      "let:1.70"
    ],
    [
      "let:1.70",
      "is a",
      "keyword"
    ],
    [
      "std:1.70",
      "contains",
      "struct:1.70"
    ],
    [
      "struct:1.70",
      "is a",
      "keyword"
    ],
    [
      "fmt:1.70",
      "has description",
      "Utilities for formatting and printing `String`s."
    ],
    [
      "std:1.70",
      "contains",
      "alloc:1.70"
    ],
    [
      "alloc:1.70",
      "is a",
      "module"
    ],
    [
      "alloc:1.70",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.70",
      "contains",
      "arch:1.70"
    ],
    [
      "arch:1.70",
      "is a",
      "module"
    ],
    [
      "arch:1.70",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.70",
      "contains",
      "std::future:1.70"
    ],
    [
      "std::future:1.70",
      "is a",
      "module"
    ],
    [
      "std::future:1.70",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.70",
      "contains",
      "std::pin:1.70"
    ],
    [
      "std::pin:1.70",
      "is a",
      "module"
    ],
    [
      "std::pin:1.70",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.70",
      "contains",
      "task:1.70"
    ],
    [
      "task:1.70",
      "is a",
      "module"
    ],
    [
      "task:1.70",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "f32:1.70",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.70",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "format:1.70",
      "has description",
      "Creates a `String` using interpolation of runtime expressions."
    ],
    [
      "println:1.70",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "std:1.70",
      "contains",
      "never:1.70"
    ],
    [
      "never:1.70",
      "is a",
      "primitive"
    ],
    [
      "never:1.70",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.70",
      "contains",
      "unit:1.70"
    ],
    [
      "unit:1.70",
      "is a",
      "primitive"
    ],
    [
      "unit:1.70",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std::future:1.70",
      "has alias",
      "future"
    ],
    [
      "std::pin:1.70",
      "has alias",
      "pin"
    ],
    [
      "std:1.70",
      "contains",
      "array:1.70"
    ],
    [
      "array:1.70",
      "is a",
      "module"
    ],
    [
      "array:1.70",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.70",
      "contains",
      "backtrace:1.70"
    ],
    [
      "backtrace:1.70",
      "is a",
      "module"
    ],
    [
      "backtrace:1.70",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "slice:1.70",
      "has description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "std:1.70",
      "contains",
      "asm:1.70"
    ],
    [
      "asm:1.70",
      "is a",
      "macro"
    ],
    [
      "asm:1.70",
      "has description",
      "Inline assembly."
    ],
    [
      "std:1.70",
      "contains",
      "async:1.70"
    ],
    [
      "async:1.70",
      "is a",
      "keyword"
    ],
    [
      "std:1.70",
      "contains",
      "await:1.70"
    ],
    [
      "await:1.70",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.70",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync::TryLockError:1.70",
      "has description",
      "An enumeration of possible errors associated with a TryLockResult which can occur while trying to acquire a lock, from the try_lock method on a Mutex or the try_read and try_write methods on an RwLock."
    ],
    [
      "std:1.70",
      "contains",
      "Self:1.70"
    ],
    [
      "Self:1.70",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.70",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation"
    ],
    [
      "std::sync::ONCE_INIT:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::sync::Weak:1.70",
      "has description",
      "Weak is a version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync:1.70",
      "has description",
      "Advanced synchronization primitives for threading."
    ],
    [
      "std::sync:1.70",
      "stable since",
      "1.31.0"
    ],
    [
      "std::sync::OnceLock:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceLock:1.70",
      "has alias",
      "OnceLock"
    ],
    [
      "std::sync::OnceLock:1.70",
      "has description",
      "A synchronization primitive which can be written to only once."
    ],
    [
      "std::sync::Exclusive:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::Exclusive:1.70",
      "has alias",
      "Exclusive"
    ],
    [
      "std::sync::Exclusive:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync::Exclusive:1.70",
      "has description",
      "Exclusive provides only mutable access, also referred to as exclusive access to the underlying value."
    ],
    [
      "std::sync::LazyLock:1.70",
      "is a",
      "struct"
    ],
    [
      "std::sync::LazyLock:1.70",
      "has alias",
      "LazyLock"
    ],
    [
      "std::sync::LazyLock:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::sync::LazyLock:1.70",
      "has description",
      "A value which is initialized on the first access."
    ],
    [
      "std::sync::Exclusive:1.70",
      "has description",
      "Exclusive provides only mutable access, also referred to as exclusive access to the underlying value. It provides no immutable, or shared access to the underlying value."
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::OnceLock:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::Exclusive:1.70"
    ],
    [
      "std::sync:1.70",
      "contains",
      "std::sync::LazyLock:1.70"
    ],
    [
      "std::sync:1.70",
      "is current module",
      "true:1.70"
    ],
    [
      "lazy:1.70",
      "is a",
      "module"
    ],
    [
      "lazy:1.70",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "primitive:1.70",
      "is a",
      "module"
    ],
    [
      "primitive:1.70",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "f32:1.70",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "f64:1.70",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "unit:1.70",
      "has description",
      "The `()` type, also called \"unit\"."
    ],
    [
      "dyn:1.70",
      "has description",
      "`dyn` is a prefix of a trait object's type."
    ],
    [
      "static:1.70",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."
    ],
    [
      "llvm_asm:1.70",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.70",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "f32:1.70",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)"
    ],
    [
      "f64:1.70",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)"
    ],
    [
      "unit:1.70",
      "has description",
      "The () type, also called \"unit\""
    ],
    [
      "std:1.70",
      "contains",
      "lazy:1.70"
    ],
    [
      "static:1.70",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static lifetime)"
    ],
    [
      "std::sync::OnceState:1.70",
      "has description",
      "State yielded to Once::call_once_force()’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std:1.70",
      "contains",
      "primitive:1.70"
    ],
    [
      "const:1.70",
      "has description",
      "Compile-time constants and compile-time evaluable functions."
    ],
    [
      "unit:1.70",
      "has description",
      "The () type, also called 'unit'."
    ],
    [
      "include_str:1.70",
      "has description",
      "Includes a UTF-8 encoded file as a string."
    ],
    [
      "unimplemented:1.70",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'."
    ],
    [
      "array:1.70",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually, we should be able to generalize to all lengths."
    ],
    [
      "string:1.70",
      "has description",
      "A UTF-8–encoded, growable string."
    ],
    [
      "dyn:1.70",
      "has description",
      "dyn is a prefix of a trait object's type."
    ],
    [
      "else:1.70",
      "has description",
      "What expression to evaluate when an if condition evaluates to false."
    ],
    [
      "std::hint:1.70",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "std::sync::atomic:1.70",
      "is a module",
      "module:1.70"
    ],
    [
      "std::sync::mpsc:1.70",
      "is a module",
      "module:1.70"
    ],
    [
      "std::sync::Arc:1.70",
      "is a struct",
      "struct:1.70"
    ],
    [
      "std::sync::Barrier:1.70",
      "is a struct",
      "struct:1.70"
    ],
    [
      "std::sync::Condvar:1.70",
      "is a struct",
      "struct:1.70"
    ],
    [
      "std::sync::Mutex:1.70",
      "is a struct",
      "struct:1.70"
    ],
    [
      "std::sync::Once:1.70",
      "is a struct",
      "struct:1.70"
    ],
    [
      "std::sync::Once:1.70",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization."
    ],
    [
      "std::sync::RwLock:1.70",
      "is a struct",
      "struct:1.70"
    ],
    [
      "std::sync::TryLockError:1.70",
      "is a enum",
      "enum:1.70"
    ],
    [
      "std::sync::TryLockError:1.70",
      "has description",
      "An enumeration of possible errors associated with a TryLockResult"
    ],
    [
      "std::sync::ONCE_INIT:1.70",
      "is a constant",
      "constant:1.70"
    ],
    [
      "std::sync::Arc:1.70",
      "has description",
      "A thread-safe reference-counting pointer. ‘Arc’ stands for ‘Atomically Reference Counted’."
    ],
    [
      "std::sync::Barrier:1.70",
      "has description",
      "Ensures multiple threads will wait for each other to reach a point in the program, before continuing execution all together."
    ],
    [
      "std::sync::Once:1.70",
      "has description",
      "Used for thread-safe, one-time initialization of a global variable."
    ],
    [
      "Atomically Reference Counted:1.70",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::ONCE_INIT:1.70",
      "has attribute",
      "Deprecated:1.70"
    ],
    [
      "std::sync:undefined",
      "description updated",
      "Advanced synchronization primitives for threading.:1.70"
    ],
    [
      "std::sync:undefined",
      "stable since updated",
      "1.31.0:1.70"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::OnceLock:1.70"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::Exclusive:1.70"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::LazyLock:1.70"
    ],
    [
      "std::sync:undefined",
      "adds",
      "std::sync::OnceLock:1.70"
    ],
    [
      "std::sync:undefined",
      "updates stable since",
      "1.31.0:1.70"
    ],
    [
      "std::sync:undefined",
      "updates description",
      "Advanced synchronization primitives for threading.:1.70"
    ],
    [
      "std::sync:1.50",
      "is a",
      "module"
    ],
    [
      "std::sync:1.50",
      "stable since",
      "1.0.0"
    ],
    [
      "std::sync:1.50",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::sync:1.50",
      "has description",
      "This module contains useful safe and unsafe synchronization primitives. Most of the primitives in this module do not provide any sort of locking and/or blocking at all, but rather provide the necessary tools to build other types of concurrent primitives."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::atomic:1.50"
    ],
    [
      "std::sync::atomic:1.50",
      "is a",
      "module"
    ],
    [
      "std::sync::atomic:1.50",
      "has description",
      "Atomic types"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::mpsc:1.50"
    ],
    [
      "std::sync::mpsc:1.50",
      "is a",
      "module"
    ],
    [
      "std::sync::mpsc:1.50",
      "has description",
      "Multi-producer, single-consumer FIFO queue communication primitives."
    ],
    [
      "std::sync::Arc:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::Arc:1.50",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::Arc:1.50",
      "has description",
      "An atomically reference counted wrapper for shared state."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::Arc:1.50"
    ],
    [
      "std::sync::Barrier:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::Barrier:1.50",
      "has alias",
      "Barrier"
    ],
    [
      "std::sync::Barrier:1.50",
      "has description",
      "A barrier enables multiple threads to synchronize the beginning of some computation."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::Barrier:1.50"
    ],
    [
      "std::sync::BarrierWaitResult:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::BarrierWaitResult:1.50",
      "has alias",
      "BarrierWaitResult"
    ],
    [
      "std::sync::BarrierWaitResult:1.50",
      "has description",
      "A result returned from wait."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::BarrierWaitResult:1.50"
    ],
    [
      "std::sync::Condvar:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::Condvar:1.50",
      "has alias",
      "Condvar"
    ],
    [
      "std::sync::Condvar:1.50",
      "has description",
      "A Condition Variable"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::Condvar:1.50"
    ],
    [
      "std::sync::Mutex:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::Mutex:1.50",
      "has alias",
      "Mutex"
    ],
    [
      "std::sync::Mutex:1.50",
      "has description",
      "A mutual exclusion primitive useful for protecting shared data"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::Mutex:1.50"
    ],
    [
      "std::sync::MutexGuard:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::MutexGuard:1.50",
      "has alias",
      "MutexGuard"
    ],
    [
      "std::sync::MutexGuard:1.50",
      "has description",
      "An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::MutexGuard:1.50"
    ],
    [
      "std::sync::Once:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::Once:1.50",
      "has alias",
      "Once"
    ],
    [
      "std::sync::Once:1.50",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::Once:1.50"
    ],
    [
      "std::sync::PoisonError:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::PoisonError:1.50",
      "has alias",
      "PoisonError"
    ],
    [
      "std::sync::PoisonError:1.50",
      "has description",
      "A type of error which can be returned whenever a lock is acquired."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::PoisonError:1.50"
    ],
    [
      "std::sync::RwLock:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLock:1.50",
      "has alias",
      "RwLock"
    ],
    [
      "std::sync::RwLock:1.50",
      "has description",
      "A reader-writer lock"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::RwLock:1.50"
    ],
    [
      "std::sync::RwLockReadGuard:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockReadGuard:1.50",
      "has alias",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockReadGuard:1.50",
      "has description",
      "RAII structure used to release the shared read access of a lock when dropped."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::RwLockReadGuard:1.50"
    ],
    [
      "std::sync::RwLockWriteGuard:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockWriteGuard:1.50",
      "has alias",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.50",
      "has description",
      "RAII structure used to release the exclusive write access of a lock when dropped."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::RwLockWriteGuard:1.50"
    ],
    [
      "std::sync::WaitTimeoutResult:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::WaitTimeoutResult:1.50",
      "has alias",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::WaitTimeoutResult:1.50",
      "has description",
      "A type indicating whether a timed wait on a condition variable returned due to a time out or not."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::WaitTimeoutResult:1.50"
    ],
    [
      "std::sync::Weak:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::Weak:1.50",
      "has alias",
      "Weak"
    ],
    [
      "std::sync::Weak:1.50",
      "has description",
      "A weak pointer to an Arc."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::Weak:1.50"
    ],
    [
      "std::sync::OnceState:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceState:1.50",
      "has alias",
      "OnceState"
    ],
    [
      "std::sync::OnceState:1.50",
      "has description",
      "State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."
    ],
    [
      "std::sync::OnceState:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::OnceState:1.50"
    ],
    [
      "std::sync::StaticCondvar:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticCondvar:1.50",
      "has alias",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticCondvar:1.50",
      "has description",
      "Statically allocated condition variables."
    ],
    [
      "std::sync::StaticCondvar:1.50",
      "has attribute",
      "deprecated:1.50"
    ],
    [
      "std::sync::StaticCondvar:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::StaticCondvar:1.50"
    ],
    [
      "std::sync::StaticMutex:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticMutex:1.50",
      "has alias",
      "StaticMutex"
    ],
    [
      "std::sync::StaticMutex:1.50",
      "has description",
      "The static mutex type is provided to allow for static allocation of mutexes."
    ],
    [
      "std::sync::StaticMutex:1.50",
      "has attribute",
      "deprecated:1.50"
    ],
    [
      "std::sync::StaticMutex:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::StaticMutex:1.50"
    ],
    [
      "std::sync::StaticRwLock:1.50",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticRwLock:1.50",
      "has alias",
      "StaticRwLock"
    ],
    [
      "std::sync::StaticRwLock:1.50",
      "has description",
      "Structure representing a statically allocated RwLock."
    ],
    [
      "std::sync::StaticRwLock:1.50",
      "has attribute",
      "deprecated:1.50"
    ],
    [
      "std::sync::StaticRwLock:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::StaticRwLock:1.50"
    ],
    [
      "std::sync::TryLockError:1.50",
      "is a",
      "enum"
    ],
    [
      "std::sync::TryLockError:1.50",
      "has alias",
      "TryLockError"
    ],
    [
      "std::sync::TryLockError:1.50",
      "has description",
      "An enumeration of possible errors which can occur while calling the try_lock method."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::TryLockError:1.50"
    ],
    [
      "std::sync::ONCE_INIT:1.50",
      "is a",
      "constant"
    ],
    [
      "std::sync::ONCE_INIT:1.50",
      "has alias",
      "ONCE_INIT"
    ],
    [
      "std::sync::ONCE_INIT:1.50",
      "has description",
      "Initialization value for static Once values."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::ONCE_INIT:1.50"
    ],
    [
      "std::sync::CONDVAR_INIT:1.50",
      "is a",
      "constant"
    ],
    [
      "std::sync::CONDVAR_INIT:1.50",
      "has alias",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.50",
      "has description",
      "Constant initializer for a statically allocated condition variable."
    ],
    [
      "std::sync::CONDVAR_INIT:1.50",
      "has attribute",
      "deprecated:1.50"
    ],
    [
      "std::sync::CONDVAR_INIT:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::CONDVAR_INIT:1.50"
    ],
    [
      "std::sync::MUTEX_INIT:1.50",
      "is a",
      "constant"
    ],
    [
      "std::sync::MUTEX_INIT:1.50",
      "has alias",
      "MUTEX_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.50",
      "has description",
      "Static initialization of a mutex. This constant can be used to initialize other mutex constants."
    ],
    [
      "std::sync::MUTEX_INIT:1.50",
      "has attribute",
      "deprecated:1.50"
    ],
    [
      "std::sync::MUTEX_INIT:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::MUTEX_INIT:1.50"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.50",
      "is a",
      "constant"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.50",
      "has alias",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.50",
      "has description",
      "Constant initialization for a statically-initialized rwlock."
    ],
    [
      "std::sync::RW_LOCK_INIT:1.50",
      "has attribute",
      "deprecated:1.50"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::RW_LOCK_INIT:1.50"
    ],
    [
      "std::sync::LockResult:1.50",
      "is a",
      "type"
    ],
    [
      "std::sync::LockResult:1.50",
      "has alias",
      "LockResult"
    ],
    [
      "std::sync::LockResult:1.50",
      "has description",
      "A type alias for the result of a lock method which can be poisoned."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::LockResult:1.50"
    ],
    [
      "std::sync::TryLockResult:1.50",
      "is a",
      "type"
    ],
    [
      "std::sync::TryLockResult:1.50",
      "has alias",
      "TryLockResult"
    ],
    [
      "std::sync::TryLockResult:1.50",
      "has description",
      "A type alias for the result of a nonblocking locking method."
    ],
    [
      "std::sync:1.50",
      "contains",
      "std::sync::TryLockResult:1.50"
    ],
    [
      "std::sync::OnceState:1.50",
      "has attribute",
      "Unstable:1.50"
    ],
    [
      "std::sync::StaticCondvar:1.50",
      "has attribute",
      "Deprecated:1.50"
    ],
    [
      "std::sync::StaticCondvar:1.50",
      "has attribute",
      "Unstable:1.50"
    ],
    [
      "std::sync::StaticMutex:1.50",
      "has attribute",
      "Deprecated:1.50"
    ],
    [
      "std::sync::StaticMutex:1.50",
      "has attribute",
      "Unstable:1.50"
    ],
    [
      "std::sync::StaticRwLock:1.50",
      "has attribute",
      "Deprecated:1.50"
    ],
    [
      "std::sync::StaticRwLock:1.50",
      "has attribute",
      "Unstable:1.50"
    ],
    [
      "std::sync::CONDVAR_INIT:1.50",
      "has attribute",
      "Deprecated:1.50"
    ],
    [
      "std::sync::CONDVAR_INIT:1.50",
      "has attribute",
      "Unstable:1.50"
    ],
    [
      "std::sync::MUTEX_INIT:1.50",
      "has attribute",
      "Deprecated:1.50"
    ],
    [
      "std::sync::MUTEX_INIT:1.50",
      "has attribute",
      "Unstable:1.50"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.50",
      "has attribute",
      "Deprecated:1.50"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.50",
      "has attribute",
      "Unstable:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::sync:1.50"
    ],
    [
      "std::sync:1.50",
      "has alias",
      "sync"
    ],
    [
      "std::sync::atomic:1.50",
      "has alias",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.50",
      "has alias",
      "mpsc"
    ],
    [
      "std::sync::MutexGuard:1.50",
      "has description",
      "An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync::LockResult:1.50",
      "is a",
      "type definition"
    ],
    [
      "std::sync::TryLockResult:1.50",
      "is a",
      "type definition"
    ],
    [
      "process:1.50",
      "has description",
      "A module for working with processes"
    ],
    [
      "ptr:1.50",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "rc:1.50",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'"
    ],
    [
      "std::sync::Arc:1.50",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'"
    ],
    [
      "std::sync::Weak:1.50",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed value"
    ],
    [
      "marker:1.50",
      "has description",
      "Primitive traits and types representing basic properties of types"
    ],
    [
      "fmt:1.50",
      "has description",
      "Utilities for formatting and printing `String`s"
    ],
    [
      "vec:1.50",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`"
    ],
    [
      "std:1.50",
      "contains",
      "std::heap:1.50"
    ],
    [
      "std::heap:1.50",
      "is a",
      "module"
    ],
    [
      "std::heap:1.50",
      "has alias",
      "heap"
    ],
    [
      "std::heap:1.50",
      "has description",
      "dox"
    ],
    [
      "f32:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "marker:1.50",
      "has description",
      "Primitive traits and marker types representing basic properties of types."
    ],
    [
      "process:1.50",
      "has description",
      "A module for working with processes."
    ],
    [
      "rc:1.50",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "vec:1.50",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`."
    ],
    [
      "assert_ne:1.50",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.50",
      "is a",
      "macro"
    ],
    [
      "try!:1.50",
      "has description",
      "Helper macro for reducing boilerplate code for matching Result together with converting downstream errors."
    ],
    [
      "std:1.50",
      "contains",
      "assert_ne:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "debug_assert_ne:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "compile_error:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "eprint:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "eprintln:1.50"
    ],
    [
      "marker:1.50",
      "has description",
      "Primitive traits and properties of types."
    ],
    [
      "std::sync::Arc:1.50",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."
    ],
    [
      "std:1.50",
      "contains",
      "std::hint:1.50"
    ],
    [
      "std::hint:1.50",
      "is a",
      "module"
    ],
    [
      "std::hint:1.50",
      "has alias",
      "hint"
    ],
    [
      "std::hint:1.50",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "format:1.50",
      "has description",
      "Creates a `String` using interpolation of runtime expressions. See using interpolation for details."
    ],
    [
      "std::sync::OnceState:1.50",
      "has description",
      "State yielded to call_once_force’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std::sync::TryLockError:1.50",
      "has description",
      "An enumeration of possible errors associated with a `TryLockResult` which can occur while trying to acquire a lock, from the `try_lock` method on a `Mutex` or the `try_read` and `try_write` methods on an `RwLock`."
    ],
    [
      "std:1.50",
      "contains",
      "fn:1.50"
    ],
    [
      "fn:1.50",
      "is a",
      "keyword"
    ],
    [
      "std:1.50",
      "contains",
      "let:1.50"
    ],
    [
      "let:1.50",
      "is a",
      "keyword"
    ],
    [
      "std:1.50",
      "contains",
      "struct:1.50"
    ],
    [
      "struct:1.50",
      "is a",
      "keyword"
    ],
    [
      "fmt:1.50",
      "has description",
      "Utilities for formatting and printing `String`s."
    ],
    [
      "std:1.50",
      "contains",
      "alloc:1.50"
    ],
    [
      "alloc:1.50",
      "is a",
      "module"
    ],
    [
      "alloc:1.50",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.50",
      "contains",
      "arch:1.50"
    ],
    [
      "arch:1.50",
      "is a",
      "module"
    ],
    [
      "arch:1.50",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.50",
      "contains",
      "std::future:1.50"
    ],
    [
      "std::future:1.50",
      "is a",
      "module"
    ],
    [
      "std::future:1.50",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.50",
      "contains",
      "std::pin:1.50"
    ],
    [
      "std::pin:1.50",
      "is a",
      "module"
    ],
    [
      "std::pin:1.50",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.50",
      "contains",
      "task:1.50"
    ],
    [
      "task:1.50",
      "is a",
      "module"
    ],
    [
      "task:1.50",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "f32:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "format:1.50",
      "has description",
      "Creates a `String` using interpolation of runtime expressions."
    ],
    [
      "println:1.50",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "std:1.50",
      "contains",
      "never:1.50"
    ],
    [
      "never:1.50",
      "is a",
      "primitive"
    ],
    [
      "never:1.50",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.50",
      "contains",
      "unit:1.50"
    ],
    [
      "unit:1.50",
      "is a",
      "primitive"
    ],
    [
      "unit:1.50",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std::future:1.50",
      "has alias",
      "future"
    ],
    [
      "std::pin:1.50",
      "has alias",
      "pin"
    ],
    [
      "std:1.50",
      "contains",
      "array:1.50"
    ],
    [
      "array:1.50",
      "is a",
      "module"
    ],
    [
      "array:1.50",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.50",
      "contains",
      "backtrace:1.50"
    ],
    [
      "backtrace:1.50",
      "is a",
      "module"
    ],
    [
      "backtrace:1.50",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "slice:1.50",
      "has description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "std:1.50",
      "contains",
      "asm:1.50"
    ],
    [
      "asm:1.50",
      "is a",
      "macro"
    ],
    [
      "asm:1.50",
      "has description",
      "Inline assembly."
    ],
    [
      "std:1.50",
      "contains",
      "async:1.50"
    ],
    [
      "async:1.50",
      "is a",
      "keyword"
    ],
    [
      "std:1.50",
      "contains",
      "await:1.50"
    ],
    [
      "await:1.50",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.50",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync::TryLockError:1.50",
      "has description",
      "An enumeration of possible errors associated with a TryLockResult which can occur while trying to acquire a lock, from the try_lock method on a Mutex or the try_read and try_write methods on an RwLock."
    ],
    [
      "std:1.50",
      "contains",
      "Self:1.50"
    ],
    [
      "Self:1.50",
      "is a",
      "keyword"
    ],
    [
      "std::sync::Weak:1.50",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed allocation"
    ],
    [
      "std::sync::ONCE_INIT:1.50",
      "has attribute",
      "deprecated:1.50"
    ],
    [
      "std::sync::Weak:1.50",
      "has description",
      "Weak is a version of Arc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::sync:1.50",
      "is current module",
      "true:1.50"
    ],
    [
      "lazy:1.50",
      "is a",
      "module"
    ],
    [
      "lazy:1.50",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "primitive:1.50",
      "is a",
      "module"
    ],
    [
      "primitive:1.50",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "f32:1.50",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "f64:1.50",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "unit:1.50",
      "has description",
      "The `()` type, also called \"unit\"."
    ],
    [
      "dyn:1.50",
      "has description",
      "`dyn` is a prefix of a trait object's type."
    ],
    [
      "static:1.50",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."
    ],
    [
      "llvm_asm:1.50",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.50",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "f32:1.50",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)"
    ],
    [
      "f64:1.50",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)"
    ],
    [
      "unit:1.50",
      "has description",
      "The () type, also called \"unit\""
    ],
    [
      "std:1.50",
      "contains",
      "lazy:1.50"
    ],
    [
      "static:1.50",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static lifetime)"
    ],
    [
      "std::sync::OnceState:1.50",
      "has description",
      "State yielded to Once::call_once_force()’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std:1.50",
      "contains",
      "primitive:1.50"
    ],
    [
      "const:1.50",
      "has description",
      "Compile-time constants and compile-time evaluable functions."
    ],
    [
      "unit:1.50",
      "has description",
      "The () type, also called 'unit'."
    ],
    [
      "include_str:1.50",
      "has description",
      "Includes a UTF-8 encoded file as a string."
    ],
    [
      "unimplemented:1.50",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'."
    ],
    [
      "array:1.50",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually, we should be able to generalize to all lengths."
    ],
    [
      "string:1.50",
      "has description",
      "A UTF-8–encoded, growable string."
    ],
    [
      "dyn:1.50",
      "has description",
      "dyn is a prefix of a trait object's type."
    ],
    [
      "else:1.50",
      "has description",
      "What expression to evaluate when an if condition evaluates to false."
    ],
    [
      "std::hint:1.50",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "f32:undefined",
      "updates description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008).:1.50"
    ],
    [
      "f64:undefined",
      "updates description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008).:1.50"
    ],
    [
      "unit:undefined",
      "updates description",
      "The `()` type, also called \"unit\".:1.50"
    ],
    [
      "dyn:undefined",
      "updates description",
      "`dyn` is a prefix of a trait object's type.:1.50"
    ],
    [
      "static:undefined",
      "updates description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime).:1.50"
    ],
    [
      "std::sync:undefined",
      "sets current module",
      "true:1.50"
    ],
    [
      "std:undefined",
      "adds module",
      "std::sync:1.50"
    ],
    [
      "std:undefined",
      "adds module",
      "lazy:1.50"
    ],
    [
      "f32:undefined",
      "changes description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008):1.50"
    ],
    [
      "f64:undefined",
      "changes description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008):1.50"
    ],
    [
      "unit:undefined",
      "changes description",
      "The () type, also called \"unit\":1.50"
    ],
    [
      "static:undefined",
      "changes description",
      "A static item is a value which is valid for the entire duration of your program (a 'static lifetime):1.50"
    ],
    [
      "std:undefined",
      "adds feature",
      "lazy:1.50"
    ],
    [
      "std:undefined",
      "adds feature",
      "primitive:1.50"
    ],
    [
      "std::sync:undefined",
      "adds feature",
      "std::sync::OnceState:1.50"
    ],
    [
      "std::sync:1.30",
      "is a",
      "module"
    ],
    [
      "std::sync:1.30",
      "stable since",
      "1.0.0"
    ],
    [
      "std::sync:1.30",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::sync:1.30",
      "has description",
      "This module contains useful safe and unsafe synchronization primitives. Most of the primitives in this module do not provide any sort of locking and/or blocking at all, but rather provide the necessary tools to build other types of concurrent primitives."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::atomic:1.30"
    ],
    [
      "std::sync::atomic:1.30",
      "is a",
      "module"
    ],
    [
      "std::sync::atomic:1.30",
      "has description",
      "Atomic types"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::mpsc:1.30"
    ],
    [
      "std::sync::mpsc:1.30",
      "is a",
      "module"
    ],
    [
      "std::sync::mpsc:1.30",
      "has description",
      "Multi-producer, single-consumer FIFO queue communication primitives."
    ],
    [
      "std::sync::Arc:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::Arc:1.30",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::Arc:1.30",
      "has description",
      "An atomically reference counted wrapper for shared state."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::Arc:1.30"
    ],
    [
      "std::sync::Barrier:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::Barrier:1.30",
      "has alias",
      "Barrier"
    ],
    [
      "std::sync::Barrier:1.30",
      "has description",
      "A barrier enables multiple threads to synchronize the beginning of some computation."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::Barrier:1.30"
    ],
    [
      "std::sync::BarrierWaitResult:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::BarrierWaitResult:1.30",
      "has alias",
      "BarrierWaitResult"
    ],
    [
      "std::sync::BarrierWaitResult:1.30",
      "has description",
      "A result returned from wait."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::BarrierWaitResult:1.30"
    ],
    [
      "std::sync::Condvar:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::Condvar:1.30",
      "has alias",
      "Condvar"
    ],
    [
      "std::sync::Condvar:1.30",
      "has description",
      "A Condition Variable"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::Condvar:1.30"
    ],
    [
      "std::sync::Mutex:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::Mutex:1.30",
      "has alias",
      "Mutex"
    ],
    [
      "std::sync::Mutex:1.30",
      "has description",
      "A mutual exclusion primitive useful for protecting shared data"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::Mutex:1.30"
    ],
    [
      "std::sync::MutexGuard:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::MutexGuard:1.30",
      "has alias",
      "MutexGuard"
    ],
    [
      "std::sync::MutexGuard:1.30",
      "has description",
      "An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::MutexGuard:1.30"
    ],
    [
      "std::sync::Once:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::Once:1.30",
      "has alias",
      "Once"
    ],
    [
      "std::sync::Once:1.30",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::Once:1.30"
    ],
    [
      "std::sync::PoisonError:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::PoisonError:1.30",
      "has alias",
      "PoisonError"
    ],
    [
      "std::sync::PoisonError:1.30",
      "has description",
      "A type of error which can be returned whenever a lock is acquired."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::PoisonError:1.30"
    ],
    [
      "std::sync::RwLock:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLock:1.30",
      "has alias",
      "RwLock"
    ],
    [
      "std::sync::RwLock:1.30",
      "has description",
      "A reader-writer lock"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::RwLock:1.30"
    ],
    [
      "std::sync::RwLockReadGuard:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockReadGuard:1.30",
      "has alias",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockReadGuard:1.30",
      "has description",
      "RAII structure used to release the shared read access of a lock when dropped."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::RwLockReadGuard:1.30"
    ],
    [
      "std::sync::RwLockWriteGuard:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockWriteGuard:1.30",
      "has alias",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.30",
      "has description",
      "RAII structure used to release the exclusive write access of a lock when dropped."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::RwLockWriteGuard:1.30"
    ],
    [
      "std::sync::WaitTimeoutResult:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::WaitTimeoutResult:1.30",
      "has alias",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::WaitTimeoutResult:1.30",
      "has description",
      "A type indicating whether a timed wait on a condition variable returned due to a time out or not."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::WaitTimeoutResult:1.30"
    ],
    [
      "std::sync::Weak:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::Weak:1.30",
      "has alias",
      "Weak"
    ],
    [
      "std::sync::Weak:1.30",
      "has description",
      "A weak pointer to an Arc."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::Weak:1.30"
    ],
    [
      "std::sync::OnceState:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceState:1.30",
      "has alias",
      "OnceState"
    ],
    [
      "std::sync::OnceState:1.30",
      "has description",
      "State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."
    ],
    [
      "std::sync::OnceState:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::OnceState:1.30"
    ],
    [
      "std::sync::StaticCondvar:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticCondvar:1.30",
      "has alias",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticCondvar:1.30",
      "has description",
      "Statically allocated condition variables."
    ],
    [
      "std::sync::StaticCondvar:1.30",
      "has attribute",
      "deprecated:1.30"
    ],
    [
      "std::sync::StaticCondvar:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::StaticCondvar:1.30"
    ],
    [
      "std::sync::StaticMutex:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticMutex:1.30",
      "has alias",
      "StaticMutex"
    ],
    [
      "std::sync::StaticMutex:1.30",
      "has description",
      "The static mutex type is provided to allow for static allocation of mutexes."
    ],
    [
      "std::sync::StaticMutex:1.30",
      "has attribute",
      "deprecated:1.30"
    ],
    [
      "std::sync::StaticMutex:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::StaticMutex:1.30"
    ],
    [
      "std::sync::StaticRwLock:1.30",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticRwLock:1.30",
      "has alias",
      "StaticRwLock"
    ],
    [
      "std::sync::StaticRwLock:1.30",
      "has description",
      "Structure representing a statically allocated RwLock."
    ],
    [
      "std::sync::StaticRwLock:1.30",
      "has attribute",
      "deprecated:1.30"
    ],
    [
      "std::sync::StaticRwLock:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::StaticRwLock:1.30"
    ],
    [
      "std::sync::TryLockError:1.30",
      "is a",
      "enum"
    ],
    [
      "std::sync::TryLockError:1.30",
      "has alias",
      "TryLockError"
    ],
    [
      "std::sync::TryLockError:1.30",
      "has description",
      "An enumeration of possible errors which can occur while calling the try_lock method."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::TryLockError:1.30"
    ],
    [
      "std::sync::ONCE_INIT:1.30",
      "is a",
      "constant"
    ],
    [
      "std::sync::ONCE_INIT:1.30",
      "has alias",
      "ONCE_INIT"
    ],
    [
      "std::sync::ONCE_INIT:1.30",
      "has description",
      "Initialization value for static Once values."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::ONCE_INIT:1.30"
    ],
    [
      "std::sync::CONDVAR_INIT:1.30",
      "is a",
      "constant"
    ],
    [
      "std::sync::CONDVAR_INIT:1.30",
      "has alias",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.30",
      "has description",
      "Constant initializer for a statically allocated condition variable."
    ],
    [
      "std::sync::CONDVAR_INIT:1.30",
      "has attribute",
      "deprecated:1.30"
    ],
    [
      "std::sync::CONDVAR_INIT:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::CONDVAR_INIT:1.30"
    ],
    [
      "std::sync::MUTEX_INIT:1.30",
      "is a",
      "constant"
    ],
    [
      "std::sync::MUTEX_INIT:1.30",
      "has alias",
      "MUTEX_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.30",
      "has description",
      "Static initialization of a mutex. This constant can be used to initialize other mutex constants."
    ],
    [
      "std::sync::MUTEX_INIT:1.30",
      "has attribute",
      "deprecated:1.30"
    ],
    [
      "std::sync::MUTEX_INIT:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::MUTEX_INIT:1.30"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.30",
      "is a",
      "constant"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.30",
      "has alias",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.30",
      "has description",
      "Constant initialization for a statically-initialized rwlock."
    ],
    [
      "std::sync::RW_LOCK_INIT:1.30",
      "has attribute",
      "deprecated:1.30"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::RW_LOCK_INIT:1.30"
    ],
    [
      "std::sync::LockResult:1.30",
      "is a",
      "type"
    ],
    [
      "std::sync::LockResult:1.30",
      "has alias",
      "LockResult"
    ],
    [
      "std::sync::LockResult:1.30",
      "has description",
      "A type alias for the result of a lock method which can be poisoned."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::LockResult:1.30"
    ],
    [
      "std::sync::TryLockResult:1.30",
      "is a",
      "type"
    ],
    [
      "std::sync::TryLockResult:1.30",
      "has alias",
      "TryLockResult"
    ],
    [
      "std::sync::TryLockResult:1.30",
      "has description",
      "A type alias for the result of a nonblocking locking method."
    ],
    [
      "std::sync:1.30",
      "contains",
      "std::sync::TryLockResult:1.30"
    ],
    [
      "std::sync::OnceState:1.30",
      "has attribute",
      "Unstable:1.30"
    ],
    [
      "std::sync::StaticCondvar:1.30",
      "has attribute",
      "Deprecated:1.30"
    ],
    [
      "std::sync::StaticCondvar:1.30",
      "has attribute",
      "Unstable:1.30"
    ],
    [
      "std::sync::StaticMutex:1.30",
      "has attribute",
      "Deprecated:1.30"
    ],
    [
      "std::sync::StaticMutex:1.30",
      "has attribute",
      "Unstable:1.30"
    ],
    [
      "std::sync::StaticRwLock:1.30",
      "has attribute",
      "Deprecated:1.30"
    ],
    [
      "std::sync::StaticRwLock:1.30",
      "has attribute",
      "Unstable:1.30"
    ],
    [
      "std::sync::CONDVAR_INIT:1.30",
      "has attribute",
      "Deprecated:1.30"
    ],
    [
      "std::sync::CONDVAR_INIT:1.30",
      "has attribute",
      "Unstable:1.30"
    ],
    [
      "std::sync::MUTEX_INIT:1.30",
      "has attribute",
      "Deprecated:1.30"
    ],
    [
      "std::sync::MUTEX_INIT:1.30",
      "has attribute",
      "Unstable:1.30"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.30",
      "has attribute",
      "Deprecated:1.30"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.30",
      "has attribute",
      "Unstable:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::sync:1.30"
    ],
    [
      "std::sync:1.30",
      "has alias",
      "sync"
    ],
    [
      "std::sync::atomic:1.30",
      "has alias",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.30",
      "has alias",
      "mpsc"
    ],
    [
      "std::sync::MutexGuard:1.30",
      "has description",
      "An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync::LockResult:1.30",
      "is a",
      "type definition"
    ],
    [
      "std::sync::TryLockResult:1.30",
      "is a",
      "type definition"
    ],
    [
      "process:1.30",
      "has description",
      "A module for working with processes"
    ],
    [
      "ptr:1.30",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "rc:1.30",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'"
    ],
    [
      "std::sync::Arc:1.30",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'"
    ],
    [
      "std::sync::Weak:1.30",
      "has description",
      "A version of Arc that holds a non-owning reference to the managed value"
    ],
    [
      "marker:1.30",
      "has description",
      "Primitive traits and types representing basic properties of types"
    ],
    [
      "fmt:1.30",
      "has description",
      "Utilities for formatting and printing `String`s"
    ],
    [
      "vec:1.30",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`"
    ],
    [
      "std:1.30",
      "contains",
      "std::heap:1.30"
    ],
    [
      "std::heap:1.30",
      "is a",
      "module"
    ],
    [
      "std::heap:1.30",
      "has alias",
      "heap"
    ],
    [
      "std::heap:1.30",
      "has description",
      "dox"
    ],
    [
      "f32:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "marker:1.30",
      "has description",
      "Primitive traits and marker types representing basic properties of types."
    ],
    [
      "process:1.30",
      "has description",
      "A module for working with processes."
    ],
    [
      "rc:1.30",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "vec:1.30",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written `Vec<T>`."
    ],
    [
      "assert_ne:1.30",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.30",
      "is a",
      "macro"
    ],
    [
      "try!:1.30",
      "has description",
      "Helper macro for reducing boilerplate code for matching Result together with converting downstream errors."
    ],
    [
      "std:1.30",
      "contains",
      "assert_ne:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "debug_assert_ne:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "compile_error:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "eprint:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "eprintln:1.30"
    ],
    [
      "marker:1.30",
      "has description",
      "Primitive traits and properties of types."
    ],
    [
      "std::sync::Arc:1.30",
      "has description",
      "A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'."
    ],
    [
      "std:1.30",
      "contains",
      "std::hint:1.30"
    ],
    [
      "std::hint:1.30",
      "is a",
      "module"
    ],
    [
      "std::hint:1.30",
      "has alias",
      "hint"
    ],
    [
      "std::hint:1.30",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "format:1.30",
      "has description",
      "Creates a `String` using interpolation of runtime expressions. See using interpolation for details."
    ],
    [
      "std::sync::OnceState:1.30",
      "has description",
      "State yielded to call_once_force’s closure parameter. The state can be used to query the poison status of the Once."
    ],
    [
      "std::sync::TryLockError:1.30",
      "has description",
      "An enumeration of possible errors associated with a `TryLockResult` which can occur while trying to acquire a lock, from the `try_lock` method on a `Mutex` or the `try_read` and `try_write` methods on an `RwLock`."
    ],
    [
      "std:1.30",
      "contains",
      "fn:1.30"
    ],
    [
      "fn:1.30",
      "is a",
      "keyword"
    ],
    [
      "std:1.30",
      "contains",
      "let:1.30"
    ],
    [
      "let:1.30",
      "is a",
      "keyword"
    ],
    [
      "std:1.30",
      "contains",
      "struct:1.30"
    ],
    [
      "struct:1.30",
      "is a",
      "keyword"
    ],
    [
      "fmt:1.30",
      "has description",
      "Utilities for formatting and printing `String`s."
    ],
    [
      "std:1.30",
      "contains",
      "alloc:1.30"
    ],
    [
      "alloc:1.30",
      "is a",
      "module"
    ],
    [
      "alloc:1.30",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.30",
      "contains",
      "arch:1.30"
    ],
    [
      "arch:1.30",
      "is a",
      "module"
    ],
    [
      "arch:1.30",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.30",
      "contains",
      "std::future:1.30"
    ],
    [
      "std::future:1.30",
      "is a",
      "module"
    ],
    [
      "std::future:1.30",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.30",
      "contains",
      "std::pin:1.30"
    ],
    [
      "std::pin:1.30",
      "is a",
      "module"
    ],
    [
      "std::pin:1.30",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.30",
      "contains",
      "task:1.30"
    ],
    [
      "task:1.30",
      "is a",
      "module"
    ],
    [
      "task:1.30",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "f32:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "format:1.30",
      "has description",
      "Creates a `String` using interpolation of runtime expressions."
    ],
    [
      "println:1.30",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "std:1.30",
      "contains",
      "never:1.30"
    ],
    [
      "never:1.30",
      "is a",
      "primitive"
    ],
    [
      "never:1.30",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.30",
      "contains",
      "unit:1.30"
    ],
    [
      "unit:1.30",
      "is a",
      "primitive"
    ],
    [
      "unit:1.30",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std::future:1.30",
      "has alias",
      "future"
    ],
    [
      "std::pin:1.30",
      "has alias",
      "pin"
    ],
    [
      "std:undefined",
      "adds module",
      "std::hint:1.30"
    ],
    [
      "std:undefined",
      "removes module",
      "std::heap:1.30"
    ],
    [
      "format:undefined",
      "updates description",
      "Creates a `String` using interpolation of runtime expressions. See using interpolation for details.:1.30"
    ],
    [
      "std::sync::OnceState:undefined",
      "updates description",
      "State yielded to call_once_force’s closure parameter. The state can be used to query the poison status of the Once.:1.30"
    ],
    [
      "std::sync::TryLockError:undefined",
      "updates description",
      "An enumeration of possible errors associated with a `TryLockResult` which can occur while trying to acquire a lock, from the `try_lock` method on a `Mutex` or the `try_read` and `try_write` methods on an `RwLock`.:1.30"
    ],
    [
      "fmt:undefined",
      "updates description",
      "Utilities for formatting and printing `String`s.:1.30"
    ],
    [
      "std:undefined",
      "adds keyword",
      "fn:1.30"
    ],
    [
      "std:undefined",
      "adds keyword",
      "let:1.30"
    ],
    [
      "std:undefined",
      "adds keyword",
      "struct:1.30"
    ],
    [
      "std:undefined",
      "adds module",
      "alloc:1.30"
    ],
    [
      "std:undefined",
      "adds module",
      "arch:1.30"
    ],
    [
      "std:undefined",
      "adds module",
      "std::future:1.30"
    ],
    [
      "std:undefined",
      "adds module",
      "std::pin:1.30"
    ],
    [
      "std:undefined",
      "adds module",
      "task:1.30"
    ],
    [
      "std:undefined",
      "adds primitive",
      "never:1.30"
    ],
    [
      "std:undefined",
      "adds primitive",
      "unit:1.30"
    ],
    [
      "f32:undefined",
      "updates description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type.:1.30"
    ],
    [
      "f64:undefined",
      "updates description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type.:1.30"
    ],
    [
      "format:undefined",
      "updates description",
      "Creates a `String` using interpolation of runtime expressions.:1.30"
    ],
    [
      "std:undefined",
      "adds macro",
      "println:1.30"
    ],
    [
      "std:undefined",
      "removes module",
      "std::sync::StaticCondvar:1.30"
    ],
    [
      "std::sync::StaticCondvar:undefined",
      "removes attribute",
      "deprecated:1.30"
    ],
    [
      "std::sync::StaticCondvar:undefined",
      "removes attribute",
      "unstable:1.30"
    ],
    [
      "std::sync:1.10",
      "is a",
      "module"
    ],
    [
      "std::sync:1.10",
      "stable since",
      "1.0.0"
    ],
    [
      "std::sync:1.10",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::sync:1.10",
      "has description",
      "This module contains useful safe and unsafe synchronization primitives. Most of the primitives in this module do not provide any sort of locking and/or blocking at all, but rather provide the necessary tools to build other types of concurrent primitives."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::atomic:1.10"
    ],
    [
      "std::sync::atomic:1.10",
      "is a",
      "module"
    ],
    [
      "std::sync::atomic:1.10",
      "has description",
      "Atomic types"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::mpsc:1.10"
    ],
    [
      "std::sync::mpsc:1.10",
      "is a",
      "module"
    ],
    [
      "std::sync::mpsc:1.10",
      "has description",
      "Multi-producer, single-consumer FIFO queue communication primitives."
    ],
    [
      "std::sync::Arc:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::Arc:1.10",
      "has alias",
      "Arc"
    ],
    [
      "std::sync::Arc:1.10",
      "has description",
      "An atomically reference counted wrapper for shared state."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::Arc:1.10"
    ],
    [
      "std::sync::Barrier:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::Barrier:1.10",
      "has alias",
      "Barrier"
    ],
    [
      "std::sync::Barrier:1.10",
      "has description",
      "A barrier enables multiple threads to synchronize the beginning of some computation."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::Barrier:1.10"
    ],
    [
      "std::sync::BarrierWaitResult:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::BarrierWaitResult:1.10",
      "has alias",
      "BarrierWaitResult"
    ],
    [
      "std::sync::BarrierWaitResult:1.10",
      "has description",
      "A result returned from wait."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::BarrierWaitResult:1.10"
    ],
    [
      "std::sync::Condvar:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::Condvar:1.10",
      "has alias",
      "Condvar"
    ],
    [
      "std::sync::Condvar:1.10",
      "has description",
      "A Condition Variable"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::Condvar:1.10"
    ],
    [
      "std::sync::Mutex:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::Mutex:1.10",
      "has alias",
      "Mutex"
    ],
    [
      "std::sync::Mutex:1.10",
      "has description",
      "A mutual exclusion primitive useful for protecting shared data"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::Mutex:1.10"
    ],
    [
      "std::sync::MutexGuard:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::MutexGuard:1.10",
      "has alias",
      "MutexGuard"
    ],
    [
      "std::sync::MutexGuard:1.10",
      "has description",
      "An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::MutexGuard:1.10"
    ],
    [
      "std::sync::Once:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::Once:1.10",
      "has alias",
      "Once"
    ],
    [
      "std::sync::Once:1.10",
      "has description",
      "A synchronization primitive which can be used to run a one-time global initialization. Useful for one-time initialization for FFI or related functionality. This type can only be constructed with the ONCE_INIT value."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::Once:1.10"
    ],
    [
      "std::sync::PoisonError:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::PoisonError:1.10",
      "has alias",
      "PoisonError"
    ],
    [
      "std::sync::PoisonError:1.10",
      "has description",
      "A type of error which can be returned whenever a lock is acquired."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::PoisonError:1.10"
    ],
    [
      "std::sync::RwLock:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLock:1.10",
      "has alias",
      "RwLock"
    ],
    [
      "std::sync::RwLock:1.10",
      "has description",
      "A reader-writer lock"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::RwLock:1.10"
    ],
    [
      "std::sync::RwLockReadGuard:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockReadGuard:1.10",
      "has alias",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockReadGuard:1.10",
      "has description",
      "RAII structure used to release the shared read access of a lock when dropped."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::RwLockReadGuard:1.10"
    ],
    [
      "std::sync::RwLockWriteGuard:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::RwLockWriteGuard:1.10",
      "has alias",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.10",
      "has description",
      "RAII structure used to release the exclusive write access of a lock when dropped."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::RwLockWriteGuard:1.10"
    ],
    [
      "std::sync::WaitTimeoutResult:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::WaitTimeoutResult:1.10",
      "has alias",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::WaitTimeoutResult:1.10",
      "has description",
      "A type indicating whether a timed wait on a condition variable returned due to a time out or not."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::WaitTimeoutResult:1.10"
    ],
    [
      "std::sync::Weak:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::Weak:1.10",
      "has alias",
      "Weak"
    ],
    [
      "std::sync::Weak:1.10",
      "has description",
      "A weak pointer to an Arc."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::Weak:1.10"
    ],
    [
      "std::sync::OnceState:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::OnceState:1.10",
      "has alias",
      "OnceState"
    ],
    [
      "std::sync::OnceState:1.10",
      "has description",
      "State yielded to the call_once_force method which can be used to query whether the Once was previously poisoned or not."
    ],
    [
      "std::sync::OnceState:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::OnceState:1.10"
    ],
    [
      "std::sync::StaticCondvar:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticCondvar:1.10",
      "has alias",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticCondvar:1.10",
      "has description",
      "Statically allocated condition variables."
    ],
    [
      "std::sync::StaticCondvar:1.10",
      "has attribute",
      "deprecated:1.10"
    ],
    [
      "std::sync::StaticCondvar:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::StaticCondvar:1.10"
    ],
    [
      "std::sync::StaticMutex:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticMutex:1.10",
      "has alias",
      "StaticMutex"
    ],
    [
      "std::sync::StaticMutex:1.10",
      "has description",
      "The static mutex type is provided to allow for static allocation of mutexes."
    ],
    [
      "std::sync::StaticMutex:1.10",
      "has attribute",
      "deprecated:1.10"
    ],
    [
      "std::sync::StaticMutex:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::StaticMutex:1.10"
    ],
    [
      "std::sync::StaticRwLock:1.10",
      "is a",
      "struct"
    ],
    [
      "std::sync::StaticRwLock:1.10",
      "has alias",
      "StaticRwLock"
    ],
    [
      "std::sync::StaticRwLock:1.10",
      "has description",
      "Structure representing a statically allocated RwLock."
    ],
    [
      "std::sync::StaticRwLock:1.10",
      "has attribute",
      "deprecated:1.10"
    ],
    [
      "std::sync::StaticRwLock:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::StaticRwLock:1.10"
    ],
    [
      "std::sync::TryLockError:1.10",
      "is a",
      "enum"
    ],
    [
      "std::sync::TryLockError:1.10",
      "has alias",
      "TryLockError"
    ],
    [
      "std::sync::TryLockError:1.10",
      "has description",
      "An enumeration of possible errors which can occur while calling the try_lock method."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::TryLockError:1.10"
    ],
    [
      "std::sync::ONCE_INIT:1.10",
      "is a",
      "constant"
    ],
    [
      "std::sync::ONCE_INIT:1.10",
      "has alias",
      "ONCE_INIT"
    ],
    [
      "std::sync::ONCE_INIT:1.10",
      "has description",
      "Initialization value for static Once values."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::ONCE_INIT:1.10"
    ],
    [
      "std::sync::CONDVAR_INIT:1.10",
      "is a",
      "constant"
    ],
    [
      "std::sync::CONDVAR_INIT:1.10",
      "has alias",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.10",
      "has description",
      "Constant initializer for a statically allocated condition variable."
    ],
    [
      "std::sync::CONDVAR_INIT:1.10",
      "has attribute",
      "deprecated:1.10"
    ],
    [
      "std::sync::CONDVAR_INIT:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::CONDVAR_INIT:1.10"
    ],
    [
      "std::sync::MUTEX_INIT:1.10",
      "is a",
      "constant"
    ],
    [
      "std::sync::MUTEX_INIT:1.10",
      "has alias",
      "MUTEX_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.10",
      "has description",
      "Static initialization of a mutex. This constant can be used to initialize other mutex constants."
    ],
    [
      "std::sync::MUTEX_INIT:1.10",
      "has attribute",
      "deprecated:1.10"
    ],
    [
      "std::sync::MUTEX_INIT:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::MUTEX_INIT:1.10"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.10",
      "is a",
      "constant"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.10",
      "has alias",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.10",
      "has description",
      "Constant initialization for a statically-initialized rwlock."
    ],
    [
      "std::sync::RW_LOCK_INIT:1.10",
      "has attribute",
      "deprecated:1.10"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::RW_LOCK_INIT:1.10"
    ],
    [
      "std::sync::LockResult:1.10",
      "is a",
      "type"
    ],
    [
      "std::sync::LockResult:1.10",
      "has alias",
      "LockResult"
    ],
    [
      "std::sync::LockResult:1.10",
      "has description",
      "A type alias for the result of a lock method which can be poisoned."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::LockResult:1.10"
    ],
    [
      "std::sync::TryLockResult:1.10",
      "is a",
      "type"
    ],
    [
      "std::sync::TryLockResult:1.10",
      "has alias",
      "TryLockResult"
    ],
    [
      "std::sync::TryLockResult:1.10",
      "has description",
      "A type alias for the result of a nonblocking locking method."
    ],
    [
      "std::sync:1.10",
      "contains",
      "std::sync::TryLockResult:1.10"
    ],
    [
      "std::sync::OnceState:1.10",
      "has attribute",
      "Unstable:1.10"
    ],
    [
      "std::sync::StaticCondvar:1.10",
      "has attribute",
      "Deprecated:1.10"
    ],
    [
      "std::sync::StaticCondvar:1.10",
      "has attribute",
      "Unstable:1.10"
    ],
    [
      "std::sync::StaticMutex:1.10",
      "has attribute",
      "Deprecated:1.10"
    ],
    [
      "std::sync::StaticMutex:1.10",
      "has attribute",
      "Unstable:1.10"
    ],
    [
      "std::sync::StaticRwLock:1.10",
      "has attribute",
      "Deprecated:1.10"
    ],
    [
      "std::sync::StaticRwLock:1.10",
      "has attribute",
      "Unstable:1.10"
    ],
    [
      "std::sync::CONDVAR_INIT:1.10",
      "has attribute",
      "Deprecated:1.10"
    ],
    [
      "std::sync::CONDVAR_INIT:1.10",
      "has attribute",
      "Unstable:1.10"
    ],
    [
      "std::sync::MUTEX_INIT:1.10",
      "has attribute",
      "Deprecated:1.10"
    ],
    [
      "std::sync::MUTEX_INIT:1.10",
      "has attribute",
      "Unstable:1.10"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.10",
      "has attribute",
      "Deprecated:1.10"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.10",
      "has attribute",
      "Unstable:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::sync:1.10"
    ],
    [
      "std::sync:1.10",
      "has alias",
      "sync"
    ],
    [
      "std::sync::atomic:1.10",
      "has alias",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.10",
      "has alias",
      "mpsc"
    ],
    [
      "std::sync::MutexGuard:1.10",
      "has description",
      "An RAII implementation of a 'scoped lock' of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."
    ],
    [
      "std::sync::LockResult:1.10",
      "is a",
      "type definition"
    ],
    [
      "std::sync::TryLockResult:1.10",
      "is a",
      "type definition"
    ],
    [
      "std::rc::Weak:1.60",
      "is a",
      "struct"
    ],
    [
      "std::rc::Weak:1.60",
      "has alias",
      "Weak"
    ],
    [
      "std::rc::Weak:1.60",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "A weak version of Rc<T>."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Weak references do not count when determining if the inner value should be dropped."
    ],
    [
      "std::rc:1.60",
      "contains",
      "std::rc::Weak:1.60"
    ],
    [
      "std::rc:1.60",
      "contains",
      "std::rc::Rc:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "std::rc::Weak::new:1.60"
    ],
    [
      "std::rc::Weak::new:1.60",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::new:1.60",
      "has alias",
      "new"
    ],
    [
      "std::rc::Weak::new:1.60",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak::new:1.60",
      "has return type",
      "Weak<T>:1.60"
    ],
    [
      "std::rc::Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T."
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "std::rc::Weak::upgrade:1.60"
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "has alias",
      "upgrade"
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "has return type",
      "Option<Rc<T>>:1.60"
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "has description",
      "Upgrades a weak reference to a strong reference."
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "Drop:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "Clone:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "Debug:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "Default:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "CoerceUnsized:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "does not implement",
      "Send:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "does not implement",
      "Sync:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "is weak version of",
      "std::rc::Rc:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.60",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "drop:1.60"
    ],
    [
      "drop:1.60",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "clone:1.60"
    ],
    [
      "clone:1.60",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "default:1.60"
    ],
    [
      "default:1.60",
      "has return type",
      "Weak<T>:1.60"
    ],
    [
      "default:1.60",
      "has description",
      "Returns the \"default value\" for a type."
    ],
    [
      "default:1.60",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "fmt:1.60"
    ],
    [
      "fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "fmt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "fmt::f:1.60",
      "has type",
      "&mut Formatter:1.60"
    ],
    [
      "fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "A weak version of Rc<T>. Weak references do not count when determining if the inner value should be dropped. See the module level documentation for more."
    ],
    [
      "std::rc::Weak:1.60",
      "has declaration",
      "pub struct Weak<T> where T: ?Sized { // some fields omitted }:1.60"
    ],
    [
      "Weak::new:1.60",
      "is a",
      "function"
    ],
    [
      "Weak::new:1.60",
      "stable since",
      "1.10.0"
    ],
    [
      "Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "Weak::new:1.60",
      "returns",
      "Weak<T>:1.60"
    ],
    [
      "Weak::upgrade:1.60",
      "is a",
      "function"
    ],
    [
      "Weak::upgrade:1.60",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "Weak::upgrade:1.60",
      "returns",
      "Option<Rc<T>>:1.60"
    ],
    [
      "Weak::drop:1.60",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "Weak::clone:1.60",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "Weak::default:1.60",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "Weak::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Weak:1.60",
      "has generic parameter",
      "T:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has where clause",
      "T: ?Sized:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "See the module level documentation for more."
    ],
    [
      "std::rc::Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "has argument",
      "upgrade::self:1.60"
    ],
    [
      "upgrade::self:1.60",
      "has type",
      "&Weak<T>:1.60"
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "drop:1.60",
      "is a",
      "function"
    ],
    [
      "clone:1.60",
      "is a",
      "function"
    ],
    [
      "clone:1.60",
      "has return type",
      "Weak<T>:1.60"
    ],
    [
      "fmt:1.60",
      "is a",
      "function"
    ],
    [
      "default:1.60",
      "is a",
      "function"
    ],
    [
      "default:1.60",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference to the value within Rc without extending its lifetime."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "The typical way to obtain a Weak pointer is to call Rc::downgrade."
    ],
    [
      "std::rc::Rc:1.60",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "downgrade:1.60"
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful. Returns None if the value has since been dropped."
    ],
    [
      "std::rc::Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "drop:1.60",
      "has description",
      "Drops the Weak pointer."
    ],
    [
      "clone:1.60",
      "has description",
      "Makes a clone of the Weak pointer that points to the same value."
    ],
    [
      "default:1.60",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Weak is used to prevent circular references between Rc pointers."
    ],
    [
      "Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value. The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Weak itself makes no guarantees about the value still being present and may return None when upgraded"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference without extending lifetime"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Used to prevent circular references between Rc pointers"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Typical way to obtain Weak is Rc::downgrade"
    ],
    [
      "Weak::upgrade:1.60",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful"
    ],
    [
      "Weak::upgrade:1.60",
      "has description",
      "Returns None if the value has since been dropped"
    ],
    [
      "Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T> without initializing it. Calling upgrade always gives None"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "!Sync:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "!Send:1.60"
    ],
    [
      "Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "T:1.60",
      "implements",
      "BorrowMut:1.60"
    ],
    [
      "BorrowMut:1.60",
      "has method",
      "borrow_mut:1.60"
    ],
    [
      "borrow_mut:1.60",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "borrow_mut:1.60",
      "has return type",
      "&mut T:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "Any:1.60"
    ],
    [
      "Any:1.60",
      "has method",
      "get_type_id:1.60"
    ],
    [
      "get_type_id:1.60",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "get_type_id:1.60",
      "has return type",
      "TypeId:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "ToOwned:1.60"
    ],
    [
      "ToOwned:1.60",
      "has method",
      "to_owned:1.60"
    ],
    [
      "to_owned:1.60",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "to_owned:1.60",
      "has return type",
      "T:1.60"
    ],
    [
      "ToOwned:1.60",
      "has associated type",
      "Owned:1.60"
    ],
    [
      "Owned:1.60",
      "is a",
      "type"
    ],
    [
      "Owned:1.60",
      "has value",
      "T:1.60"
    ],
    [
      "ToOwned:1.60",
      "has method",
      "clone_into:1.60"
    ],
    [
      "clone_into:1.60",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "clone_into:1.60",
      "has argument",
      "target:1.60"
    ],
    [
      "target:1.60",
      "has type",
      "&mut T:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has version",
      "1.4.0:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "is a version of",
      "std::rc::Rc:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "The allocation is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the value stored in the allocation from being dropped, and Weak itself makes no guarantees about the value still being present and may return None when upgraded."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference without extending lifetime."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Used to prevent circular references between Rc pointers."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Typical way to obtain Weak is Rc::downgrade."
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "as_raw:1.60"
    ],
    [
      "as_raw:1.60",
      "is a",
      "function"
    ],
    [
      "as_raw:1.60",
      "has description",
      "Returns a raw pointer to the object T pointed to by this Weak<T>."
    ],
    [
      "as_raw:1.60",
      "has return type",
      "*const T:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "into_raw:1.60"
    ],
    [
      "into_raw:1.60",
      "is a",
      "function"
    ],
    [
      "into_raw:1.60",
      "has description",
      "Consumes the Weak<T> and turns it into a raw pointer."
    ],
    [
      "into_raw:1.60",
      "has return type",
      "*const T:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "from_raw:1.60"
    ],
    [
      "from_raw:1.60",
      "is a",
      "function"
    ],
    [
      "from_raw:1.60",
      "has description",
      "Converts a raw pointer previously created by into_raw back into Weak<T>."
    ],
    [
      "from_raw:1.60",
      "has argument",
      "ptr:1.60"
    ],
    [
      "ptr:1.60",
      "has type",
      "*const T:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "strong_count:1.60"
    ],
    [
      "strong_count:1.60",
      "is a",
      "function"
    ],
    [
      "strong_count:1.60",
      "has description",
      "Gets the number of strong (Rc) pointers pointing to this allocation."
    ],
    [
      "strong_count:1.60",
      "has return type",
      "usize:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "weak_count:1.60"
    ],
    [
      "weak_count:1.60",
      "is a",
      "function"
    ],
    [
      "weak_count:1.60",
      "has description",
      "Gets the number of Weak pointers pointing to this allocation."
    ],
    [
      "weak_count:1.60",
      "has return type",
      "Option<usize>:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "ptr_eq:1.60"
    ],
    [
      "ptr_eq:1.60",
      "is a",
      "function"
    ],
    [
      "ptr_eq:1.60",
      "has description",
      "Returns true if the two Weaks point to the same allocation."
    ],
    [
      "ptr_eq:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "does not implement",
      "RefUnwindSafe:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "Unpin:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "does not implement",
      "UnwindSafe:1.60"
    ],
    [
      "std::rc::Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed allocation. The allocation is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped, and Weak itself makes no guarantees about the value still being present and may return None when upgraded."
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Weak is used to prevent circular references between Rc pointers, since mutual owning references would never allow either Rc to be dropped."
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "DispatchFromDyn:1.60"
    ],
    [
      "from_raw:1.60",
      "has return type",
      "Weak<T>:1.60"
    ],
    [
      "ptr_eq:1.60",
      "stable since",
      "1.39.0"
    ],
    [
      "std::rc::Weak:1.60",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the allocation itself (the backing store) from being deallocated."
    ],
    [
      "std::rc::Weak:1.60",
      "has method",
      "as_ptr:1.60"
    ],
    [
      "as_ptr:1.60",
      "is a",
      "function"
    ],
    [
      "as_ptr:1.60",
      "stable since",
      "1.45.0"
    ],
    [
      "as_ptr:1.60",
      "has description",
      "Returns a raw pointer to the object T pointed to by this Weak<T>."
    ],
    [
      "into_raw:1.60",
      "stable since",
      "1.45.0"
    ],
    [
      "into_raw:1.60",
      "has description",
      "Consumes the Weak<T> and turns it into a raw pointer while preserving weak count."
    ],
    [
      "from_raw:1.60",
      "stable since",
      "1.45.0"
    ],
    [
      "weak_count:1.60",
      "has return type",
      "usize:1.60"
    ],
    [
      "as_ptr:1.60",
      "has return type",
      "*const T:1.60"
    ],
    [
      "strong_count:1.60",
      "stable since",
      "1.41.0"
    ],
    [
      "weak_count:1.60",
      "stable since",
      "1.41.0"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "!RefUnwindSafe:1.60"
    ],
    [
      "std::rc::Weak:1.60",
      "implements",
      "!UnwindSafe:1.60"
    ],
    [
      "std::rc::Weak::new:1.60",
      "stable since",
      "1.45.0"
    ],
    [
      "Weak::new:1.60",
      "stable since",
      "1.45.0"
    ],
    [
      "std::rc::Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None"
    ],
    [
      "Weak::new:1.60",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None"
    ],
    [
      "default:1.60",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "Weak::default:1.60",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "clone:1.60",
      "has description",
      "Makes a clone of the Weak pointer that points to the same allocation."
    ],
    [
      "Weak::clone:1.60",
      "has description",
      "Makes a clone of the Weak pointer that points to the same allocation."
    ],
    [
      "Weak::drop:1.60",
      "is a",
      "function"
    ],
    [
      "Weak::drop:1.60",
      "has description",
      "Drops the Weak pointer."
    ],
    [
      "std::rc::Weak:1.40",
      "is a",
      "struct"
    ],
    [
      "std::rc::Weak:1.40",
      "has alias",
      "Weak"
    ],
    [
      "std::rc::Weak:1.40",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "A weak version of Rc<T>."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Weak references do not count when determining if the inner value should be dropped."
    ],
    [
      "std::rc:1.40",
      "contains",
      "std::rc::Weak:1.40"
    ],
    [
      "std::rc:1.40",
      "contains",
      "std::rc::Rc:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "std::rc::Weak::new:1.40"
    ],
    [
      "std::rc::Weak::new:1.40",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::new:1.40",
      "has alias",
      "new"
    ],
    [
      "std::rc::Weak::new:1.40",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak::new:1.40",
      "has return type",
      "Weak<T>:1.40"
    ],
    [
      "std::rc::Weak::new:1.40",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T."
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "std::rc::Weak::upgrade:1.40"
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "has alias",
      "upgrade"
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "has return type",
      "Option<Rc<T>>:1.40"
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "has description",
      "Upgrades a weak reference to a strong reference."
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "Drop:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "Clone:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "Debug:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "Default:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "CoerceUnsized:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "does not implement",
      "Send:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "does not implement",
      "Sync:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "is weak version of",
      "std::rc::Rc:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.40",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "drop:1.40"
    ],
    [
      "drop:1.40",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "clone:1.40"
    ],
    [
      "clone:1.40",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "default:1.40"
    ],
    [
      "default:1.40",
      "has return type",
      "Weak<T>:1.40"
    ],
    [
      "default:1.40",
      "has description",
      "Returns the \"default value\" for a type."
    ],
    [
      "default:1.40",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "fmt:1.40"
    ],
    [
      "fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "fmt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "fmt::f:1.40",
      "has type",
      "&mut Formatter:1.40"
    ],
    [
      "fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "A weak version of Rc<T>. Weak references do not count when determining if the inner value should be dropped. See the module level documentation for more."
    ],
    [
      "std::rc::Weak:1.40",
      "has declaration",
      "pub struct Weak<T> where T: ?Sized { // some fields omitted }:1.40"
    ],
    [
      "Weak::new:1.40",
      "is a",
      "function"
    ],
    [
      "Weak::new:1.40",
      "stable since",
      "1.10.0"
    ],
    [
      "Weak::new:1.40",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "Weak::new:1.40",
      "returns",
      "Weak<T>:1.40"
    ],
    [
      "Weak::upgrade:1.40",
      "is a",
      "function"
    ],
    [
      "Weak::upgrade:1.40",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "Weak::upgrade:1.40",
      "returns",
      "Option<Rc<T>>:1.40"
    ],
    [
      "Weak::drop:1.40",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "Weak::clone:1.40",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "Weak::default:1.40",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "Weak::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Weak:1.40",
      "has generic parameter",
      "T:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has where clause",
      "T: ?Sized:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "See the module level documentation for more."
    ],
    [
      "std::rc::Weak::new:1.40",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "has argument",
      "upgrade::self:1.40"
    ],
    [
      "upgrade::self:1.40",
      "has type",
      "&Weak<T>:1.40"
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "drop:1.40",
      "is a",
      "function"
    ],
    [
      "clone:1.40",
      "is a",
      "function"
    ],
    [
      "clone:1.40",
      "has return type",
      "Weak<T>:1.40"
    ],
    [
      "fmt:1.40",
      "is a",
      "function"
    ],
    [
      "default:1.40",
      "is a",
      "function"
    ],
    [
      "default:1.40",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference to the value within Rc without extending its lifetime."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "The typical way to obtain a Weak pointer is to call Rc::downgrade."
    ],
    [
      "std::rc::Rc:1.40",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "downgrade:1.40"
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful. Returns None if the value has since been dropped."
    ],
    [
      "std::rc::Weak::new:1.40",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "drop:1.40",
      "has description",
      "Drops the Weak pointer."
    ],
    [
      "clone:1.40",
      "has description",
      "Makes a clone of the Weak pointer that points to the same value."
    ],
    [
      "default:1.40",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Weak is used to prevent circular references between Rc pointers."
    ],
    [
      "Weak::new:1.40",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value. The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Weak itself makes no guarantees about the value still being present and may return None when upgraded"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference without extending lifetime"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Used to prevent circular references between Rc pointers"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Typical way to obtain Weak is Rc::downgrade"
    ],
    [
      "Weak::upgrade:1.40",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful"
    ],
    [
      "Weak::upgrade:1.40",
      "has description",
      "Returns None if the value has since been dropped"
    ],
    [
      "Weak::new:1.40",
      "has description",
      "Constructs a new Weak<T> without initializing it. Calling upgrade always gives None"
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "!Sync:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "!Send:1.40"
    ],
    [
      "Weak::new:1.40",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "T:1.40",
      "implements",
      "BorrowMut:1.40"
    ],
    [
      "BorrowMut:1.40",
      "has method",
      "borrow_mut:1.40"
    ],
    [
      "borrow_mut:1.40",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "borrow_mut:1.40",
      "has return type",
      "&mut T:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "Any:1.40"
    ],
    [
      "Any:1.40",
      "has method",
      "get_type_id:1.40"
    ],
    [
      "get_type_id:1.40",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "get_type_id:1.40",
      "has return type",
      "TypeId:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "ToOwned:1.40"
    ],
    [
      "ToOwned:1.40",
      "has method",
      "to_owned:1.40"
    ],
    [
      "to_owned:1.40",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "to_owned:1.40",
      "has return type",
      "T:1.40"
    ],
    [
      "ToOwned:1.40",
      "has associated type",
      "Owned:1.40"
    ],
    [
      "Owned:1.40",
      "is a",
      "type"
    ],
    [
      "Owned:1.40",
      "has value",
      "T:1.40"
    ],
    [
      "ToOwned:1.40",
      "has method",
      "clone_into:1.40"
    ],
    [
      "clone_into:1.40",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "clone_into:1.40",
      "has argument",
      "target:1.40"
    ],
    [
      "target:1.40",
      "has type",
      "&mut T:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has version",
      "1.4.0:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "is a version of",
      "std::rc::Rc:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "The allocation is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the value stored in the allocation from being dropped, and Weak itself makes no guarantees about the value still being present and may return None when upgraded."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference without extending lifetime."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Used to prevent circular references between Rc pointers."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Typical way to obtain Weak is Rc::downgrade."
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "as_raw:1.40"
    ],
    [
      "as_raw:1.40",
      "is a",
      "function"
    ],
    [
      "as_raw:1.40",
      "has description",
      "Returns a raw pointer to the object T pointed to by this Weak<T>."
    ],
    [
      "as_raw:1.40",
      "has return type",
      "*const T:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "into_raw:1.40"
    ],
    [
      "into_raw:1.40",
      "is a",
      "function"
    ],
    [
      "into_raw:1.40",
      "has description",
      "Consumes the Weak<T> and turns it into a raw pointer."
    ],
    [
      "into_raw:1.40",
      "has return type",
      "*const T:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "from_raw:1.40"
    ],
    [
      "from_raw:1.40",
      "is a",
      "function"
    ],
    [
      "from_raw:1.40",
      "has description",
      "Converts a raw pointer previously created by into_raw back into Weak<T>."
    ],
    [
      "from_raw:1.40",
      "has argument",
      "ptr:1.40"
    ],
    [
      "ptr:1.40",
      "has type",
      "*const T:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "strong_count:1.40"
    ],
    [
      "strong_count:1.40",
      "is a",
      "function"
    ],
    [
      "strong_count:1.40",
      "has description",
      "Gets the number of strong (Rc) pointers pointing to this allocation."
    ],
    [
      "strong_count:1.40",
      "has return type",
      "usize:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "weak_count:1.40"
    ],
    [
      "weak_count:1.40",
      "is a",
      "function"
    ],
    [
      "weak_count:1.40",
      "has description",
      "Gets the number of Weak pointers pointing to this allocation."
    ],
    [
      "weak_count:1.40",
      "has return type",
      "Option<usize>:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "has method",
      "ptr_eq:1.40"
    ],
    [
      "ptr_eq:1.40",
      "is a",
      "function"
    ],
    [
      "ptr_eq:1.40",
      "has description",
      "Returns true if the two Weaks point to the same allocation."
    ],
    [
      "ptr_eq:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "does not implement",
      "RefUnwindSafe:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "Unpin:1.40"
    ],
    [
      "std::rc::Weak:1.40",
      "does not implement",
      "UnwindSafe:1.40"
    ],
    [
      "std::rc::Weak::new:1.40",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed allocation. The allocation is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped, and Weak itself makes no guarantees about the value still being present and may return None when upgraded."
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Weak is used to prevent circular references between Rc pointers, since mutual owning references would never allow either Rc to be dropped."
    ],
    [
      "std::rc::Weak:1.40",
      "implements",
      "DispatchFromDyn:1.40"
    ],
    [
      "from_raw:1.40",
      "has return type",
      "Weak<T>:1.40"
    ],
    [
      "ptr_eq:1.40",
      "stable since",
      "1.39.0"
    ],
    [
      "std::rc::Weak:1.40",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the allocation itself (the backing store) from being deallocated."
    ],
    [
      "clone:1.40",
      "has description",
      "Makes a clone of the Weak pointer that points to the same allocation."
    ],
    [
      "Weak::clone:1.40",
      "has description",
      "Makes a clone of the Weak pointer that points to the same allocation."
    ],
    [
      "std::rc::Weak:1.30",
      "is a",
      "struct"
    ],
    [
      "std::rc::Weak:1.30",
      "has alias",
      "Weak"
    ],
    [
      "std::rc::Weak:1.30",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "A weak version of Rc<T>."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Weak references do not count when determining if the inner value should be dropped."
    ],
    [
      "std::rc:1.30",
      "contains",
      "std::rc::Weak:1.30"
    ],
    [
      "std::rc:1.30",
      "contains",
      "std::rc::Rc:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "has method",
      "std::rc::Weak::new:1.30"
    ],
    [
      "std::rc::Weak::new:1.30",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::new:1.30",
      "has alias",
      "new"
    ],
    [
      "std::rc::Weak::new:1.30",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak::new:1.30",
      "has return type",
      "Weak<T>:1.30"
    ],
    [
      "std::rc::Weak::new:1.30",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T."
    ],
    [
      "std::rc::Weak:1.30",
      "has method",
      "std::rc::Weak::upgrade:1.30"
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "has alias",
      "upgrade"
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "has return type",
      "Option<Rc<T>>:1.30"
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "has description",
      "Upgrades a weak reference to a strong reference."
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "implements",
      "Drop:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "implements",
      "Clone:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "implements",
      "Debug:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "implements",
      "Default:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "implements",
      "CoerceUnsized:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "does not implement",
      "Send:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "does not implement",
      "Sync:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "is weak version of",
      "std::rc::Rc:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.30",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Weak:1.30",
      "has method",
      "drop:1.30"
    ],
    [
      "drop:1.30",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "std::rc::Weak:1.30",
      "has method",
      "clone:1.30"
    ],
    [
      "clone:1.30",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "std::rc::Weak:1.30",
      "has method",
      "default:1.30"
    ],
    [
      "default:1.30",
      "has return type",
      "Weak<T>:1.30"
    ],
    [
      "default:1.30",
      "has description",
      "Returns the \"default value\" for a type."
    ],
    [
      "default:1.30",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak:1.30",
      "has method",
      "fmt:1.30"
    ],
    [
      "fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "fmt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "fmt::f:1.30",
      "has type",
      "&mut Formatter:1.30"
    ],
    [
      "fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "A weak version of Rc<T>. Weak references do not count when determining if the inner value should be dropped. See the module level documentation for more."
    ],
    [
      "std::rc::Weak:1.30",
      "has declaration",
      "pub struct Weak<T> where T: ?Sized { // some fields omitted }:1.30"
    ],
    [
      "Weak::new:1.30",
      "is a",
      "function"
    ],
    [
      "Weak::new:1.30",
      "stable since",
      "1.10.0"
    ],
    [
      "Weak::new:1.30",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "Weak::new:1.30",
      "returns",
      "Weak<T>:1.30"
    ],
    [
      "Weak::upgrade:1.30",
      "is a",
      "function"
    ],
    [
      "Weak::upgrade:1.30",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "Weak::upgrade:1.30",
      "returns",
      "Option<Rc<T>>:1.30"
    ],
    [
      "Weak::drop:1.30",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "Weak::clone:1.30",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "Weak::default:1.30",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "Weak::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Weak:1.30",
      "has generic parameter",
      "T:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "has where clause",
      "T: ?Sized:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "See the module level documentation for more."
    ],
    [
      "std::rc::Weak::new:1.30",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "has argument",
      "upgrade::self:1.30"
    ],
    [
      "upgrade::self:1.30",
      "has type",
      "&Weak<T>:1.30"
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "drop:1.30",
      "is a",
      "function"
    ],
    [
      "clone:1.30",
      "is a",
      "function"
    ],
    [
      "clone:1.30",
      "has return type",
      "Weak<T>:1.30"
    ],
    [
      "fmt:1.30",
      "is a",
      "function"
    ],
    [
      "default:1.30",
      "is a",
      "function"
    ],
    [
      "default:1.30",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference to the value within Rc without extending its lifetime."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "The typical way to obtain a Weak pointer is to call Rc::downgrade."
    ],
    [
      "std::rc::Rc:1.30",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "downgrade:1.30"
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful. Returns None if the value has since been dropped."
    ],
    [
      "std::rc::Weak::new:1.30",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "drop:1.30",
      "has description",
      "Drops the Weak pointer."
    ],
    [
      "clone:1.30",
      "has description",
      "Makes a clone of the Weak pointer that points to the same value."
    ],
    [
      "default:1.30",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Weak is used to prevent circular references between Rc pointers."
    ],
    [
      "Weak::new:1.30",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value. The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped"
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Weak itself makes no guarantees about the value still being present and may return None when upgraded"
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference without extending lifetime"
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Used to prevent circular references between Rc pointers"
    ],
    [
      "std::rc::Weak:1.30",
      "has description",
      "Typical way to obtain Weak is Rc::downgrade"
    ],
    [
      "Weak::upgrade:1.30",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful"
    ],
    [
      "Weak::upgrade:1.30",
      "has description",
      "Returns None if the value has since been dropped"
    ],
    [
      "Weak::new:1.30",
      "has description",
      "Constructs a new Weak<T> without initializing it. Calling upgrade always gives None"
    ],
    [
      "std::rc::Weak:1.30",
      "implements",
      "!Sync:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "implements",
      "!Send:1.30"
    ],
    [
      "Weak::new:1.30",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "T:1.30",
      "implements",
      "BorrowMut:1.30"
    ],
    [
      "BorrowMut:1.30",
      "has method",
      "borrow_mut:1.30"
    ],
    [
      "borrow_mut:1.30",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "borrow_mut:1.30",
      "has return type",
      "&mut T:1.30"
    ],
    [
      "T:1.30",
      "implements",
      "Any:1.30"
    ],
    [
      "Any:1.30",
      "has method",
      "get_type_id:1.30"
    ],
    [
      "get_type_id:1.30",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "get_type_id:1.30",
      "has return type",
      "TypeId:1.30"
    ],
    [
      "T:1.30",
      "implements",
      "ToOwned:1.30"
    ],
    [
      "ToOwned:1.30",
      "has method",
      "to_owned:1.30"
    ],
    [
      "to_owned:1.30",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "to_owned:1.30",
      "has return type",
      "T:1.30"
    ],
    [
      "ToOwned:1.30",
      "has associated type",
      "Owned:1.30"
    ],
    [
      "Owned:1.30",
      "is a",
      "type"
    ],
    [
      "Owned:1.30",
      "has value",
      "T:1.30"
    ],
    [
      "ToOwned:1.30",
      "has method",
      "clone_into:1.30"
    ],
    [
      "clone_into:1.30",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "clone_into:1.30",
      "has argument",
      "target:1.30"
    ],
    [
      "target:1.30",
      "has type",
      "&mut T:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "has version",
      "1.4.0:1.30"
    ],
    [
      "std::rc::Weak:1.30",
      "is a version of",
      "std::rc::Rc:1.30"
    ],
    [
      "std::rc::Weak:1.20",
      "is a",
      "struct"
    ],
    [
      "std::rc::Weak:1.20",
      "has alias",
      "Weak"
    ],
    [
      "std::rc::Weak:1.20",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "A weak version of Rc<T>."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Weak references do not count when determining if the inner value should be dropped."
    ],
    [
      "std::rc:1.20",
      "contains",
      "std::rc::Weak:1.20"
    ],
    [
      "std::rc:1.20",
      "contains",
      "std::rc::Rc:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "has method",
      "std::rc::Weak::new:1.20"
    ],
    [
      "std::rc::Weak::new:1.20",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::new:1.20",
      "has alias",
      "new"
    ],
    [
      "std::rc::Weak::new:1.20",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak::new:1.20",
      "has return type",
      "Weak<T>:1.20"
    ],
    [
      "std::rc::Weak::new:1.20",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T."
    ],
    [
      "std::rc::Weak:1.20",
      "has method",
      "std::rc::Weak::upgrade:1.20"
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "has alias",
      "upgrade"
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "has return type",
      "Option<Rc<T>>:1.20"
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "has description",
      "Upgrades a weak reference to a strong reference."
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "implements",
      "Drop:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "implements",
      "Clone:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "implements",
      "Debug:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "implements",
      "Default:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "implements",
      "CoerceUnsized:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "does not implement",
      "Send:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "does not implement",
      "Sync:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "is weak version of",
      "std::rc::Rc:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.20",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Weak:1.20",
      "has method",
      "drop:1.20"
    ],
    [
      "drop:1.20",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "std::rc::Weak:1.20",
      "has method",
      "clone:1.20"
    ],
    [
      "clone:1.20",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "std::rc::Weak:1.20",
      "has method",
      "default:1.20"
    ],
    [
      "default:1.20",
      "has return type",
      "Weak<T>:1.20"
    ],
    [
      "default:1.20",
      "has description",
      "Returns the \"default value\" for a type."
    ],
    [
      "default:1.20",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak:1.20",
      "has method",
      "fmt:1.20"
    ],
    [
      "fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "fmt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "fmt:1.20",
      "has argument",
      "f:1.20"
    ],
    [
      "fmt::f:1.20",
      "has type",
      "&mut Formatter:1.20"
    ],
    [
      "fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "A weak version of Rc<T>. Weak references do not count when determining if the inner value should be dropped. See the module level documentation for more."
    ],
    [
      "std::rc::Weak:1.20",
      "has declaration",
      "pub struct Weak<T> where T: ?Sized { // some fields omitted }:1.20"
    ],
    [
      "Weak::new:1.20",
      "is a",
      "function"
    ],
    [
      "Weak::new:1.20",
      "stable since",
      "1.10.0"
    ],
    [
      "Weak::new:1.20",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "Weak::new:1.20",
      "returns",
      "Weak<T>:1.20"
    ],
    [
      "Weak::upgrade:1.20",
      "is a",
      "function"
    ],
    [
      "Weak::upgrade:1.20",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "Weak::upgrade:1.20",
      "returns",
      "Option<Rc<T>>:1.20"
    ],
    [
      "Weak::drop:1.20",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "Weak::clone:1.20",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "Weak::default:1.20",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "Weak::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Weak:1.20",
      "has generic parameter",
      "T:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "has where clause",
      "T: ?Sized:1.20"
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "See the module level documentation for more."
    ],
    [
      "std::rc::Weak::new:1.20",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "has argument",
      "upgrade::self:1.20"
    ],
    [
      "upgrade::self:1.20",
      "has type",
      "&Weak<T>:1.20"
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "drop:1.20",
      "is a",
      "function"
    ],
    [
      "clone:1.20",
      "is a",
      "function"
    ],
    [
      "clone:1.20",
      "has return type",
      "Weak<T>:1.20"
    ],
    [
      "fmt:1.20",
      "is a",
      "function"
    ],
    [
      "default:1.20",
      "is a",
      "function"
    ],
    [
      "default:1.20",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference to the value within Rc without extending its lifetime."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "The typical way to obtain a Weak pointer is to call Rc::downgrade."
    ],
    [
      "std::rc::Rc:1.20",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "downgrade:1.20"
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful. Returns None if the value has since been dropped."
    ],
    [
      "std::rc::Weak::new:1.20",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "drop:1.20",
      "has description",
      "Drops the Weak pointer."
    ],
    [
      "clone:1.20",
      "has description",
      "Makes a clone of the Weak pointer that points to the same value."
    ],
    [
      "default:1.20",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Weak is used to prevent circular references between Rc pointers."
    ],
    [
      "Weak::new:1.20",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value. The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped"
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Weak itself makes no guarantees about the value still being present and may return None when upgraded"
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference without extending lifetime"
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Used to prevent circular references between Rc pointers"
    ],
    [
      "std::rc::Weak:1.20",
      "has description",
      "Typical way to obtain Weak is Rc::downgrade"
    ],
    [
      "Weak::upgrade:1.20",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful"
    ],
    [
      "Weak::upgrade:1.20",
      "has description",
      "Returns None if the value has since been dropped"
    ],
    [
      "Weak::new:1.20",
      "has description",
      "Constructs a new Weak<T> without initializing it. Calling upgrade always gives None"
    ],
    [
      "std::rc::Weak:1.50",
      "is a",
      "struct"
    ],
    [
      "std::rc::Weak:1.50",
      "has alias",
      "Weak"
    ],
    [
      "std::rc::Weak:1.50",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "A weak version of Rc<T>."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Weak references do not count when determining if the inner value should be dropped."
    ],
    [
      "std::rc:1.50",
      "contains",
      "std::rc::Weak:1.50"
    ],
    [
      "std::rc:1.50",
      "contains",
      "std::rc::Rc:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "std::rc::Weak::new:1.50"
    ],
    [
      "std::rc::Weak::new:1.50",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::new:1.50",
      "has alias",
      "new"
    ],
    [
      "std::rc::Weak::new:1.50",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak::new:1.50",
      "has return type",
      "Weak<T>:1.50"
    ],
    [
      "std::rc::Weak::new:1.50",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T."
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "std::rc::Weak::upgrade:1.50"
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "has alias",
      "upgrade"
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "has return type",
      "Option<Rc<T>>:1.50"
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "has description",
      "Upgrades a weak reference to a strong reference."
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "Drop:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "Clone:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "Debug:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "Default:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "CoerceUnsized:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "does not implement",
      "Send:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "does not implement",
      "Sync:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "is weak version of",
      "std::rc::Rc:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.50",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "drop:1.50"
    ],
    [
      "drop:1.50",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "clone:1.50"
    ],
    [
      "clone:1.50",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "default:1.50"
    ],
    [
      "default:1.50",
      "has return type",
      "Weak<T>:1.50"
    ],
    [
      "default:1.50",
      "has description",
      "Returns the \"default value\" for a type."
    ],
    [
      "default:1.50",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "fmt:1.50"
    ],
    [
      "fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "fmt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "fmt::f:1.50",
      "has type",
      "&mut Formatter:1.50"
    ],
    [
      "fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "A weak version of Rc<T>. Weak references do not count when determining if the inner value should be dropped. See the module level documentation for more."
    ],
    [
      "std::rc::Weak:1.50",
      "has declaration",
      "pub struct Weak<T> where T: ?Sized { // some fields omitted }:1.50"
    ],
    [
      "Weak::new:1.50",
      "is a",
      "function"
    ],
    [
      "Weak::new:1.50",
      "stable since",
      "1.10.0"
    ],
    [
      "Weak::new:1.50",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "Weak::new:1.50",
      "returns",
      "Weak<T>:1.50"
    ],
    [
      "Weak::upgrade:1.50",
      "is a",
      "function"
    ],
    [
      "Weak::upgrade:1.50",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "Weak::upgrade:1.50",
      "returns",
      "Option<Rc<T>>:1.50"
    ],
    [
      "Weak::drop:1.50",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "Weak::clone:1.50",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "Weak::default:1.50",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "Weak::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Weak:1.50",
      "has generic parameter",
      "T:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has where clause",
      "T: ?Sized:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "See the module level documentation for more."
    ],
    [
      "std::rc::Weak::new:1.50",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "has argument",
      "upgrade::self:1.50"
    ],
    [
      "upgrade::self:1.50",
      "has type",
      "&Weak<T>:1.50"
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "drop:1.50",
      "is a",
      "function"
    ],
    [
      "clone:1.50",
      "is a",
      "function"
    ],
    [
      "clone:1.50",
      "has return type",
      "Weak<T>:1.50"
    ],
    [
      "fmt:1.50",
      "is a",
      "function"
    ],
    [
      "default:1.50",
      "is a",
      "function"
    ],
    [
      "default:1.50",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference to the value within Rc without extending its lifetime."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "The typical way to obtain a Weak pointer is to call Rc::downgrade."
    ],
    [
      "std::rc::Rc:1.50",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "downgrade:1.50"
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful. Returns None if the value has since been dropped."
    ],
    [
      "std::rc::Weak::new:1.50",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "drop:1.50",
      "has description",
      "Drops the Weak pointer."
    ],
    [
      "clone:1.50",
      "has description",
      "Makes a clone of the Weak pointer that points to the same value."
    ],
    [
      "default:1.50",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Weak is used to prevent circular references between Rc pointers."
    ],
    [
      "Weak::new:1.50",
      "has description",
      "Constructs a new Weak<T>, allocating memory for T without initializing it. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed value. The value is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Weak itself makes no guarantees about the value still being present and may return None when upgraded"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference without extending lifetime"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Used to prevent circular references between Rc pointers"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Typical way to obtain Weak is Rc::downgrade"
    ],
    [
      "Weak::upgrade:1.50",
      "has description",
      "Attempts to upgrade the Weak pointer to an Rc, extending the lifetime of the value if successful"
    ],
    [
      "Weak::upgrade:1.50",
      "has description",
      "Returns None if the value has since been dropped"
    ],
    [
      "Weak::new:1.50",
      "has description",
      "Constructs a new Weak<T> without initializing it. Calling upgrade always gives None"
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "!Sync:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "!Send:1.50"
    ],
    [
      "Weak::new:1.50",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "T:1.50",
      "implements",
      "BorrowMut:1.50"
    ],
    [
      "BorrowMut:1.50",
      "has method",
      "borrow_mut:1.50"
    ],
    [
      "borrow_mut:1.50",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "borrow_mut:1.50",
      "has return type",
      "&mut T:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "Any:1.50"
    ],
    [
      "Any:1.50",
      "has method",
      "get_type_id:1.50"
    ],
    [
      "get_type_id:1.50",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "get_type_id:1.50",
      "has return type",
      "TypeId:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "ToOwned:1.50"
    ],
    [
      "ToOwned:1.50",
      "has method",
      "to_owned:1.50"
    ],
    [
      "to_owned:1.50",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "to_owned:1.50",
      "has return type",
      "T:1.50"
    ],
    [
      "ToOwned:1.50",
      "has associated type",
      "Owned:1.50"
    ],
    [
      "Owned:1.50",
      "is a",
      "type"
    ],
    [
      "Owned:1.50",
      "has value",
      "T:1.50"
    ],
    [
      "ToOwned:1.50",
      "has method",
      "clone_into:1.50"
    ],
    [
      "clone_into:1.50",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "clone_into:1.50",
      "has argument",
      "target:1.50"
    ],
    [
      "target:1.50",
      "has type",
      "&mut T:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has version",
      "1.4.0:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "is a version of",
      "std::rc::Rc:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed allocation."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "The allocation is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the value stored in the allocation from being dropped, and Weak itself makes no guarantees about the value still being present and may return None when upgraded."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "A Weak pointer is useful for keeping a temporary reference without extending lifetime."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Used to prevent circular references between Rc pointers."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Typical way to obtain Weak is Rc::downgrade."
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "as_raw:1.50"
    ],
    [
      "as_raw:1.50",
      "is a",
      "function"
    ],
    [
      "as_raw:1.50",
      "has description",
      "Returns a raw pointer to the object T pointed to by this Weak<T>."
    ],
    [
      "as_raw:1.50",
      "has return type",
      "*const T:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "into_raw:1.50"
    ],
    [
      "into_raw:1.50",
      "is a",
      "function"
    ],
    [
      "into_raw:1.50",
      "has description",
      "Consumes the Weak<T> and turns it into a raw pointer."
    ],
    [
      "into_raw:1.50",
      "has return type",
      "*const T:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "from_raw:1.50"
    ],
    [
      "from_raw:1.50",
      "is a",
      "function"
    ],
    [
      "from_raw:1.50",
      "has description",
      "Converts a raw pointer previously created by into_raw back into Weak<T>."
    ],
    [
      "from_raw:1.50",
      "has argument",
      "ptr:1.50"
    ],
    [
      "ptr:1.50",
      "has type",
      "*const T:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "strong_count:1.50"
    ],
    [
      "strong_count:1.50",
      "is a",
      "function"
    ],
    [
      "strong_count:1.50",
      "has description",
      "Gets the number of strong (Rc) pointers pointing to this allocation."
    ],
    [
      "strong_count:1.50",
      "has return type",
      "usize:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "weak_count:1.50"
    ],
    [
      "weak_count:1.50",
      "is a",
      "function"
    ],
    [
      "weak_count:1.50",
      "has description",
      "Gets the number of Weak pointers pointing to this allocation."
    ],
    [
      "weak_count:1.50",
      "has return type",
      "Option<usize>:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "ptr_eq:1.50"
    ],
    [
      "ptr_eq:1.50",
      "is a",
      "function"
    ],
    [
      "ptr_eq:1.50",
      "has description",
      "Returns true if the two Weaks point to the same allocation."
    ],
    [
      "ptr_eq:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "does not implement",
      "RefUnwindSafe:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "Unpin:1.50"
    ],
    [
      "std::rc::Weak:1.50",
      "does not implement",
      "UnwindSafe:1.50"
    ],
    [
      "std::rc::Weak::new:1.50",
      "has description",
      "Constructs a new Weak<T>, without allocating any memory. Calling upgrade on the return value always gives None."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Weak is a version of Rc that holds a non-owning reference to the managed allocation. The allocation is accessed by calling upgrade on the Weak pointer, which returns an Option<Rc<T>>."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the inner value from being dropped, and Weak itself makes no guarantees about the value still being present and may return None when upgraded."
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Weak is used to prevent circular references between Rc pointers, since mutual owning references would never allow either Rc to be dropped."
    ],
    [
      "std::rc::Weak:1.50",
      "implements",
      "DispatchFromDyn:1.50"
    ],
    [
      "from_raw:1.50",
      "has return type",
      "Weak<T>:1.50"
    ],
    [
      "ptr_eq:1.50",
      "stable since",
      "1.39.0"
    ],
    [
      "std::rc::Weak:1.50",
      "has description",
      "Since a Weak reference does not count towards ownership, it will not prevent the allocation itself (the backing store) from being deallocated."
    ],
    [
      "std::rc::Weak:1.50",
      "has method",
      "as_ptr:1.50"
    ],
    [
      "as_ptr:1.50",
      "is a",
      "function"
    ],
    [
      "as_ptr:1.50",
      "stable since",
      "1.45.0"
    ],
    [
      "as_ptr:1.50",
      "has description",
      "Returns a raw pointer to the object T pointed to by this Weak<T>."
    ],
    [
      "into_raw:1.50",
      "stable since",
      "1.45.0"
    ],
    [
      "into_raw:1.50",
      "has description",
      "Consumes the Weak<T> and turns it into a raw pointer while preserving weak count."
    ],
    [
      "from_raw:1.50",
      "stable since",
      "1.45.0"
    ],
    [
      "weak_count:1.50",
      "has return type",
      "usize:1.50"
    ],
    [
      "as_ptr:1.50",
      "has return type",
      "*const T:1.50"
    ],
    [
      "strong_count:1.50",
      "stable since",
      "1.41.0"
    ],
    [
      "weak_count:1.50",
      "stable since",
      "1.41.0"
    ],
    [
      "clone:1.50",
      "has description",
      "Makes a clone of the Weak pointer that points to the same allocation."
    ],
    [
      "Weak::clone:1.50",
      "has description",
      "Makes a clone of the Weak pointer that points to the same allocation."
    ],
    [
      "Weak::drop:1.50",
      "is a",
      "function"
    ],
    [
      "Weak::drop:1.50",
      "has description",
      "Drops the Weak pointer."
    ],
    [
      "std::rc::Weak:1.10",
      "is a",
      "struct"
    ],
    [
      "std::rc::Weak:1.10",
      "has alias",
      "Weak"
    ],
    [
      "std::rc::Weak:1.10",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Weak:1.10",
      "has description",
      "A weak version of Rc<T>."
    ],
    [
      "std::rc::Weak:1.10",
      "has description",
      "Weak references do not count when determining if the inner value should be dropped."
    ],
    [
      "std::rc:1.10",
      "contains",
      "std::rc::Weak:1.10"
    ],
    [
      "std::rc:1.10",
      "contains",
      "std::rc::Rc:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "has method",
      "std::rc::Weak::new:1.10"
    ],
    [
      "std::rc::Weak::new:1.10",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::new:1.10",
      "has alias",
      "new"
    ],
    [
      "std::rc::Weak::new:1.10",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak::new:1.10",
      "has return type",
      "Weak<T>:1.10"
    ],
    [
      "std::rc::Weak::new:1.10",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T."
    ],
    [
      "std::rc::Weak:1.10",
      "has method",
      "std::rc::Weak::upgrade:1.10"
    ],
    [
      "std::rc::Weak::upgrade:1.10",
      "is a",
      "function"
    ],
    [
      "std::rc::Weak::upgrade:1.10",
      "has alias",
      "upgrade"
    ],
    [
      "std::rc::Weak::upgrade:1.10",
      "has return type",
      "Option<Rc<T>>:1.10"
    ],
    [
      "std::rc::Weak::upgrade:1.10",
      "has description",
      "Upgrades a weak reference to a strong reference."
    ],
    [
      "std::rc::Weak::upgrade:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "implements",
      "Drop:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "implements",
      "Clone:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "implements",
      "Debug:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "implements",
      "Default:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "implements",
      "CoerceUnsized:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "does not implement",
      "Send:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "does not implement",
      "Sync:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "is weak version of",
      "std::rc::Rc:1.10"
    ],
    [
      "std::rc::Rc:1.10",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.10",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Weak:1.10",
      "has method",
      "drop:1.10"
    ],
    [
      "drop:1.10",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "std::rc::Weak:1.10",
      "has method",
      "clone:1.10"
    ],
    [
      "clone:1.10",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "std::rc::Weak:1.10",
      "has method",
      "default:1.10"
    ],
    [
      "default:1.10",
      "has return type",
      "Weak<T>:1.10"
    ],
    [
      "default:1.10",
      "has description",
      "Returns the \"default value\" for a type."
    ],
    [
      "default:1.10",
      "stable since",
      "1.10.0"
    ],
    [
      "std::rc::Weak:1.10",
      "has method",
      "fmt:1.10"
    ],
    [
      "fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "fmt:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "fmt:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "fmt::f:1.10",
      "has type",
      "&mut Formatter:1.10"
    ],
    [
      "fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "has description",
      "A weak version of Rc<T>. Weak references do not count when determining if the inner value should be dropped. See the module level documentation for more."
    ],
    [
      "std::rc::Weak:1.10",
      "has declaration",
      "pub struct Weak<T> where T: ?Sized { // some fields omitted }:1.10"
    ],
    [
      "Weak::new:1.10",
      "is a",
      "function"
    ],
    [
      "Weak::new:1.10",
      "stable since",
      "1.10.0"
    ],
    [
      "Weak::new:1.10",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "Weak::new:1.10",
      "returns",
      "Weak<T>:1.10"
    ],
    [
      "Weak::upgrade:1.10",
      "is a",
      "function"
    ],
    [
      "Weak::upgrade:1.10",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "Weak::upgrade:1.10",
      "returns",
      "Option<Rc<T>>:1.10"
    ],
    [
      "Weak::drop:1.10",
      "has description",
      "Drops the Weak<T>. This will decrement the weak reference count."
    ],
    [
      "Weak::clone:1.10",
      "has description",
      "Makes a clone of the Weak<T>. This increases the weak reference count."
    ],
    [
      "Weak::default:1.10",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "Weak::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Weak:1.10",
      "has generic parameter",
      "T:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "has where clause",
      "T: ?Sized:1.10"
    ],
    [
      "std::rc::Weak:1.10",
      "has description",
      "See the module level documentation for more."
    ],
    [
      "std::rc::Weak::new:1.10",
      "has description",
      "Constructs a new Weak<T> without an accompanying instance of T. This allocates memory for T, but does not initialize it. Calling Weak<T>::upgrade() on the return value always gives None."
    ],
    [
      "std::rc::Weak::upgrade:1.10",
      "has argument",
      "upgrade::self:1.10"
    ],
    [
      "upgrade::self:1.10",
      "has type",
      "&Weak<T>:1.10"
    ],
    [
      "std::rc::Weak::upgrade:1.10",
      "has description",
      "Upgrades a weak reference to a strong reference. Upgrades the Weak<T> reference to an Rc<T>, if possible. Returns None if there were no strong references and the data was destroyed."
    ],
    [
      "drop:1.10",
      "is a",
      "function"
    ],
    [
      "clone:1.10",
      "is a",
      "function"
    ],
    [
      "clone:1.10",
      "has return type",
      "Weak<T>:1.10"
    ],
    [
      "fmt:1.10",
      "is a",
      "function"
    ],
    [
      "default:1.10",
      "is a",
      "function"
    ],
    [
      "default:1.10",
      "has description",
      "Returns the 'default value' for a type."
    ],
    [
      "std::rc::Rc:1.10",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.10",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Rc:1.10",
      "has declaration",
      "pub struct Rc<T> where T: ?Sized { // some fields omitted }:1.10"
    ],
    [
      "std::rc::Rc:1.10",
      "has description",
      "A reference-counted pointer type over an immutable value."
    ],
    [
      "std::rc::Rc::new:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new:1.10",
      "has alias",
      "new"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::rc::Rc::new:1.10"
    ],
    [
      "std::rc::Rc::new:1.10",
      "has argument",
      "new::value:1.10"
    ],
    [
      "new::value:1.10",
      "has type",
      "T:1.10"
    ],
    [
      "std::rc::Rc::new:1.10",
      "has return type",
      "Rc<T>:1.10"
    ],
    [
      "std::rc::Rc::new:1.10",
      "has description",
      "Constructs a new Rc<T>."
    ],
    [
      "std::rc::Rc::new:1.10",
      "has example",
      "use std::rc::Rc; let five = Rc::new(5);"
    ],
    [
      "std::rc::Rc::try_unwrap:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::try_unwrap:1.10",
      "has alias",
      "try_unwrap"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::rc::Rc::try_unwrap:1.10"
    ],
    [
      "std::rc::Rc::try_unwrap:1.10",
      "has argument",
      "try_unwrap::this:1.10"
    ],
    [
      "try_unwrap::this:1.10",
      "has type",
      "Rc<T>:1.10"
    ],
    [
      "std::rc::Rc::try_unwrap:1.10",
      "has return type",
      "Result<T, Rc<T>>:1.10"
    ],
    [
      "std::rc::Rc::try_unwrap:1.10",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>. This will succeed even if there are outstanding weak references."
    ],
    [
      "std::rc::Rc::try_unwrap:1.10",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc::downgrade:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::downgrade:1.10",
      "has alias",
      "downgrade"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::rc::Rc::downgrade:1.10"
    ],
    [
      "std::rc::Rc::downgrade:1.10",
      "has argument",
      "downgrade::this:1.10"
    ],
    [
      "downgrade::this:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "std::rc::Rc::downgrade:1.10",
      "has return type",
      "Weak<T>:1.10"
    ],
    [
      "std::rc::Rc::downgrade:1.10",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "std::rc::Rc::downgrade:1.10",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "Deref:1.10"
    ],
    [
      "Deref:1.10",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "deref:1.10"
    ],
    [
      "deref:1.10",
      "has return type",
      "&T:1.10"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "Clone:1.10"
    ],
    [
      "clone:1.10",
      "is a",
      "method"
    ],
    [
      "clone:1.10",
      "has description",
      "Makes a clone of the Rc<T>. When you clone an Rc<T>, it will create another pointer to the data and increase the strong reference counter."
    ],
    [
      "would_unwrap:1.10",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.10"
    ],
    [
      "weak_count:1.10",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.10"
    ],
    [
      "strong_count:1.10",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.10"
    ],
    [
      "is_unique:1.10",
      "has stability",
      "Unstable (rc_counts #28356): uniqueness has unclear meaning:1.10"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "Drop:1.10"
    ],
    [
      "drop:1.10",
      "has description",
      "Drops the Rc<T>. This will decrement the strong reference count. If the strong reference count becomes zero and the only other references are Weak<T> ones, drops the inner value."
    ],
    [
      "std::rc::Rc:1.10",
      "stable since",
      "1.0.0"
    ],
    [
      "std::rc::Rc::new:1.10",
      "is a",
      "function"
    ],
    [
      "std::rc::Rc::new:1.10",
      "has alias",
      "Rc::new"
    ],
    [
      "std::rc::Rc::new:1.10",
      "has argument",
      "value:1.10"
    ],
    [
      "value:1.10",
      "has type",
      "T:1.10"
    ],
    [
      "Rc::try_unwrap:1.10",
      "is a",
      "function"
    ],
    [
      "Rc::try_unwrap:1.10",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::try_unwrap:1.10",
      "has argument",
      "this:1.10"
    ],
    [
      "this:1.10",
      "has type",
      "Rc<T>:1.10"
    ],
    [
      "Rc::try_unwrap:1.10",
      "has return type",
      "Result<T, Rc<T>>:1.10"
    ],
    [
      "Rc::try_unwrap:1.10",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."
    ],
    [
      "Rc::would_unwrap:1.10",
      "is a",
      "function"
    ],
    [
      "Rc::would_unwrap:1.10",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.10"
    ],
    [
      "Rc::would_unwrap:1.10",
      "has description",
      "Checks if Rc::try_unwrap would return Ok."
    ],
    [
      "Rc::downgrade:1.10",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::downgrade:1.10",
      "has return type",
      "Weak<T>:1.10"
    ],
    [
      "Rc::downgrade:1.10",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "Clone:1.10"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "Deref:1.10"
    ],
    [
      "Rc<T>::Deref:1.10",
      "has associated type",
      "Target = T:1.10"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "Drop:1.10"
    ],
    [
      "Rc<T>:1.10",
      "excludes",
      "Send:1.10"
    ],
    [
      "Rc<T>:1.10",
      "excludes",
      "Sync:1.10"
    ],
    [
      "std::rc:1.10",
      "contains",
      "std::rc::Rc:1.10"
    ],
    [
      "std::rc:1.10",
      "contains",
      "Weak:1.10"
    ],
    [
      "Rc::make_mut:1.10",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::make_mut:1.10",
      "has description",
      "Make a mutable reference into the given Rc<T> by cloning the inner data..."
    ],
    [
      "Rc::get_mut:1.10",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::get_mut:1.10",
      "has description",
      "Returns a mutable reference to the contained value if the Rc<T> is unique."
    ],
    [
      "std::rc::Rc:1.10",
      "has generic parameter",
      "T:1.10"
    ],
    [
      "std::rc::Rc::new:1.10",
      "has argument",
      "value: T:1.10"
    ],
    [
      "Deref for Rc<T>:1.10",
      "has Target type",
      "T:1.10"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "PartialEq:1.10"
    ],
    [
      "std::rc::Rc:1.10",
      "has stability",
      "!Send:1.10"
    ],
    [
      "std::rc::Rc:1.10",
      "has stability",
      "!Sync:1.10"
    ],
    [
      "std::rc::Rc::new:1.10",
      "has description",
      "Constructs a new Rc<T>"
    ],
    [
      "std::rc::Rc::try_unwrap:1.10",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference"
    ],
    [
      "Display:1.10",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "Display:1.10"
    ],
    [
      "std::fmt::Display::fmt:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::fmt::Display::fmt:1.10"
    ],
    [
      "std::fmt::Display::fmt:1.10",
      "has alias",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Display::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Display::fmt:1.10",
      "has argument",
      "std::fmt::Display::fmt::self:1.10"
    ],
    [
      "std::fmt::Display::fmt::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "std::fmt::Display::fmt:1.10",
      "has argument",
      "std::fmt::Display::fmt::f:1.10"
    ],
    [
      "std::fmt::Display::fmt::f:1.10",
      "has type",
      "&mut Formatter:1.10"
    ],
    [
      "std::fmt::Display::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "Debug:1.10",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "Debug:1.10"
    ],
    [
      "std::fmt::Debug::fmt:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::fmt::Debug::fmt:1.10"
    ],
    [
      "std::fmt::Debug::fmt:1.10",
      "has alias",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Debug::fmt:1.10",
      "has argument",
      "std::fmt::Debug::fmt::self:1.10"
    ],
    [
      "std::fmt::Debug::fmt::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "std::fmt::Debug::fmt:1.10",
      "has argument",
      "std::fmt::Debug::fmt::f:1.10"
    ],
    [
      "std::fmt::Debug::fmt::f:1.10",
      "has type",
      "&mut Formatter:1.10"
    ],
    [
      "std::fmt::Debug::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "Pointer:1.10",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "Pointer:1.10"
    ],
    [
      "std::fmt::Pointer::fmt:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::fmt::Pointer::fmt:1.10"
    ],
    [
      "std::fmt::Pointer::fmt:1.10",
      "has alias",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Pointer::fmt:1.10",
      "has argument",
      "std::fmt::Pointer::fmt::self:1.10"
    ],
    [
      "std::fmt::Pointer::fmt::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "std::fmt::Pointer::fmt:1.10",
      "has argument",
      "std::fmt::Pointer::fmt::f:1.10"
    ],
    [
      "std::fmt::Pointer::fmt::f:1.10",
      "has type",
      "&mut Formatter:1.10"
    ],
    [
      "std::fmt::Pointer::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "From:1.10",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "From:1.10"
    ],
    [
      "std::convert::From::from:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::convert::From::from:1.10"
    ],
    [
      "std::convert::From::from:1.10",
      "has alias",
      "from"
    ],
    [
      "std::convert::From::from:1.10",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::convert::From::from:1.10",
      "has argument",
      "from::t:1.10"
    ],
    [
      "from::t:1.10",
      "has type",
      "T:1.10"
    ],
    [
      "std::convert::From::from:1.10",
      "has return type",
      "Rc<T>:1.10"
    ],
    [
      "std::convert::From::from:1.10",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.10",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "Borrow:1.10"
    ],
    [
      "std::borrow::Borrow::borrow:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::borrow::Borrow::borrow:1.10"
    ],
    [
      "std::borrow::Borrow::borrow:1.10",
      "has alias",
      "borrow"
    ],
    [
      "std::borrow::Borrow::borrow:1.10",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "std::borrow::Borrow::borrow:1.10",
      "has argument",
      "borrow::self:1.10"
    ],
    [
      "borrow::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "std::borrow::Borrow::borrow:1.10",
      "has return type",
      "&T:1.10"
    ],
    [
      "AsRef:1.10",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "AsRef:1.10"
    ],
    [
      "std::convert::AsRef::as_ref:1.10",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.10",
      "has method",
      "std::convert::AsRef::as_ref:1.10"
    ],
    [
      "std::convert::AsRef::as_ref:1.10",
      "has alias",
      "as_ref"
    ],
    [
      "std::convert::AsRef::as_ref:1.10",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::convert::AsRef::as_ref:1.10",
      "has argument",
      "as_ref::self:1.10"
    ],
    [
      "as_ref::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "std::convert::AsRef::as_ref:1.10",
      "has return type",
      "&T:1.10"
    ],
    [
      "std::convert::AsRef::as_ref:1.10",
      "stable since",
      "1.5.0"
    ],
    [
      "UnwindSafe:1.10",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.10",
      "implements",
      "UnwindSafe:1.10"
    ],
    [
      "std::rc::Rc:1.10",
      "stable since",
      "1.9.0"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "Display:1.10"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "Debug:1.10"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "Pointer:1.10"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "From<T>:1.10"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "Borrow<T>:1.10"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "AsRef<T>:1.10"
    ],
    [
      "Rc<T>:1.10",
      "implements",
      "UnwindSafe:1.10"
    ],
    [
      "Rc<T>::Display::fmt:1.10",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Display::fmt:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "Rc<T>::Display::fmt:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "f:1.10",
      "has type",
      "&mut Formatter:1.10"
    ],
    [
      "Rc<T>::Display::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "Rc<T>::Display::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Debug::fmt:1.10",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Debug::fmt:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "Rc<T>::Debug::fmt:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "Rc<T>::Debug::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "Rc<T>::Debug::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Pointer::fmt:1.10",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Pointer::fmt:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "self:1.10",
      "has type",
      "Rc<T>:1.10"
    ],
    [
      "Rc<T>::Pointer::fmt:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "Rc<T>::Pointer::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "Rc<T>::Pointer::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::from:1.10",
      "is a",
      "function"
    ],
    [
      "Rc<T>::from:1.10",
      "has argument",
      "t:1.10"
    ],
    [
      "t:1.10",
      "has type",
      "T:1.10"
    ],
    [
      "Rc<T>::from:1.10",
      "has return type",
      "Rc<T>:1.10"
    ],
    [
      "Rc<T>::from:1.10",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::from:1.10",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<T>::borrow:1.10",
      "is a",
      "function"
    ],
    [
      "Rc<T>::borrow:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "Rc<T>::borrow:1.10",
      "has return type",
      "&T:1.10"
    ],
    [
      "Rc<T>::borrow:1.10",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Rc<T>::as_ref:1.10",
      "is a",
      "function"
    ],
    [
      "Rc<T>::as_ref:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "Rc<T>::as_ref:1.10",
      "has return type",
      "&T:1.10"
    ],
    [
      "Rc<T>::as_ref:1.10",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::as_ref:1.10",
      "stable since",
      "1.5.0"
    ],
    [
      "Rc<T>:1.10",
      "stable since",
      "1.9.0"
    ],
    [
      "Display:1.10",
      "has method",
      "fmt:1.10"
    ],
    [
      "Display::fmt:1.10",
      "is a",
      "method"
    ],
    [
      "Display::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Display::fmt:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "Display::fmt::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "Display::fmt:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "Display::fmt::f:1.10",
      "has type",
      "&mut Formatter:1.10"
    ],
    [
      "Display::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "Debug:1.10",
      "has method",
      "fmt:1.10"
    ],
    [
      "Debug::fmt:1.10",
      "is a",
      "method"
    ],
    [
      "Debug::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Debug::fmt:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "Debug::fmt::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "Debug::fmt:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "Debug::fmt::f:1.10",
      "has type",
      "&mut Formatter:1.10"
    ],
    [
      "Debug::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "Pointer:1.10",
      "has method",
      "fmt:1.10"
    ],
    [
      "Pointer::fmt:1.10",
      "is a",
      "method"
    ],
    [
      "Pointer::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Pointer::fmt:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "Pointer::fmt::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "Pointer::fmt:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "Pointer::fmt::f:1.10",
      "has type",
      "&mut Formatter:1.10"
    ],
    [
      "Pointer::fmt:1.10",
      "has return type",
      "Result<(), Error>:1.10"
    ],
    [
      "From:1.10",
      "has method",
      "std::convert::From::from:1.10"
    ],
    [
      "From::from:1.10",
      "is a",
      "method"
    ],
    [
      "From::from:1.10",
      "has description",
      "Performs the conversion."
    ],
    [
      "From::from:1.10",
      "has argument",
      "t:1.10"
    ],
    [
      "From::from::t:1.10",
      "has type",
      "T:1.10"
    ],
    [
      "From::from:1.10",
      "has return type",
      "Rc<T>:1.10"
    ],
    [
      "From::from:1.10",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.10",
      "has method",
      "std::borrow::Borrow::borrow:1.10"
    ],
    [
      "Borrow::borrow:1.10",
      "is a",
      "method"
    ],
    [
      "Borrow::borrow:1.10",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Borrow::borrow:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "Borrow::borrow::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "Borrow::borrow:1.10",
      "has return type",
      "&T:1.10"
    ],
    [
      "AsRef:1.10",
      "has method",
      "std::convert::AsRef::as_ref:1.10"
    ],
    [
      "AsRef::as_ref:1.10",
      "is a",
      "method"
    ],
    [
      "AsRef::as_ref:1.10",
      "has description",
      "Performs the conversion."
    ],
    [
      "AsRef::as_ref:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "AsRef::as_ref::self:1.10",
      "has type",
      "&Rc<T>:1.10"
    ],
    [
      "AsRef::as_ref:1.10",
      "has return type",
      "&T:1.10"
    ],
    [
      "AsRef::as_ref:1.10",
      "stable since",
      "1.5.0"
    ],
    [
      "std::fmt::Formatter:1.10",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Formatter:1.10",
      "has alias",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.10",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Error:1.10",
      "has alias",
      "Error"
    ],
    [
      "std::result::Result:1.10",
      "is a",
      "enum"
    ],
    [
      "std::result::Result:1.10",
      "has alias",
      "Result"
    ],
    [
      "std::rc::Rc:1.30",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.30",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Rc:1.30",
      "has declaration",
      "pub struct Rc<T> where T: ?Sized { // some fields omitted }:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has description",
      "A reference-counted pointer type over an immutable value."
    ],
    [
      "std::rc::Rc::new:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new:1.30",
      "has alias",
      "new"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::rc::Rc::new:1.30"
    ],
    [
      "std::rc::Rc::new:1.30",
      "has argument",
      "new::value:1.30"
    ],
    [
      "new::value:1.30",
      "has type",
      "T:1.30"
    ],
    [
      "std::rc::Rc::new:1.30",
      "has return type",
      "Rc<T>:1.30"
    ],
    [
      "std::rc::Rc::new:1.30",
      "has description",
      "Constructs a new Rc<T>."
    ],
    [
      "std::rc::Rc::new:1.30",
      "has example",
      "use std::rc::Rc; let five = Rc::new(5);"
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "has alias",
      "try_unwrap"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::rc::Rc::try_unwrap:1.30"
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "has argument",
      "try_unwrap::this:1.30"
    ],
    [
      "try_unwrap::this:1.30",
      "has type",
      "Rc<T>:1.30"
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "has return type",
      "Result<T, Rc<T>>:1.30"
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>. This will succeed even if there are outstanding weak references."
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc::downgrade:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::downgrade:1.30",
      "has alias",
      "downgrade"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::rc::Rc::downgrade:1.30"
    ],
    [
      "std::rc::Rc::downgrade:1.30",
      "has argument",
      "downgrade::this:1.30"
    ],
    [
      "downgrade::this:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "std::rc::Rc::downgrade:1.30",
      "has return type",
      "Weak<T>:1.30"
    ],
    [
      "std::rc::Rc::downgrade:1.30",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "std::rc::Rc::downgrade:1.30",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Deref:1.30"
    ],
    [
      "Deref:1.30",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "deref:1.30"
    ],
    [
      "deref:1.30",
      "has return type",
      "&T:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Clone:1.30"
    ],
    [
      "clone:1.30",
      "is a",
      "method"
    ],
    [
      "clone:1.30",
      "has description",
      "Makes a clone of the Rc<T>. When you clone an Rc<T>, it will create another pointer to the data and increase the strong reference counter."
    ],
    [
      "would_unwrap:1.30",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.30"
    ],
    [
      "weak_count:1.30",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.30"
    ],
    [
      "strong_count:1.30",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.30"
    ],
    [
      "is_unique:1.30",
      "has stability",
      "Unstable (rc_counts #28356): uniqueness has unclear meaning:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Drop:1.30"
    ],
    [
      "drop:1.30",
      "has description",
      "Drops the Rc<T>. This will decrement the strong reference count. If the strong reference count becomes zero and the only other references are Weak<T> ones, drops the inner value."
    ],
    [
      "std::rc::Rc:1.30",
      "stable since",
      "1.0.0"
    ],
    [
      "std::rc::Rc::new:1.30",
      "is a",
      "function"
    ],
    [
      "std::rc::Rc::new:1.30",
      "has alias",
      "Rc::new"
    ],
    [
      "std::rc::Rc::new:1.30",
      "has argument",
      "value:1.30"
    ],
    [
      "value:1.30",
      "has type",
      "T:1.30"
    ],
    [
      "Rc::try_unwrap:1.30",
      "is a",
      "function"
    ],
    [
      "Rc::try_unwrap:1.30",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::try_unwrap:1.30",
      "has argument",
      "this:1.30"
    ],
    [
      "this:1.30",
      "has type",
      "Rc<T>:1.30"
    ],
    [
      "Rc::try_unwrap:1.30",
      "has return type",
      "Result<T, Rc<T>>:1.30"
    ],
    [
      "Rc::try_unwrap:1.30",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."
    ],
    [
      "Rc::would_unwrap:1.30",
      "is a",
      "function"
    ],
    [
      "Rc::would_unwrap:1.30",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.30"
    ],
    [
      "Rc::would_unwrap:1.30",
      "has description",
      "Checks if Rc::try_unwrap would return Ok."
    ],
    [
      "Rc::downgrade:1.30",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::downgrade:1.30",
      "has return type",
      "Weak<T>:1.30"
    ],
    [
      "Rc::downgrade:1.30",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Clone:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Deref:1.30"
    ],
    [
      "Rc<T>::Deref:1.30",
      "has associated type",
      "Target = T:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Drop:1.30"
    ],
    [
      "Rc<T>:1.30",
      "excludes",
      "Send:1.30"
    ],
    [
      "Rc<T>:1.30",
      "excludes",
      "Sync:1.30"
    ],
    [
      "std::rc:1.30",
      "contains",
      "std::rc::Rc:1.30"
    ],
    [
      "std::rc:1.30",
      "contains",
      "Weak:1.30"
    ],
    [
      "Rc::make_mut:1.30",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::make_mut:1.30",
      "has description",
      "Make a mutable reference into the given Rc<T> by cloning the inner data..."
    ],
    [
      "Rc::get_mut:1.30",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::get_mut:1.30",
      "has description",
      "Returns a mutable reference to the contained value if the Rc<T> is unique."
    ],
    [
      "std::rc::Rc:1.30",
      "has generic parameter",
      "T:1.30"
    ],
    [
      "std::rc::Rc::new:1.30",
      "has argument",
      "value: T:1.30"
    ],
    [
      "Deref for Rc<T>:1.30",
      "has Target type",
      "T:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "PartialEq:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has stability",
      "!Send:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has stability",
      "!Sync:1.30"
    ],
    [
      "std::rc::Rc::new:1.30",
      "has description",
      "Constructs a new Rc<T>"
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference"
    ],
    [
      "std::rc::Rc:1.30",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::rc::Rc::into_raw:1.30"
    ],
    [
      "std::rc::Rc::into_raw:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::into_raw:1.30",
      "has alias",
      "into_raw"
    ],
    [
      "std::rc::Rc::into_raw:1.30",
      "has return type",
      "*const T:1.30"
    ],
    [
      "std::rc::Rc::into_raw:1.30",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::rc::Rc::from_raw:1.30"
    ],
    [
      "std::rc::Rc::from_raw:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::from_raw:1.30",
      "has alias",
      "from_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.30",
      "has argument",
      "ptr:1.30"
    ],
    [
      "ptr:1.30",
      "has type",
      "*const T:1.30"
    ],
    [
      "std::rc::Rc::from_raw:1.30",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::rc::Rc::ptr_eq:1.30"
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "has alias",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "stable since",
      "1.17.0"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Eq:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "PartialOrd:1.30"
    ],
    [
      "std::rc::Rc::downgrade:1.30",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "Rc::downgrade:1.30",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Rc::try_unwrap:1.30",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Weak:1.30",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Rc::into_raw:1.30",
      "has argument",
      "this:1.30"
    ],
    [
      "std::rc::Rc::into_raw:1.30",
      "has description",
      "Consumes the Rc, returning the wrapped pointer."
    ],
    [
      "std::rc::Rc::from_raw:1.30",
      "has return type",
      "Rc<T>:1.30"
    ],
    [
      "std::rc::Rc::from_raw:1.30",
      "has description",
      "Constructs an Rc from a raw pointer."
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "has argument",
      "this:1.30"
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "has description",
      "Returns true if the two Rcs point to the same value"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Eq:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "PartialOrd:1.30"
    ],
    [
      "Rc::try_unwrap:1.30",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference"
    ],
    [
      "Weak:1.30",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "has description",
      "Returns true if the two Rcs point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "weak_count:1.30"
    ],
    [
      "weak_count:1.30",
      "has description",
      "Get the number of weak references to this value."
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "strong_count:1.30"
    ],
    [
      "strong_count:1.30",
      "has description",
      "Get the number of strong references to this value."
    ],
    [
      "std::rc::Rc::new:1.30",
      "has description",
      "Constructs a new `Rc<T>`."
    ],
    [
      "Rc::try_unwrap:1.30",
      "has version",
      "1.4.0:1.30"
    ],
    [
      "Rc::try_unwrap:1.30",
      "has description",
      "Returns the contained value, if the `Rc` has exactly one strong reference."
    ],
    [
      "Rc::into_raw:1.30",
      "has version",
      "1.17.0:1.30"
    ],
    [
      "Rc::from_raw:1.30",
      "has feature",
      "unsafe:1.30"
    ],
    [
      "Rc::from_raw:1.30",
      "has version",
      "1.17.0:1.30"
    ],
    [
      "Rc::from_raw:1.30",
      "has description",
      "Constructs an `Rc` from a raw pointer."
    ],
    [
      "Rc::downgrade:1.30",
      "has version",
      "1.4.0:1.30"
    ],
    [
      "Rc::downgrade:1.30",
      "has description",
      "Creates a new `Weak` pointer to this value."
    ],
    [
      "Rc::weak_count:1.30",
      "has version",
      "1.15.0:1.30"
    ],
    [
      "Rc::weak_count:1.30",
      "has description",
      "Gets the number of `Weak` pointers to this value."
    ],
    [
      "Rc::strong_count:1.30",
      "has version",
      "1.15.0:1.30"
    ],
    [
      "Rc::strong_count:1.30",
      "has description",
      "Gets the number of strong (`Rc`) pointers to this value."
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "get_mut:1.30"
    ],
    [
      "Rc::get_mut:1.30",
      "has version",
      "1.4.0:1.30"
    ],
    [
      "Rc::get_mut:1.30",
      "has description",
      "Returns a mutable reference to the inner value, if there are no other `Rc` or `Weak` pointers to the same value."
    ],
    [
      "Rc::ptr_eq:1.30",
      "has version",
      "1.17.0:1.30"
    ],
    [
      "Rc::ptr_eq:1.30",
      "has description",
      "Returns true if the two `Rc`s point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "make_mut:1.30"
    ],
    [
      "Rc::make_mut:1.30",
      "has version",
      "1.4.0:1.30"
    ],
    [
      "Rc::make_mut:1.30",
      "has description",
      "Makes a mutable reference into the given `Rc`."
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "downcast:1.30"
    ],
    [
      "Rc::downcast:1.30",
      "has version",
      "1.29.0:1.30"
    ],
    [
      "Rc::downcast:1.30",
      "has description",
      "Attempt to downcast the `Rc<Any>` to a concrete type."
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Default:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Borrow<T>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "PartialOrd<Rc<T>>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "AsRef<T>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "!Sync:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "!Send:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Unpin:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Display:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<Vec<T>>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<String>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<T>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&'a str>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&'a [T]>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<Box<T>>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Hash:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Debug:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "CoerceUnsized<Rc<U>>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "PartialEq<Rc<T>>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Pointer:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Ord:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<CString>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&'a CStr>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<OsString>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&'a OsStr>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "UnwindSafe:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<PathBuf>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&'a Path>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::rc::Rc::as_ref:1.30"
    ],
    [
      "std::rc::Rc::as_ref:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::as_ref:1.30",
      "has alias",
      "as_ref"
    ],
    [
      "std::rc::Rc::as_ref:1.30",
      "has description",
      "Returns a reference to the inner value."
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "AsRef:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "Borrow:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "CoerceUnsized:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "rc:1.30"
    ],
    [
      "rc:1.30",
      "contains",
      "std::rc::Rc:1.30"
    ],
    [
      "rc:1.30",
      "contains",
      "Weak:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&str>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&CStr>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&OsStr>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From<&Path>:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "partial_cmp:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "lt:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "le:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "gt:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "ge:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::borrow::Borrow::borrow:1.30"
    ],
    [
      "Rc::downcast:1.30",
      "has feature",
      "unsafe:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has description",
      "A single-threaded reference-counted pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "Rc::downcast:1.30",
      "has description",
      "Attempt to downcast the Rc to a concrete type."
    ],
    [
      "Display:1.30",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Display::fmt:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::fmt::Display::fmt:1.30"
    ],
    [
      "std::fmt::Display::fmt:1.30",
      "has alias",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Display::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Display::fmt:1.30",
      "has argument",
      "std::fmt::Display::fmt::self:1.30"
    ],
    [
      "std::fmt::Display::fmt::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "std::fmt::Display::fmt:1.30",
      "has argument",
      "std::fmt::Display::fmt::f:1.30"
    ],
    [
      "std::fmt::Display::fmt::f:1.30",
      "has type",
      "&mut Formatter:1.30"
    ],
    [
      "std::fmt::Display::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "Debug:1.30",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Debug::fmt:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::fmt::Debug::fmt:1.30"
    ],
    [
      "std::fmt::Debug::fmt:1.30",
      "has alias",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Debug::fmt:1.30",
      "has argument",
      "std::fmt::Debug::fmt::self:1.30"
    ],
    [
      "std::fmt::Debug::fmt::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "std::fmt::Debug::fmt:1.30",
      "has argument",
      "std::fmt::Debug::fmt::f:1.30"
    ],
    [
      "std::fmt::Debug::fmt::f:1.30",
      "has type",
      "&mut Formatter:1.30"
    ],
    [
      "std::fmt::Debug::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "Pointer:1.30",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Pointer::fmt:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::fmt::Pointer::fmt:1.30"
    ],
    [
      "std::fmt::Pointer::fmt:1.30",
      "has alias",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Pointer::fmt:1.30",
      "has argument",
      "std::fmt::Pointer::fmt::self:1.30"
    ],
    [
      "std::fmt::Pointer::fmt::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "std::fmt::Pointer::fmt:1.30",
      "has argument",
      "std::fmt::Pointer::fmt::f:1.30"
    ],
    [
      "std::fmt::Pointer::fmt::f:1.30",
      "has type",
      "&mut Formatter:1.30"
    ],
    [
      "std::fmt::Pointer::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "From:1.30",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.30",
      "implements",
      "From:1.30"
    ],
    [
      "std::convert::From::from:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "std::convert::From::from:1.30"
    ],
    [
      "std::convert::From::from:1.30",
      "has alias",
      "from"
    ],
    [
      "std::convert::From::from:1.30",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::convert::From::from:1.30",
      "has argument",
      "from::t:1.30"
    ],
    [
      "from::t:1.30",
      "has type",
      "T:1.30"
    ],
    [
      "std::convert::From::from:1.30",
      "has return type",
      "Rc<T>:1.30"
    ],
    [
      "std::convert::From::from:1.30",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.30",
      "is a",
      "trait"
    ],
    [
      "std::borrow::Borrow::borrow:1.30",
      "is a",
      "method"
    ],
    [
      "std::borrow::Borrow::borrow:1.30",
      "has alias",
      "borrow"
    ],
    [
      "std::borrow::Borrow::borrow:1.30",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "std::borrow::Borrow::borrow:1.30",
      "has argument",
      "borrow::self:1.30"
    ],
    [
      "borrow::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "std::borrow::Borrow::borrow:1.30",
      "has return type",
      "&T:1.30"
    ],
    [
      "AsRef:1.30",
      "is a",
      "trait"
    ],
    [
      "std::convert::AsRef::as_ref:1.30",
      "has alias",
      "as_ref"
    ],
    [
      "std::rc::Rc::as_ref:1.30",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::rc::Rc::as_ref:1.30",
      "has argument",
      "as_ref::self:1.30"
    ],
    [
      "as_ref::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "std::rc::Rc::as_ref:1.30",
      "has return type",
      "&T:1.30"
    ],
    [
      "std::rc::Rc::as_ref:1.30",
      "stable since",
      "1.5.0"
    ],
    [
      "UnwindSafe:1.30",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.30",
      "stable since",
      "1.9.0"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Display:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Debug:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Pointer:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "From<T>:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Borrow<T>:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "AsRef<T>:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "UnwindSafe:1.30"
    ],
    [
      "Rc<T>::Display::fmt:1.30",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Display::fmt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "Rc<T>::Display::fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "f:1.30",
      "has type",
      "&mut Formatter:1.30"
    ],
    [
      "Rc<T>::Display::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "Rc<T>::Display::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Debug::fmt:1.30",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Debug::fmt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "Rc<T>::Debug::fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "Rc<T>::Debug::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "Rc<T>::Debug::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Pointer::fmt:1.30",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Pointer::fmt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "self:1.30",
      "has type",
      "Rc<T>:1.30"
    ],
    [
      "Rc<T>::Pointer::fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "Rc<T>::Pointer::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "Rc<T>::Pointer::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::from:1.30",
      "is a",
      "function"
    ],
    [
      "Rc<T>::from:1.30",
      "has argument",
      "t:1.30"
    ],
    [
      "t:1.30",
      "has type",
      "T:1.30"
    ],
    [
      "Rc<T>::from:1.30",
      "has return type",
      "Rc<T>:1.30"
    ],
    [
      "Rc<T>::from:1.30",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::from:1.30",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<T>::borrow:1.30",
      "is a",
      "function"
    ],
    [
      "Rc<T>::borrow:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "Rc<T>::borrow:1.30",
      "has return type",
      "&T:1.30"
    ],
    [
      "Rc<T>::borrow:1.30",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Rc<T>::as_ref:1.30",
      "is a",
      "function"
    ],
    [
      "Rc<T>::as_ref:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "Rc<T>::as_ref:1.30",
      "has return type",
      "&T:1.30"
    ],
    [
      "Rc<T>::as_ref:1.30",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::as_ref:1.30",
      "stable since",
      "1.5.0"
    ],
    [
      "Rc<T>:1.30",
      "stable since",
      "1.9.0"
    ],
    [
      "Display:1.30",
      "has method",
      "fmt:1.30"
    ],
    [
      "Display::fmt:1.30",
      "is a",
      "method"
    ],
    [
      "Display::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Display::fmt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "Display::fmt::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "Display::fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "Display::fmt::f:1.30",
      "has type",
      "&mut Formatter:1.30"
    ],
    [
      "Display::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "Debug:1.30",
      "has method",
      "fmt:1.30"
    ],
    [
      "Debug::fmt:1.30",
      "is a",
      "method"
    ],
    [
      "Debug::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Debug::fmt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "Debug::fmt::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "Debug::fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "Debug::fmt::f:1.30",
      "has type",
      "&mut Formatter:1.30"
    ],
    [
      "Debug::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "Pointer:1.30",
      "has method",
      "fmt:1.30"
    ],
    [
      "Pointer::fmt:1.30",
      "is a",
      "method"
    ],
    [
      "Pointer::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Pointer::fmt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "Pointer::fmt::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "Pointer::fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "Pointer::fmt::f:1.30",
      "has type",
      "&mut Formatter:1.30"
    ],
    [
      "Pointer::fmt:1.30",
      "has return type",
      "Result<(), Error>:1.30"
    ],
    [
      "From:1.30",
      "has method",
      "std::convert::From::from:1.30"
    ],
    [
      "From::from:1.30",
      "is a",
      "method"
    ],
    [
      "From::from:1.30",
      "has description",
      "Performs the conversion."
    ],
    [
      "From::from:1.30",
      "has argument",
      "t:1.30"
    ],
    [
      "From::from::t:1.30",
      "has type",
      "T:1.30"
    ],
    [
      "From::from:1.30",
      "has return type",
      "Rc<T>:1.30"
    ],
    [
      "From::from:1.30",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.30",
      "has method",
      "std::borrow::Borrow::borrow:1.30"
    ],
    [
      "Borrow::borrow:1.30",
      "is a",
      "method"
    ],
    [
      "Borrow::borrow:1.30",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Borrow::borrow:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "Borrow::borrow::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "Borrow::borrow:1.30",
      "has return type",
      "&T:1.30"
    ],
    [
      "AsRef:1.30",
      "has method",
      "std::rc::Rc::as_ref:1.30"
    ],
    [
      "AsRef::as_ref:1.30",
      "is a",
      "method"
    ],
    [
      "AsRef::as_ref:1.30",
      "has description",
      "Performs the conversion."
    ],
    [
      "AsRef::as_ref:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "AsRef::as_ref::self:1.30",
      "has type",
      "&Rc<T>:1.30"
    ],
    [
      "AsRef::as_ref:1.30",
      "has return type",
      "&T:1.30"
    ],
    [
      "AsRef::as_ref:1.30",
      "stable since",
      "1.5.0"
    ],
    [
      "std::fmt::Formatter:1.30",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Formatter:1.30",
      "has alias",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.30",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Error:1.30",
      "has alias",
      "Error"
    ],
    [
      "std::result::Result:1.30",
      "is a",
      "enum"
    ],
    [
      "std::result::Result:1.30",
      "has alias",
      "Result"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "CoerceUnsized:1.30"
    ],
    [
      "Rc<T>::hash:1.30",
      "has description",
      "Feeds this value into the given [Hasher]."
    ],
    [
      "Rc<T>::hash_slice:1.30",
      "has description",
      "Feeds a slice of this type into the given [Hasher]."
    ],
    [
      "max:1.30",
      "has stability",
      "Unstable (ord_max_min #25663):1.30"
    ],
    [
      "min:1.30",
      "has stability",
      "Unstable (ord_max_min #25663):1.30"
    ],
    [
      "clone:1.30",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "max:1.30"
    ],
    [
      "max:1.30",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "min:1.30"
    ],
    [
      "min:1.30",
      "is a",
      "method"
    ],
    [
      "Rc::drop:1.30",
      "has description",
      "Drops the Rc. This will decrement the strong reference count. If the strong reference count reaches zero then the only other references (if any) are Weak, so we drop the inner value."
    ],
    [
      "Rc::clone:1.30",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "Rc::hash:1.30",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Hash:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "Ord:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "PartialEq<Rc<T>>:1.30"
    ],
    [
      "Rc<T>:1.30",
      "implements",
      "CoerceUnsized<Rc<U>>:1.30"
    ],
    [
      "Rc<T>::hash:1.30",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>::hash_slice:1.30",
      "has description",
      "Feeds a slice of this type into the given Hasher. Read more"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "cmp:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "eq:1.30"
    ],
    [
      "std::rc::Rc:1.30",
      "has method",
      "ne:1.30"
    ],
    [
      "Rc::from:1.30",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc::from:1.30",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<Path>:1.30",
      "implements",
      "From<PathBuf>:1.30"
    ],
    [
      "Rc<Path>:1.30",
      "implements",
      "From<&Path>:1.30"
    ],
    [
      "From<PathBuf>::from:1.30",
      "is a",
      "method"
    ],
    [
      "From<&Path>::from:1.30",
      "is a",
      "method"
    ],
    [
      "From<PathBuf>::from:1.30",
      "has argument",
      "s:1.30"
    ],
    [
      "s:1.30",
      "has type",
      "PathBuf:1.30"
    ],
    [
      "From<PathBuf>::from:1.30",
      "has return type",
      "Rc<Path>:1.30"
    ],
    [
      "From<&Path>::from:1.30",
      "has argument",
      "s:1.30"
    ],
    [
      "s:1.30",
      "has type",
      "&Path:1.30"
    ],
    [
      "From<&Path>::from:1.30",
      "has return type",
      "Rc<Path>:1.30"
    ],
    [
      "std::rc::Rc:1.40",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.40",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Rc:1.40",
      "has declaration",
      "pub struct Rc<T> where T: ?Sized { // some fields omitted }:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has description",
      "A reference-counted pointer type over an immutable value."
    ],
    [
      "std::rc::Rc::new:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new:1.40",
      "has alias",
      "new"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::new:1.40"
    ],
    [
      "std::rc::Rc::new:1.40",
      "has argument",
      "new::value:1.40"
    ],
    [
      "new::value:1.40",
      "has type",
      "T:1.40"
    ],
    [
      "std::rc::Rc::new:1.40",
      "has return type",
      "Rc<T>:1.40"
    ],
    [
      "std::rc::Rc::new:1.40",
      "has description",
      "Constructs a new Rc<T>."
    ],
    [
      "std::rc::Rc::new:1.40",
      "has example",
      "use std::rc::Rc; let five = Rc::new(5);"
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "has alias",
      "try_unwrap"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::try_unwrap:1.40"
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "has argument",
      "try_unwrap::this:1.40"
    ],
    [
      "try_unwrap::this:1.40",
      "has type",
      "Rc<T>:1.40"
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "has return type",
      "Result<T, Rc<T>>:1.40"
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>. This will succeed even if there are outstanding weak references."
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc::downgrade:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::downgrade:1.40",
      "has alias",
      "downgrade"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::downgrade:1.40"
    ],
    [
      "std::rc::Rc::downgrade:1.40",
      "has argument",
      "downgrade::this:1.40"
    ],
    [
      "downgrade::this:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "std::rc::Rc::downgrade:1.40",
      "has return type",
      "Weak<T>:1.40"
    ],
    [
      "std::rc::Rc::downgrade:1.40",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "std::rc::Rc::downgrade:1.40",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Deref:1.40"
    ],
    [
      "Deref:1.40",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "deref:1.40"
    ],
    [
      "deref:1.40",
      "has return type",
      "&T:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Clone:1.40"
    ],
    [
      "clone:1.40",
      "is a",
      "method"
    ],
    [
      "clone:1.40",
      "has description",
      "Makes a clone of the Rc<T>. When you clone an Rc<T>, it will create another pointer to the data and increase the strong reference counter."
    ],
    [
      "would_unwrap:1.40",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.40"
    ],
    [
      "weak_count:1.40",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.40"
    ],
    [
      "strong_count:1.40",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.40"
    ],
    [
      "is_unique:1.40",
      "has stability",
      "Unstable (rc_counts #28356): uniqueness has unclear meaning:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Drop:1.40"
    ],
    [
      "drop:1.40",
      "has description",
      "Drops the Rc<T>. This will decrement the strong reference count. If the strong reference count becomes zero and the only other references are Weak<T> ones, drops the inner value."
    ],
    [
      "std::rc::Rc:1.40",
      "stable since",
      "1.0.0"
    ],
    [
      "std::rc::Rc::new:1.40",
      "is a",
      "function"
    ],
    [
      "std::rc::Rc::new:1.40",
      "has alias",
      "Rc::new"
    ],
    [
      "std::rc::Rc::new:1.40",
      "has argument",
      "value:1.40"
    ],
    [
      "value:1.40",
      "has type",
      "T:1.40"
    ],
    [
      "Rc::try_unwrap:1.40",
      "is a",
      "function"
    ],
    [
      "Rc::try_unwrap:1.40",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::try_unwrap:1.40",
      "has argument",
      "this:1.40"
    ],
    [
      "this:1.40",
      "has type",
      "Rc<T>:1.40"
    ],
    [
      "Rc::try_unwrap:1.40",
      "has return type",
      "Result<T, Rc<T>>:1.40"
    ],
    [
      "Rc::try_unwrap:1.40",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."
    ],
    [
      "Rc::would_unwrap:1.40",
      "is a",
      "function"
    ],
    [
      "Rc::would_unwrap:1.40",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.40"
    ],
    [
      "Rc::would_unwrap:1.40",
      "has description",
      "Checks if Rc::try_unwrap would return Ok."
    ],
    [
      "Rc::downgrade:1.40",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::downgrade:1.40",
      "has return type",
      "Weak<T>:1.40"
    ],
    [
      "Rc::downgrade:1.40",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Clone:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Deref:1.40"
    ],
    [
      "Rc<T>::Deref:1.40",
      "has associated type",
      "Target = T:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Drop:1.40"
    ],
    [
      "Rc<T>:1.40",
      "excludes",
      "Send:1.40"
    ],
    [
      "Rc<T>:1.40",
      "excludes",
      "Sync:1.40"
    ],
    [
      "std::rc:1.40",
      "contains",
      "std::rc::Rc:1.40"
    ],
    [
      "std::rc:1.40",
      "contains",
      "Weak:1.40"
    ],
    [
      "Rc::make_mut:1.40",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::make_mut:1.40",
      "has description",
      "Make a mutable reference into the given Rc<T> by cloning the inner data..."
    ],
    [
      "Rc::get_mut:1.40",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::get_mut:1.40",
      "has description",
      "Returns a mutable reference to the contained value if the Rc<T> is unique."
    ],
    [
      "std::rc::Rc:1.40",
      "has generic parameter",
      "T:1.40"
    ],
    [
      "std::rc::Rc::new:1.40",
      "has argument",
      "value: T:1.40"
    ],
    [
      "Deref for Rc<T>:1.40",
      "has Target type",
      "T:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "PartialEq:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has stability",
      "!Send:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has stability",
      "!Sync:1.40"
    ],
    [
      "std::rc::Rc::new:1.40",
      "has description",
      "Constructs a new Rc<T>"
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference"
    ],
    [
      "std::rc::Rc:1.40",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::into_raw:1.40"
    ],
    [
      "std::rc::Rc::into_raw:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::into_raw:1.40",
      "has alias",
      "into_raw"
    ],
    [
      "std::rc::Rc::into_raw:1.40",
      "has return type",
      "*const T:1.40"
    ],
    [
      "std::rc::Rc::into_raw:1.40",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::from_raw:1.40"
    ],
    [
      "std::rc::Rc::from_raw:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::from_raw:1.40",
      "has alias",
      "from_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.40",
      "has argument",
      "ptr:1.40"
    ],
    [
      "ptr:1.40",
      "has type",
      "*const T:1.40"
    ],
    [
      "std::rc::Rc::from_raw:1.40",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::ptr_eq:1.40"
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "has alias",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "stable since",
      "1.17.0"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Eq:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "PartialOrd:1.40"
    ],
    [
      "std::rc::Rc::downgrade:1.40",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "Rc::downgrade:1.40",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Rc::try_unwrap:1.40",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Weak:1.40",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Rc::into_raw:1.40",
      "has argument",
      "this:1.40"
    ],
    [
      "std::rc::Rc::into_raw:1.40",
      "has description",
      "Consumes the Rc, returning the wrapped pointer."
    ],
    [
      "std::rc::Rc::from_raw:1.40",
      "has return type",
      "Rc<T>:1.40"
    ],
    [
      "std::rc::Rc::from_raw:1.40",
      "has description",
      "Constructs an Rc from a raw pointer."
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "has argument",
      "this:1.40"
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "has description",
      "Returns true if the two Rcs point to the same value"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Eq:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "PartialOrd:1.40"
    ],
    [
      "Rc::try_unwrap:1.40",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference"
    ],
    [
      "Weak:1.40",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "has description",
      "Returns true if the two Rcs point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "weak_count:1.40"
    ],
    [
      "weak_count:1.40",
      "has description",
      "Get the number of weak references to this value."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "strong_count:1.40"
    ],
    [
      "strong_count:1.40",
      "has description",
      "Get the number of strong references to this value."
    ],
    [
      "std::rc::Rc::new:1.40",
      "has description",
      "Constructs a new `Rc<T>`."
    ],
    [
      "Rc::try_unwrap:1.40",
      "has version",
      "1.4.0:1.40"
    ],
    [
      "Rc::try_unwrap:1.40",
      "has description",
      "Returns the contained value, if the `Rc` has exactly one strong reference."
    ],
    [
      "Rc::into_raw:1.40",
      "has version",
      "1.17.0:1.40"
    ],
    [
      "Rc::from_raw:1.40",
      "has feature",
      "unsafe:1.40"
    ],
    [
      "Rc::from_raw:1.40",
      "has version",
      "1.17.0:1.40"
    ],
    [
      "Rc::from_raw:1.40",
      "has description",
      "Constructs an `Rc` from a raw pointer."
    ],
    [
      "Rc::downgrade:1.40",
      "has version",
      "1.4.0:1.40"
    ],
    [
      "Rc::downgrade:1.40",
      "has description",
      "Creates a new `Weak` pointer to this value."
    ],
    [
      "Rc::weak_count:1.40",
      "has version",
      "1.15.0:1.40"
    ],
    [
      "Rc::weak_count:1.40",
      "has description",
      "Gets the number of `Weak` pointers to this value."
    ],
    [
      "Rc::strong_count:1.40",
      "has version",
      "1.15.0:1.40"
    ],
    [
      "Rc::strong_count:1.40",
      "has description",
      "Gets the number of strong (`Rc`) pointers to this value."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "get_mut:1.40"
    ],
    [
      "Rc::get_mut:1.40",
      "has version",
      "1.4.0:1.40"
    ],
    [
      "Rc::get_mut:1.40",
      "has description",
      "Returns a mutable reference to the inner value, if there are no other `Rc` or `Weak` pointers to the same value."
    ],
    [
      "Rc::ptr_eq:1.40",
      "has version",
      "1.17.0:1.40"
    ],
    [
      "Rc::ptr_eq:1.40",
      "has description",
      "Returns true if the two `Rc`s point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "make_mut:1.40"
    ],
    [
      "Rc::make_mut:1.40",
      "has version",
      "1.4.0:1.40"
    ],
    [
      "Rc::make_mut:1.40",
      "has description",
      "Makes a mutable reference into the given `Rc`."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "downcast:1.40"
    ],
    [
      "Rc::downcast:1.40",
      "has version",
      "1.29.0:1.40"
    ],
    [
      "Rc::downcast:1.40",
      "has description",
      "Attempt to downcast the `Rc<Any>` to a concrete type."
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Default:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Borrow<T>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "PartialOrd<Rc<T>>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "AsRef<T>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "!Sync:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "!Send:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Unpin:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Display:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<Vec<T>>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<String>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<T>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&'a str>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&'a [T]>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<Box<T>>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Hash:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Debug:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "CoerceUnsized<Rc<U>>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "PartialEq<Rc<T>>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Pointer:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Ord:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<CString>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&'a CStr>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<OsString>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&'a OsStr>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "UnwindSafe:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<PathBuf>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&'a Path>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::as_ref:1.40"
    ],
    [
      "std::rc::Rc::as_ref:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::as_ref:1.40",
      "has alias",
      "as_ref"
    ],
    [
      "std::rc::Rc::as_ref:1.40",
      "has description",
      "Returns a reference to the inner value."
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "AsRef:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "Borrow:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "CoerceUnsized:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "rc:1.40"
    ],
    [
      "rc:1.40",
      "contains",
      "std::rc::Rc:1.40"
    ],
    [
      "rc:1.40",
      "contains",
      "Weak:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&str>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&CStr>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&OsStr>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&Path>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "partial_cmp:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "lt:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "le:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "gt:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "ge:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::borrow::Borrow::borrow:1.40"
    ],
    [
      "Rc::downcast:1.40",
      "has feature",
      "unsafe:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has description",
      "A single-threaded reference-counted pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "Rc::downcast:1.40",
      "has description",
      "Attempt to downcast the Rc to a concrete type."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::new_uninit:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::pin:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::assume_init:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::get_mut_unchecked:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::into_raw_non_null:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::rc::Rc::new_uninit_slice:1.40"
    ],
    [
      "Rc::try_unwrap:1.40",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."
    ],
    [
      "std::rc::Rc::new_uninit:1.40",
      "has stability",
      "Unstable (new_uninit #63291):1.40"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.40",
      "has stability",
      "Unstable (get_mut_unchecked #63291):1.40"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.40",
      "has stability",
      "Unstable (get_mut_unchecked #63292):1.40"
    ],
    [
      "Rc::into_raw_non_null:1.40",
      "has stability",
      "Unstable (rc_into_raw_non_null #47336):1.40"
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "has description",
      "Returns true if the two Rcs point to the same allocation (in a vein similar to ptr::eq)."
    ],
    [
      "Weak:1.40",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed allocation. The allocation is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."
    ],
    [
      "std::rc::Rc::assume_init:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::assume_init:1.40",
      "has alias",
      "assume_init"
    ],
    [
      "std::rc::Rc::assume_init:1.40",
      "has description",
      "Converts to Rc<T>."
    ],
    [
      "std::rc::Rc::assume_init:1.40",
      "has stability",
      "Unstable (new_uninit #63291):1.40"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.40",
      "has alias",
      "get_mut_unchecked"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.40",
      "has alias",
      "into_raw_non_null"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.40",
      "has return type",
      "NonNull<T>:1.40"
    ],
    [
      "std::rc::Rc::new_uninit:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_uninit:1.40",
      "has alias",
      "new_uninit"
    ],
    [
      "std::rc::Rc::new_uninit:1.40",
      "has description",
      "Constructs a new Rc with uninitialized contents."
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.40",
      "has alias",
      "new_uninit_slice"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.40",
      "has description",
      "Constructs a new reference-counted slice with uninitialized contents."
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.40",
      "has stability",
      "Unstable (new_uninit #63291):1.40"
    ],
    [
      "std::rc::Rc::pin:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::pin:1.40",
      "has alias",
      "pin"
    ],
    [
      "std::rc::Rc::pin:1.40",
      "has description",
      "Constructs a new Pin<Rc<T>>."
    ],
    [
      "std::rc::Rc::pin:1.40",
      "stable since",
      "1.33.0"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "FromIterator<T>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "DispatchFromDyn<Rc<U>>:1.40"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.40",
      "has stability",
      "Unstable (rc_into_raw_non_null #47336):1.40"
    ],
    [
      "Rc::ptr_eq:1.40",
      "has description",
      "Returns true if the two Rcs point to the same value (not just values that compare as equal)"
    ],
    [
      "Rc::downgrade:1.40",
      "has description",
      "Creates a new Weak pointer to this allocation"
    ],
    [
      "Rc::get_mut:1.40",
      "has description",
      "Returns a mutable reference into the given Rc if there are no other Rc or Weak pointers to the same allocation"
    ],
    [
      "std::rc::Rc::assume_init:1.40",
      "has description",
      "Converts to Rc<T>"
    ],
    [
      "Rc::assume_init:1.40",
      "is a",
      "method"
    ],
    [
      "Rc::assume_init:1.40",
      "has description",
      "Converts to Rc<T>."
    ],
    [
      "Rc::assume_init:1.40",
      "has feature",
      "unsafe:1.40"
    ],
    [
      "Rc::get_mut_unchecked:1.40",
      "is a",
      "method"
    ],
    [
      "Rc::get_mut_unchecked:1.40",
      "has description",
      "Returns a mutable reference to the inner value if there are no other Rc or Weak pointers to the same value."
    ],
    [
      "Rc::new_uninit:1.40",
      "is a",
      "method"
    ],
    [
      "Rc::new_uninit:1.40",
      "has description",
      "Constructs a new Rc with uninitialized contents."
    ],
    [
      "Rc::new_uninit:1.40",
      "has stability",
      "Unstable (new_uninit #63291):1.40"
    ],
    [
      "Rc::new_uninit_slice:1.40",
      "is a",
      "method"
    ],
    [
      "Rc::new_uninit_slice:1.40",
      "has description",
      "Constructs a new reference-counted slice with uninitialized contents."
    ],
    [
      "Rc::new_uninit_slice:1.40",
      "has stability",
      "Unstable (new_uninit #63291):1.40"
    ],
    [
      "Rc::pin:1.40",
      "is a",
      "method"
    ],
    [
      "Rc::pin:1.40",
      "has return type",
      "Pin<Rc<T>>:1.40"
    ],
    [
      "Rc::pin:1.40",
      "has description",
      "Constructs a new Pin<Rc<T>>. If T does not implement Unpin, then value will be pinned in memory and unable to be moved."
    ],
    [
      "Rc::into_raw_non_null:1.40",
      "is a",
      "method"
    ],
    [
      "Rc::into_raw_non_null:1.40",
      "has return type",
      "NonNull<T>:1.40"
    ],
    [
      "Rc::try_unwrap:1.40",
      "has description",
      "Returns the contained value, if the Rc has exactly one strong reference."
    ],
    [
      "Rc::into_raw_non_null:1.40",
      "has description",
      "Consumes the Rc, returning the wrapped pointer as NonNull<T>."
    ],
    [
      "Rc::get_mut_unchecked:1.40",
      "has feature",
      "unsafe:1.40"
    ],
    [
      "Display:1.40",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Display::fmt:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::fmt::Display::fmt:1.40"
    ],
    [
      "std::fmt::Display::fmt:1.40",
      "has alias",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Display::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Display::fmt:1.40",
      "has argument",
      "std::fmt::Display::fmt::self:1.40"
    ],
    [
      "std::fmt::Display::fmt::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "std::fmt::Display::fmt:1.40",
      "has argument",
      "std::fmt::Display::fmt::f:1.40"
    ],
    [
      "std::fmt::Display::fmt::f:1.40",
      "has type",
      "&mut Formatter:1.40"
    ],
    [
      "std::fmt::Display::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "Debug:1.40",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Debug::fmt:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::fmt::Debug::fmt:1.40"
    ],
    [
      "std::fmt::Debug::fmt:1.40",
      "has alias",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Debug::fmt:1.40",
      "has argument",
      "std::fmt::Debug::fmt::self:1.40"
    ],
    [
      "std::fmt::Debug::fmt::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "std::fmt::Debug::fmt:1.40",
      "has argument",
      "std::fmt::Debug::fmt::f:1.40"
    ],
    [
      "std::fmt::Debug::fmt::f:1.40",
      "has type",
      "&mut Formatter:1.40"
    ],
    [
      "std::fmt::Debug::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "Pointer:1.40",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Pointer::fmt:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::fmt::Pointer::fmt:1.40"
    ],
    [
      "std::fmt::Pointer::fmt:1.40",
      "has alias",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Pointer::fmt:1.40",
      "has argument",
      "std::fmt::Pointer::fmt::self:1.40"
    ],
    [
      "std::fmt::Pointer::fmt::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "std::fmt::Pointer::fmt:1.40",
      "has argument",
      "std::fmt::Pointer::fmt::f:1.40"
    ],
    [
      "std::fmt::Pointer::fmt::f:1.40",
      "has type",
      "&mut Formatter:1.40"
    ],
    [
      "std::fmt::Pointer::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "From:1.40",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "std::convert::From::from:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has alias",
      "from"
    ],
    [
      "std::convert::From::from:1.40",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::convert::From::from:1.40",
      "has argument",
      "from::t:1.40"
    ],
    [
      "from::t:1.40",
      "has type",
      "T:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has return type",
      "Rc<T>:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.40",
      "is a",
      "trait"
    ],
    [
      "std::borrow::Borrow::borrow:1.40",
      "is a",
      "method"
    ],
    [
      "std::borrow::Borrow::borrow:1.40",
      "has alias",
      "borrow"
    ],
    [
      "std::borrow::Borrow::borrow:1.40",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "std::borrow::Borrow::borrow:1.40",
      "has argument",
      "borrow::self:1.40"
    ],
    [
      "borrow::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "std::borrow::Borrow::borrow:1.40",
      "has return type",
      "&T:1.40"
    ],
    [
      "AsRef:1.40",
      "is a",
      "trait"
    ],
    [
      "std::convert::AsRef::as_ref:1.40",
      "has alias",
      "as_ref"
    ],
    [
      "std::rc::Rc::as_ref:1.40",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::rc::Rc::as_ref:1.40",
      "has argument",
      "as_ref::self:1.40"
    ],
    [
      "as_ref::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "std::rc::Rc::as_ref:1.40",
      "has return type",
      "&T:1.40"
    ],
    [
      "std::rc::Rc::as_ref:1.40",
      "stable since",
      "1.5.0"
    ],
    [
      "UnwindSafe:1.40",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.40",
      "stable since",
      "1.9.0"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Display:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Debug:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Pointer:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "From<T>:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Borrow<T>:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "AsRef<T>:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "UnwindSafe:1.40"
    ],
    [
      "Rc<T>::Display::fmt:1.40",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Display::fmt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "Rc<T>::Display::fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "f:1.40",
      "has type",
      "&mut Formatter:1.40"
    ],
    [
      "Rc<T>::Display::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "Rc<T>::Display::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Debug::fmt:1.40",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Debug::fmt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "Rc<T>::Debug::fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "Rc<T>::Debug::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "Rc<T>::Debug::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Pointer::fmt:1.40",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Pointer::fmt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "self:1.40",
      "has type",
      "Rc<T>:1.40"
    ],
    [
      "Rc<T>::Pointer::fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "Rc<T>::Pointer::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "Rc<T>::Pointer::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::from:1.40",
      "is a",
      "function"
    ],
    [
      "Rc<T>::from:1.40",
      "has argument",
      "t:1.40"
    ],
    [
      "t:1.40",
      "has type",
      "T:1.40"
    ],
    [
      "Rc<T>::from:1.40",
      "has return type",
      "Rc<T>:1.40"
    ],
    [
      "Rc<T>::from:1.40",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::from:1.40",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<T>::borrow:1.40",
      "is a",
      "function"
    ],
    [
      "Rc<T>::borrow:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "Rc<T>::borrow:1.40",
      "has return type",
      "&T:1.40"
    ],
    [
      "Rc<T>::borrow:1.40",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Rc<T>::as_ref:1.40",
      "is a",
      "function"
    ],
    [
      "Rc<T>::as_ref:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "Rc<T>::as_ref:1.40",
      "has return type",
      "&T:1.40"
    ],
    [
      "Rc<T>::as_ref:1.40",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::as_ref:1.40",
      "stable since",
      "1.5.0"
    ],
    [
      "Rc<T>:1.40",
      "stable since",
      "1.9.0"
    ],
    [
      "Display:1.40",
      "has method",
      "fmt:1.40"
    ],
    [
      "Display::fmt:1.40",
      "is a",
      "method"
    ],
    [
      "Display::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Display::fmt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "Display::fmt::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "Display::fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "Display::fmt::f:1.40",
      "has type",
      "&mut Formatter:1.40"
    ],
    [
      "Display::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "Debug:1.40",
      "has method",
      "fmt:1.40"
    ],
    [
      "Debug::fmt:1.40",
      "is a",
      "method"
    ],
    [
      "Debug::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Debug::fmt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "Debug::fmt::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "Debug::fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "Debug::fmt::f:1.40",
      "has type",
      "&mut Formatter:1.40"
    ],
    [
      "Debug::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "Pointer:1.40",
      "has method",
      "fmt:1.40"
    ],
    [
      "Pointer::fmt:1.40",
      "is a",
      "method"
    ],
    [
      "Pointer::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Pointer::fmt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "Pointer::fmt::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "Pointer::fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "Pointer::fmt::f:1.40",
      "has type",
      "&mut Formatter:1.40"
    ],
    [
      "Pointer::fmt:1.40",
      "has return type",
      "Result<(), Error>:1.40"
    ],
    [
      "From:1.40",
      "has method",
      "std::convert::From::from:1.40"
    ],
    [
      "From::from:1.40",
      "is a",
      "method"
    ],
    [
      "From::from:1.40",
      "has description",
      "Performs the conversion."
    ],
    [
      "From::from:1.40",
      "has argument",
      "t:1.40"
    ],
    [
      "From::from::t:1.40",
      "has type",
      "T:1.40"
    ],
    [
      "From::from:1.40",
      "has return type",
      "Rc<T>:1.40"
    ],
    [
      "From::from:1.40",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.40",
      "has method",
      "std::borrow::Borrow::borrow:1.40"
    ],
    [
      "Borrow::borrow:1.40",
      "is a",
      "method"
    ],
    [
      "Borrow::borrow:1.40",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Borrow::borrow:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "Borrow::borrow::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "Borrow::borrow:1.40",
      "has return type",
      "&T:1.40"
    ],
    [
      "AsRef:1.40",
      "has method",
      "std::rc::Rc::as_ref:1.40"
    ],
    [
      "AsRef::as_ref:1.40",
      "is a",
      "method"
    ],
    [
      "AsRef::as_ref:1.40",
      "has description",
      "Performs the conversion."
    ],
    [
      "AsRef::as_ref:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "AsRef::as_ref::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "AsRef::as_ref:1.40",
      "has return type",
      "&T:1.40"
    ],
    [
      "AsRef::as_ref:1.40",
      "stable since",
      "1.5.0"
    ],
    [
      "std::fmt::Formatter:1.40",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Formatter:1.40",
      "has alias",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.40",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Error:1.40",
      "has alias",
      "Error"
    ],
    [
      "std::result::Result:1.40",
      "is a",
      "enum"
    ],
    [
      "std::result::Result:1.40",
      "has alias",
      "Result"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "CoerceUnsized:1.40"
    ],
    [
      "Rc<T>::hash:1.40",
      "has description",
      "Feeds this value into the given [Hasher]."
    ],
    [
      "Rc<T>::hash_slice:1.40",
      "has description",
      "Feeds a slice of this type into the given [Hasher]."
    ],
    [
      "max:1.40",
      "has stability",
      "Unstable (ord_max_min #25663):1.40"
    ],
    [
      "min:1.40",
      "has stability",
      "Unstable (ord_max_min #25663):1.40"
    ],
    [
      "clone:1.40",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "max:1.40"
    ],
    [
      "max:1.40",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "min:1.40"
    ],
    [
      "min:1.40",
      "is a",
      "method"
    ],
    [
      "Rc::drop:1.40",
      "has description",
      "Drops the Rc. This will decrement the strong reference count. If the strong reference count reaches zero then the only other references (if any) are Weak, so we drop the inner value."
    ],
    [
      "Rc::clone:1.40",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "Rc::hash:1.40",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Hash:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Ord:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "PartialEq<Rc<T>>:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "CoerceUnsized<Rc<U>>:1.40"
    ],
    [
      "Rc<T>::hash:1.40",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>::hash_slice:1.40",
      "has description",
      "Feeds a slice of this type into the given Hasher. Read more"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "cmp:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "eq:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "ne:1.40"
    ],
    [
      "cmp:1.40",
      "is a",
      "method"
    ],
    [
      "cmp:1.40",
      "has description",
      "Comparison for two Rcs."
    ],
    [
      "cmp:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "cmp:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "cmp:1.40",
      "has return type",
      "Ordering:1.40"
    ],
    [
      "eq:1.40",
      "is a",
      "method"
    ],
    [
      "eq:1.40",
      "has description",
      "Equality for two Rcs."
    ],
    [
      "eq:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "eq:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "eq:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "ne:1.40",
      "is a",
      "method"
    ],
    [
      "ne:1.40",
      "has description",
      "Inequality for two Rcs."
    ],
    [
      "ne:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "ne:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "ne:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "From<&str>:1.40"
    ],
    [
      "Rc<str>:1.40",
      "has method",
      "std::convert::From::from:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has argument",
      "v:1.40"
    ],
    [
      "from::v:1.40",
      "has type",
      "&str:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has return type",
      "Rc<str>:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "From<&[T]>:1.40"
    ],
    [
      "Rc<[T]>:1.40",
      "has method",
      "std::convert::From::from:1.40"
    ],
    [
      "from::v:1.40",
      "has type",
      "&[T]:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has return type",
      "Rc<[T]>:1.40"
    ],
    [
      "max:1.40",
      "has description",
      "Compares and returns the maximum of two values."
    ],
    [
      "min:1.40",
      "has description",
      "Compares and returns the minimum of two values."
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "DispatchFromDyn:1.40"
    ],
    [
      "cmp:1.40",
      "has description",
      "Comparison for two Rcs. The two are compared by calling cmp() on their inner values."
    ],
    [
      "eq:1.40",
      "has description",
      "Equality for two Rcs. Two Rcs are equal if their inner values are equal."
    ],
    [
      "ne:1.40",
      "has description",
      "Inequality for two Rcs. Two Rcs are unequal if their inner values are unequal."
    ],
    [
      "Rc::from:1.40",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc::from:1.40",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<Path>:1.40",
      "implements",
      "From<PathBuf>:1.40"
    ],
    [
      "Rc<Path>:1.40",
      "implements",
      "From<&Path>:1.40"
    ],
    [
      "From<PathBuf>::from:1.40",
      "is a",
      "method"
    ],
    [
      "From<&Path>::from:1.40",
      "is a",
      "method"
    ],
    [
      "From<PathBuf>::from:1.40",
      "has argument",
      "s:1.40"
    ],
    [
      "s:1.40",
      "has type",
      "PathBuf:1.40"
    ],
    [
      "From<PathBuf>::from:1.40",
      "has return type",
      "Rc<Path>:1.40"
    ],
    [
      "From<&Path>::from:1.40",
      "has argument",
      "s:1.40"
    ],
    [
      "s:1.40",
      "has type",
      "&Path:1.40"
    ],
    [
      "From<&Path>::from:1.40",
      "has return type",
      "Rc<Path>:1.40"
    ],
    [
      "partial_cmp:1.40",
      "is a",
      "method"
    ],
    [
      "partial_cmp:1.40",
      "has description",
      "Compares and returns the ordering between self and other."
    ],
    [
      "partial_cmp:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "partial_cmp:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "other:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "partial_cmp:1.40",
      "has return type",
      "Option<Ordering>:1.40"
    ],
    [
      "lt:1.40",
      "is a",
      "method"
    ],
    [
      "lt:1.40",
      "has description",
      "Less-than comparison for two Rcs."
    ],
    [
      "lt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "lt:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "lt:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "le:1.40",
      "is a",
      "method"
    ],
    [
      "le:1.40",
      "has description",
      "'Less than or equal to' comparison for two Rcs."
    ],
    [
      "le:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "le:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "le:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "gt:1.40",
      "is a",
      "method"
    ],
    [
      "gt:1.40",
      "has description",
      "Greater-than comparison for two Rcs."
    ],
    [
      "gt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "gt:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "gt:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "ge:1.40",
      "is a",
      "method"
    ],
    [
      "ge:1.40",
      "has description",
      "'Greater than or equal to' comparison for two Rcs."
    ],
    [
      "ge:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "ge:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "ge:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "Rc<T>:1.40",
      "implements",
      "Default:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "default:1.40"
    ],
    [
      "default:1.40",
      "is a",
      "method"
    ],
    [
      "default:1.40",
      "has description",
      "Creates a new Rc<T> with the Default value for T."
    ],
    [
      "default:1.40",
      "has return type",
      "Rc<T>:1.40"
    ],
    [
      "Rc<OsStr>:1.40",
      "implements",
      "From<OsString>:1.40"
    ],
    [
      "Rc<OsStr>:1.40",
      "has method",
      "std::convert::From::from:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has argument",
      "s:1.40"
    ],
    [
      "s:1.40",
      "has type",
      "OsString:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has return type",
      "Rc<OsStr>:1.40"
    ],
    [
      "partial_cmp:1.40",
      "has description",
      "Partial comparison for two Rcs."
    ],
    [
      "le:1.40",
      "has description",
      "Less-than or equal to comparison for two Rcs."
    ],
    [
      "ge:1.40",
      "has description",
      "Greater-than or equal to comparison for two Rcs."
    ],
    [
      "default:1.40",
      "has description",
      "Creates a new Rc<T>, with the Default value for T."
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "FromIterator:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "has method",
      "from_iter:1.40"
    ],
    [
      "from_iter:1.40",
      "is a",
      "method"
    ],
    [
      "from_iter:1.40",
      "has description",
      "Takes each element in the Iterator and collects it into an Rc<[T]>."
    ],
    [
      "lt:1.40",
      "has description",
      "Less-than comparison for two Rcs. The two are compared by calling < on their inner values."
    ],
    [
      "le:1.40",
      "has description",
      "Less than or equal to comparison for two Rcs. The two are compared by calling <= on their inner values."
    ],
    [
      "gt:1.40",
      "has description",
      "Greater-than comparison for two Rcs. The two are compared by calling > on their inner values."
    ],
    [
      "ge:1.40",
      "has description",
      "Greater than or equal to comparison for two Rcs. The two are compared by calling >= on their inner values."
    ],
    [
      "partial_cmp:1.40",
      "has description",
      "Comparison for two Rcs. The two are compared by calling partial_cmp() on their inner values."
    ],
    [
      "partial_cmp::self:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "partial_cmp::other:1.40",
      "has type",
      "&Rc<T>:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has description",
      "Converts a PathBuf into an Rc by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<Path>:1.40",
      "has method",
      "std::convert::From::from:1.40"
    ],
    [
      "std::convert::From::from:1.40",
      "has description",
      "Converts a Path into an Rc by copying the Path data into a new Rc buffer."
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&'_ OsStr>:1.40"
    ],
    [
      "std::rc::Rc:1.40",
      "implements",
      "From<&'_ Path>:1.40"
    ],
    [
      "Rc<Path>::from:1.40",
      "has description",
      "Converts a PathBuf into an Rc<Path> by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<OsStr>::from:1.40",
      "has description",
      "Converts a OsString into an Rc<OsStr> without copying or allocating."
    ],
    [
      "Rc<Path>::from:1.40",
      "stable since",
      "1.24.0"
    ],
    [
      "Rc<OsStr>::from:1.40",
      "stable since",
      "1.24.0"
    ],
    [
      "Rc<Path>::from<PathBuf>:1.40",
      "has description",
      "Converts a PathBuf into an Rc by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<Path>::from<&'_ Path>:1.40",
      "has description",
      "Converts a Path into an Rc by copying the Path data into a new Rc buffer."
    ],
    [
      "std::rc::Rc:1.50",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.50",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Rc:1.50",
      "has declaration",
      "pub struct Rc<T> where T: ?Sized { // some fields omitted }:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has description",
      "A reference-counted pointer type over an immutable value."
    ],
    [
      "std::rc::Rc::new:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new:1.50",
      "has alias",
      "new"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::new:1.50"
    ],
    [
      "std::rc::Rc::new:1.50",
      "has argument",
      "new::value:1.50"
    ],
    [
      "new::value:1.50",
      "has type",
      "T:1.50"
    ],
    [
      "std::rc::Rc::new:1.50",
      "has return type",
      "Rc<T>:1.50"
    ],
    [
      "std::rc::Rc::new:1.50",
      "has description",
      "Constructs a new Rc<T>."
    ],
    [
      "std::rc::Rc::new:1.50",
      "has example",
      "use std::rc::Rc; let five = Rc::new(5);"
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "has alias",
      "try_unwrap"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::try_unwrap:1.50"
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "has argument",
      "try_unwrap::this:1.50"
    ],
    [
      "try_unwrap::this:1.50",
      "has type",
      "Rc<T>:1.50"
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "has return type",
      "Result<T, Rc<T>>:1.50"
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>. This will succeed even if there are outstanding weak references."
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "has alias",
      "downgrade"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::downgrade:1.50"
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "has argument",
      "downgrade::this:1.50"
    ],
    [
      "downgrade::this:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "has return type",
      "Weak<T>:1.50"
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Deref:1.50"
    ],
    [
      "Deref:1.50",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "deref:1.50"
    ],
    [
      "deref:1.50",
      "has return type",
      "&T:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Clone:1.50"
    ],
    [
      "std::rc::Rc::clone:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::clone:1.50",
      "has description",
      "Makes a clone of the Rc<T>. When you clone an Rc<T>, it will create another pointer to the data and increase the strong reference counter."
    ],
    [
      "would_unwrap:1.50",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.50"
    ],
    [
      "weak_count:1.50",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.50"
    ],
    [
      "strong_count:1.50",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.50"
    ],
    [
      "is_unique:1.50",
      "has stability",
      "Unstable (rc_counts #28356): uniqueness has unclear meaning:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Drop:1.50"
    ],
    [
      "drop:1.50",
      "has description",
      "Drops the Rc<T>. This will decrement the strong reference count. If the strong reference count becomes zero and the only other references are Weak<T> ones, drops the inner value."
    ],
    [
      "std::rc::Rc:1.50",
      "stable since",
      "1.0.0"
    ],
    [
      "std::rc::Rc::new:1.50",
      "is a",
      "function"
    ],
    [
      "std::rc::Rc::new:1.50",
      "has alias",
      "Rc::new"
    ],
    [
      "std::rc::Rc::new:1.50",
      "has argument",
      "value:1.50"
    ],
    [
      "value:1.50",
      "has type",
      "T:1.50"
    ],
    [
      "Rc::try_unwrap:1.50",
      "is a",
      "function"
    ],
    [
      "Rc::try_unwrap:1.50",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::try_unwrap:1.50",
      "has argument",
      "this:1.50"
    ],
    [
      "this:1.50",
      "has type",
      "Rc<T>:1.50"
    ],
    [
      "Rc::try_unwrap:1.50",
      "has return type",
      "Result<T, Rc<T>>:1.50"
    ],
    [
      "Rc::try_unwrap:1.50",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."
    ],
    [
      "Rc::would_unwrap:1.50",
      "is a",
      "function"
    ],
    [
      "Rc::would_unwrap:1.50",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.50"
    ],
    [
      "Rc::would_unwrap:1.50",
      "has description",
      "Checks if Rc::try_unwrap would return Ok."
    ],
    [
      "Rc::downgrade:1.50",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::downgrade:1.50",
      "has return type",
      "Weak<T>:1.50"
    ],
    [
      "Rc::downgrade:1.50",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Clone:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Deref:1.50"
    ],
    [
      "Rc<T>::Deref:1.50",
      "has associated type",
      "Target = T:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Drop:1.50"
    ],
    [
      "Rc<T>:1.50",
      "excludes",
      "Send:1.50"
    ],
    [
      "Rc<T>:1.50",
      "excludes",
      "Sync:1.50"
    ],
    [
      "std::rc:1.50",
      "contains",
      "std::rc::Rc:1.50"
    ],
    [
      "std::rc:1.50",
      "contains",
      "Weak:1.50"
    ],
    [
      "Rc::make_mut:1.50",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::make_mut:1.50",
      "has description",
      "Make a mutable reference into the given Rc<T> by cloning the inner data..."
    ],
    [
      "Rc::get_mut:1.50",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::get_mut:1.50",
      "has description",
      "Returns a mutable reference to the contained value if the Rc<T> is unique."
    ],
    [
      "std::rc::Rc:1.50",
      "has generic parameter",
      "T:1.50"
    ],
    [
      "std::rc::Rc::new:1.50",
      "has argument",
      "value: T:1.50"
    ],
    [
      "Deref for Rc<T>:1.50",
      "has Target type",
      "T:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "PartialEq:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has stability",
      "!Send:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has stability",
      "!Sync:1.50"
    ],
    [
      "std::rc::Rc::new:1.50",
      "has description",
      "Constructs a new Rc<T>"
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference"
    ],
    [
      "std::rc::Rc:1.50",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::into_raw:1.50"
    ],
    [
      "std::rc::Rc::into_raw:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::into_raw:1.50",
      "has alias",
      "into_raw"
    ],
    [
      "std::rc::Rc::into_raw:1.50",
      "has return type",
      "*const T:1.50"
    ],
    [
      "std::rc::Rc::into_raw:1.50",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::from_raw:1.50"
    ],
    [
      "std::rc::Rc::from_raw:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::from_raw:1.50",
      "has alias",
      "from_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.50",
      "has argument",
      "ptr:1.50"
    ],
    [
      "ptr:1.50",
      "has type",
      "*const T:1.50"
    ],
    [
      "std::rc::Rc::from_raw:1.50",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::ptr_eq:1.50"
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "has alias",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "stable since",
      "1.17.0"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Eq:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "PartialOrd:1.50"
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "Rc::downgrade:1.50",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Rc::try_unwrap:1.50",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Weak:1.50",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Rc::into_raw:1.50",
      "has argument",
      "this:1.50"
    ],
    [
      "std::rc::Rc::into_raw:1.50",
      "has description",
      "Consumes the Rc, returning the wrapped pointer."
    ],
    [
      "std::rc::Rc::from_raw:1.50",
      "has return type",
      "Rc<T>:1.50"
    ],
    [
      "std::rc::Rc::from_raw:1.50",
      "has description",
      "Constructs an Rc from a raw pointer."
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "has argument",
      "this:1.50"
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "has description",
      "Returns true if the two Rcs point to the same value"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Eq:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "PartialOrd:1.50"
    ],
    [
      "Rc::try_unwrap:1.50",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference"
    ],
    [
      "Weak:1.50",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "has description",
      "Returns true if the two Rcs point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "weak_count:1.50"
    ],
    [
      "weak_count:1.50",
      "has description",
      "Get the number of weak references to this value."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "strong_count:1.50"
    ],
    [
      "strong_count:1.50",
      "has description",
      "Get the number of strong references to this value."
    ],
    [
      "std::rc::Rc::new:1.50",
      "has description",
      "Constructs a new `Rc<T>`."
    ],
    [
      "Rc::try_unwrap:1.50",
      "has version",
      "1.4.0:1.50"
    ],
    [
      "Rc::try_unwrap:1.50",
      "has description",
      "Returns the contained value, if the `Rc` has exactly one strong reference."
    ],
    [
      "Rc::into_raw:1.50",
      "has version",
      "1.17.0:1.50"
    ],
    [
      "Rc::from_raw:1.50",
      "has feature",
      "unsafe:1.50"
    ],
    [
      "Rc::from_raw:1.50",
      "has version",
      "1.17.0:1.50"
    ],
    [
      "Rc::from_raw:1.50",
      "has description",
      "Constructs an `Rc` from a raw pointer."
    ],
    [
      "Rc::downgrade:1.50",
      "has version",
      "1.4.0:1.50"
    ],
    [
      "Rc::downgrade:1.50",
      "has description",
      "Creates a new `Weak` pointer to this value."
    ],
    [
      "Rc::weak_count:1.50",
      "has version",
      "1.15.0:1.50"
    ],
    [
      "Rc::weak_count:1.50",
      "has description",
      "Gets the number of `Weak` pointers to this value."
    ],
    [
      "Rc::strong_count:1.50",
      "has version",
      "1.15.0:1.50"
    ],
    [
      "Rc::strong_count:1.50",
      "has description",
      "Gets the number of strong (`Rc`) pointers to this value."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "get_mut:1.50"
    ],
    [
      "Rc::get_mut:1.50",
      "has version",
      "1.4.0:1.50"
    ],
    [
      "Rc::get_mut:1.50",
      "has description",
      "Returns a mutable reference to the inner value, if there are no other `Rc` or `Weak` pointers to the same value."
    ],
    [
      "Rc::ptr_eq:1.50",
      "has version",
      "1.17.0:1.50"
    ],
    [
      "Rc::ptr_eq:1.50",
      "has description",
      "Returns true if the two `Rc`s point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "make_mut:1.50"
    ],
    [
      "Rc::make_mut:1.50",
      "has version",
      "1.4.0:1.50"
    ],
    [
      "Rc::make_mut:1.50",
      "has description",
      "Makes a mutable reference into the given `Rc`."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "downcast:1.50"
    ],
    [
      "Rc::downcast:1.50",
      "has version",
      "1.29.0:1.50"
    ],
    [
      "Rc::downcast:1.50",
      "has description",
      "Attempt to downcast the `Rc<Any>` to a concrete type."
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Default:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Borrow<T>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "PartialOrd<Rc<T>>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "AsRef<T>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "!Sync:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "!Send:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Unpin:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Display:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<Vec<T>>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<String>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<T>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&'a str>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&'a [T]>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<Box<T>>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Hash:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Debug:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "CoerceUnsized<Rc<U>>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "PartialEq<Rc<T>>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Pointer:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Ord:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<CString>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&'a CStr>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<OsString>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&'a OsStr>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "UnwindSafe:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<PathBuf>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&'a Path>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::as_ref:1.50"
    ],
    [
      "std::rc::Rc::as_ref:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::as_ref:1.50",
      "has alias",
      "as_ref"
    ],
    [
      "std::rc::Rc::as_ref:1.50",
      "has description",
      "Returns a reference to the inner value."
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "AsRef:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "Borrow:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "CoerceUnsized:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "rc:1.50"
    ],
    [
      "rc:1.50",
      "contains",
      "std::rc::Rc:1.50"
    ],
    [
      "rc:1.50",
      "contains",
      "Weak:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&str>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&CStr>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&OsStr>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&Path>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::partial_cmp:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::lt:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::le:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::gt:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::ge:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::borrow::Borrow::borrow:1.50"
    ],
    [
      "Rc::downcast:1.50",
      "has feature",
      "unsafe:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has description",
      "A single-threaded reference-counted pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "Rc::downcast:1.50",
      "has description",
      "Attempt to downcast the Rc to a concrete type."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::new_uninit:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::pin:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::assume_init:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::get_mut_unchecked:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::into_raw_non_null:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::new_uninit_slice:1.50"
    ],
    [
      "Rc::try_unwrap:1.50",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."
    ],
    [
      "std::rc::Rc::new_uninit:1.50",
      "has stability",
      "Unstable (new_uninit #63291):1.50"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.50",
      "has stability",
      "Unstable (get_mut_unchecked #63291):1.50"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.50",
      "has stability",
      "Unstable (get_mut_unchecked #63292):1.50"
    ],
    [
      "Rc::into_raw_non_null:1.50",
      "has stability",
      "Unstable (rc_into_raw_non_null #47336):1.50"
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "has description",
      "Returns true if the two Rcs point to the same allocation (in a vein similar to ptr::eq)."
    ],
    [
      "Weak:1.50",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed allocation. The allocation is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."
    ],
    [
      "std::rc::Rc::assume_init:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::assume_init:1.50",
      "has alias",
      "assume_init"
    ],
    [
      "std::rc::Rc::assume_init:1.50",
      "has description",
      "Converts to Rc<T>."
    ],
    [
      "std::rc::Rc::assume_init:1.50",
      "has stability",
      "Unstable (new_uninit #63291):1.50"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.50",
      "has alias",
      "get_mut_unchecked"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.50",
      "has alias",
      "into_raw_non_null"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.50",
      "has return type",
      "NonNull<T>:1.50"
    ],
    [
      "std::rc::Rc::new_uninit:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_uninit:1.50",
      "has alias",
      "new_uninit"
    ],
    [
      "std::rc::Rc::new_uninit:1.50",
      "has description",
      "Constructs a new Rc with uninitialized contents."
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.50",
      "has alias",
      "new_uninit_slice"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.50",
      "has description",
      "Constructs a new reference-counted slice with uninitialized contents."
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.50",
      "has stability",
      "Unstable (new_uninit #63291):1.50"
    ],
    [
      "std::rc::Rc::pin:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::pin:1.50",
      "has alias",
      "pin"
    ],
    [
      "std::rc::Rc::pin:1.50",
      "has description",
      "Constructs a new Pin<Rc<T>>."
    ],
    [
      "std::rc::Rc::pin:1.50",
      "stable since",
      "1.33.0"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "FromIterator<T>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "DispatchFromDyn<Rc<U>>:1.50"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.50",
      "has stability",
      "Unstable (rc_into_raw_non_null #47336):1.50"
    ],
    [
      "Rc::ptr_eq:1.50",
      "has description",
      "Returns true if the two Rcs point to the same value (not just values that compare as equal)"
    ],
    [
      "Rc::downgrade:1.50",
      "has description",
      "Creates a new Weak pointer to this allocation"
    ],
    [
      "Rc::get_mut:1.50",
      "has description",
      "Returns a mutable reference into the given Rc if there are no other Rc or Weak pointers to the same allocation"
    ],
    [
      "std::rc::Rc::assume_init:1.50",
      "has description",
      "Converts to Rc<T>"
    ],
    [
      "Rc::assume_init:1.50",
      "is a",
      "method"
    ],
    [
      "Rc::assume_init:1.50",
      "has description",
      "Converts to Rc<T>."
    ],
    [
      "Rc::assume_init:1.50",
      "has feature",
      "unsafe:1.50"
    ],
    [
      "Rc::get_mut_unchecked:1.50",
      "is a",
      "method"
    ],
    [
      "Rc::get_mut_unchecked:1.50",
      "has description",
      "Returns a mutable reference to the inner value if there are no other Rc or Weak pointers to the same value."
    ],
    [
      "Rc::new_uninit:1.50",
      "is a",
      "method"
    ],
    [
      "Rc::new_uninit:1.50",
      "has description",
      "Constructs a new Rc with uninitialized contents."
    ],
    [
      "Rc::new_uninit:1.50",
      "has stability",
      "Unstable (new_uninit #63291):1.50"
    ],
    [
      "Rc::new_uninit_slice:1.50",
      "is a",
      "method"
    ],
    [
      "Rc::new_uninit_slice:1.50",
      "has description",
      "Constructs a new reference-counted slice with uninitialized contents."
    ],
    [
      "Rc::new_uninit_slice:1.50",
      "has stability",
      "Unstable (new_uninit #63291):1.50"
    ],
    [
      "Rc::pin:1.50",
      "is a",
      "method"
    ],
    [
      "Rc::pin:1.50",
      "has return type",
      "Pin<Rc<T>>:1.50"
    ],
    [
      "Rc::pin:1.50",
      "has description",
      "Constructs a new Pin<Rc<T>>. If T does not implement Unpin, then value will be pinned in memory and unable to be moved."
    ],
    [
      "Rc::into_raw_non_null:1.50",
      "is a",
      "method"
    ],
    [
      "Rc::into_raw_non_null:1.50",
      "has return type",
      "NonNull<T>:1.50"
    ],
    [
      "Rc::try_unwrap:1.50",
      "has description",
      "Returns the contained value, if the Rc has exactly one strong reference."
    ],
    [
      "Rc::into_raw_non_null:1.50",
      "has description",
      "Consumes the Rc, returning the wrapped pointer as NonNull<T>."
    ],
    [
      "Rc::get_mut_unchecked:1.50",
      "has feature",
      "unsafe:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::new_cyclic:1.50"
    ],
    [
      "std::rc::Rc::new_cyclic:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_cyclic:1.50",
      "has alias",
      "new_cyclic"
    ],
    [
      "std::rc::Rc::new_cyclic:1.50",
      "has description",
      "Constructs a new Rc<T> using a weak reference to itself. Attempting to upgrade the weak reference before this function returns will result in a None value."
    ],
    [
      "std::rc::Rc::new_cyclic:1.50",
      "has stability",
      "Unstable (arc_new_cyclic #75861):1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::new_zeroed:1.50"
    ],
    [
      "std::rc::Rc::new_zeroed:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_zeroed:1.50",
      "has alias",
      "new_zeroed"
    ],
    [
      "std::rc::Rc::new_zeroed:1.50",
      "has description",
      "Constructs a new Rc with uninitialized contents, with the memory being filled with 0 bytes."
    ],
    [
      "std::rc::Rc::new_zeroed:1.50",
      "has stability",
      "Unstable (new_uninit #63291):1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::new_zeroed_slice:1.50"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.50",
      "has alias",
      "new_zeroed_slice"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.50",
      "has description",
      "Constructs a new reference-counted slice with uninitialized contents, with the memory being filled with 0 bytes."
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.50",
      "has stability",
      "Unstable (new_uninit #63291):1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::as_ptr:1.50"
    ],
    [
      "std::rc::Rc::as_ptr:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::as_ptr:1.50",
      "has alias",
      "as_ptr"
    ],
    [
      "std::rc::Rc::as_ptr:1.50",
      "has return type",
      "*const T:1.50"
    ],
    [
      "std::rc::Rc::new_zeroed:1.50",
      "has return type",
      "Rc<MaybeUninit<T>>:1.50"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.50",
      "has return type",
      "Rc<[MaybeUninit<T>]>:1.50"
    ],
    [
      "Display:1.50",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Display::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::fmt::Display::fmt:1.50"
    ],
    [
      "std::fmt::Display::fmt:1.50",
      "has alias",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Display::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Display::fmt:1.50",
      "has argument",
      "std::fmt::Display::fmt::self:1.50"
    ],
    [
      "std::fmt::Display::fmt::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "std::fmt::Display::fmt:1.50",
      "has argument",
      "std::fmt::Display::fmt::f:1.50"
    ],
    [
      "std::fmt::Display::fmt::f:1.50",
      "has type",
      "&mut Formatter:1.50"
    ],
    [
      "std::fmt::Display::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "Debug:1.50",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Debug::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::fmt::Debug::fmt:1.50"
    ],
    [
      "std::fmt::Debug::fmt:1.50",
      "has alias",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Debug::fmt:1.50",
      "has argument",
      "std::fmt::Debug::fmt::self:1.50"
    ],
    [
      "std::fmt::Debug::fmt::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "std::fmt::Debug::fmt:1.50",
      "has argument",
      "std::fmt::Debug::fmt::f:1.50"
    ],
    [
      "std::fmt::Debug::fmt::f:1.50",
      "has type",
      "&mut Formatter:1.50"
    ],
    [
      "std::fmt::Debug::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "Pointer:1.50",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Pointer::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::fmt::Pointer::fmt:1.50"
    ],
    [
      "std::fmt::Pointer::fmt:1.50",
      "has alias",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Pointer::fmt:1.50",
      "has argument",
      "std::fmt::Pointer::fmt::self:1.50"
    ],
    [
      "std::fmt::Pointer::fmt::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "std::fmt::Pointer::fmt:1.50",
      "has argument",
      "std::fmt::Pointer::fmt::f:1.50"
    ],
    [
      "std::fmt::Pointer::fmt::f:1.50",
      "has type",
      "&mut Formatter:1.50"
    ],
    [
      "std::fmt::Pointer::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "From:1.50",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has alias",
      "from"
    ],
    [
      "std::convert::From::from:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::convert::From::from:1.50",
      "has argument",
      "from::t:1.50"
    ],
    [
      "from::t:1.50",
      "has type",
      "T:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has return type",
      "Rc<T>:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.50",
      "is a",
      "trait"
    ],
    [
      "std::borrow::Borrow::borrow:1.50",
      "is a",
      "method"
    ],
    [
      "std::borrow::Borrow::borrow:1.50",
      "has alias",
      "borrow"
    ],
    [
      "std::borrow::Borrow::borrow:1.50",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "std::borrow::Borrow::borrow:1.50",
      "has argument",
      "borrow::self:1.50"
    ],
    [
      "borrow::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "std::borrow::Borrow::borrow:1.50",
      "has return type",
      "&T:1.50"
    ],
    [
      "AsRef:1.50",
      "is a",
      "trait"
    ],
    [
      "std::convert::AsRef::as_ref:1.50",
      "has alias",
      "as_ref"
    ],
    [
      "std::rc::Rc::as_ref:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::rc::Rc::as_ref:1.50",
      "has argument",
      "as_ref::self:1.50"
    ],
    [
      "as_ref::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "std::rc::Rc::as_ref:1.50",
      "has return type",
      "&T:1.50"
    ],
    [
      "std::rc::Rc::as_ref:1.50",
      "stable since",
      "1.5.0"
    ],
    [
      "UnwindSafe:1.50",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.50",
      "stable since",
      "1.9.0"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Display:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Debug:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Pointer:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "From<T>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Borrow<T>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "AsRef<T>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "UnwindSafe:1.50"
    ],
    [
      "Rc<T>::Display::fmt:1.50",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Display::fmt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "Rc<T>::Display::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "f:1.50",
      "has type",
      "&mut Formatter:1.50"
    ],
    [
      "Rc<T>::Display::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "Rc<T>::Display::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Debug::fmt:1.50",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Debug::fmt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Rc<T>::Debug::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "Rc<T>::Debug::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "Rc<T>::Debug::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Pointer::fmt:1.50",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Pointer::fmt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "self:1.50",
      "has type",
      "Rc<T>:1.50"
    ],
    [
      "Rc<T>::Pointer::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "Rc<T>::Pointer::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "Rc<T>::Pointer::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::from:1.50",
      "is a",
      "function"
    ],
    [
      "Rc<T>::from:1.50",
      "has argument",
      "t:1.50"
    ],
    [
      "t:1.50",
      "has type",
      "T:1.50"
    ],
    [
      "Rc<T>::from:1.50",
      "has return type",
      "Rc<T>:1.50"
    ],
    [
      "Rc<T>::from:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::from:1.50",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<T>::borrow:1.50",
      "is a",
      "function"
    ],
    [
      "Rc<T>::borrow:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Rc<T>::borrow:1.50",
      "has return type",
      "&T:1.50"
    ],
    [
      "Rc<T>::borrow:1.50",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Rc<T>::as_ref:1.50",
      "is a",
      "function"
    ],
    [
      "Rc<T>::as_ref:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Rc<T>::as_ref:1.50",
      "has return type",
      "&T:1.50"
    ],
    [
      "Rc<T>::as_ref:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::as_ref:1.50",
      "stable since",
      "1.5.0"
    ],
    [
      "Rc<T>:1.50",
      "stable since",
      "1.9.0"
    ],
    [
      "Display:1.50",
      "has method",
      "std::rc::Rc::fmt:1.50"
    ],
    [
      "Display::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "Display::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Display::fmt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Display::fmt::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "Display::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "Display::fmt::f:1.50",
      "has type",
      "&mut Formatter:1.50"
    ],
    [
      "Display::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "Debug:1.50",
      "has method",
      "std::rc::Rc::fmt:1.50"
    ],
    [
      "Debug::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "Debug::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Debug::fmt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Debug::fmt::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "Debug::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "Debug::fmt::f:1.50",
      "has type",
      "&mut Formatter:1.50"
    ],
    [
      "Debug::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "Pointer:1.50",
      "has method",
      "std::rc::Rc::fmt:1.50"
    ],
    [
      "Pointer::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "Pointer::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Pointer::fmt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Pointer::fmt::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "Pointer::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "Pointer::fmt::f:1.50",
      "has type",
      "&mut Formatter:1.50"
    ],
    [
      "Pointer::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "From:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "From::from:1.50",
      "is a",
      "method"
    ],
    [
      "From::from:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "From::from:1.50",
      "has argument",
      "t:1.50"
    ],
    [
      "From::from::t:1.50",
      "has type",
      "T:1.50"
    ],
    [
      "From::from:1.50",
      "has return type",
      "Rc<T>:1.50"
    ],
    [
      "From::from:1.50",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.50",
      "has method",
      "std::borrow::Borrow::borrow:1.50"
    ],
    [
      "Borrow::borrow:1.50",
      "is a",
      "method"
    ],
    [
      "Borrow::borrow:1.50",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Borrow::borrow:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Borrow::borrow::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "Borrow::borrow:1.50",
      "has return type",
      "&T:1.50"
    ],
    [
      "AsRef:1.50",
      "has method",
      "std::rc::Rc::as_ref:1.50"
    ],
    [
      "AsRef::as_ref:1.50",
      "is a",
      "method"
    ],
    [
      "AsRef::as_ref:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "AsRef::as_ref:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "AsRef::as_ref::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "AsRef::as_ref:1.50",
      "has return type",
      "&T:1.50"
    ],
    [
      "AsRef::as_ref:1.50",
      "stable since",
      "1.5.0"
    ],
    [
      "std::fmt::Formatter:1.50",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Formatter:1.50",
      "has alias",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.50",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Error:1.50",
      "has alias",
      "Error"
    ],
    [
      "std::result::Result:1.50",
      "is a",
      "enum"
    ],
    [
      "std::result::Result:1.50",
      "has alias",
      "Result"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "CoerceUnsized:1.50"
    ],
    [
      "Rc<T>::hash:1.50",
      "has description",
      "Feeds this value into the given [Hasher]."
    ],
    [
      "Rc<T>::hash_slice:1.50",
      "has description",
      "Feeds a slice of this type into the given [Hasher]."
    ],
    [
      "max:1.50",
      "has stability",
      "Unstable (ord_max_min #25663):1.50"
    ],
    [
      "min:1.50",
      "has stability",
      "Unstable (ord_max_min #25663):1.50"
    ],
    [
      "std::rc::Rc::clone:1.50",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "max:1.50"
    ],
    [
      "max:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "min:1.50"
    ],
    [
      "min:1.50",
      "is a",
      "method"
    ],
    [
      "Rc::drop:1.50",
      "has description",
      "Drops the Rc. This will decrement the strong reference count. If the strong reference count reaches zero then the only other references (if any) are Weak, so we drop the inner value."
    ],
    [
      "Rc::clone:1.50",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "Rc::hash:1.50",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Hash:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Ord:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "PartialEq<Rc<T>>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "CoerceUnsized<Rc<U>>:1.50"
    ],
    [
      "Rc<T>::hash:1.50",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>::hash_slice:1.50",
      "has description",
      "Feeds a slice of this type into the given Hasher. Read more"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::cmp:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::eq:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "ne:1.50"
    ],
    [
      "std::rc::Rc::cmp:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::cmp:1.50",
      "has description",
      "Comparison for two Rcs."
    ],
    [
      "std::rc::Rc::cmp:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::rc::Rc::cmp:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::rc::Rc::cmp:1.50",
      "has return type",
      "Ordering:1.50"
    ],
    [
      "std::rc::Rc::eq:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::eq:1.50",
      "has description",
      "Equality for two Rcs."
    ],
    [
      "std::rc::Rc::eq:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::rc::Rc::eq:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::rc::Rc::eq:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "ne:1.50",
      "is a",
      "method"
    ],
    [
      "ne:1.50",
      "has description",
      "Inequality for two Rcs."
    ],
    [
      "ne:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "ne:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "ne:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "From<&str>:1.50"
    ],
    [
      "Rc<str>:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has argument",
      "v:1.50"
    ],
    [
      "from::v:1.50",
      "has type",
      "&str:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has return type",
      "Rc<str>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "From<&[T]>:1.50"
    ],
    [
      "Rc<[T]>:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "from::v:1.50",
      "has type",
      "&[T]:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has return type",
      "Rc<[T]>:1.50"
    ],
    [
      "max:1.50",
      "has description",
      "Compares and returns the maximum of two values."
    ],
    [
      "min:1.50",
      "has description",
      "Compares and returns the minimum of two values."
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "DispatchFromDyn:1.50"
    ],
    [
      "std::rc::Rc::cmp:1.50",
      "has description",
      "Comparison for two Rcs. The two are compared by calling cmp() on their inner values."
    ],
    [
      "std::rc::Rc::eq:1.50",
      "has description",
      "Equality for two Rcs. Two Rcs are equal if their inner values are equal."
    ],
    [
      "ne:1.50",
      "has description",
      "Inequality for two Rcs. Two Rcs are unequal if their inner values are unequal."
    ],
    [
      "std::rc::Rc::as_ptr:1.50",
      "has description",
      "Provides a raw pointer to the data."
    ],
    [
      "std::rc::Rc::as_ptr:1.50",
      "stable since",
      "1.45.0"
    ],
    [
      "Rc::from_raw:1.50",
      "has description",
      "Constructs an Rc<T> from a raw pointer."
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "has description",
      "Creates a new Weak pointer to this allocation."
    ],
    [
      "Rc::downgrade:1.50",
      "has description",
      "Creates a new Weak pointer to this allocation."
    ],
    [
      "std::rc::Rc::as_ptr:1.50",
      "has argument",
      "this:1.50"
    ],
    [
      "as_ptr::this:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "Rc::from:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc::from:1.50",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<Path>:1.50",
      "implements",
      "From<PathBuf>:1.50"
    ],
    [
      "Rc<Path>:1.50",
      "implements",
      "From<&Path>:1.50"
    ],
    [
      "From<PathBuf>::from:1.50",
      "is a",
      "method"
    ],
    [
      "From<&Path>::from:1.50",
      "is a",
      "method"
    ],
    [
      "From<PathBuf>::from:1.50",
      "has argument",
      "s:1.50"
    ],
    [
      "s:1.50",
      "has type",
      "PathBuf:1.50"
    ],
    [
      "From<PathBuf>::from:1.50",
      "has return type",
      "Rc<Path>:1.50"
    ],
    [
      "From<&Path>::from:1.50",
      "has argument",
      "s:1.50"
    ],
    [
      "s:1.50",
      "has type",
      "&Path:1.50"
    ],
    [
      "From<&Path>::from:1.50",
      "has return type",
      "Rc<Path>:1.50"
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "has description",
      "Compares and returns the ordering between self and other."
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "other:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "has return type",
      "Option<Ordering>:1.50"
    ],
    [
      "std::rc::Rc::lt:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::lt:1.50",
      "has description",
      "Less-than comparison for two Rcs."
    ],
    [
      "std::rc::Rc::lt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::rc::Rc::lt:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::rc::Rc::lt:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::rc::Rc::le:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::le:1.50",
      "has description",
      "'Less than or equal to' comparison for two Rcs."
    ],
    [
      "std::rc::Rc::le:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::rc::Rc::le:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::rc::Rc::le:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::rc::Rc::gt:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::gt:1.50",
      "has description",
      "Greater-than comparison for two Rcs."
    ],
    [
      "std::rc::Rc::gt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::rc::Rc::gt:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::rc::Rc::gt:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::rc::Rc::ge:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::ge:1.50",
      "has description",
      "'Greater than or equal to' comparison for two Rcs."
    ],
    [
      "std::rc::Rc::ge:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::rc::Rc::ge:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::rc::Rc::ge:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Default:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "default:1.50"
    ],
    [
      "default:1.50",
      "is a",
      "method"
    ],
    [
      "default:1.50",
      "has description",
      "Creates a new Rc<T> with the Default value for T."
    ],
    [
      "default:1.50",
      "has return type",
      "Rc<T>:1.50"
    ],
    [
      "Rc<OsStr>:1.50",
      "implements",
      "From<OsString>:1.50"
    ],
    [
      "Rc<OsStr>:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has argument",
      "s:1.50"
    ],
    [
      "s:1.50",
      "has type",
      "OsString:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has return type",
      "Rc<OsStr>:1.50"
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "has description",
      "Partial comparison for two Rcs."
    ],
    [
      "std::rc::Rc::le:1.50",
      "has description",
      "Less-than or equal to comparison for two Rcs."
    ],
    [
      "std::rc::Rc::ge:1.50",
      "has description",
      "Greater-than or equal to comparison for two Rcs."
    ],
    [
      "default:1.50",
      "has description",
      "Creates a new Rc<T>, with the Default value for T."
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "FromIterator:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "from_iter:1.50"
    ],
    [
      "from_iter:1.50",
      "is a",
      "method"
    ],
    [
      "from_iter:1.50",
      "has description",
      "Takes each element in the Iterator and collects it into an Rc<[T]>."
    ],
    [
      "std::rc::Rc::lt:1.50",
      "has description",
      "Less-than comparison for two Rcs. The two are compared by calling < on their inner values."
    ],
    [
      "std::rc::Rc::le:1.50",
      "has description",
      "Less than or equal to comparison for two Rcs. The two are compared by calling <= on their inner values."
    ],
    [
      "std::rc::Rc::gt:1.50",
      "has description",
      "Greater-than comparison for two Rcs. The two are compared by calling > on their inner values."
    ],
    [
      "std::rc::Rc::ge:1.50",
      "has description",
      "Greater than or equal to comparison for two Rcs. The two are compared by calling >= on their inner values."
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "has description",
      "Comparison for two Rcs. The two are compared by calling partial_cmp() on their inner values."
    ],
    [
      "partial_cmp::self:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "partial_cmp::other:1.50",
      "has type",
      "&Rc<T>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::clone:1.50"
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "drop:1.50"
    ],
    [
      "drop:1.50",
      "is a",
      "method"
    ],
    [
      "drop:1.50",
      "has description",
      "Drops the Rc. This will decrement the strong reference count. If the strong reference count reaches zero then the only other references (if any) are Weak, so we drop the inner value."
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "DispatchFromDyn:1.50"
    ],
    [
      "Rc<CStr>:1.50",
      "implements",
      "From<&CStr>:1.50"
    ],
    [
      "Rc<str>:1.50",
      "implements",
      "From<&str>:1.50"
    ],
    [
      "Rc<CStr>:1.50",
      "implements",
      "From<CString>:1.50"
    ],
    [
      "Rc<OsStr>:1.50",
      "implements",
      "From<&OsStr>:1.50"
    ],
    [
      "Rc<str>:1.50",
      "implements",
      "From<String>:1.50"
    ],
    [
      "Rc<[T]>:1.50",
      "implements",
      "From<Vec<T>>:1.50"
    ],
    [
      "Rc<B>:1.50",
      "implements",
      "From<Cow<'a, B>>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "PartialOrd<Rc<T>>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::cmp:1.50"
    ],
    [
      "Rc<T>::cmp:1.50",
      "is a",
      "method"
    ],
    [
      "Rc<T>::cmp:1.50",
      "has description",
      "Comparison for two Rcs."
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::lt:1.50"
    ],
    [
      "Rc<T>::lt:1.50",
      "is a",
      "method"
    ],
    [
      "Rc<T>::lt:1.50",
      "has description",
      "Less-than comparison for two Rcs."
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::le:1.50"
    ],
    [
      "Rc<T>::le:1.50",
      "is a",
      "method"
    ],
    [
      "Rc<T>::le:1.50",
      "has description",
      "'Less than or equal to' comparison for two Rcs."
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::gt:1.50"
    ],
    [
      "Rc<T>::gt:1.50",
      "is a",
      "method"
    ],
    [
      "Rc<T>::gt:1.50",
      "has description",
      "Greater-than comparison for two Rcs."
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::ge:1.50"
    ],
    [
      "Rc<T>::ge:1.50",
      "is a",
      "method"
    ],
    [
      "Rc<T>::ge:1.50",
      "has description",
      "'Greater than or equal to' comparison for two Rcs."
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::partial_cmp:1.50"
    ],
    [
      "Rc<T>::partial_cmp:1.50",
      "is a",
      "method"
    ],
    [
      "Rc<T>::partial_cmp:1.50",
      "has description",
      "Partial comparison for two Rcs."
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::fmt:1.50"
    ],
    [
      "Rc<T>::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "Rc<T>::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Rc:1.50",
      "has method",
      "std::rc::Rc::clone:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "From<Box<T>>:1.50"
    ],
    [
      "Rc<[T]>:1.50",
      "implements",
      "FromIterator<T>:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "PartialEq:1.50"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "Unpin:1.50"
    ],
    [
      "Rc<[T]>:1.50",
      "implements",
      "TryFrom<Rc<[T]>>:1.50"
    ],
    [
      "std::rc::Rc::cmp:1.50",
      "has alias",
      "cmp"
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::eq:1.50"
    ],
    [
      "std::rc::Rc::eq:1.50",
      "has alias",
      "eq"
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "has alias",
      "partial_cmp"
    ],
    [
      "std::rc::Rc::lt:1.50",
      "has alias",
      "lt"
    ],
    [
      "std::rc::Rc::le:1.50",
      "has alias",
      "le"
    ],
    [
      "std::rc::Rc::gt:1.50",
      "has alias",
      "gt"
    ],
    [
      "std::rc::Rc::ge:1.50",
      "has alias",
      "ge"
    ],
    [
      "Rc<T>:1.50",
      "has method",
      "std::rc::Rc::hash:1.50"
    ],
    [
      "std::rc::Rc::hash:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::hash:1.50",
      "has alias",
      "hash"
    ],
    [
      "std::rc::Rc::hash:1.50",
      "has argument",
      "state:1.50"
    ],
    [
      "hash::state:1.50",
      "has type",
      "&mut H:1.50"
    ],
    [
      "std::rc::Rc::hash:1.50",
      "has description",
      "Feeds this value into the given Hasher."
    ],
    [
      "std::rc::Rc::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::fmt:1.50",
      "has alias",
      "fmt"
    ],
    [
      "std::rc::Rc::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "fmt::f:1.50",
      "has type",
      "&mut Formatter<'_>:1.50"
    ],
    [
      "std::rc::Rc::fmt:1.50",
      "has return type",
      "Result<(), Error>:1.50"
    ],
    [
      "std::rc::Rc::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Rc::clone:1.50",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same allocation, increasing the strong reference count."
    ],
    [
      "std::rc::Rc::clone:1.50",
      "has alias",
      "clone"
    ],
    [
      "Rc<T>:1.50",
      "implements",
      "From<Box<T, Global>>:1.50"
    ],
    [
      "Rc<[T]>:1.50",
      "implements",
      "From<Vec<T, Global>>:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has description",
      "Converts a PathBuf into an Rc by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<Path>:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has description",
      "Converts a Path into an Rc by copying the Path data into a new Rc buffer."
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&'_ OsStr>:1.50"
    ],
    [
      "std::rc::Rc:1.50",
      "implements",
      "From<&'_ Path>:1.50"
    ],
    [
      "Rc<Path>::from:1.50",
      "has description",
      "Converts a PathBuf into an Rc<Path> by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<OsStr>::from:1.50",
      "has description",
      "Converts a OsString into an Rc<OsStr> without copying or allocating."
    ],
    [
      "Rc<Path>::from:1.50",
      "stable since",
      "1.24.0"
    ],
    [
      "Rc<OsStr>::from:1.50",
      "stable since",
      "1.24.0"
    ],
    [
      "Rc<Path>::from<PathBuf>:1.50",
      "has description",
      "Converts a PathBuf into an Rc by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<Path>::from<&'_ Path>:1.50",
      "has description",
      "Converts a Path into an Rc by copying the Path data into a new Rc buffer."
    ],
    [
      "T:1.50",
      "implements",
      "From<!>:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "From<T>:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "Into<U>:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "TryFrom<U>:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "TryInto<U>:1.50"
    ],
    [
      "T:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "into:1.50",
      "is a",
      "method"
    ],
    [
      "into:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.50",
      "has method",
      "into:1.50"
    ],
    [
      "try_from:1.50",
      "is a",
      "method"
    ],
    [
      "try_from:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.50",
      "has method",
      "try_from:1.50"
    ],
    [
      "try_into:1.50",
      "is a",
      "method"
    ],
    [
      "try_into:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.50",
      "has method",
      "try_into:1.50"
    ],
    [
      "From<!>:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has argument",
      "t:1.50"
    ],
    [
      "t:1.50",
      "has type",
      "!:1.50"
    ],
    [
      "std::convert::From::from:1.50",
      "has return type",
      "T:1.50"
    ],
    [
      "From<T>:1.50",
      "has method",
      "std::convert::From::from:1.50"
    ],
    [
      "Into<U>:1.50",
      "has method",
      "into:1.50"
    ],
    [
      "into:1.50",
      "has return type",
      "U:1.50"
    ],
    [
      "TryFrom<U>:1.50",
      "has associated type",
      "std::fmt::Error:1.50"
    ],
    [
      "std::fmt::Error:1.50",
      "has type",
      "Infallible:1.50"
    ],
    [
      "TryFrom<U>:1.50",
      "has method",
      "try_from:1.50"
    ],
    [
      "try_from:1.50",
      "has argument",
      "value:1.50"
    ],
    [
      "value:1.50",
      "has type",
      "U:1.50"
    ],
    [
      "try_from:1.50",
      "has return type",
      "Result<T, Error>:1.50"
    ],
    [
      "TryInto<U>:1.50",
      "has associated type",
      "std::fmt::Error:1.50"
    ],
    [
      "TryInto<U>:1.50",
      "has method",
      "try_into:1.50"
    ],
    [
      "try_into:1.50",
      "has return type",
      "Result<U, Error>:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "ToString:1.50"
    ],
    [
      "ToString:1.50",
      "has method",
      "to_string:1.50"
    ],
    [
      "to_string:1.50",
      "has return type",
      "String:1.50"
    ],
    [
      "From<!>:1.50",
      "implements",
      "From:1.50"
    ],
    [
      "From<T>:1.50",
      "implements",
      "From:1.50"
    ],
    [
      "from<T>:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "Into<U>:1.50",
      "implements",
      "Into:1.50"
    ],
    [
      "TryFrom<U>:1.50",
      "implements",
      "TryFrom:1.50"
    ],
    [
      "TryFrom<U>::Error:1.50",
      "has type",
      "Infallible:1.50"
    ],
    [
      "TryInto<U>:1.50",
      "implements",
      "TryInto:1.50"
    ],
    [
      "TryInto<U>::Error:1.50",
      "has type",
      "<U as TryFrom<T>>::Error:1.50"
    ],
    [
      "ToOwned:1.50",
      "has method",
      "to_owned:1.50"
    ],
    [
      "to_owned:1.50",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "ToOwned:1.50",
      "has method",
      "clone_into:1.50"
    ],
    [
      "clone_into:1.50",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "to_string:1.50",
      "has description",
      "Converts the given value to a String."
    ],
    [
      "std::rc::Rc:1.60",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.60",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Rc:1.60",
      "has declaration",
      "pub struct Rc<T> where T: ?Sized { // some fields omitted }:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has description",
      "A reference-counted pointer type over an immutable value."
    ],
    [
      "std::rc::Rc::new:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new:1.60",
      "has alias",
      "new"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::new:1.60"
    ],
    [
      "std::rc::Rc::new:1.60",
      "has argument",
      "new::value:1.60"
    ],
    [
      "new::value:1.60",
      "has type",
      "T:1.60"
    ],
    [
      "std::rc::Rc::new:1.60",
      "has return type",
      "Rc<T>:1.60"
    ],
    [
      "std::rc::Rc::new:1.60",
      "has description",
      "Constructs a new Rc<T>."
    ],
    [
      "std::rc::Rc::new:1.60",
      "has example",
      "use std::rc::Rc; let five = Rc::new(5);"
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "has alias",
      "try_unwrap"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::try_unwrap:1.60"
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "has argument",
      "try_unwrap::this:1.60"
    ],
    [
      "try_unwrap::this:1.60",
      "has type",
      "Rc<T>:1.60"
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "has return type",
      "Result<T, Rc<T>>:1.60"
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>. This will succeed even if there are outstanding weak references."
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "has alias",
      "downgrade"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::downgrade:1.60"
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "has argument",
      "downgrade::this:1.60"
    ],
    [
      "downgrade::this:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "has return type",
      "Weak<T>:1.60"
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Deref:1.60"
    ],
    [
      "Deref:1.60",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "deref:1.60"
    ],
    [
      "deref:1.60",
      "has return type",
      "&T:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Clone:1.60"
    ],
    [
      "std::rc::Rc::clone:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::clone:1.60",
      "has description",
      "Makes a clone of the Rc<T>. When you clone an Rc<T>, it will create another pointer to the data and increase the strong reference counter."
    ],
    [
      "would_unwrap:1.60",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.60"
    ],
    [
      "weak_count:1.60",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.60"
    ],
    [
      "strong_count:1.60",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.60"
    ],
    [
      "is_unique:1.60",
      "has stability",
      "Unstable (rc_counts #28356): uniqueness has unclear meaning:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Drop:1.60"
    ],
    [
      "drop:1.60",
      "has description",
      "Drops the Rc<T>. This will decrement the strong reference count. If the strong reference count becomes zero and the only other references are Weak<T> ones, drops the inner value."
    ],
    [
      "std::rc::Rc:1.60",
      "stable since",
      "1.0.0"
    ],
    [
      "std::rc::Rc::new:1.60",
      "is a",
      "function"
    ],
    [
      "std::rc::Rc::new:1.60",
      "has alias",
      "Rc::new"
    ],
    [
      "std::rc::Rc::new:1.60",
      "has argument",
      "value:1.60"
    ],
    [
      "value:1.60",
      "has type",
      "T:1.60"
    ],
    [
      "Rc::try_unwrap:1.60",
      "is a",
      "function"
    ],
    [
      "Rc::try_unwrap:1.60",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::try_unwrap:1.60",
      "has argument",
      "this:1.60"
    ],
    [
      "this:1.60",
      "has type",
      "Rc<T>:1.60"
    ],
    [
      "Rc::try_unwrap:1.60",
      "has return type",
      "Result<T, Rc<T>>:1.60"
    ],
    [
      "Rc::try_unwrap:1.60",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."
    ],
    [
      "Rc::would_unwrap:1.60",
      "is a",
      "function"
    ],
    [
      "Rc::would_unwrap:1.60",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.60"
    ],
    [
      "Rc::would_unwrap:1.60",
      "has description",
      "Checks if Rc::try_unwrap would return Ok."
    ],
    [
      "Rc::downgrade:1.60",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::downgrade:1.60",
      "has return type",
      "Weak<T>:1.60"
    ],
    [
      "Rc::downgrade:1.60",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Clone:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Deref:1.60"
    ],
    [
      "Rc<T>::Deref:1.60",
      "has associated type",
      "Target = T:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Drop:1.60"
    ],
    [
      "Rc<T>:1.60",
      "excludes",
      "Send:1.60"
    ],
    [
      "Rc<T>:1.60",
      "excludes",
      "Sync:1.60"
    ],
    [
      "std::rc:1.60",
      "contains",
      "std::rc::Rc:1.60"
    ],
    [
      "std::rc:1.60",
      "contains",
      "Weak:1.60"
    ],
    [
      "Rc::make_mut:1.60",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::make_mut:1.60",
      "has description",
      "Make a mutable reference into the given Rc<T> by cloning the inner data..."
    ],
    [
      "Rc::get_mut:1.60",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::get_mut:1.60",
      "has description",
      "Returns a mutable reference to the contained value if the Rc<T> is unique."
    ],
    [
      "std::rc::Rc:1.60",
      "has generic parameter",
      "T:1.60"
    ],
    [
      "std::rc::Rc::new:1.60",
      "has argument",
      "value: T:1.60"
    ],
    [
      "Deref for Rc<T>:1.60",
      "has Target type",
      "T:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "PartialEq:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has stability",
      "!Send:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has stability",
      "!Sync:1.60"
    ],
    [
      "std::rc::Rc::new:1.60",
      "has description",
      "Constructs a new Rc<T>"
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference"
    ],
    [
      "std::rc::Rc:1.60",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::into_raw:1.60"
    ],
    [
      "std::rc::Rc::into_raw:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::into_raw:1.60",
      "has alias",
      "into_raw"
    ],
    [
      "std::rc::Rc::into_raw:1.60",
      "has return type",
      "*const T:1.60"
    ],
    [
      "std::rc::Rc::into_raw:1.60",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::from_raw:1.60"
    ],
    [
      "std::rc::Rc::from_raw:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::from_raw:1.60",
      "has alias",
      "from_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.60",
      "has argument",
      "ptr:1.60"
    ],
    [
      "ptr:1.60",
      "has type",
      "*const T:1.60"
    ],
    [
      "std::rc::Rc::from_raw:1.60",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::ptr_eq:1.60"
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "has alias",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "stable since",
      "1.17.0"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Eq:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "PartialOrd:1.60"
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "Rc::downgrade:1.60",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Rc::try_unwrap:1.60",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Weak:1.60",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Rc::into_raw:1.60",
      "has argument",
      "this:1.60"
    ],
    [
      "std::rc::Rc::into_raw:1.60",
      "has description",
      "Consumes the Rc, returning the wrapped pointer."
    ],
    [
      "std::rc::Rc::from_raw:1.60",
      "has return type",
      "Rc<T>:1.60"
    ],
    [
      "std::rc::Rc::from_raw:1.60",
      "has description",
      "Constructs an Rc from a raw pointer."
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "has argument",
      "this:1.60"
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "has description",
      "Returns true if the two Rcs point to the same value"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Eq:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "PartialOrd:1.60"
    ],
    [
      "Rc::try_unwrap:1.60",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference"
    ],
    [
      "Weak:1.60",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "has description",
      "Returns true if the two Rcs point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "weak_count:1.60"
    ],
    [
      "weak_count:1.60",
      "has description",
      "Get the number of weak references to this value."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "strong_count:1.60"
    ],
    [
      "strong_count:1.60",
      "has description",
      "Get the number of strong references to this value."
    ],
    [
      "std::rc::Rc::new:1.60",
      "has description",
      "Constructs a new `Rc<T>`."
    ],
    [
      "Rc::try_unwrap:1.60",
      "has version",
      "1.4.0:1.60"
    ],
    [
      "Rc::try_unwrap:1.60",
      "has description",
      "Returns the contained value, if the `Rc` has exactly one strong reference."
    ],
    [
      "Rc::into_raw:1.60",
      "has version",
      "1.17.0:1.60"
    ],
    [
      "Rc::from_raw:1.60",
      "has feature",
      "unsafe:1.60"
    ],
    [
      "Rc::from_raw:1.60",
      "has version",
      "1.17.0:1.60"
    ],
    [
      "Rc::from_raw:1.60",
      "has description",
      "Constructs an `Rc` from a raw pointer."
    ],
    [
      "Rc::downgrade:1.60",
      "has version",
      "1.4.0:1.60"
    ],
    [
      "Rc::downgrade:1.60",
      "has description",
      "Creates a new `Weak` pointer to this value."
    ],
    [
      "Rc::weak_count:1.60",
      "has version",
      "1.15.0:1.60"
    ],
    [
      "Rc::weak_count:1.60",
      "has description",
      "Gets the number of `Weak` pointers to this value."
    ],
    [
      "Rc::strong_count:1.60",
      "has version",
      "1.15.0:1.60"
    ],
    [
      "Rc::strong_count:1.60",
      "has description",
      "Gets the number of strong (`Rc`) pointers to this value."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "get_mut:1.60"
    ],
    [
      "Rc::get_mut:1.60",
      "has version",
      "1.4.0:1.60"
    ],
    [
      "Rc::get_mut:1.60",
      "has description",
      "Returns a mutable reference to the inner value, if there are no other `Rc` or `Weak` pointers to the same value."
    ],
    [
      "Rc::ptr_eq:1.60",
      "has version",
      "1.17.0:1.60"
    ],
    [
      "Rc::ptr_eq:1.60",
      "has description",
      "Returns true if the two `Rc`s point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "make_mut:1.60"
    ],
    [
      "Rc::make_mut:1.60",
      "has version",
      "1.4.0:1.60"
    ],
    [
      "Rc::make_mut:1.60",
      "has description",
      "Makes a mutable reference into the given `Rc`."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "downcast:1.60"
    ],
    [
      "Rc::downcast:1.60",
      "has version",
      "1.29.0:1.60"
    ],
    [
      "Rc::downcast:1.60",
      "has description",
      "Attempt to downcast the `Rc<Any>` to a concrete type."
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Default:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Borrow<T>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "PartialOrd<Rc<T>>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "AsRef<T>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "!Sync:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "!Send:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Unpin:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Display:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<Vec<T>>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<String>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<T>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&'a str>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&'a [T]>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<Box<T>>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Hash:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Debug:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "CoerceUnsized<Rc<U>>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "PartialEq<Rc<T>>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Pointer:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Ord:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<CString>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&'a CStr>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<OsString>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&'a OsStr>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "UnwindSafe:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<PathBuf>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&'a Path>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::as_ref:1.60"
    ],
    [
      "std::rc::Rc::as_ref:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::as_ref:1.60",
      "has alias",
      "as_ref"
    ],
    [
      "std::rc::Rc::as_ref:1.60",
      "has description",
      "Returns a reference to the inner value."
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "AsRef:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "Borrow:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "CoerceUnsized:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "rc:1.60"
    ],
    [
      "rc:1.60",
      "contains",
      "std::rc::Rc:1.60"
    ],
    [
      "rc:1.60",
      "contains",
      "Weak:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&str>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&CStr>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&OsStr>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&Path>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::partial_cmp:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::lt:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::le:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::gt:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::ge:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::borrow::Borrow::borrow:1.60"
    ],
    [
      "Rc::downcast:1.60",
      "has feature",
      "unsafe:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has description",
      "A single-threaded reference-counted pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "Rc::downcast:1.60",
      "has description",
      "Attempt to downcast the Rc to a concrete type."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::new_uninit:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::pin:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::assume_init:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::get_mut_unchecked:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::into_raw_non_null:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::new_uninit_slice:1.60"
    ],
    [
      "Rc::try_unwrap:1.60",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."
    ],
    [
      "std::rc::Rc::new_uninit:1.60",
      "has stability",
      "Unstable (new_uninit #63291):1.60"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.60",
      "has stability",
      "Unstable (get_mut_unchecked #63291):1.60"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.60",
      "has stability",
      "Unstable (get_mut_unchecked #63292):1.60"
    ],
    [
      "Rc::into_raw_non_null:1.60",
      "has stability",
      "Unstable (rc_into_raw_non_null #47336):1.60"
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "has description",
      "Returns true if the two Rcs point to the same allocation (in a vein similar to ptr::eq)."
    ],
    [
      "Weak:1.60",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed allocation. The allocation is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."
    ],
    [
      "std::rc::Rc::assume_init:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::assume_init:1.60",
      "has alias",
      "assume_init"
    ],
    [
      "std::rc::Rc::assume_init:1.60",
      "has description",
      "Converts to Rc<T>."
    ],
    [
      "std::rc::Rc::assume_init:1.60",
      "has stability",
      "Unstable (new_uninit #63291):1.60"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.60",
      "has alias",
      "get_mut_unchecked"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.60",
      "has alias",
      "into_raw_non_null"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.60",
      "has return type",
      "NonNull<T>:1.60"
    ],
    [
      "std::rc::Rc::new_uninit:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_uninit:1.60",
      "has alias",
      "new_uninit"
    ],
    [
      "std::rc::Rc::new_uninit:1.60",
      "has description",
      "Constructs a new Rc with uninitialized contents."
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.60",
      "has alias",
      "new_uninit_slice"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.60",
      "has description",
      "Constructs a new reference-counted slice with uninitialized contents."
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.60",
      "has stability",
      "Unstable (new_uninit #63291):1.60"
    ],
    [
      "std::rc::Rc::pin:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::pin:1.60",
      "has alias",
      "pin"
    ],
    [
      "std::rc::Rc::pin:1.60",
      "has description",
      "Constructs a new Pin<Rc<T>>."
    ],
    [
      "std::rc::Rc::pin:1.60",
      "stable since",
      "1.33.0"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "FromIterator<T>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "DispatchFromDyn<Rc<U>>:1.60"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.60",
      "has stability",
      "Unstable (rc_into_raw_non_null #47336):1.60"
    ],
    [
      "Rc::ptr_eq:1.60",
      "has description",
      "Returns true if the two Rcs point to the same value (not just values that compare as equal)"
    ],
    [
      "Rc::downgrade:1.60",
      "has description",
      "Creates a new Weak pointer to this allocation"
    ],
    [
      "Rc::get_mut:1.60",
      "has description",
      "Returns a mutable reference into the given Rc if there are no other Rc or Weak pointers to the same allocation"
    ],
    [
      "std::rc::Rc::assume_init:1.60",
      "has description",
      "Converts to Rc<T>"
    ],
    [
      "Rc::assume_init:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::assume_init:1.60",
      "has description",
      "Converts to Rc<T>."
    ],
    [
      "Rc::assume_init:1.60",
      "has feature",
      "unsafe:1.60"
    ],
    [
      "Rc::get_mut_unchecked:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::get_mut_unchecked:1.60",
      "has description",
      "Returns a mutable reference to the inner value if there are no other Rc or Weak pointers to the same value."
    ],
    [
      "Rc::new_uninit:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::new_uninit:1.60",
      "has description",
      "Constructs a new Rc with uninitialized contents."
    ],
    [
      "Rc::new_uninit:1.60",
      "has stability",
      "Unstable (new_uninit #63291):1.60"
    ],
    [
      "Rc::new_uninit_slice:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::new_uninit_slice:1.60",
      "has description",
      "Constructs a new reference-counted slice with uninitialized contents."
    ],
    [
      "Rc::new_uninit_slice:1.60",
      "has stability",
      "Unstable (new_uninit #63291):1.60"
    ],
    [
      "Rc::pin:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::pin:1.60",
      "has return type",
      "Pin<Rc<T>>:1.60"
    ],
    [
      "Rc::pin:1.60",
      "has description",
      "Constructs a new Pin<Rc<T>>. If T does not implement Unpin, then value will be pinned in memory and unable to be moved."
    ],
    [
      "Rc::into_raw_non_null:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::into_raw_non_null:1.60",
      "has return type",
      "NonNull<T>:1.60"
    ],
    [
      "Rc::try_unwrap:1.60",
      "has description",
      "Returns the contained value, if the Rc has exactly one strong reference."
    ],
    [
      "Rc::into_raw_non_null:1.60",
      "has description",
      "Consumes the Rc, returning the wrapped pointer as NonNull<T>."
    ],
    [
      "Rc::get_mut_unchecked:1.60",
      "has feature",
      "unsafe:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::new_cyclic:1.60"
    ],
    [
      "std::rc::Rc::new_cyclic:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_cyclic:1.60",
      "has alias",
      "new_cyclic"
    ],
    [
      "std::rc::Rc::new_cyclic:1.60",
      "has description",
      "Constructs a new Rc<T> using a weak reference to itself. Attempting to upgrade the weak reference before this function returns will result in a None value."
    ],
    [
      "std::rc::Rc::new_cyclic:1.60",
      "has stability",
      "Unstable (arc_new_cyclic #75861):1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::new_zeroed:1.60"
    ],
    [
      "std::rc::Rc::new_zeroed:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_zeroed:1.60",
      "has alias",
      "new_zeroed"
    ],
    [
      "std::rc::Rc::new_zeroed:1.60",
      "has description",
      "Constructs a new Rc with uninitialized contents, with the memory being filled with 0 bytes."
    ],
    [
      "std::rc::Rc::new_zeroed:1.60",
      "has stability",
      "Unstable (new_uninit #63291):1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::new_zeroed_slice:1.60"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.60",
      "has alias",
      "new_zeroed_slice"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.60",
      "has description",
      "Constructs a new reference-counted slice with uninitialized contents, with the memory being filled with 0 bytes."
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.60",
      "has stability",
      "Unstable (new_uninit #63291):1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::as_ptr:1.60"
    ],
    [
      "std::rc::Rc::as_ptr:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::as_ptr:1.60",
      "has alias",
      "as_ptr"
    ],
    [
      "std::rc::Rc::as_ptr:1.60",
      "has return type",
      "*const T:1.60"
    ],
    [
      "std::rc::Rc::new_zeroed:1.60",
      "has return type",
      "Rc<MaybeUninit<T>>:1.60"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.60",
      "has return type",
      "Rc<[MaybeUninit<T>]>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "decrement_strong_count:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "increment_strong_count:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "try_new:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "try_new_uninit:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "try_new_zeroed:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "unwrap_or_clone:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "RefUnwindSafe:1.60"
    ],
    [
      "try_new:1.60",
      "is a",
      "method"
    ],
    [
      "try_new_uninit:1.60",
      "is a",
      "method"
    ],
    [
      "try_new_zeroed:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::try_new:1.60",
      "has description",
      "Constructs a new Rc<T>, returning an error if the allocation fails"
    ],
    [
      "Rc::try_new_uninit:1.60",
      "has description",
      "Constructs a new Rc with uninitialized contents, returning an error if the allocation fails"
    ],
    [
      "Rc::try_new_zeroed:1.60",
      "has description",
      "Constructs a new Rc with uninitialized contents filled with 0 bytes, returning an error if allocation fails"
    ],
    [
      "Rc::decrement_strong_count:1.60",
      "has description",
      "Decrements the strong reference count"
    ],
    [
      "Rc::increment_strong_count:1.60",
      "has description",
      "Increments the strong reference count"
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "has description",
      "Unwraps the value or clones the contained value if there are multiple references"
    ],
    [
      "Rc::try_new:1.60",
      "stable since",
      "nightly"
    ],
    [
      "Rc::try_new_uninit:1.60",
      "stable since",
      "nightly"
    ],
    [
      "Rc::try_new_zeroed:1.60",
      "stable since",
      "nightly"
    ],
    [
      "Rc::decrement_strong_count:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::increment_strong_count:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::try_new:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::try_new_uninit:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::try_new_zeroed:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::new_cyclic:1.60",
      "has description",
      "Constructs a new Rc<T> using a closure data_fn that has access to a weak reference to the constructing Rc<T>"
    ],
    [
      "Rc::try_unwrap:1.60",
      "has description",
      "Returns the inner value, if the Rc has exactly one strong reference"
    ],
    [
      "Rc::try_new_zeroed:1.60",
      "has description",
      "Constructs a new Rc with uninitialized contents filled with 0 bytes, returning an error if the allocation fails"
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "has description",
      "Unwraps the Rc or clones the content if there are multiple references"
    ],
    [
      "Display:1.60",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Display::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::fmt::Display::fmt:1.60"
    ],
    [
      "std::fmt::Display::fmt:1.60",
      "has alias",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Display::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Display::fmt:1.60",
      "has argument",
      "std::fmt::Display::fmt::self:1.60"
    ],
    [
      "std::fmt::Display::fmt::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "std::fmt::Display::fmt:1.60",
      "has argument",
      "std::fmt::Display::fmt::f:1.60"
    ],
    [
      "std::fmt::Display::fmt::f:1.60",
      "has type",
      "&mut Formatter:1.60"
    ],
    [
      "std::fmt::Display::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "Debug:1.60",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Debug::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::fmt::Debug::fmt:1.60"
    ],
    [
      "std::fmt::Debug::fmt:1.60",
      "has alias",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Debug::fmt:1.60",
      "has argument",
      "std::fmt::Debug::fmt::self:1.60"
    ],
    [
      "std::fmt::Debug::fmt::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "std::fmt::Debug::fmt:1.60",
      "has argument",
      "std::fmt::Debug::fmt::f:1.60"
    ],
    [
      "std::fmt::Debug::fmt::f:1.60",
      "has type",
      "&mut Formatter:1.60"
    ],
    [
      "std::fmt::Debug::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "Pointer:1.60",
      "is a",
      "trait"
    ],
    [
      "std::fmt::Pointer::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::fmt::Pointer::fmt:1.60"
    ],
    [
      "std::fmt::Pointer::fmt:1.60",
      "has alias",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Pointer::fmt:1.60",
      "has argument",
      "std::fmt::Pointer::fmt::self:1.60"
    ],
    [
      "std::fmt::Pointer::fmt::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "std::fmt::Pointer::fmt:1.60",
      "has argument",
      "std::fmt::Pointer::fmt::f:1.60"
    ],
    [
      "std::fmt::Pointer::fmt::f:1.60",
      "has type",
      "&mut Formatter:1.60"
    ],
    [
      "std::fmt::Pointer::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "From:1.60",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has alias",
      "from"
    ],
    [
      "std::convert::From::from:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::convert::From::from:1.60",
      "has argument",
      "from::t:1.60"
    ],
    [
      "from::t:1.60",
      "has type",
      "T:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has return type",
      "Rc<T>:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.60",
      "is a",
      "trait"
    ],
    [
      "std::borrow::Borrow::borrow:1.60",
      "is a",
      "method"
    ],
    [
      "std::borrow::Borrow::borrow:1.60",
      "has alias",
      "borrow"
    ],
    [
      "std::borrow::Borrow::borrow:1.60",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "std::borrow::Borrow::borrow:1.60",
      "has argument",
      "borrow::self:1.60"
    ],
    [
      "borrow::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "std::borrow::Borrow::borrow:1.60",
      "has return type",
      "&T:1.60"
    ],
    [
      "AsRef:1.60",
      "is a",
      "trait"
    ],
    [
      "std::convert::AsRef::as_ref:1.60",
      "has alias",
      "as_ref"
    ],
    [
      "std::rc::Rc::as_ref:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::rc::Rc::as_ref:1.60",
      "has argument",
      "as_ref::self:1.60"
    ],
    [
      "as_ref::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "std::rc::Rc::as_ref:1.60",
      "has return type",
      "&T:1.60"
    ],
    [
      "std::rc::Rc::as_ref:1.60",
      "stable since",
      "1.5.0"
    ],
    [
      "UnwindSafe:1.60",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.60",
      "stable since",
      "1.9.0"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Display:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Debug:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Pointer:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "From<T>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Borrow<T>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "AsRef<T>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "UnwindSafe:1.60"
    ],
    [
      "Rc<T>::Display::fmt:1.60",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Display::fmt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "Rc<T>::Display::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "f:1.60",
      "has type",
      "&mut Formatter:1.60"
    ],
    [
      "Rc<T>::Display::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "Rc<T>::Display::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Debug::fmt:1.60",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Debug::fmt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Rc<T>::Debug::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "Rc<T>::Debug::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "Rc<T>::Debug::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Pointer::fmt:1.60",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Pointer::fmt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "self:1.60",
      "has type",
      "Rc<T>:1.60"
    ],
    [
      "Rc<T>::Pointer::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "Rc<T>::Pointer::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "Rc<T>::Pointer::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::from:1.60",
      "is a",
      "function"
    ],
    [
      "Rc<T>::from:1.60",
      "has argument",
      "t:1.60"
    ],
    [
      "t:1.60",
      "has type",
      "T:1.60"
    ],
    [
      "Rc<T>::from:1.60",
      "has return type",
      "Rc<T>:1.60"
    ],
    [
      "Rc<T>::from:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::from:1.60",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<T>::borrow:1.60",
      "is a",
      "function"
    ],
    [
      "Rc<T>::borrow:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Rc<T>::borrow:1.60",
      "has return type",
      "&T:1.60"
    ],
    [
      "Rc<T>::borrow:1.60",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Rc<T>::as_ref:1.60",
      "is a",
      "function"
    ],
    [
      "Rc<T>::as_ref:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Rc<T>::as_ref:1.60",
      "has return type",
      "&T:1.60"
    ],
    [
      "Rc<T>::as_ref:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::as_ref:1.60",
      "stable since",
      "1.5.0"
    ],
    [
      "Rc<T>:1.60",
      "stable since",
      "1.9.0"
    ],
    [
      "Display:1.60",
      "has method",
      "std::rc::Rc::fmt:1.60"
    ],
    [
      "Display::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "Display::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Display::fmt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Display::fmt::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "Display::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "Display::fmt::f:1.60",
      "has type",
      "&mut Formatter:1.60"
    ],
    [
      "Display::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "Debug:1.60",
      "has method",
      "std::rc::Rc::fmt:1.60"
    ],
    [
      "Debug::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "Debug::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Debug::fmt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Debug::fmt::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "Debug::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "Debug::fmt::f:1.60",
      "has type",
      "&mut Formatter:1.60"
    ],
    [
      "Debug::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "Pointer:1.60",
      "has method",
      "std::rc::Rc::fmt:1.60"
    ],
    [
      "Pointer::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "Pointer::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Pointer::fmt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Pointer::fmt::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "Pointer::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "Pointer::fmt::f:1.60",
      "has type",
      "&mut Formatter:1.60"
    ],
    [
      "Pointer::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "From:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "From::from:1.60",
      "is a",
      "method"
    ],
    [
      "From::from:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "From::from:1.60",
      "has argument",
      "t:1.60"
    ],
    [
      "From::from::t:1.60",
      "has type",
      "T:1.60"
    ],
    [
      "From::from:1.60",
      "has return type",
      "Rc<T>:1.60"
    ],
    [
      "From::from:1.60",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.60",
      "has method",
      "std::borrow::Borrow::borrow:1.60"
    ],
    [
      "Borrow::borrow:1.60",
      "is a",
      "method"
    ],
    [
      "Borrow::borrow:1.60",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Borrow::borrow:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Borrow::borrow::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "Borrow::borrow:1.60",
      "has return type",
      "&T:1.60"
    ],
    [
      "AsRef:1.60",
      "has method",
      "std::rc::Rc::as_ref:1.60"
    ],
    [
      "AsRef::as_ref:1.60",
      "is a",
      "method"
    ],
    [
      "AsRef::as_ref:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "AsRef::as_ref:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "AsRef::as_ref::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "AsRef::as_ref:1.60",
      "has return type",
      "&T:1.60"
    ],
    [
      "AsRef::as_ref:1.60",
      "stable since",
      "1.5.0"
    ],
    [
      "std::fmt::Formatter:1.60",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Formatter:1.60",
      "has alias",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.60",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Error:1.60",
      "has alias",
      "Error"
    ],
    [
      "std::result::Result:1.60",
      "is a",
      "enum"
    ],
    [
      "std::result::Result:1.60",
      "has alias",
      "Result"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "CoerceUnsized:1.60"
    ],
    [
      "Rc<T>::hash:1.60",
      "has description",
      "Feeds this value into the given [Hasher]."
    ],
    [
      "Rc<T>::hash_slice:1.60",
      "has description",
      "Feeds a slice of this type into the given [Hasher]."
    ],
    [
      "max:1.60",
      "has stability",
      "Unstable (ord_max_min #25663):1.60"
    ],
    [
      "min:1.60",
      "has stability",
      "Unstable (ord_max_min #25663):1.60"
    ],
    [
      "std::rc::Rc::clone:1.60",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "max:1.60"
    ],
    [
      "max:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "min:1.60"
    ],
    [
      "min:1.60",
      "is a",
      "method"
    ],
    [
      "Rc::drop:1.60",
      "has description",
      "Drops the Rc. This will decrement the strong reference count. If the strong reference count reaches zero then the only other references (if any) are Weak, so we drop the inner value."
    ],
    [
      "Rc::clone:1.60",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "Rc::hash:1.60",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Hash:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Ord:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "PartialEq<Rc<T>>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "CoerceUnsized<Rc<U>>:1.60"
    ],
    [
      "Rc<T>::hash:1.60",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>::hash_slice:1.60",
      "has description",
      "Feeds a slice of this type into the given Hasher. Read more"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::cmp:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::eq:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "ne:1.60"
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "has description",
      "Comparison for two Rcs."
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "has return type",
      "Ordering:1.60"
    ],
    [
      "std::rc::Rc::eq:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::eq:1.60",
      "has description",
      "Equality for two Rcs."
    ],
    [
      "std::rc::Rc::eq:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::rc::Rc::eq:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::rc::Rc::eq:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "ne:1.60",
      "is a",
      "method"
    ],
    [
      "ne:1.60",
      "has description",
      "Inequality for two Rcs."
    ],
    [
      "ne:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "ne:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "ne:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "From<&str>:1.60"
    ],
    [
      "Rc<str>:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has argument",
      "v:1.60"
    ],
    [
      "from::v:1.60",
      "has type",
      "&str:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has return type",
      "Rc<str>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "From<&[T]>:1.60"
    ],
    [
      "Rc<[T]>:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "from::v:1.60",
      "has type",
      "&[T]:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has return type",
      "Rc<[T]>:1.60"
    ],
    [
      "max:1.60",
      "has description",
      "Compares and returns the maximum of two values."
    ],
    [
      "min:1.60",
      "has description",
      "Compares and returns the minimum of two values."
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "DispatchFromDyn:1.60"
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "has description",
      "Comparison for two Rcs. The two are compared by calling cmp() on their inner values."
    ],
    [
      "std::rc::Rc::eq:1.60",
      "has description",
      "Equality for two Rcs. Two Rcs are equal if their inner values are equal."
    ],
    [
      "ne:1.60",
      "has description",
      "Inequality for two Rcs. Two Rcs are unequal if their inner values are unequal."
    ],
    [
      "std::rc::Rc::as_ptr:1.60",
      "has description",
      "Provides a raw pointer to the data."
    ],
    [
      "std::rc::Rc::as_ptr:1.60",
      "stable since",
      "1.45.0"
    ],
    [
      "Rc::from_raw:1.60",
      "has description",
      "Constructs an Rc<T> from a raw pointer."
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "has description",
      "Creates a new Weak pointer to this allocation."
    ],
    [
      "Rc::downgrade:1.60",
      "has description",
      "Creates a new Weak pointer to this allocation."
    ],
    [
      "std::rc::Rc::as_ptr:1.60",
      "has argument",
      "this:1.60"
    ],
    [
      "as_ptr::this:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "std::rc::Rc::assume_init:1.60",
      "has description",
      "Converts to Rc<T> without checking"
    ],
    [
      "std::rc::Rc::assume_init:1.60",
      "has stability",
      "Stable (since 1.60.0):1.60"
    ],
    [
      "Rc::make_mut:1.60",
      "has description",
      "Makes a mutable reference into the given Rc. If there are other Rc pointers to the same allocation, make_mut will clone the inner value to a new allocation to ensure unique ownership (clone-on-write). Weak pointers will be disassociated without cloning if there are no other Rc pointers."
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "has description",
      "Unwraps the value or clones the contained value if there are multiple references."
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "stable since",
      "nightly"
    ],
    [
      "Rc::make_mut:1.60",
      "has description",
      "Makes a mutable reference into the given Rc. If there are other Rc pointers to the same allocation, then make_mut will clone the inner value to a new allocation to ensure unique ownership. This is also referred to as clone-on-write. However, if there are no other Rc pointers to this allocation, but some Weak pointers, then the Weak pointers will be disassociated and the inner value will not be cloned."
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "has description",
      "If we have the only reference to T then unwrap it. Otherwise, clone T and return the clone."
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "stable since",
      "1.69.0"
    ],
    [
      "Rc::increment_strong_count:1.60",
      "has description",
      "Increments the strong reference count on the Rc<T> associated with the provided pointer by one."
    ],
    [
      "Rc::decrement_strong_count:1.60",
      "has description",
      "Decrements the strong reference count on the Rc<T> associated with the provided pointer by one."
    ],
    [
      "Rc::increment_strong_count:1.60",
      "stable since",
      "1.53.0"
    ],
    [
      "Rc::decrement_strong_count:1.60",
      "stable since",
      "1.53.0"
    ],
    [
      "Rc::make_mut:1.60",
      "has description",
      "If there are other Rc pointers to the same allocation, then make_mut will clone the inner value to a new allocation to ensure unique ownership. This is also referred to as clone-on-write.\nHowever, if there are no other Rc pointers to this allocation, but some Weak pointers, then the Weak pointers will be disassociated and the inner value will not be cloned."
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "has alias",
      "Rc::unwrap_or_clone"
    ],
    [
      "Rc::from:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc::from:1.60",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<Path>:1.60",
      "implements",
      "From<PathBuf>:1.60"
    ],
    [
      "Rc<Path>:1.60",
      "implements",
      "From<&Path>:1.60"
    ],
    [
      "From<PathBuf>::from:1.60",
      "is a",
      "method"
    ],
    [
      "From<&Path>::from:1.60",
      "is a",
      "method"
    ],
    [
      "From<PathBuf>::from:1.60",
      "has argument",
      "s:1.60"
    ],
    [
      "s:1.60",
      "has type",
      "PathBuf:1.60"
    ],
    [
      "From<PathBuf>::from:1.60",
      "has return type",
      "Rc<Path>:1.60"
    ],
    [
      "From<&Path>::from:1.60",
      "has argument",
      "s:1.60"
    ],
    [
      "s:1.60",
      "has type",
      "&Path:1.60"
    ],
    [
      "From<&Path>::from:1.60",
      "has return type",
      "Rc<Path>:1.60"
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "has description",
      "Compares and returns the ordering between self and other."
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "other:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "has return type",
      "Option<Ordering>:1.60"
    ],
    [
      "std::rc::Rc::lt:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::lt:1.60",
      "has description",
      "Less-than comparison for two Rcs."
    ],
    [
      "std::rc::Rc::lt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::rc::Rc::lt:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::rc::Rc::lt:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::rc::Rc::le:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::le:1.60",
      "has description",
      "'Less than or equal to' comparison for two Rcs."
    ],
    [
      "std::rc::Rc::le:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::rc::Rc::le:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::rc::Rc::le:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::rc::Rc::gt:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::gt:1.60",
      "has description",
      "Greater-than comparison for two Rcs."
    ],
    [
      "std::rc::Rc::gt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::rc::Rc::gt:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::rc::Rc::gt:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::rc::Rc::ge:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::ge:1.60",
      "has description",
      "'Greater than or equal to' comparison for two Rcs."
    ],
    [
      "std::rc::Rc::ge:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::rc::Rc::ge:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::rc::Rc::ge:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Default:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "default:1.60"
    ],
    [
      "default:1.60",
      "is a",
      "method"
    ],
    [
      "default:1.60",
      "has description",
      "Creates a new Rc<T> with the Default value for T."
    ],
    [
      "default:1.60",
      "has return type",
      "Rc<T>:1.60"
    ],
    [
      "Rc<OsStr>:1.60",
      "implements",
      "From<OsString>:1.60"
    ],
    [
      "Rc<OsStr>:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has argument",
      "s:1.60"
    ],
    [
      "s:1.60",
      "has type",
      "OsString:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has return type",
      "Rc<OsStr>:1.60"
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "has description",
      "Partial comparison for two Rcs."
    ],
    [
      "std::rc::Rc::le:1.60",
      "has description",
      "Less-than or equal to comparison for two Rcs."
    ],
    [
      "std::rc::Rc::ge:1.60",
      "has description",
      "Greater-than or equal to comparison for two Rcs."
    ],
    [
      "default:1.60",
      "has description",
      "Creates a new Rc<T>, with the Default value for T."
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "FromIterator:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "from_iter:1.60"
    ],
    [
      "from_iter:1.60",
      "is a",
      "method"
    ],
    [
      "from_iter:1.60",
      "has description",
      "Takes each element in the Iterator and collects it into an Rc<[T]>."
    ],
    [
      "std::rc::Rc::lt:1.60",
      "has description",
      "Less-than comparison for two Rcs. The two are compared by calling < on their inner values."
    ],
    [
      "std::rc::Rc::le:1.60",
      "has description",
      "Less than or equal to comparison for two Rcs. The two are compared by calling <= on their inner values."
    ],
    [
      "std::rc::Rc::gt:1.60",
      "has description",
      "Greater-than comparison for two Rcs. The two are compared by calling > on their inner values."
    ],
    [
      "std::rc::Rc::ge:1.60",
      "has description",
      "Greater than or equal to comparison for two Rcs. The two are compared by calling >= on their inner values."
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "has description",
      "Comparison for two Rcs. The two are compared by calling partial_cmp() on their inner values."
    ],
    [
      "partial_cmp::self:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "partial_cmp::other:1.60",
      "has type",
      "&Rc<T>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::clone:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "drop:1.60"
    ],
    [
      "drop:1.60",
      "is a",
      "method"
    ],
    [
      "drop:1.60",
      "has description",
      "Drops the Rc. This will decrement the strong reference count. If the strong reference count reaches zero then the only other references (if any) are Weak, so we drop the inner value."
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "DispatchFromDyn:1.60"
    ],
    [
      "Rc<CStr>:1.60",
      "implements",
      "From<&CStr>:1.60"
    ],
    [
      "Rc<str>:1.60",
      "implements",
      "From<&str>:1.60"
    ],
    [
      "Rc<CStr>:1.60",
      "implements",
      "From<CString>:1.60"
    ],
    [
      "Rc<OsStr>:1.60",
      "implements",
      "From<&OsStr>:1.60"
    ],
    [
      "Rc<str>:1.60",
      "implements",
      "From<String>:1.60"
    ],
    [
      "Rc<[T]>:1.60",
      "implements",
      "From<Vec<T>>:1.60"
    ],
    [
      "Rc<B>:1.60",
      "implements",
      "From<Cow<'a, B>>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "PartialOrd<Rc<T>>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::cmp:1.60"
    ],
    [
      "Rc<T>::cmp:1.60",
      "is a",
      "method"
    ],
    [
      "Rc<T>::cmp:1.60",
      "has description",
      "Comparison for two Rcs."
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::lt:1.60"
    ],
    [
      "Rc<T>::lt:1.60",
      "is a",
      "method"
    ],
    [
      "Rc<T>::lt:1.60",
      "has description",
      "Less-than comparison for two Rcs."
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::le:1.60"
    ],
    [
      "Rc<T>::le:1.60",
      "is a",
      "method"
    ],
    [
      "Rc<T>::le:1.60",
      "has description",
      "'Less than or equal to' comparison for two Rcs."
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::gt:1.60"
    ],
    [
      "Rc<T>::gt:1.60",
      "is a",
      "method"
    ],
    [
      "Rc<T>::gt:1.60",
      "has description",
      "Greater-than comparison for two Rcs."
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::ge:1.60"
    ],
    [
      "Rc<T>::ge:1.60",
      "is a",
      "method"
    ],
    [
      "Rc<T>::ge:1.60",
      "has description",
      "'Greater than or equal to' comparison for two Rcs."
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::partial_cmp:1.60"
    ],
    [
      "Rc<T>::partial_cmp:1.60",
      "is a",
      "method"
    ],
    [
      "Rc<T>::partial_cmp:1.60",
      "has description",
      "Partial comparison for two Rcs."
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::fmt:1.60"
    ],
    [
      "Rc<T>::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "Rc<T>::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Rc:1.60",
      "has method",
      "std::rc::Rc::clone:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "From<Box<T>>:1.60"
    ],
    [
      "Rc<[T]>:1.60",
      "implements",
      "FromIterator<T>:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "PartialEq:1.60"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "Unpin:1.60"
    ],
    [
      "Rc<[T]>:1.60",
      "implements",
      "TryFrom<Rc<[T]>>:1.60"
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "has alias",
      "cmp"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::eq:1.60"
    ],
    [
      "std::rc::Rc::eq:1.60",
      "has alias",
      "eq"
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "has alias",
      "partial_cmp"
    ],
    [
      "std::rc::Rc::lt:1.60",
      "has alias",
      "lt"
    ],
    [
      "std::rc::Rc::le:1.60",
      "has alias",
      "le"
    ],
    [
      "std::rc::Rc::gt:1.60",
      "has alias",
      "gt"
    ],
    [
      "std::rc::Rc::ge:1.60",
      "has alias",
      "ge"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "std::rc::Rc::hash:1.60"
    ],
    [
      "std::rc::Rc::hash:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::hash:1.60",
      "has alias",
      "hash"
    ],
    [
      "std::rc::Rc::hash:1.60",
      "has argument",
      "state:1.60"
    ],
    [
      "hash::state:1.60",
      "has type",
      "&mut H:1.60"
    ],
    [
      "std::rc::Rc::hash:1.60",
      "has description",
      "Feeds this value into the given Hasher."
    ],
    [
      "std::rc::Rc::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::fmt:1.60",
      "has alias",
      "fmt"
    ],
    [
      "std::rc::Rc::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "fmt::f:1.60",
      "has type",
      "&mut Formatter<'_>:1.60"
    ],
    [
      "std::rc::Rc::fmt:1.60",
      "has return type",
      "Result<(), Error>:1.60"
    ],
    [
      "std::rc::Rc::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::rc::Rc::clone:1.60",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same allocation, increasing the strong reference count."
    ],
    [
      "std::rc::Rc::clone:1.60",
      "has alias",
      "clone"
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "From<Box<T, Global>>:1.60"
    ],
    [
      "Rc<[T]>:1.60",
      "implements",
      "From<Vec<T, Global>>:1.60"
    ],
    [
      "Rc::from(&'_ [T]):1.60",
      "has description",
      "Allocate a reference-counted slice and fill it by cloning v’s items."
    ],
    [
      "Rc::from(Box<T, Global>):1.60",
      "has description",
      "Move a boxed object to a new, reference counted, allocation."
    ],
    [
      "Rc::from(CString):1.60",
      "has description",
      "Converts a CString into an Rc<CStr> without copying or allocating."
    ],
    [
      "Rc::from(OsString):1.60",
      "has description",
      "Converts an OsString into an Rc<OsStr> without copying or allocating."
    ],
    [
      "Rc::from(PathBuf):1.60",
      "has description",
      "Converts a PathBuf into an Rc<Path> by moving the data into a new Rc buffer."
    ],
    [
      "Rc::from(PathBuf):1.60",
      "stable since",
      "1.24.0"
    ],
    [
      "Rc::from(String):1.60",
      "has description",
      "Allocate a reference-counted string slice and copy v into it."
    ],
    [
      "Rc::from(T):1.60",
      "has description",
      "Converts a generic type T into an Rc<T>."
    ],
    [
      "Rc::from(Vec<T, Global>):1.60",
      "has description",
      "Move a vector's items into a reference-counted slice."
    ],
    [
      "std::convert::From::from:1.60",
      "has description",
      "Converts a PathBuf into an Rc by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<Path>:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has description",
      "Converts a Path into an Rc by copying the Path data into a new Rc buffer."
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&'_ OsStr>:1.60"
    ],
    [
      "std::rc::Rc:1.60",
      "implements",
      "From<&'_ Path>:1.60"
    ],
    [
      "Rc<Path>::from:1.60",
      "has description",
      "Converts a PathBuf into an Rc<Path> by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<OsStr>::from:1.60",
      "has description",
      "Converts a OsString into an Rc<OsStr> without copying or allocating."
    ],
    [
      "Rc<Path>::from:1.60",
      "stable since",
      "1.24.0"
    ],
    [
      "Rc<OsStr>::from:1.60",
      "stable since",
      "1.24.0"
    ],
    [
      "Rc<Path>::from<PathBuf>:1.60",
      "has description",
      "Converts a PathBuf into an Rc by moving the PathBuf data into a new Rc buffer."
    ],
    [
      "Rc<Path>::from<&'_ Path>:1.60",
      "has description",
      "Converts a Path into an Rc by copying the Path data into a new Rc buffer."
    ],
    [
      "T:1.60",
      "implements",
      "From<!>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "From<T>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "Into<U>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "TryFrom<U>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "TryInto<U>:1.60"
    ],
    [
      "T:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "into:1.60",
      "is a",
      "method"
    ],
    [
      "into:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.60",
      "has method",
      "into:1.60"
    ],
    [
      "try_from:1.60",
      "is a",
      "method"
    ],
    [
      "try_from:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.60",
      "has method",
      "try_from:1.60"
    ],
    [
      "try_into:1.60",
      "is a",
      "method"
    ],
    [
      "try_into:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.60",
      "has method",
      "try_into:1.60"
    ],
    [
      "From<!>:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has argument",
      "t:1.60"
    ],
    [
      "t:1.60",
      "has type",
      "!:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has return type",
      "T:1.60"
    ],
    [
      "From<T>:1.60",
      "has method",
      "std::convert::From::from:1.60"
    ],
    [
      "Into<U>:1.60",
      "has method",
      "into:1.60"
    ],
    [
      "into:1.60",
      "has return type",
      "U:1.60"
    ],
    [
      "TryFrom<U>:1.60",
      "has associated type",
      "std::fmt::Error:1.60"
    ],
    [
      "std::fmt::Error:1.60",
      "has type",
      "Infallible:1.60"
    ],
    [
      "TryFrom<U>:1.60",
      "has method",
      "try_from:1.60"
    ],
    [
      "try_from:1.60",
      "has argument",
      "value:1.60"
    ],
    [
      "value:1.60",
      "has type",
      "U:1.60"
    ],
    [
      "try_from:1.60",
      "has return type",
      "Result<T, Error>:1.60"
    ],
    [
      "TryInto<U>:1.60",
      "has associated type",
      "std::fmt::Error:1.60"
    ],
    [
      "TryInto<U>:1.60",
      "has method",
      "try_into:1.60"
    ],
    [
      "try_into:1.60",
      "has return type",
      "Result<U, Error>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "ToString:1.60"
    ],
    [
      "ToString:1.60",
      "has method",
      "to_string:1.60"
    ],
    [
      "to_string:1.60",
      "has return type",
      "String:1.60"
    ],
    [
      "From<!>:1.60",
      "implements",
      "From:1.60"
    ],
    [
      "From<T>:1.60",
      "implements",
      "From:1.60"
    ],
    [
      "from<T>:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "Into<U>:1.60",
      "implements",
      "Into:1.60"
    ],
    [
      "TryFrom<U>:1.60",
      "implements",
      "TryFrom:1.60"
    ],
    [
      "TryFrom<U>::Error:1.60",
      "has type",
      "Infallible:1.60"
    ],
    [
      "TryInto<U>:1.60",
      "implements",
      "TryInto:1.60"
    ],
    [
      "TryInto<U>::Error:1.60",
      "has type",
      "<U as TryFrom<T>>::Error:1.60"
    ],
    [
      "ToOwned:1.60",
      "has method",
      "to_owned:1.60"
    ],
    [
      "to_owned:1.60",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "ToOwned:1.60",
      "has method",
      "clone_into:1.60"
    ],
    [
      "clone_into:1.60",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "to_string:1.60",
      "has description",
      "Converts the given value to a String."
    ],
    [
      "Rc<T>:1.60",
      "implements",
      "RefUnwindSafe:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "decrement_strong_count:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "increment_strong_count:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "try_new:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "try_new_uninit:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "try_new_zeroed:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "unwrap_or_clone:1.60"
    ],
    [
      "From<!>::from:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "From<T>::from:1.60",
      "has description",
      "Returns the argument unchanged."
    ],
    [
      "Into<U>::into:1.60",
      "has description",
      "Calls U::from(self). That is, this conversion is whatever the implementation of From<T> for U chooses to do."
    ],
    [
      "Borrow<T>::borrow:1.60",
      "has feature",
      "const unstable:1.60"
    ],
    [
      "BorrowMut<T>::borrow_mut:1.60",
      "has feature",
      "const unstable:1.60"
    ],
    [
      "From<!>::from:1.60",
      "has feature",
      "const unstable:1.60"
    ],
    [
      "From<T>::from:1.60",
      "has feature",
      "const unstable:1.60"
    ],
    [
      "Into<U>::into:1.60",
      "has feature",
      "const unstable:1.60"
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "has description",
      "Compares and returns the ordering between self and other."
    ],
    [
      "std::rc::Rc::le:1.60",
      "has description",
      "'Less than or equal to' comparison for two Rcs. The two are compared by calling <= on their inner values."
    ],
    [
      "std::rc::Rc::ge:1.60",
      "has description",
      "'Greater than or equal to' comparison for two Rcs. The two are compared by calling >= on their inner values."
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "has description",
      "Partial comparison for two Rcs. The two are compared by calling partial_cmp() on their inner values."
    ],
    [
      "std::convert::From::from:1.60",
      "has description",
      "Calls U::from(self)."
    ],
    [
      "into:1.60",
      "has description",
      "Calls U::from(self)."
    ],
    [
      "T:1.60",
      "implements",
      "Borrow<T>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "BorrowMut<T>:1.60"
    ],
    [
      "Borrow<T>:1.60",
      "has method",
      "std::borrow::Borrow::borrow:1.60"
    ],
    [
      "BorrowMut<T>:1.60",
      "has method",
      "borrow_mut:1.60"
    ],
    [
      "borrow_mut:1.60",
      "has return type",
      "&mut T:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "max:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "min:1.60"
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "clamp:1.60"
    ],
    [
      "clamp:1.60",
      "has description",
      "Restrict a value to a certain interval."
    ],
    [
      "std::rc::Rc::eq:1.60",
      "has description",
      "Equality for two Rcs. Two Rcs are equal if their inner values are equal, even if stored in different allocations."
    ],
    [
      "Rc<T>:1.60",
      "has method",
      "ne:1.60"
    ],
    [
      "std::convert::From::from:1.60",
      "has description",
      "Returns the argument unchanged."
    ],
    [
      "std::rc::Rc:1.20",
      "is a",
      "struct"
    ],
    [
      "std::rc::Rc:1.20",
      "has alias",
      "Rc"
    ],
    [
      "std::rc::Rc:1.20",
      "has declaration",
      "pub struct Rc<T> where T: ?Sized { // some fields omitted }:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "has description",
      "A reference-counted pointer type over an immutable value."
    ],
    [
      "std::rc::Rc::new:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::new:1.20",
      "has alias",
      "new"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::rc::Rc::new:1.20"
    ],
    [
      "std::rc::Rc::new:1.20",
      "has argument",
      "new::value:1.20"
    ],
    [
      "new::value:1.20",
      "has type",
      "T:1.20"
    ],
    [
      "std::rc::Rc::new:1.20",
      "has return type",
      "Rc<T>:1.20"
    ],
    [
      "std::rc::Rc::new:1.20",
      "has description",
      "Constructs a new Rc<T>."
    ],
    [
      "std::rc::Rc::new:1.20",
      "has example",
      "use std::rc::Rc; let five = Rc::new(5);"
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "has alias",
      "try_unwrap"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::rc::Rc::try_unwrap:1.20"
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "has argument",
      "try_unwrap::this:1.20"
    ],
    [
      "try_unwrap::this:1.20",
      "has type",
      "Rc<T>:1.20"
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "has return type",
      "Result<T, Rc<T>>:1.20"
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>. This will succeed even if there are outstanding weak references."
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc::downgrade:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::downgrade:1.20",
      "has alias",
      "downgrade"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::rc::Rc::downgrade:1.20"
    ],
    [
      "std::rc::Rc::downgrade:1.20",
      "has argument",
      "downgrade::this:1.20"
    ],
    [
      "downgrade::this:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "std::rc::Rc::downgrade:1.20",
      "has return type",
      "Weak<T>:1.20"
    ],
    [
      "std::rc::Rc::downgrade:1.20",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "std::rc::Rc::downgrade:1.20",
      "stable since",
      "1.4.0"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "Deref:1.20"
    ],
    [
      "Deref:1.20",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "deref:1.20"
    ],
    [
      "deref:1.20",
      "has return type",
      "&T:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "Clone:1.20"
    ],
    [
      "clone:1.20",
      "is a",
      "method"
    ],
    [
      "clone:1.20",
      "has description",
      "Makes a clone of the Rc<T>. When you clone an Rc<T>, it will create another pointer to the data and increase the strong reference counter."
    ],
    [
      "would_unwrap:1.20",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.20"
    ],
    [
      "weak_count:1.20",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.20"
    ],
    [
      "strong_count:1.20",
      "has stability",
      "Unstable (rc_counts #28356): not clearly useful:1.20"
    ],
    [
      "is_unique:1.20",
      "has stability",
      "Unstable (rc_counts #28356): uniqueness has unclear meaning:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "Drop:1.20"
    ],
    [
      "drop:1.20",
      "has description",
      "Drops the Rc<T>. This will decrement the strong reference count. If the strong reference count becomes zero and the only other references are Weak<T> ones, drops the inner value."
    ],
    [
      "std::rc::Rc:1.20",
      "stable since",
      "1.0.0"
    ],
    [
      "std::rc::Rc::new:1.20",
      "is a",
      "function"
    ],
    [
      "std::rc::Rc::new:1.20",
      "has alias",
      "Rc::new"
    ],
    [
      "std::rc::Rc::new:1.20",
      "has argument",
      "value:1.20"
    ],
    [
      "value:1.20",
      "has type",
      "T:1.20"
    ],
    [
      "Rc::try_unwrap:1.20",
      "is a",
      "function"
    ],
    [
      "Rc::try_unwrap:1.20",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::try_unwrap:1.20",
      "has argument",
      "this:1.20"
    ],
    [
      "this:1.20",
      "has type",
      "Rc<T>:1.20"
    ],
    [
      "Rc::try_unwrap:1.20",
      "has return type",
      "Result<T, Rc<T>>:1.20"
    ],
    [
      "Rc::try_unwrap:1.20",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference. Otherwise, an Err is returned with the same Rc<T>."
    ],
    [
      "Rc::would_unwrap:1.20",
      "is a",
      "function"
    ],
    [
      "Rc::would_unwrap:1.20",
      "has stability",
      "Unstable (rc_would_unwrap #28356): just added for niche usecase:1.20"
    ],
    [
      "Rc::would_unwrap:1.20",
      "has description",
      "Checks if Rc::try_unwrap would return Ok."
    ],
    [
      "Rc::downgrade:1.20",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::downgrade:1.20",
      "has return type",
      "Weak<T>:1.20"
    ],
    [
      "Rc::downgrade:1.20",
      "has description",
      "Downgrades the Rc<T> to a Weak<T> reference."
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Clone:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Deref:1.20"
    ],
    [
      "Rc<T>::Deref:1.20",
      "has associated type",
      "Target = T:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Drop:1.20"
    ],
    [
      "Rc<T>:1.20",
      "excludes",
      "Send:1.20"
    ],
    [
      "Rc<T>:1.20",
      "excludes",
      "Sync:1.20"
    ],
    [
      "std::rc:1.20",
      "contains",
      "std::rc::Rc:1.20"
    ],
    [
      "std::rc:1.20",
      "contains",
      "Weak:1.20"
    ],
    [
      "Rc::make_mut:1.20",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::make_mut:1.20",
      "has description",
      "Make a mutable reference into the given Rc<T> by cloning the inner data..."
    ],
    [
      "Rc::get_mut:1.20",
      "stable since",
      "1.4.0"
    ],
    [
      "Rc::get_mut:1.20",
      "has description",
      "Returns a mutable reference to the contained value if the Rc<T> is unique."
    ],
    [
      "std::rc::Rc:1.20",
      "has generic parameter",
      "T:1.20"
    ],
    [
      "std::rc::Rc::new:1.20",
      "has argument",
      "value: T:1.20"
    ],
    [
      "Deref for Rc<T>:1.20",
      "has Target type",
      "T:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "PartialEq:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "has stability",
      "!Send:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "has stability",
      "!Sync:1.20"
    ],
    [
      "std::rc::Rc::new:1.20",
      "has description",
      "Constructs a new Rc<T>"
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "has description",
      "Unwraps the contained value if the Rc<T> has exactly one strong reference"
    ],
    [
      "std::rc::Rc:1.20",
      "has description",
      "A single-threaded reference-counting pointer. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::rc::Rc::into_raw:1.20"
    ],
    [
      "std::rc::Rc::into_raw:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::into_raw:1.20",
      "has alias",
      "into_raw"
    ],
    [
      "std::rc::Rc::into_raw:1.20",
      "has return type",
      "*const T:1.20"
    ],
    [
      "std::rc::Rc::into_raw:1.20",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::rc::Rc::from_raw:1.20"
    ],
    [
      "std::rc::Rc::from_raw:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::from_raw:1.20",
      "has alias",
      "from_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.20",
      "has argument",
      "ptr:1.20"
    ],
    [
      "ptr:1.20",
      "has type",
      "*const T:1.20"
    ],
    [
      "std::rc::Rc::from_raw:1.20",
      "stable since",
      "1.17.0"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::rc::Rc::ptr_eq:1.20"
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "has alias",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "stable since",
      "1.17.0"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Eq:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "PartialOrd:1.20"
    ],
    [
      "std::rc::Rc::downgrade:1.20",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "Rc::downgrade:1.20",
      "has description",
      "Creates a new Weak pointer to this value."
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Rc::try_unwrap:1.20",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference."
    ],
    [
      "Weak:1.20",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value."
    ],
    [
      "std::rc::Rc::into_raw:1.20",
      "has argument",
      "this:1.20"
    ],
    [
      "std::rc::Rc::into_raw:1.20",
      "has description",
      "Consumes the Rc, returning the wrapped pointer."
    ],
    [
      "std::rc::Rc::from_raw:1.20",
      "has return type",
      "Rc<T>:1.20"
    ],
    [
      "std::rc::Rc::from_raw:1.20",
      "has description",
      "Constructs an Rc from a raw pointer."
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "has argument",
      "this:1.20"
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "has description",
      "Returns true if the two Rcs point to the same value"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "Eq:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "PartialOrd:1.20"
    ],
    [
      "Rc::try_unwrap:1.20",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference"
    ],
    [
      "Weak:1.20",
      "has description",
      "`Weak` is a version of [`Rc`] that holds a non-owning reference to the managed value. The value is accessed by calling [`upgrade`] on the `Weak` pointer, which returns an [`Option`]`<`[`Rc`]`<T>>`."
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "has description",
      "Returns true if the two Rcs point to the same value (not just values that compare as equal)."
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "has description",
      "Returns the contained value if the Rc has exactly one strong reference. Otherwise, an Err is returned with the same Rc."
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "weak_count:1.20"
    ],
    [
      "weak_count:1.20",
      "has description",
      "Get the number of weak references to this value."
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "strong_count:1.20"
    ],
    [
      "strong_count:1.20",
      "has description",
      "Get the number of strong references to this value."
    ],
    [
      "Display:1.20",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "Display:1.20"
    ],
    [
      "std::fmt::Display::fmt:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::fmt::Display::fmt:1.20"
    ],
    [
      "std::fmt::Display::fmt:1.20",
      "has alias",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Display::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Display::fmt:1.20",
      "has argument",
      "std::fmt::Display::fmt::self:1.20"
    ],
    [
      "std::fmt::Display::fmt::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "std::fmt::Display::fmt:1.20",
      "has argument",
      "std::fmt::Display::fmt::f:1.20"
    ],
    [
      "std::fmt::Display::fmt::f:1.20",
      "has type",
      "&mut Formatter:1.20"
    ],
    [
      "std::fmt::Display::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "Debug:1.20",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "Debug:1.20"
    ],
    [
      "std::fmt::Debug::fmt:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::fmt::Debug::fmt:1.20"
    ],
    [
      "std::fmt::Debug::fmt:1.20",
      "has alias",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Debug::fmt:1.20",
      "has argument",
      "std::fmt::Debug::fmt::self:1.20"
    ],
    [
      "std::fmt::Debug::fmt::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "std::fmt::Debug::fmt:1.20",
      "has argument",
      "std::fmt::Debug::fmt::f:1.20"
    ],
    [
      "std::fmt::Debug::fmt::f:1.20",
      "has type",
      "&mut Formatter:1.20"
    ],
    [
      "std::fmt::Debug::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "Pointer:1.20",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "Pointer:1.20"
    ],
    [
      "std::fmt::Pointer::fmt:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::fmt::Pointer::fmt:1.20"
    ],
    [
      "std::fmt::Pointer::fmt:1.20",
      "has alias",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "std::fmt::Pointer::fmt:1.20",
      "has argument",
      "std::fmt::Pointer::fmt::self:1.20"
    ],
    [
      "std::fmt::Pointer::fmt::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "std::fmt::Pointer::fmt:1.20",
      "has argument",
      "std::fmt::Pointer::fmt::f:1.20"
    ],
    [
      "std::fmt::Pointer::fmt::f:1.20",
      "has type",
      "&mut Formatter:1.20"
    ],
    [
      "std::fmt::Pointer::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "From:1.20",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "From:1.20"
    ],
    [
      "std::convert::From::from:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::convert::From::from:1.20"
    ],
    [
      "std::convert::From::from:1.20",
      "has alias",
      "from"
    ],
    [
      "std::convert::From::from:1.20",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::convert::From::from:1.20",
      "has argument",
      "from::t:1.20"
    ],
    [
      "from::t:1.20",
      "has type",
      "T:1.20"
    ],
    [
      "std::convert::From::from:1.20",
      "has return type",
      "Rc<T>:1.20"
    ],
    [
      "std::convert::From::from:1.20",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.20",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "Borrow:1.20"
    ],
    [
      "std::borrow::Borrow::borrow:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::borrow::Borrow::borrow:1.20"
    ],
    [
      "std::borrow::Borrow::borrow:1.20",
      "has alias",
      "borrow"
    ],
    [
      "std::borrow::Borrow::borrow:1.20",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "std::borrow::Borrow::borrow:1.20",
      "has argument",
      "borrow::self:1.20"
    ],
    [
      "borrow::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "std::borrow::Borrow::borrow:1.20",
      "has return type",
      "&T:1.20"
    ],
    [
      "AsRef:1.20",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "AsRef:1.20"
    ],
    [
      "std::convert::AsRef::as_ref:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "std::convert::AsRef::as_ref:1.20"
    ],
    [
      "std::convert::AsRef::as_ref:1.20",
      "has alias",
      "as_ref"
    ],
    [
      "std::convert::AsRef::as_ref:1.20",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::convert::AsRef::as_ref:1.20",
      "has argument",
      "as_ref::self:1.20"
    ],
    [
      "as_ref::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "std::convert::AsRef::as_ref:1.20",
      "has return type",
      "&T:1.20"
    ],
    [
      "std::convert::AsRef::as_ref:1.20",
      "stable since",
      "1.5.0"
    ],
    [
      "UnwindSafe:1.20",
      "is a",
      "trait"
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "UnwindSafe:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "stable since",
      "1.9.0"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Display:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Debug:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Pointer:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "From<T>:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Borrow<T>:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "AsRef<T>:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "UnwindSafe:1.20"
    ],
    [
      "Rc<T>::Display::fmt:1.20",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Display::fmt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "Rc<T>::Display::fmt:1.20",
      "has argument",
      "f:1.20"
    ],
    [
      "f:1.20",
      "has type",
      "&mut Formatter:1.20"
    ],
    [
      "Rc<T>::Display::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "Rc<T>::Display::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Debug::fmt:1.20",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Debug::fmt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "Rc<T>::Debug::fmt:1.20",
      "has argument",
      "f:1.20"
    ],
    [
      "Rc<T>::Debug::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "Rc<T>::Debug::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::Pointer::fmt:1.20",
      "is a",
      "function"
    ],
    [
      "Rc<T>::Pointer::fmt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "self:1.20",
      "has type",
      "Rc<T>:1.20"
    ],
    [
      "Rc<T>::Pointer::fmt:1.20",
      "has argument",
      "f:1.20"
    ],
    [
      "Rc<T>::Pointer::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "Rc<T>::Pointer::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Rc<T>::from:1.20",
      "is a",
      "function"
    ],
    [
      "Rc<T>::from:1.20",
      "has argument",
      "t:1.20"
    ],
    [
      "t:1.20",
      "has type",
      "T:1.20"
    ],
    [
      "Rc<T>::from:1.20",
      "has return type",
      "Rc<T>:1.20"
    ],
    [
      "Rc<T>::from:1.20",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::from:1.20",
      "stable since",
      "1.6.0"
    ],
    [
      "Rc<T>::borrow:1.20",
      "is a",
      "function"
    ],
    [
      "Rc<T>::borrow:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "Rc<T>::borrow:1.20",
      "has return type",
      "&T:1.20"
    ],
    [
      "Rc<T>::borrow:1.20",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Rc<T>::as_ref:1.20",
      "is a",
      "function"
    ],
    [
      "Rc<T>::as_ref:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "Rc<T>::as_ref:1.20",
      "has return type",
      "&T:1.20"
    ],
    [
      "Rc<T>::as_ref:1.20",
      "has description",
      "Performs the conversion."
    ],
    [
      "Rc<T>::as_ref:1.20",
      "stable since",
      "1.5.0"
    ],
    [
      "Rc<T>:1.20",
      "stable since",
      "1.9.0"
    ],
    [
      "Display:1.20",
      "has method",
      "fmt:1.20"
    ],
    [
      "Display::fmt:1.20",
      "is a",
      "method"
    ],
    [
      "Display::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Display::fmt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "Display::fmt::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "Display::fmt:1.20",
      "has argument",
      "f:1.20"
    ],
    [
      "Display::fmt::f:1.20",
      "has type",
      "&mut Formatter:1.20"
    ],
    [
      "Display::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "Debug:1.20",
      "has method",
      "fmt:1.20"
    ],
    [
      "Debug::fmt:1.20",
      "is a",
      "method"
    ],
    [
      "Debug::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Debug::fmt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "Debug::fmt::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "Debug::fmt:1.20",
      "has argument",
      "f:1.20"
    ],
    [
      "Debug::fmt::f:1.20",
      "has type",
      "&mut Formatter:1.20"
    ],
    [
      "Debug::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "Pointer:1.20",
      "has method",
      "fmt:1.20"
    ],
    [
      "Pointer::fmt:1.20",
      "is a",
      "method"
    ],
    [
      "Pointer::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "Pointer::fmt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "Pointer::fmt::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "Pointer::fmt:1.20",
      "has argument",
      "f:1.20"
    ],
    [
      "Pointer::fmt::f:1.20",
      "has type",
      "&mut Formatter:1.20"
    ],
    [
      "Pointer::fmt:1.20",
      "has return type",
      "Result<(), Error>:1.20"
    ],
    [
      "From:1.20",
      "has method",
      "std::convert::From::from:1.20"
    ],
    [
      "From::from:1.20",
      "is a",
      "method"
    ],
    [
      "From::from:1.20",
      "has description",
      "Performs the conversion."
    ],
    [
      "From::from:1.20",
      "has argument",
      "t:1.20"
    ],
    [
      "From::from::t:1.20",
      "has type",
      "T:1.20"
    ],
    [
      "From::from:1.20",
      "has return type",
      "Rc<T>:1.20"
    ],
    [
      "From::from:1.20",
      "stable since",
      "1.6.0"
    ],
    [
      "Borrow:1.20",
      "has method",
      "std::borrow::Borrow::borrow:1.20"
    ],
    [
      "Borrow::borrow:1.20",
      "is a",
      "method"
    ],
    [
      "Borrow::borrow:1.20",
      "has description",
      "Immutably borrows from an owned value."
    ],
    [
      "Borrow::borrow:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "Borrow::borrow::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "Borrow::borrow:1.20",
      "has return type",
      "&T:1.20"
    ],
    [
      "AsRef:1.20",
      "has method",
      "std::convert::AsRef::as_ref:1.20"
    ],
    [
      "AsRef::as_ref:1.20",
      "is a",
      "method"
    ],
    [
      "AsRef::as_ref:1.20",
      "has description",
      "Performs the conversion."
    ],
    [
      "AsRef::as_ref:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "AsRef::as_ref::self:1.20",
      "has type",
      "&Rc<T>:1.20"
    ],
    [
      "AsRef::as_ref:1.20",
      "has return type",
      "&T:1.20"
    ],
    [
      "AsRef::as_ref:1.20",
      "stable since",
      "1.5.0"
    ],
    [
      "std::fmt::Formatter:1.20",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Formatter:1.20",
      "has alias",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.20",
      "is a",
      "struct"
    ],
    [
      "std::fmt::Error:1.20",
      "has alias",
      "Error"
    ],
    [
      "std::result::Result:1.20",
      "is a",
      "enum"
    ],
    [
      "std::result::Result:1.20",
      "has alias",
      "Result"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "CoerceUnsized:1.20"
    ],
    [
      "Rc<T>::hash:1.20",
      "has description",
      "Feeds this value into the given [Hasher]."
    ],
    [
      "Rc<T>::hash_slice:1.20",
      "has description",
      "Feeds a slice of this type into the given [Hasher]."
    ],
    [
      "max:1.20",
      "has stability",
      "Unstable (ord_max_min #25663):1.20"
    ],
    [
      "min:1.20",
      "has stability",
      "Unstable (ord_max_min #25663):1.20"
    ],
    [
      "clone:1.20",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "std::rc::Rc:1.20",
      "implements",
      "CoerceUnsized:1.20"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "max:1.20"
    ],
    [
      "max:1.20",
      "is a",
      "method"
    ],
    [
      "std::rc::Rc:1.20",
      "has method",
      "min:1.20"
    ],
    [
      "min:1.20",
      "is a",
      "method"
    ],
    [
      "Rc::drop:1.20",
      "has description",
      "Drops the Rc. This will decrement the strong reference count. If the strong reference count reaches zero then the only other references (if any) are Weak, so we drop the inner value."
    ],
    [
      "Rc::clone:1.20",
      "has description",
      "Makes a clone of the Rc pointer. This creates another pointer to the same inner value, increasing the strong reference count."
    ],
    [
      "Rc::hash:1.20",
      "has description",
      "Feeds this value into the given Hasher. Read more"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Hash:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "Ord:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "PartialEq<Rc<T>>:1.20"
    ],
    [
      "Rc<T>:1.20",
      "implements",
      "CoerceUnsized<Rc<U>>:1.20"
    ],
    [
      "std::option:1.10",
      "contains",
      "std::option::IntoIter:1.10"
    ],
    [
      "std::option:1.10",
      "contains",
      "std::option::Iter:1.10"
    ],
    [
      "std::option:1.10",
      "contains",
      "std::option::IterMut:1.10"
    ],
    [
      "std::option:1.10",
      "contains",
      "std::option::Option:1.10"
    ],
    [
      "std::option::IntoIter:1.10",
      "is a",
      "struct"
    ],
    [
      "std::option::IntoIter:1.10",
      "has alias",
      "IntoIter"
    ],
    [
      "std::option::Iter:1.10",
      "is a",
      "struct"
    ],
    [
      "std::option::Iter:1.10",
      "has alias",
      "Iter"
    ],
    [
      "std::option::IterMut:1.10",
      "is a",
      "struct"
    ],
    [
      "std::option::IterMut:1.10",
      "has alias",
      "IterMut"
    ],
    [
      "std::option::Option:1.10",
      "is a",
      "enum"
    ],
    [
      "std::option::Option:1.10",
      "has alias",
      "Option"
    ],
    [
      "std::option::Option:1.10",
      "stable since",
      "1.0.0"
    ],
    [
      "std::option::Option:1.10",
      "has description",
      "The `Option` type. See the module level documentation for more."
    ],
    [
      "std::option::Option:1.10",
      "has variant",
      "None:1.10"
    ],
    [
      "None:1.10",
      "has description",
      "No value"
    ],
    [
      "std::option::Option:1.10",
      "has variant",
      "Some:1.10"
    ],
    [
      "Some:1.10",
      "has description",
      "Some value T"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::is_some:1.10"
    ],
    [
      "std::option::Option::is_some:1.10",
      "has alias",
      "is_some"
    ],
    [
      "std::option::Option::is_some:1.10",
      "returns",
      "bool:1.10"
    ],
    [
      "std::option::Option::is_some:1.10",
      "has description",
      "Returns true if the option is a Some value"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::is_none:1.10"
    ],
    [
      "std::option::Option::is_none:1.10",
      "has alias",
      "is_none"
    ],
    [
      "std::option::Option::is_none:1.10",
      "returns",
      "bool:1.10"
    ],
    [
      "std::option::Option::is_none:1.10",
      "has description",
      "Returns true if the option is a None value"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::as_ref:1.10"
    ],
    [
      "std::option::Option::as_ref:1.10",
      "has alias",
      "as_ref"
    ],
    [
      "std::option::Option::as_ref:1.10",
      "returns",
      "Option<&T>:1.10"
    ],
    [
      "std::option::Option::as_ref:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "as_ref::self:1.10",
      "has type",
      "&self:1.10"
    ],
    [
      "std::option::Option::as_ref:1.10",
      "has description",
      "Converts from Option<T> to Option<&T>"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::as_mut:1.10"
    ],
    [
      "std::option::Option::as_mut:1.10",
      "has alias",
      "as_mut"
    ],
    [
      "std::option::Option::as_mut:1.10",
      "returns",
      "Option<&mut T>:1.10"
    ],
    [
      "std::option::Option::as_mut:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "as_mut::self:1.10",
      "has type",
      "&mut self:1.10"
    ],
    [
      "std::option::Option::as_mut:1.10",
      "has description",
      "Converts from Option<T> to Option<&mut T>"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::expect:1.10"
    ],
    [
      "std::option::Option::expect:1.10",
      "has alias",
      "expect"
    ],
    [
      "std::option::Option::expect:1.10",
      "returns",
      "T:1.10"
    ],
    [
      "std::option::Option::expect:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "std::option::Option::expect:1.10",
      "has argument",
      "msg:1.10"
    ],
    [
      "expect::msg:1.10",
      "has type",
      "&str:1.10"
    ],
    [
      "std::option::Option::expect:1.10",
      "has description",
      "Unwraps an option, yielding the content of a Some. Panics if the value is a None with a custom panic message provided by msg."
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::unwrap:1.10"
    ],
    [
      "std::option::Option::unwrap:1.10",
      "has alias",
      "unwrap"
    ],
    [
      "std::option::Option::unwrap:1.10",
      "returns",
      "T:1.10"
    ],
    [
      "std::option::Option::unwrap:1.10",
      "has description",
      "Moves the value v out of the Option<T> if it is Some(v). Panics if the self value equals None."
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::unwrap_or:1.10"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "has alias",
      "unwrap_or"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "returns",
      "T:1.10"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "has argument",
      "def:1.10"
    ],
    [
      "unwrap_or::def:1.10",
      "has type",
      "T:1.10"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "has description",
      "Returns the contained value or a default."
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::map:1.10"
    ],
    [
      "std::option::Option::map:1.10",
      "has alias",
      "map"
    ],
    [
      "std::option::Option::map:1.10",
      "returns",
      "Option<U>:1.10"
    ],
    [
      "std::option::Option::map:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "std::option::Option::map:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "map::f:1.10",
      "has type",
      "FnOnce(T) -> U:1.10"
    ],
    [
      "std::option::Option::map:1.10",
      "has description",
      "Maps an Option<T> to Option<U> by applying a function to a contained value"
    ],
    [
      "std::option::Option::expect:1.10",
      "has parameter",
      "msg: &str:1.10"
    ],
    [
      "std::option::Option::expect:1.10",
      "has description",
      "Unwraps an option, yielding the content of a Some"
    ],
    [
      "std::option::Option::expect:1.10",
      "panics with",
      "custom message provided by msg:1.10"
    ],
    [
      "std::option::Option::unwrap:1.10",
      "has description",
      "Moves the value v out of the Option<T> if it is Some(v)"
    ],
    [
      "std::option::Option::unwrap:1.10",
      "panics with",
      "None value:1.10"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "has parameter",
      "def: T:1.10"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "has description",
      "Returns the contained value or a default"
    ],
    [
      "std::option::Option::map:1.10",
      "has generic parameter",
      "U:1.10"
    ],
    [
      "std::option::Option::map:1.10",
      "has generic parameter",
      "F:1.10"
    ],
    [
      "std::option::Option::map:1.10",
      "has description",
      "Maps an Option<T> to Option<U> by applying a function"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "and_then:1.10"
    ],
    [
      "and_then:1.10",
      "has description",
      "Returns None if the option is None, otherwise calls f with the wrapped value"
    ],
    [
      "std::option::Option:1.10",
      "has declaration",
      "pub enum Option<T> { None, Some(T), }:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has description",
      "The Option type. See the module level documentation for more."
    ],
    [
      "std::option::IntoIter:1.10",
      "has description",
      "An iterator over the item contained inside an Option."
    ],
    [
      "std::option::Iter:1.10",
      "has description",
      "An iterator over a reference of the contained item in an Option."
    ],
    [
      "std::option::IterMut:1.10",
      "has description",
      "An iterator over a mutable reference of the contained item in an Option."
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "unwrap_or_else:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "map_or:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "map_or_else:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "ok_or:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "ok_or_else:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "iter:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "iter_mut:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "and:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::or:1.10"
    ],
    [
      "std::option::Option::is_some:1.10",
      "has return type",
      "bool:1.10"
    ],
    [
      "std::option::Option::is_some:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "self:1.10",
      "has type",
      "&self:1.10"
    ],
    [
      "std::option::Option::is_none:1.10",
      "has return type",
      "bool:1.10"
    ],
    [
      "std::option::Option::is_none:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "std::option::Option::as_ref:1.10",
      "has return type",
      "Option<&T>:1.10"
    ],
    [
      "std::option::Option::as_mut:1.10",
      "has return type",
      "Option<&mut T>:1.10"
    ],
    [
      "std::option::Option::expect:1.10",
      "has return type",
      "T:1.10"
    ],
    [
      "msg:1.10",
      "has type",
      "&str:1.10"
    ],
    [
      "std::option::Option::unwrap:1.10",
      "has return type",
      "T:1.10"
    ],
    [
      "std::option::Option::unwrap:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "has return type",
      "T:1.10"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "def:1.10",
      "has type",
      "T:1.10"
    ],
    [
      "unwrap_or_else:1.10",
      "has return type",
      "T:1.10"
    ],
    [
      "unwrap_or_else:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "unwrap_or_else:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "f:1.10",
      "has type",
      "F:1.10"
    ],
    [
      "F:1.10",
      "requires trait",
      "FnOnce() -> T:1.10"
    ],
    [
      "unwrap_or_else:1.10",
      "has description",
      "Returns the contained value or computes it from a closure."
    ],
    [
      "std::option::Option::map:1.10",
      "has return type",
      "Option<U>:1.10"
    ],
    [
      "F:1.10",
      "requires trait",
      "FnOnce(T) -> U:1.10"
    ],
    [
      "map_or:1.10",
      "has return type",
      "U:1.10"
    ],
    [
      "map_or:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "map_or:1.10",
      "has argument",
      "default:1.10"
    ],
    [
      "map_or:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "default:1.10",
      "has type",
      "U:1.10"
    ],
    [
      "map_or:1.10",
      "has description",
      "Applies a function to the contained value (if any), or returns a default (if not)."
    ],
    [
      "map_or_else:1.10",
      "has return type",
      "U:1.10"
    ],
    [
      "map_or_else:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "map_or_else:1.10",
      "has argument",
      "default:1.10"
    ],
    [
      "map_or_else:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "default:1.10",
      "has type",
      "D:1.10"
    ],
    [
      "D:1.10",
      "requires trait",
      "FnOnce() -> U:1.10"
    ],
    [
      "map_or_else:1.10",
      "has description",
      "Applies a function to the contained value (if any), or computes a default (if not)."
    ],
    [
      "ok_or:1.10",
      "has return type",
      "Result<T, E>:1.10"
    ],
    [
      "ok_or:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "ok_or:1.10",
      "has argument",
      "err:1.10"
    ],
    [
      "err:1.10",
      "has type",
      "E:1.10"
    ],
    [
      "ok_or:1.10",
      "has description",
      "Transforms the Option<T> into a Result<T, E>, mapping Some(v) to Ok(v) and None to Err(err)."
    ],
    [
      "ok_or_else:1.10",
      "has return type",
      "Result<T, E>:1.10"
    ],
    [
      "ok_or_else:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "ok_or_else:1.10",
      "has argument",
      "err:1.10"
    ],
    [
      "err:1.10",
      "has type",
      "F:1.10"
    ],
    [
      "F:1.10",
      "requires trait",
      "FnOnce() -> E:1.10"
    ],
    [
      "ok_or_else:1.10",
      "has description",
      "Transforms the Option<T> into a Result<T, E>, mapping Some(v) to Ok(v) and None to Err(err())."
    ],
    [
      "iter:1.10",
      "has return type",
      "Iter<T>:1.10"
    ],
    [
      "iter:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "iter:1.10",
      "has description",
      "Returns an iterator over the possibly contained value."
    ],
    [
      "iter_mut:1.10",
      "has return type",
      "IterMut<T>:1.10"
    ],
    [
      "iter_mut:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "iter_mut:1.10",
      "has description",
      "Returns a mutable iterator over the possibly contained value."
    ],
    [
      "and:1.10",
      "has return type",
      "Option<U>:1.10"
    ],
    [
      "and:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "and:1.10",
      "has argument",
      "optb:1.10"
    ],
    [
      "optb:1.10",
      "has type",
      "Option<U>:1.10"
    ],
    [
      "and:1.10",
      "has description",
      "Returns None if the option is None, otherwise returns optb."
    ],
    [
      "and_then:1.10",
      "has return type",
      "Option<U>:1.10"
    ],
    [
      "and_then:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "and_then:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "F:1.10",
      "requires trait",
      "FnOnce(T) -> Option<U>:1.10"
    ],
    [
      "and_then:1.10",
      "has description",
      "Returns None if the option is None, otherwise calls f with the wrapped value and returns the result."
    ],
    [
      "std::option::Option::or:1.10",
      "has return type",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option::or:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "std::option::Option::or:1.10",
      "has argument",
      "optb:1.10"
    ],
    [
      "optb:1.10",
      "has type",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option::or:1.10",
      "has description",
      "Returns the option if it contains a value, otherwise returns optb."
    ],
    [
      "std::option::Option::or:1.10",
      "has alias",
      "or"
    ],
    [
      "std::option::Option::or:1.10",
      "returns",
      "Option<T>:1.10"
    ],
    [
      "or::self:1.10",
      "has type",
      "Option<T>:1.10"
    ],
    [
      "or::optb:1.10",
      "has type",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option::or:1.10",
      "has description",
      "Returns `Some` if the value is `Some`, otherwise returns `optb`."
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::or_else:1.10"
    ],
    [
      "std::option::Option::or_else:1.10",
      "has alias",
      "or_else"
    ],
    [
      "std::option::Option::or_else:1.10",
      "returns",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option::or_else:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "or_else::self:1.10",
      "has type",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option::or_else:1.10",
      "has argument",
      "f:1.10"
    ],
    [
      "or_else::f:1.10",
      "has type",
      "FnOnce() -> Option<T>:1.10"
    ],
    [
      "std::option::Option::or_else:1.10",
      "has description",
      "Returns the option if it contains a value, otherwise calls `f` and returns the result."
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::take:1.10"
    ],
    [
      "std::option::Option::take:1.10",
      "has alias",
      "take"
    ],
    [
      "std::option::Option::take:1.10",
      "returns",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option::take:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "take::self:1.10",
      "has type",
      "&mut self:1.10"
    ],
    [
      "std::option::Option::take:1.10",
      "has description",
      "Takes the value out of the option, leaving a `None` in its place."
    ],
    [
      "Option<&T>:1.10",
      "has method",
      "std::option::Option<&T>::cloned:1.10"
    ],
    [
      "std::option::Option<&T>::cloned:1.10",
      "has alias",
      "cloned"
    ],
    [
      "std::option::Option<&T>::cloned:1.10",
      "returns",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option<&T>::cloned:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "cloned::self:1.10",
      "has type",
      "Option<&T>:1.10"
    ],
    [
      "std::option::Option<&T>::cloned:1.10",
      "has description",
      "Maps an `Option<&T>` to `Option<T>` by cloning the contents of the option."
    ],
    [
      "Option<T>:1.10",
      "has method",
      "std::option::Option::unwrap_or_default:1.10"
    ],
    [
      "std::option::Option::unwrap_or_default:1.10",
      "has alias",
      "unwrap_or_default"
    ],
    [
      "std::option::Option::unwrap_or_default:1.10",
      "returns",
      "T:1.10"
    ],
    [
      "std::option::Option::unwrap_or_default:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "unwrap_or_default::self:1.10",
      "has type",
      "self:1.10"
    ],
    [
      "std::option::Option::unwrap_or_default:1.10",
      "has description",
      "Returns the contained value or a default. Consumes the self argument then, if Some, returns the contained value, otherwise if None, returns the default value for that type."
    ],
    [
      "Option<T>:1.10",
      "implements",
      "IntoIterator:1.10"
    ],
    [
      "Option<T> as IntoIterator:1.10",
      "has associated type",
      "Item = T:1.10"
    ],
    [
      "Option<T> as IntoIterator:1.10",
      "has associated type",
      "IntoIter = IntoIter<T>:1.10"
    ],
    [
      "std::option::IntoIter<T>:1.10",
      "is a",
      "struct"
    ],
    [
      "std::option::IntoIter<T>:1.10",
      "has alias",
      "IntoIter<T>"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "FromIterator<Option<A>>:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "Default:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "Hash:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "Debug:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "Ord:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "Eq:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "PartialOrd:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "PartialEq:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "Copy:1.10"
    ],
    [
      "Option<T>:1.10",
      "implements",
      "Clone:1.10"
    ],
    [
      "Option<T>:1.10",
      "has method",
      "std::option::Option::into_iter:1.10"
    ],
    [
      "std::option::Option::into_iter:1.10",
      "has alias",
      "into_iter"
    ],
    [
      "std::option::Option::into_iter:1.10",
      "returns",
      "std::option::IntoIter<T>:1.10"
    ],
    [
      "std::option::Option::into_iter:1.10",
      "has description",
      "Returns a consuming iterator over the possibly contained value."
    ],
    [
      "Option<V>:1.10",
      "has method",
      "std::option::Option::from_iter:1.10"
    ],
    [
      "std::option::Option::from_iter:1.10",
      "has alias",
      "from_iter"
    ],
    [
      "std::option::Option::from_iter:1.10",
      "has argument",
      "iter:1.10"
    ],
    [
      "from_iter::iter:1.10",
      "has type",
      "I where I: IntoIterator<Item=Option<A>>:1.10"
    ],
    [
      "std::option::Option::from_iter:1.10",
      "returns",
      "Option<V>:1.10"
    ],
    [
      "std::option::Option::from_iter:1.10",
      "has description",
      "Takes each element in the Iterator: if it is None, no further elements are taken, and the None is returned. Should no None occur, a container with the values of each Option is returned."
    ],
    [
      "std::option::Option::or:1.10",
      "has parameter",
      "other: Option<T>:1.10"
    ],
    [
      "std::option::Option::or:1.10",
      "has description",
      "Returns the option if it contains a value, otherwise returns other."
    ],
    [
      "std::option::Option::or_else:1.10",
      "has generic parameter",
      "F:1.10"
    ],
    [
      "std::option::Option::or_else:1.10",
      "has parameter",
      "f: F:1.10"
    ],
    [
      "std::option::Option::or_else:1.10",
      "has description",
      "Returns the option if it contains a value, otherwise calls f and returns the result."
    ],
    [
      "std::option::Option::take:1.10",
      "has description",
      "Takes the value out of the option, leaving a None in its place."
    ],
    [
      "std::option::Option<&T>::cloned:1.10",
      "has description",
      "Maps an Option<&T> to an Option<T> by cloning the contents of the option."
    ],
    [
      "std::option::Option::unwrap_or_default:1.10",
      "has description",
      "Returns the contained value or a default"
    ],
    [
      "IntoIterator for Option<T>:1.10",
      "has associated type",
      "Item = T:1.10"
    ],
    [
      "IntoIterator for Option<T>:1.10",
      "has associated type",
      "IntoIter = IntoIter<T>:1.10"
    ],
    [
      "std::option::Option::or_else:1.10",
      "has return type",
      "Option<T>:1.10"
    ],
    [
      "F:1.10",
      "requires trait",
      "FnOnce() -> Option<T>:1.10"
    ],
    [
      "std::option::Option::take:1.10",
      "has return type",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option<&T>::cloned:1.10"
    ],
    [
      "std::option::Option<&T>::cloned:1.10",
      "has return type",
      "Option<T>:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::unwrap_or_default:1.10"
    ],
    [
      "std::option::Option::unwrap_or_default:1.10",
      "has return type",
      "T:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "Default:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "IntoIterator:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "FromIterator:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "Hash:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "Debug:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "Ord:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "Eq:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "PartialOrd:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "PartialEq:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "Copy:1.10"
    ],
    [
      "std::option::Option:1.10",
      "implements",
      "Clone:1.10"
    ],
    [
      "std::option::Option:1.10",
      "has method",
      "std::option::Option::into_iter:1.10"
    ],
    [
      "std::option::Option::into_iter:1.10",
      "has return type",
      "std::option::IntoIter<T>:1.10"
    ],
    [
      "std::option::Option::into_iter:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "std::option:1.60",
      "contains",
      "NoneError:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "as_pin_mut:1.60"
    ],
    [
      "Option::as_pin_mut:1.60",
      "has description",
      "Converts from Option<T> to Option<PinMut<'_, T>>"
    ],
    [
      "Option:1.60",
      "contains",
      "iter:1.60"
    ],
    [
      "Option::iter:1.60",
      "has description",
      "An iterator over a reference to the Some variant of an Option."
    ],
    [
      "Option:1.60",
      "contains",
      "iter_mut:1.60"
    ],
    [
      "Option::iter_mut:1.60",
      "has description",
      "An iterator over a mutable reference to the Some variant of an Option."
    ],
    [
      "Option:1.60",
      "contains",
      "and:1.60"
    ],
    [
      "Option::and:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "and_then:1.60"
    ],
    [
      "Option::and_then:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "filter:1.60"
    ],
    [
      "Option::filter:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "or:1.60"
    ],
    [
      "Option::or:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "or_else:1.60"
    ],
    [
      "Option::or_else:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "xor:1.60"
    ],
    [
      "Option::xor:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "get_or_insert:1.60"
    ],
    [
      "Option::get_or_insert:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "get_or_insert_with:1.60"
    ],
    [
      "Option::get_or_insert_with:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "take:1.60"
    ],
    [
      "Option::take:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "std::option::Option::replace:1.60"
    ],
    [
      "Option::replace:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "cloned:1.60"
    ],
    [
      "Option::cloned:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "unwrap_or_default:1.60"
    ],
    [
      "Option::unwrap_or_default:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "std::option::Option::deref:1.60"
    ],
    [
      "Option::deref:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "contains",
      "std::option::Option::transpose:1.60"
    ],
    [
      "Option::transpose:1.60",
      "has description",
      "..."
    ],
    [
      "Option:1.60",
      "implements",
      "IntoIterator:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Hash:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Clone:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "PartialOrd:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Ord:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Debug:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Eq:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "PartialEq:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "From<&'a mut Option<T>>:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "From<T>:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "From<&'a Option<T>>:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Copy:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "FromIterator:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Try:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Default:1.60"
    ],
    [
      "NoneError:1.60",
      "has description",
      "The error type that results from applying the try operator (`?`) to a `None` value. If you wish to allow `x?` (where `x` is an `Option<T>`) to be converted into your error type, you can implement `impl From<NoneError>` for `YourErrorType`. In that case, `x?` within a function that returns `Result<_, YourErrorType>` will translate a `None` value into an `Err` result."
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "as_pin_mut:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "iter:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "iter_mut:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "and:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "and_then:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "filter:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "or:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "or_else:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "xor:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "get_or_insert:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "get_or_insert_with:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "take:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "std::option::Option::replace:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "cloned:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "unwrap_or_default:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "std::option::Option::deref:1.60"
    ],
    [
      "std::option::Option:1.60",
      "has method",
      "std::option::Option::transpose:1.60"
    ],
    [
      "std::option::Option::as_pin_mut:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "std::option::NoneError:1.60",
      "has description",
      "The error type that results from applying the try operator (`?`) to a `None` value. If you wish to allow `x?` (where `x` is an `Option<T>`) to be converted into your error type, you can implement `impl From<NoneError>` for `YourErrorType`. In that case, `x?` within a function that returns `Result<_, YourErrorType>` will translate a `None` value into an `Err` result."
    ],
    [
      "option:1.60",
      "contains",
      "NoneError:1.60"
    ],
    [
      "NoneError:1.60",
      "is a",
      "struct"
    ],
    [
      "Option:1.60",
      "has method",
      "as_pin_mut:1.60"
    ],
    [
      "Option::as_pin_mut:1.60",
      "has description",
      "Converts from `Option<T>` to `Option<PinMut<'_, T>>`"
    ],
    [
      "Option:1.60",
      "has method",
      "iter:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "iter_mut:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "and:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "and_then:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "filter:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "or:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "or_else:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "xor:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "get_or_insert:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "get_or_insert_with:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "take:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "std::option::Option::replace:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "cloned:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "unwrap_or_default:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "std::option::Option::deref:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "std::option::Option::transpose:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "PartialOrd<Option<T>>:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "PartialEq<Option<T>>:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "FromIterator<Option<A>>:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "contains:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "as_deref:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "as_deref_mut:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "copied:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "flatten:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "expect_none:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "unwrap_none:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Product<Option<U>>:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "StructuralEq:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "StructuralPartialEq:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Sum<Option<U>>:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "RefUnwindSafe:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Send:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Sync:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Unpin:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "UnwindSafe:1.60"
    ],
    [
      "Option::contains:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "as_pin_ref:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Product:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Sum:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "insert:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "zip:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "zip_with:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "From<!>:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "insert:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "zip:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "zip_with:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "get_or_insert_default:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "inspect:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "is_some_with:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "get_or_insert_default:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "inspect:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "is_some_with:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "FromResidual:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "Residual:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "unwrap_unchecked:1.60"
    ],
    [
      "Option:1.60",
      "has method",
      "unzip:1.60"
    ],
    [
      "Option::unwrap_unchecked:1.60",
      "has feature",
      "unsafe:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "unzip:1.60"
    ],
    [
      "Option:1.60",
      "contains",
      "unwrap_unchecked:1.60"
    ],
    [
      "Option::is_some_with:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::filter:1.60",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."
    ],
    [
      "Option::filter:1.60",
      "has generic parameter",
      "P:1.60"
    ],
    [
      "P:1.60",
      "requires trait",
      "FnOnce(&T) -> bool:1.60"
    ],
    [
      "Option::filter:1.60",
      "has argument",
      "predicate:1.60"
    ],
    [
      "Option::filter::predicate:1.60",
      "has type",
      "P:1.60"
    ],
    [
      "Option::xor:1.60",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "Option::xor:1.60",
      "requires feature",
      "option_xor:1.60"
    ],
    [
      "Option::xor:1.60",
      "has stability",
      "experimental:1.60"
    ],
    [
      "Option::xor:1.60",
      "has argument",
      "optb:1.60"
    ],
    [
      "Option::xor::optb:1.60",
      "has type",
      "Option<T>:1.60"
    ],
    [
      "Option::xor:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "std::option::Option::filter:1.60",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."
    ],
    [
      "std::option::Option::filter:1.60",
      "has argument",
      "predicate:1.60"
    ],
    [
      "std::option::Option::filter::predicate:1.60",
      "has type",
      "FnOnce(&T) -> bool:1.60"
    ],
    [
      "std::option::Option::filter:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "std::option::Option::filter:1.60",
      "has generic parameter",
      "P:1.60"
    ],
    [
      "std::option::Option::xor:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "std::option::Option::xor:1.60",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "std::option::Option::xor:1.60",
      "has argument",
      "optb:1.60"
    ],
    [
      "std::option::Option::xor::optb:1.60",
      "has type",
      "Option<T>:1.60"
    ],
    [
      "Iter:1.60",
      "implements",
      "Iterator:1.60"
    ],
    [
      "IterMut:1.60",
      "implements",
      "Iterator:1.60"
    ],
    [
      "filter:1.60",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns: Some(t) if predicate returns true (where t is the wrapped value), and None if predicate returns false."
    ],
    [
      "filter:1.60",
      "has argument",
      "predicate:1.60"
    ],
    [
      "predicate:1.60",
      "has type",
      "FnOnce(&T) -> bool:1.60"
    ],
    [
      "xor:1.60",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "or:1.60",
      "has description",
      "Returns the option if it contains a value, otherwise returns optb. Arguments passed to or are eagerly evaluated; if you are passing the result of a function call, it is recommended to use or_else, which is lazily evaluated."
    ],
    [
      "std::option::Option::insert:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::zip:1.60",
      "has description",
      "Zips self with another Option."
    ],
    [
      "Option::zip:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "Option::zip::other:1.60",
      "has type",
      "Option<U>:1.60"
    ],
    [
      "Option::zip:1.60",
      "returns",
      "Option<(T, U)>:1.60"
    ],
    [
      "Option::zip:1.60",
      "has generic parameter",
      "U:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "has description",
      "Zips self and another Option with function f."
    ],
    [
      "Option::zip_with:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "Option::zip_with::other:1.60",
      "has type",
      "Option<U>:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "Option::zip_with::f:1.60",
      "has type",
      "FnOnce(T, U) -> R:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "returns",
      "Option<R>:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "has generic parameter",
      "U:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "has generic parameter",
      "F:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "has generic parameter",
      "R:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "has feature",
      "option_zip:1.60"
    ],
    [
      "Option::insert:1.60",
      "has description",
      "Inserts value into the option if it is None, then returns a mutable reference to the contained value."
    ],
    [
      "Option::insert:1.60",
      "has argument",
      "value:1.60"
    ],
    [
      "Option::insert::value:1.60",
      "has type",
      "T:1.60"
    ],
    [
      "Option::insert:1.60",
      "returns",
      "&mut T:1.60"
    ],
    [
      "Option::insert:1.60",
      "has feature",
      "nightly-only:1.60"
    ],
    [
      "Option::zip_with::f:1.60",
      "has type",
      "F:1.60"
    ],
    [
      "F:1.60",
      "requires trait",
      "FnOnce(T, U) -> R:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::insert:1.60",
      "has description",
      "Inserts `value` into the option then returns a mutable reference to it."
    ],
    [
      "Option::insert:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "requires trait",
      "FnOnce(T, U) -> R:1.60"
    ],
    [
      "Option::inspect:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::inspect:1.60",
      "has description",
      "Calls the provided closure with a reference to the contained value (if Some)."
    ],
    [
      "Option::unwrap_unchecked:1.60",
      "has description",
      "Returns the contained Some value, consuming the self value, without checking that the value is not None."
    ],
    [
      "Option::get_or_insert_default:1.60",
      "has description",
      "Inserts the default value into the option if it is None, then returns a mutable reference to the contained value."
    ],
    [
      "Option::get_or_insert_default:1.60",
      "has feature",
      "option_get_or_insert_default:1.60"
    ],
    [
      "Option::contains:1.60",
      "has description",
      "Returns true if the option is a Some value containing the given value."
    ],
    [
      "Option::contains:1.60",
      "has generic parameter",
      "U:1.60"
    ],
    [
      "U:1.60",
      "requires trait",
      "PartialEq<T>:1.60"
    ],
    [
      "Option::contains:1.60",
      "has argument",
      "x:1.60"
    ],
    [
      "Option::contains::x:1.60",
      "has type",
      "&U:1.60"
    ],
    [
      "Option::contains:1.60",
      "has feature",
      "option_result_contains:1.60"
    ],
    [
      "Option::filter:1.60",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns: Some(t) if predicate returns true (where t is the wrapped value), and None if predicate returns false."
    ],
    [
      "std::option::Option::filter:1.60",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns: Some(t) if predicate returns true (where t is the wrapped value), and None if predicate returns false."
    ],
    [
      "Option::get_or_insert_default:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "std::option::Option::replace:1.60",
      "has alias",
      "replace"
    ],
    [
      "std::option::Option::replace:1.60",
      "has argument",
      "value:1.60"
    ],
    [
      "replace::value:1.60",
      "has type",
      "T:1.60"
    ],
    [
      "std::option::Option::replace:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "std::option::Option::replace:1.60",
      "has description",
      "Replaces the actual value in the option by the value given in parameter, returning the old value if present, leaving a Some in its place without deinitializing either one."
    ],
    [
      "std::option::Option::replace:1.60",
      "has stability",
      "experimental:1.60"
    ],
    [
      "std::option::Option::replace:1.60",
      "requires feature",
      "option_replace:1.60"
    ],
    [
      "std::option::Option::deref:1.60",
      "has alias",
      "deref"
    ],
    [
      "std::option::Option::deref:1.60",
      "returns",
      "Option<&T::Target>:1.60"
    ],
    [
      "std::option::Option::deref:1.60",
      "has description",
      "Converts from &Option<T> to Option<&T::Target>. Leaves the original Option in-place, creating a new one with a reference to the original one, additionally coercing the contents via Deref."
    ],
    [
      "std::option::Option::deref:1.60",
      "has stability",
      "experimental:1.60"
    ],
    [
      "std::option::Option::deref:1.60",
      "requires feature",
      "inner_deref:1.60"
    ],
    [
      "std::option::Option::transpose:1.60",
      "has alias",
      "transpose"
    ],
    [
      "std::option::Option::transpose:1.60",
      "returns",
      "Result<Option<T>, E>:1.60"
    ],
    [
      "std::option::Option::transpose:1.60",
      "has description",
      "Transposes an Option of a Result into a Result of an Option. None will be mapped to Ok(None). Some(Ok(_)) and Some(Err(_)) will be mapped to Ok(Some(_)) and Err(_)."
    ],
    [
      "std::option::Option::transpose:1.60",
      "has stability",
      "experimental:1.60"
    ],
    [
      "std::option::Option::transpose:1.60",
      "requires feature",
      "transpose_result:1.60"
    ],
    [
      "std::option::Option::replace:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "replace::self:1.60",
      "has type",
      "&mut self:1.60"
    ],
    [
      "std::option::Option::replace:1.60",
      "has description",
      "Replaces the actual value in the option by the value given in parameter, returning the old value if present."
    ],
    [
      "std::option::Option::replace:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option<&mut T>:1.60",
      "has method",
      "cloned:1.60"
    ],
    [
      "cloned:1.60",
      "has description",
      "Maps an Option<&mut T> to an Option<T> by cloning the contents of the option."
    ],
    [
      "std::option::Option::transpose:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "std::option::Option::transpose:1.60",
      "has description",
      "Transposes an Option of a Result into a Result of an Option."
    ],
    [
      "std::option::Option::deref:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "std::option::Option::deref:1.60"
    ],
    [
      "std::option::Option::deref:1.60",
      "has description",
      "Converts from &Option<T> to Option<&T::Target> via Deref."
    ],
    [
      "Option<Result<T, E>>:1.60",
      "has method",
      "std::option::Option::transpose:1.60"
    ],
    [
      "std::option::Option::transpose:1.60",
      "has description",
      "Transposes an Option of a Result into a Result of an Option. None maps to Ok(None), Some(Ok(_)) and Some(Err(_)) map to Ok(Some(_)) and Err(_)."
    ],
    [
      "Option::replace:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::expect_none:1.60",
      "has feature",
      "option_expect_none:1.60"
    ],
    [
      "Option::unwrap_none:1.60",
      "has feature",
      "option_unwrap_none:1.60"
    ],
    [
      "Option::copied:1.60",
      "has description",
      "Maps an Option<&mut T> to an Option<T> by copying the contents of the option"
    ],
    [
      "Option::as_deref:1.60",
      "has description",
      "Converts from Option<T> to Option<&T::Target> via Deref"
    ],
    [
      "Option::as_deref_mut:1.60",
      "has description",
      "Converts from Option<T> to Option<&mut T::Target> via DerefMut"
    ],
    [
      "Option::replace:1.60",
      "has feature",
      "option_replace:1.60"
    ],
    [
      "Option::replace:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "Option::take:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "Option::get_or_insert_with:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "Option::get_or_insert_with::f:1.60",
      "has type",
      "F:1.60"
    ],
    [
      "Option::expect_none:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::unwrap_none:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::copied:1.60",
      "has description",
      "Maps an Option<&T> to an Option<T> by copying the contents of the option."
    ],
    [
      "Option::copied:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "Option::as_deref:1.60",
      "returns",
      "Option<&T::Target>:1.60"
    ],
    [
      "Option::as_deref_mut:1.60",
      "returns",
      "Option<&mut T::Target>:1.60"
    ],
    [
      "Option::expect_none:1.60",
      "has description",
      "Consumes self while expecting None and returning nothing."
    ],
    [
      "Option::unwrap_none:1.60",
      "has description",
      "Consumes self while expecting None and returning nothing."
    ],
    [
      "flatten:1.60",
      "has description",
      "Converts from Option<Option<T>> to Option<T>"
    ],
    [
      "flatten:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "flatten:1.60"
    ],
    [
      "flatten:1.60",
      "has version",
      "1.40.0:1.60"
    ],
    [
      "Option::expect_none:1.60",
      "has description",
      "Consumes self while expecting None and returning nothing. Panics if the value is a Some, with a custom panic message provided by the Some's value."
    ],
    [
      "Option::unwrap_none:1.60",
      "has description",
      "Consumes self while expecting None and returning nothing. Panics if the value is a Some, with a custom panic message provided by the Some's value."
    ],
    [
      "Option::flatten:1.60",
      "has description",
      "Converts from Option<Option<T>> to Option<T>"
    ],
    [
      "Option::flatten:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "zip:1.60",
      "has description",
      "Zips self with another Option."
    ],
    [
      "zip:1.60",
      "returns",
      "Option<(T, U)>:1.60"
    ],
    [
      "zip:1.60",
      "has stability",
      "1.46.0:1.60"
    ],
    [
      "zip:1.60",
      "has feature",
      "const unstable:1.60"
    ],
    [
      "zip_with:1.60",
      "has description",
      "Zips self and another Option with function f."
    ],
    [
      "zip_with:1.60",
      "has feature",
      "option_zip:1.60"
    ],
    [
      "zip_with:1.60",
      "has stability",
      "nightly-only experimental:1.60"
    ],
    [
      "unzip:1.60",
      "has description",
      "Unzips an option containing a tuple of two options."
    ],
    [
      "unzip:1.60",
      "returns",
      "(Option<T>, Option<U>):1.60"
    ],
    [
      "unzip:1.60",
      "has feature",
      "unzip_option:1.60"
    ],
    [
      "zip_with:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "unzip:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::zip:1.60",
      "has version",
      "1.46.0:1.60"
    ],
    [
      "Option::zip:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::unzip:1.60",
      "has description",
      "Unzips an option containing a tuple of two options."
    ],
    [
      "Option::unzip:1.60",
      "has feature",
      "unzip_option:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "PartialOrd:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Debug:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Eq:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Copy:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "From<&'a mut Option<T>>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "From<T>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "From<&'a Option<T>>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Hash:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Ord:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "PartialEq:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Try:1.60"
    ],
    [
      "Option<T> as Try:1.60",
      "has associated type",
      "Ok = T:1.60"
    ],
    [
      "Option<T> as Try:1.60",
      "has associated type",
      "Error = NoneError:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "partial_cmp:1.60"
    ],
    [
      "partial_cmp:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "partial_cmp:1.60",
      "returns",
      "Option<Ordering>:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "fmt:1.60"
    ],
    [
      "fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "fmt:1.60",
      "returns",
      "Result<(), Error>:1.60"
    ],
    [
      "Option<&'a mut T>:1.60",
      "implements",
      "From<&'a mut Option<T>>:1.60"
    ],
    [
      "Option<&'a T>:1.60",
      "implements",
      "From<&'a Option<T>>:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "into_result:1.60"
    ],
    [
      "into_result:1.60",
      "has return type",
      "Result<T, NoneError>:1.60"
    ],
    [
      "into_result:1.60",
      "has description",
      "Applies the `?` operator. A return of `Ok(t)` means execution continues normally; `Err(e)` branches to the innermost `catch` or returns from the function."
    ],
    [
      "Option<T>:1.60",
      "has method",
      "from_ok:1.60"
    ],
    [
      "from_ok:1.60",
      "has return type",
      "Option<T>:1.60"
    ],
    [
      "from_ok:1.60",
      "has description",
      "Wrap an OK value to construct the composite result."
    ],
    [
      "Option<T>:1.60",
      "has method",
      "from_error:1.60"
    ],
    [
      "from_error:1.60",
      "has return type",
      "Option<T>:1.60"
    ],
    [
      "from_error:1.60",
      "has description",
      "Wrap an error value to construct the composite result."
    ],
    [
      "Option<Option<T>>:1.60",
      "has method",
      "flatten:1.60"
    ],
    [
      "Option:1.60",
      "implements",
      "From:1.60"
    ],
    [
      "as_deref_mut:1.60",
      "returns",
      "Option<&mut <T as Deref>::Target>:1.60"
    ],
    [
      "as_deref_mut:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "as_deref_mut::self:1.60",
      "has type",
      "&mut self:1.60"
    ],
    [
      "flatten:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "flatten::self:1.60",
      "has type",
      "self:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "FromIterator<Option<A>>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Sum<Option<U>>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Clone:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "sum:1.60"
    ],
    [
      "as_deref_mut:1.60",
      "returns",
      "Option<&mut T::Target>:1.60"
    ],
    [
      "as_deref_mut:1.60",
      "has description",
      "Converts from Option<T> (or &mut Option<T>) to Option<&mut T::Target>."
    ],
    [
      "flatten:1.60",
      "has description",
      "Converts from Option<Option<T>> to Option<T>."
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Sum:1.60"
    ],
    [
      "sum:1.60",
      "has description",
      "Takes each element in the Iterator: if it is a None, no further elements are taken, and the None is returned. Should no None occur, the sum of all elements is returned."
    ],
    [
      "sum:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "clone:1.60"
    ],
    [
      "clone:1.60",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "Option<T>:1.60",
      "has method",
      "clone_from:1.60"
    ],
    [
      "clone_from:1.60",
      "has description",
      "Performs copy-assignment from source."
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Default:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "FromResidual:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Residual:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "from_residual:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "from_iter:1.60"
    ],
    [
      "from_residual:1.60",
      "has description",
      "Constructs the type from a compatible Residual type."
    ],
    [
      "from_iter:1.60",
      "has description",
      "Takes each element in the Iterator: if it is None, no further elements are taken, and the None is returned. Should no None occur, a container with the values of each Option is returned."
    ],
    [
      "Option<T>:1.60",
      "has method",
      "zip:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "zip_with:1.60"
    ],
    [
      "I:1.60",
      "implements",
      "IntoIterator:1.60"
    ],
    [
      "IntoIterator for I:1.60",
      "has associated type",
      "Item = <I as Iterator>::Item:1.60"
    ],
    [
      "IntoIterator for I:1.60",
      "has associated type",
      "IntoIter = I:1.60"
    ],
    [
      "I:1.60",
      "has method",
      "into_iter:1.60"
    ],
    [
      "into_iter:1.60",
      "returns",
      "I:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "TryInto:1.60"
    ],
    [
      "TryInto for T:1.60",
      "has associated type",
      "Error = <U as TryFrom<T>>::Error:1.60"
    ],
    [
      "T:1.60",
      "has method",
      "try_into:1.60"
    ],
    [
      "try_into:1.60",
      "returns",
      "Result<U, <U as TryFrom<T>>::Error>:1.60"
    ],
    [
      "try_into:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "try_into:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "try_into:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.60",
      "implements",
      "Into:1.60"
    ],
    [
      "T:1.60",
      "has method",
      "into:1.60"
    ],
    [
      "into:1.60",
      "returns",
      "U:1.60"
    ],
    [
      "into:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "Borrow:1.60"
    ],
    [
      "T:1.60",
      "has method",
      "borrow:1.60"
    ],
    [
      "borrow:1.60",
      "returns",
      "&T:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "BorrowMut:1.60"
    ],
    [
      "T:1.60",
      "has method",
      "borrow_mut:1.60"
    ],
    [
      "borrow_mut:1.60",
      "returns",
      "&mut T:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "Any:1.60"
    ],
    [
      "Any for T:1.60",
      "has method",
      "get_type_id:1.60"
    ],
    [
      "get_type_id:1.60",
      "returns",
      "TypeId:1.60"
    ],
    [
      "get_type_id:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "ToOwned:1.60"
    ],
    [
      "ToOwned for T:1.60",
      "has associated type",
      "Owned = T:1.60"
    ],
    [
      "T:1.60",
      "has method",
      "to_owned:1.60"
    ],
    [
      "to_owned:1.60",
      "returns",
      "T:1.60"
    ],
    [
      "T:1.60",
      "has method",
      "clone_into:1.60"
    ],
    [
      "clone_into:1.60",
      "has argument",
      "target: &mut T:1.60"
    ],
    [
      "clone_into:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "TryFrom<T> for U:1.60",
      "has associated type",
      "Error = Infallible:1.60"
    ],
    [
      "TryFrom<T> for U:1.60",
      "has method",
      "try_from:1.60"
    ],
    [
      "TryInto<U> for T:1.60",
      "has method",
      "try_into:1.60"
    ],
    [
      "Into<U> for T:1.60",
      "has method",
      "into:1.60"
    ],
    [
      "Borrow<T> for T:1.60",
      "has method",
      "borrow:1.60"
    ],
    [
      "BorrowMut<T> for T:1.60",
      "has method",
      "borrow_mut:1.60"
    ],
    [
      "Any for T:1.60",
      "has method",
      "type_id:1.60"
    ],
    [
      "ToOwned for T:1.60",
      "has method",
      "to_owned:1.60"
    ],
    [
      "ToOwned for T:1.60",
      "has method",
      "clone_into:1.60"
    ],
    [
      "TryFrom<T>:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "TryInto<U>:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "Borrow<T>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "BorrowMut<T>:1.60"
    ],
    [
      "T:1.60",
      "has method",
      "type_id:1.60"
    ],
    [
      "TryFrom<T>:1.60",
      "has associated type",
      "Error = Infallible:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "TryFrom<U>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "Into<U>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "TryInto<U>:1.60"
    ],
    [
      "IntoIterator:1.60",
      "has associated type",
      "Item = <I as Iterator>::Item:1.60"
    ],
    [
      "IntoIterator:1.60",
      "has associated type",
      "IntoIter = I:1.60"
    ],
    [
      "TryFrom<U> for T:1.60",
      "has associated type",
      "Error = Infallible:1.60"
    ],
    [
      "TryFrom<U> for T:1.60",
      "has method",
      "try_from:1.60"
    ],
    [
      "try_from:1.60",
      "returns",
      "Result<T, Infallible>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "PartialEq<Option<T>>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "PartialOrd<Option<T>>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Product<Option<U>>:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "IntoIterator:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "cmp:1.60"
    ],
    [
      "cmp:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "cmp:1.60",
      "returns",
      "Ordering:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "eq:1.60"
    ],
    [
      "eq:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "eq:1.60",
      "returns",
      "bool:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "ne:1.60"
    ],
    [
      "ne:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "ne:1.60",
      "returns",
      "bool:1.60"
    ],
    [
      "Option<T>:1.60",
      "has method",
      "product:1.60"
    ],
    [
      "product:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "Option<T>::Try:1.60",
      "has associated type",
      "Ok=T:1.60"
    ],
    [
      "Option<T>::Try:1.60",
      "has associated type",
      "Error=NoneError:1.60"
    ],
    [
      "into_result:1.60",
      "returns",
      "Result<T, NoneError>:1.60"
    ],
    [
      "from_ok:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "from_error:1.60",
      "returns",
      "Option<T>:1.60"
    ],
    [
      "Option::zip:1.60",
      "has stability",
      "1.46.0:1.60"
    ],
    [
      "Option::zip:1.60",
      "has feature",
      "const unstable:1.60"
    ],
    [
      "Option::zip_with:1.60",
      "has stability",
      "nightly-only experimental:1.60"
    ],
    [
      "Option::unzip:1.60",
      "returns",
      "(Option<T>, Option<U>):1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Iterator:1.60"
    ],
    [
      "Option<T>:1.60",
      "implements",
      "Product:1.60"
    ],
    [
      "IntoIter<T>:1.60",
      "implements",
      "Iterator:1.60"
    ],
    [
      "IntoIter<T>:1.60",
      "has associated type",
      "Item:1.60"
    ],
    [
      "IntoIter<T>::Item:1.60",
      "has description",
      "The type of the elements being iterated over"
    ],
    [
      "Option::sum:1.60",
      "has description",
      "Takes each element in the Iterator: if it is a None, no further elements are taken, and the None is returned. Should no None occur, the sum of all elements is returned."
    ],
    [
      "From<!> for T:1.60",
      "has method",
      "from:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "From<!>:1.60"
    ],
    [
      "From<T> for T:1.60",
      "has method",
      "from:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "From<T>:1.60"
    ],
    [
      "TryInto<U> for T:1.60",
      "has associated type",
      "Error = <U as TryFrom<T>>::Error:1.60"
    ],
    [
      "BorrowMut<T> for T:1.60",
      "has feature",
      "const unstable:1.60"
    ],
    [
      "From<T> for T:1.60",
      "has description",
      "Returns the argument unchanged."
    ],
    [
      "Into<U> for T:1.60",
      "has description",
      "Calls U::from(self). This conversion is whatever the implementation of From<T> for U chooses to do."
    ],
    [
      "ToOwned:1.60",
      "has method",
      "clone_into:1.60"
    ],
    [
      "ToOwned::clone_into:1.60",
      "has feature",
      "nightly-only experimental:1.60"
    ],
    [
      "TryFrom<U> for T:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "TryInto<U> for T:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "BorrowMut<T>:1.60",
      "implements",
      "BorrowMut:1.60"
    ],
    [
      "BorrowMut<T>:1.60",
      "has method",
      "borrow_mut:1.60"
    ],
    [
      "From<T>:1.60",
      "has description",
      "Returns the argument unchanged"
    ],
    [
      "Into<U> for T:1.60",
      "has description",
      "Calls U::from(self)"
    ],
    [
      "ToOwned:1.60",
      "has associated type",
      "Owned = T:1.60"
    ],
    [
      "ToOwned:1.60",
      "has method",
      "to_owned:1.60"
    ],
    [
      "BorrowMut::borrow_mut:1.60",
      "has description",
      "Mutably borrows from an owned value"
    ],
    [
      "ToOwned::clone_into:1.60",
      "has feature",
      "toowned_clone_into:1.60"
    ],
    [
      "Into<U> for T:1.60",
      "has description",
      "Calls U::from(self)."
    ],
    [
      "std::option:1.50",
      "contains",
      "NoneError:1.50"
    ],
    [
      "Option:1.50",
      "contains",
      "as_pin_mut:1.50"
    ],
    [
      "Option::as_pin_mut:1.50",
      "has description",
      "Converts from Option<T> to Option<PinMut<'_, T>>"
    ],
    [
      "Option:1.50",
      "contains",
      "iter:1.50"
    ],
    [
      "Option::iter:1.50",
      "has description",
      "An iterator over a reference to the Some variant of an Option."
    ],
    [
      "Option:1.50",
      "contains",
      "iter_mut:1.50"
    ],
    [
      "Option::iter_mut:1.50",
      "has description",
      "An iterator over a mutable reference to the Some variant of an Option."
    ],
    [
      "Option:1.50",
      "contains",
      "and:1.50"
    ],
    [
      "Option::and:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "and_then:1.50"
    ],
    [
      "Option::and_then:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "filter:1.50"
    ],
    [
      "Option::filter:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "or:1.50"
    ],
    [
      "Option::or:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "or_else:1.50"
    ],
    [
      "Option::or_else:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "xor:1.50"
    ],
    [
      "Option::xor:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "get_or_insert:1.50"
    ],
    [
      "Option::get_or_insert:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "get_or_insert_with:1.50"
    ],
    [
      "Option::get_or_insert_with:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "take:1.50"
    ],
    [
      "Option::take:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "std::option::Option::replace:1.50"
    ],
    [
      "Option::replace:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "cloned:1.50"
    ],
    [
      "Option::cloned:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "unwrap_or_default:1.50"
    ],
    [
      "Option::unwrap_or_default:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "std::option::Option::deref:1.50"
    ],
    [
      "Option::deref:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "contains",
      "std::option::Option::transpose:1.50"
    ],
    [
      "Option::transpose:1.50",
      "has description",
      "..."
    ],
    [
      "Option:1.50",
      "implements",
      "IntoIterator:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Hash:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Clone:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "PartialOrd:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Ord:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Debug:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Eq:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "PartialEq:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "From<&'a mut Option<T>>:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "From<T>:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "From<&'a Option<T>>:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Copy:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "FromIterator:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Try:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Default:1.50"
    ],
    [
      "NoneError:1.50",
      "has description",
      "The error type that results from applying the try operator (`?`) to a `None` value. If you wish to allow `x?` (where `x` is an `Option<T>`) to be converted into your error type, you can implement `impl From<NoneError>` for `YourErrorType`. In that case, `x?` within a function that returns `Result<_, YourErrorType>` will translate a `None` value into an `Err` result."
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "as_pin_mut:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "iter:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "iter_mut:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "and:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "and_then:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "filter:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "or:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "or_else:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "xor:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "get_or_insert:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "get_or_insert_with:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "take:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "std::option::Option::replace:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "cloned:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "unwrap_or_default:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "std::option::Option::deref:1.50"
    ],
    [
      "std::option::Option:1.50",
      "has method",
      "std::option::Option::transpose:1.50"
    ],
    [
      "std::option::Option::as_pin_mut:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "std::option::NoneError:1.50",
      "has description",
      "The error type that results from applying the try operator (`?`) to a `None` value. If you wish to allow `x?` (where `x` is an `Option<T>`) to be converted into your error type, you can implement `impl From<NoneError>` for `YourErrorType`. In that case, `x?` within a function that returns `Result<_, YourErrorType>` will translate a `None` value into an `Err` result."
    ],
    [
      "option:1.50",
      "contains",
      "NoneError:1.50"
    ],
    [
      "NoneError:1.50",
      "is a",
      "struct"
    ],
    [
      "Option:1.50",
      "has method",
      "as_pin_mut:1.50"
    ],
    [
      "Option::as_pin_mut:1.50",
      "has description",
      "Converts from `Option<T>` to `Option<PinMut<'_, T>>`"
    ],
    [
      "Option:1.50",
      "has method",
      "iter:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "iter_mut:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "and:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "and_then:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "filter:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "or:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "or_else:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "xor:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "get_or_insert:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "get_or_insert_with:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "take:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "std::option::Option::replace:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "cloned:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "unwrap_or_default:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "std::option::Option::deref:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "std::option::Option::transpose:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "PartialOrd<Option<T>>:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "PartialEq<Option<T>>:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "FromIterator<Option<A>>:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "contains:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "as_deref:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "as_deref_mut:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "copied:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "flatten:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "expect_none:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "unwrap_none:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Product<Option<U>>:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "StructuralEq:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "StructuralPartialEq:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Sum<Option<U>>:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "RefUnwindSafe:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Send:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Sync:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Unpin:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "UnwindSafe:1.50"
    ],
    [
      "Option::contains:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "as_pin_ref:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Product:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "Sum:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "insert:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "zip:1.50"
    ],
    [
      "Option:1.50",
      "has method",
      "zip_with:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "From<!>:1.50"
    ],
    [
      "Option:1.50",
      "contains",
      "insert:1.50"
    ],
    [
      "Option:1.50",
      "contains",
      "zip:1.50"
    ],
    [
      "Option:1.50",
      "contains",
      "zip_with:1.50"
    ],
    [
      "Option::filter:1.50",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."
    ],
    [
      "Option::filter:1.50",
      "has generic parameter",
      "P:1.50"
    ],
    [
      "P:1.50",
      "requires trait",
      "FnOnce(&T) -> bool:1.50"
    ],
    [
      "Option::filter:1.50",
      "has argument",
      "predicate:1.50"
    ],
    [
      "Option::filter::predicate:1.50",
      "has type",
      "P:1.50"
    ],
    [
      "Option::xor:1.50",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "Option::xor:1.50",
      "requires feature",
      "option_xor:1.50"
    ],
    [
      "Option::xor:1.50",
      "has stability",
      "experimental:1.50"
    ],
    [
      "Option::xor:1.50",
      "has argument",
      "optb:1.50"
    ],
    [
      "Option::xor::optb:1.50",
      "has type",
      "Option<T>:1.50"
    ],
    [
      "Option::xor:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "std::option::Option::filter:1.50",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."
    ],
    [
      "std::option::Option::filter:1.50",
      "has argument",
      "predicate:1.50"
    ],
    [
      "std::option::Option::filter::predicate:1.50",
      "has type",
      "FnOnce(&T) -> bool:1.50"
    ],
    [
      "std::option::Option::filter:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "std::option::Option::filter:1.50",
      "has generic parameter",
      "P:1.50"
    ],
    [
      "std::option::Option::xor:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "std::option::Option::xor:1.50",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "std::option::Option::xor:1.50",
      "has argument",
      "optb:1.50"
    ],
    [
      "std::option::Option::xor::optb:1.50",
      "has type",
      "Option<T>:1.50"
    ],
    [
      "Iter:1.50",
      "implements",
      "Iterator:1.50"
    ],
    [
      "IterMut:1.50",
      "implements",
      "Iterator:1.50"
    ],
    [
      "filter:1.50",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns: Some(t) if predicate returns true (where t is the wrapped value), and None if predicate returns false."
    ],
    [
      "filter:1.50",
      "has argument",
      "predicate:1.50"
    ],
    [
      "predicate:1.50",
      "has type",
      "FnOnce(&T) -> bool:1.50"
    ],
    [
      "xor:1.50",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "or:1.50",
      "has description",
      "Returns the option if it contains a value, otherwise returns optb. Arguments passed to or are eagerly evaluated; if you are passing the result of a function call, it is recommended to use or_else, which is lazily evaluated."
    ],
    [
      "std::option::Option::insert:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option::zip:1.50",
      "has description",
      "Zips self with another Option."
    ],
    [
      "Option::zip:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "Option::zip::other:1.50",
      "has type",
      "Option<U>:1.50"
    ],
    [
      "Option::zip:1.50",
      "returns",
      "Option<(T, U)>:1.50"
    ],
    [
      "Option::zip:1.50",
      "has generic parameter",
      "U:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "has description",
      "Zips self and another Option with function f."
    ],
    [
      "Option::zip_with:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "Option::zip_with::other:1.50",
      "has type",
      "Option<U>:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "Option::zip_with::f:1.50",
      "has type",
      "FnOnce(T, U) -> R:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "returns",
      "Option<R>:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "has generic parameter",
      "U:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "has generic parameter",
      "F:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "has generic parameter",
      "R:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "has feature",
      "option_zip:1.50"
    ],
    [
      "Option::insert:1.50",
      "has description",
      "Inserts value into the option if it is None, then returns a mutable reference to the contained value."
    ],
    [
      "Option::insert:1.50",
      "has argument",
      "value:1.50"
    ],
    [
      "Option::insert::value:1.50",
      "has type",
      "T:1.50"
    ],
    [
      "Option::insert:1.50",
      "returns",
      "&mut T:1.50"
    ],
    [
      "Option::insert:1.50",
      "has feature",
      "nightly-only:1.50"
    ],
    [
      "Option::zip_with::f:1.50",
      "has type",
      "F:1.50"
    ],
    [
      "F:1.50",
      "requires trait",
      "FnOnce(T, U) -> R:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option::insert:1.50",
      "has description",
      "Inserts `value` into the option then returns a mutable reference to it."
    ],
    [
      "Option::insert:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option::zip_with:1.50",
      "requires trait",
      "FnOnce(T, U) -> R:1.50"
    ],
    [
      "std::option::Option::replace:1.50",
      "has alias",
      "replace"
    ],
    [
      "std::option::Option::replace:1.50",
      "has argument",
      "value:1.50"
    ],
    [
      "replace::value:1.50",
      "has type",
      "T:1.50"
    ],
    [
      "std::option::Option::replace:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "std::option::Option::replace:1.50",
      "has description",
      "Replaces the actual value in the option by the value given in parameter, returning the old value if present, leaving a Some in its place without deinitializing either one."
    ],
    [
      "std::option::Option::replace:1.50",
      "has stability",
      "experimental:1.50"
    ],
    [
      "std::option::Option::replace:1.50",
      "requires feature",
      "option_replace:1.50"
    ],
    [
      "std::option::Option::deref:1.50",
      "has alias",
      "deref"
    ],
    [
      "std::option::Option::deref:1.50",
      "returns",
      "Option<&T::Target>:1.50"
    ],
    [
      "std::option::Option::deref:1.50",
      "has description",
      "Converts from &Option<T> to Option<&T::Target>. Leaves the original Option in-place, creating a new one with a reference to the original one, additionally coercing the contents via Deref."
    ],
    [
      "std::option::Option::deref:1.50",
      "has stability",
      "experimental:1.50"
    ],
    [
      "std::option::Option::deref:1.50",
      "requires feature",
      "inner_deref:1.50"
    ],
    [
      "std::option::Option::transpose:1.50",
      "has alias",
      "transpose"
    ],
    [
      "std::option::Option::transpose:1.50",
      "returns",
      "Result<Option<T>, E>:1.50"
    ],
    [
      "std::option::Option::transpose:1.50",
      "has description",
      "Transposes an Option of a Result into a Result of an Option. None will be mapped to Ok(None). Some(Ok(_)) and Some(Err(_)) will be mapped to Ok(Some(_)) and Err(_)."
    ],
    [
      "std::option::Option::transpose:1.50",
      "has stability",
      "experimental:1.50"
    ],
    [
      "std::option::Option::transpose:1.50",
      "requires feature",
      "transpose_result:1.50"
    ],
    [
      "std::option::Option::replace:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "replace::self:1.50",
      "has type",
      "&mut self:1.50"
    ],
    [
      "std::option::Option::replace:1.50",
      "has description",
      "Replaces the actual value in the option by the value given in parameter, returning the old value if present."
    ],
    [
      "std::option::Option::replace:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option<&mut T>:1.50",
      "has method",
      "cloned:1.50"
    ],
    [
      "cloned:1.50",
      "has description",
      "Maps an Option<&mut T> to an Option<T> by cloning the contents of the option."
    ],
    [
      "std::option::Option::transpose:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "std::option::Option::transpose:1.50",
      "has description",
      "Transposes an Option of a Result into a Result of an Option."
    ],
    [
      "std::option::Option::deref:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "std::option::Option::deref:1.50"
    ],
    [
      "std::option::Option::deref:1.50",
      "has description",
      "Converts from &Option<T> to Option<&T::Target> via Deref."
    ],
    [
      "Option<Result<T, E>>:1.50",
      "has method",
      "std::option::Option::transpose:1.50"
    ],
    [
      "std::option::Option::transpose:1.50",
      "has description",
      "Transposes an Option of a Result into a Result of an Option. None maps to Ok(None), Some(Ok(_)) and Some(Err(_)) map to Ok(Some(_)) and Err(_)."
    ],
    [
      "Option::replace:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option::expect_none:1.50",
      "has feature",
      "option_expect_none:1.50"
    ],
    [
      "Option::unwrap_none:1.50",
      "has feature",
      "option_unwrap_none:1.50"
    ],
    [
      "Option::copied:1.50",
      "has description",
      "Maps an Option<&mut T> to an Option<T> by copying the contents of the option"
    ],
    [
      "Option::as_deref:1.50",
      "has description",
      "Converts from Option<T> to Option<&T::Target> via Deref"
    ],
    [
      "Option::as_deref_mut:1.50",
      "has description",
      "Converts from Option<T> to Option<&mut T::Target> via DerefMut"
    ],
    [
      "Option::replace:1.50",
      "has feature",
      "option_replace:1.50"
    ],
    [
      "Option::replace:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "Option::take:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "Option::get_or_insert_with:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "Option::get_or_insert_with::f:1.50",
      "has type",
      "F:1.50"
    ],
    [
      "Option::expect_none:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option::unwrap_none:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "Option::copied:1.50",
      "has description",
      "Maps an Option<&T> to an Option<T> by copying the contents of the option."
    ],
    [
      "Option::copied:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "Option::as_deref:1.50",
      "returns",
      "Option<&T::Target>:1.50"
    ],
    [
      "Option::as_deref_mut:1.50",
      "returns",
      "Option<&mut T::Target>:1.50"
    ],
    [
      "Option::expect_none:1.50",
      "has description",
      "Consumes self while expecting None and returning nothing."
    ],
    [
      "Option::unwrap_none:1.50",
      "has description",
      "Consumes self while expecting None and returning nothing."
    ],
    [
      "flatten:1.50",
      "has description",
      "Converts from Option<Option<T>> to Option<T>"
    ],
    [
      "flatten:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "flatten:1.50"
    ],
    [
      "flatten:1.50",
      "has version",
      "1.40.0:1.50"
    ],
    [
      "Option::expect_none:1.50",
      "has description",
      "Consumes self while expecting None and returning nothing. Panics if the value is a Some, with a custom panic message provided by the Some's value."
    ],
    [
      "Option::unwrap_none:1.50",
      "has description",
      "Consumes self while expecting None and returning nothing. Panics if the value is a Some, with a custom panic message provided by the Some's value."
    ],
    [
      "Option::flatten:1.50",
      "has description",
      "Converts from Option<Option<T>> to Option<T>"
    ],
    [
      "Option::flatten:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "PartialOrd:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Debug:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Eq:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Copy:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "From<&'a mut Option<T>>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "From<T>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "From<&'a Option<T>>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Hash:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Ord:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "PartialEq:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Try:1.50"
    ],
    [
      "Option<T> as Try:1.50",
      "has associated type",
      "Ok = T:1.50"
    ],
    [
      "Option<T> as Try:1.50",
      "has associated type",
      "Error = NoneError:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "partial_cmp:1.50"
    ],
    [
      "partial_cmp:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "partial_cmp:1.50",
      "returns",
      "Option<Ordering>:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "fmt:1.50"
    ],
    [
      "fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "fmt:1.50",
      "returns",
      "Result<(), Error>:1.50"
    ],
    [
      "Option<&'a mut T>:1.50",
      "implements",
      "From<&'a mut Option<T>>:1.50"
    ],
    [
      "Option<&'a T>:1.50",
      "implements",
      "From<&'a Option<T>>:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "into_result:1.50"
    ],
    [
      "into_result:1.50",
      "has return type",
      "Result<T, NoneError>:1.50"
    ],
    [
      "into_result:1.50",
      "has description",
      "Applies the `?` operator. A return of `Ok(t)` means execution continues normally; `Err(e)` branches to the innermost `catch` or returns from the function."
    ],
    [
      "Option<T>:1.50",
      "has method",
      "from_ok:1.50"
    ],
    [
      "from_ok:1.50",
      "has return type",
      "Option<T>:1.50"
    ],
    [
      "from_ok:1.50",
      "has description",
      "Wrap an OK value to construct the composite result."
    ],
    [
      "Option<T>:1.50",
      "has method",
      "from_error:1.50"
    ],
    [
      "from_error:1.50",
      "has return type",
      "Option<T>:1.50"
    ],
    [
      "from_error:1.50",
      "has description",
      "Wrap an error value to construct the composite result."
    ],
    [
      "Option<Option<T>>:1.50",
      "has method",
      "flatten:1.50"
    ],
    [
      "Option:1.50",
      "implements",
      "From:1.50"
    ],
    [
      "as_deref_mut:1.50",
      "returns",
      "Option<&mut <T as Deref>::Target>:1.50"
    ],
    [
      "as_deref_mut:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "as_deref_mut::self:1.50",
      "has type",
      "&mut self:1.50"
    ],
    [
      "flatten:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "flatten::self:1.50",
      "has type",
      "self:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "FromIterator<Option<A>>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Sum<Option<U>>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Clone:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "sum:1.50"
    ],
    [
      "as_deref_mut:1.50",
      "returns",
      "Option<&mut T::Target>:1.50"
    ],
    [
      "as_deref_mut:1.50",
      "has description",
      "Converts from Option<T> (or &mut Option<T>) to Option<&mut T::Target>."
    ],
    [
      "flatten:1.50",
      "has description",
      "Converts from Option<Option<T>> to Option<T>."
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Sum:1.50"
    ],
    [
      "sum:1.50",
      "has description",
      "Takes each element in the Iterator: if it is a None, no further elements are taken, and the None is returned. Should no None occur, the sum of all elements is returned."
    ],
    [
      "sum:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "clone:1.50"
    ],
    [
      "clone:1.50",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "Option<T>:1.50",
      "has method",
      "clone_from:1.50"
    ],
    [
      "clone_from:1.50",
      "has description",
      "Performs copy-assignment from source."
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Default:1.50"
    ],
    [
      "I:1.50",
      "implements",
      "IntoIterator:1.50"
    ],
    [
      "IntoIterator for I:1.50",
      "has associated type",
      "Item = <I as Iterator>::Item:1.50"
    ],
    [
      "IntoIterator for I:1.50",
      "has associated type",
      "IntoIter = I:1.50"
    ],
    [
      "I:1.50",
      "has method",
      "into_iter:1.50"
    ],
    [
      "into_iter:1.50",
      "returns",
      "I:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "TryInto:1.50"
    ],
    [
      "TryInto for T:1.50",
      "has associated type",
      "Error = <U as TryFrom<T>>::Error:1.50"
    ],
    [
      "T:1.50",
      "has method",
      "try_into:1.50"
    ],
    [
      "try_into:1.50",
      "returns",
      "Result<U, <U as TryFrom<T>>::Error>:1.50"
    ],
    [
      "try_into:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "try_into:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "try_into:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.50",
      "implements",
      "Into:1.50"
    ],
    [
      "T:1.50",
      "has method",
      "into:1.50"
    ],
    [
      "into:1.50",
      "returns",
      "U:1.50"
    ],
    [
      "into:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "Borrow:1.50"
    ],
    [
      "T:1.50",
      "has method",
      "borrow:1.50"
    ],
    [
      "borrow:1.50",
      "returns",
      "&T:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "BorrowMut:1.50"
    ],
    [
      "T:1.50",
      "has method",
      "borrow_mut:1.50"
    ],
    [
      "borrow_mut:1.50",
      "returns",
      "&mut T:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "Any:1.50"
    ],
    [
      "Any for T:1.50",
      "has method",
      "get_type_id:1.50"
    ],
    [
      "get_type_id:1.50",
      "returns",
      "TypeId:1.50"
    ],
    [
      "get_type_id:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "ToOwned:1.50"
    ],
    [
      "ToOwned for T:1.50",
      "has associated type",
      "Owned = T:1.50"
    ],
    [
      "T:1.50",
      "has method",
      "to_owned:1.50"
    ],
    [
      "to_owned:1.50",
      "returns",
      "T:1.50"
    ],
    [
      "T:1.50",
      "has method",
      "clone_into:1.50"
    ],
    [
      "clone_into:1.50",
      "has argument",
      "target: &mut T:1.50"
    ],
    [
      "clone_into:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "TryFrom<T> for U:1.50",
      "has associated type",
      "Error = Infallible:1.50"
    ],
    [
      "TryFrom<T> for U:1.50",
      "has method",
      "try_from:1.50"
    ],
    [
      "TryInto<U> for T:1.50",
      "has method",
      "try_into:1.50"
    ],
    [
      "Into<U> for T:1.50",
      "has method",
      "into:1.50"
    ],
    [
      "Borrow<T> for T:1.50",
      "has method",
      "borrow:1.50"
    ],
    [
      "BorrowMut<T> for T:1.50",
      "has method",
      "borrow_mut:1.50"
    ],
    [
      "Any for T:1.50",
      "has method",
      "type_id:1.50"
    ],
    [
      "ToOwned for T:1.50",
      "has method",
      "to_owned:1.50"
    ],
    [
      "ToOwned for T:1.50",
      "has method",
      "clone_into:1.50"
    ],
    [
      "TryFrom<T>:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "TryInto<U>:1.50",
      "has feature",
      "nightly-only experimental:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "Borrow<T>:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "BorrowMut<T>:1.50"
    ],
    [
      "T:1.50",
      "has method",
      "type_id:1.50"
    ],
    [
      "TryFrom<T>:1.50",
      "has associated type",
      "Error = Infallible:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "TryFrom<U>:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "Into<U>:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "TryInto<U>:1.50"
    ],
    [
      "IntoIterator:1.50",
      "has associated type",
      "Item = <I as Iterator>::Item:1.50"
    ],
    [
      "IntoIterator:1.50",
      "has associated type",
      "IntoIter = I:1.50"
    ],
    [
      "TryFrom<U> for T:1.50",
      "has associated type",
      "Error = Infallible:1.50"
    ],
    [
      "TryFrom<U> for T:1.50",
      "has method",
      "try_from:1.50"
    ],
    [
      "try_from:1.50",
      "returns",
      "Result<T, Infallible>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "PartialEq<Option<T>>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "PartialOrd<Option<T>>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "Product<Option<U>>:1.50"
    ],
    [
      "Option<T>:1.50",
      "implements",
      "IntoIterator:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "cmp:1.50"
    ],
    [
      "cmp:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "cmp:1.50",
      "returns",
      "Ordering:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "eq:1.50"
    ],
    [
      "eq:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "eq:1.50",
      "returns",
      "bool:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "ne:1.50"
    ],
    [
      "ne:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "ne:1.50",
      "returns",
      "bool:1.50"
    ],
    [
      "Option<T>:1.50",
      "has method",
      "product:1.50"
    ],
    [
      "product:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "Option<T>::Try:1.50",
      "has associated type",
      "Ok=T:1.50"
    ],
    [
      "Option<T>::Try:1.50",
      "has associated type",
      "Error=NoneError:1.50"
    ],
    [
      "into_result:1.50",
      "returns",
      "Result<T, NoneError>:1.50"
    ],
    [
      "from_ok:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "from_error:1.50",
      "returns",
      "Option<T>:1.50"
    ],
    [
      "From<!> for T:1.50",
      "has method",
      "from:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "From<!>:1.50"
    ],
    [
      "From<T> for T:1.50",
      "has method",
      "from:1.50"
    ],
    [
      "T:1.50",
      "implements",
      "From<T>:1.50"
    ],
    [
      "TryInto<U> for T:1.50",
      "has associated type",
      "Error = <U as TryFrom<T>>::Error:1.50"
    ],
    [
      "std::option:1.30",
      "contains",
      "NoneError:1.30"
    ],
    [
      "Option:1.30",
      "contains",
      "as_pin_mut:1.30"
    ],
    [
      "Option::as_pin_mut:1.30",
      "has description",
      "Converts from Option<T> to Option<PinMut<'_, T>>"
    ],
    [
      "Option:1.30",
      "contains",
      "iter:1.30"
    ],
    [
      "Option::iter:1.30",
      "has description",
      "An iterator over a reference to the Some variant of an Option."
    ],
    [
      "Option:1.30",
      "contains",
      "iter_mut:1.30"
    ],
    [
      "Option::iter_mut:1.30",
      "has description",
      "An iterator over a mutable reference to the Some variant of an Option."
    ],
    [
      "Option:1.30",
      "contains",
      "and:1.30"
    ],
    [
      "Option::and:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "and_then:1.30"
    ],
    [
      "Option::and_then:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "filter:1.30"
    ],
    [
      "Option::filter:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "or:1.30"
    ],
    [
      "Option::or:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "or_else:1.30"
    ],
    [
      "Option::or_else:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "xor:1.30"
    ],
    [
      "Option::xor:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "get_or_insert:1.30"
    ],
    [
      "Option::get_or_insert:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "get_or_insert_with:1.30"
    ],
    [
      "Option::get_or_insert_with:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "take:1.30"
    ],
    [
      "Option::take:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "std::option::Option::replace:1.30"
    ],
    [
      "Option::replace:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "cloned:1.30"
    ],
    [
      "Option::cloned:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "unwrap_or_default:1.30"
    ],
    [
      "Option::unwrap_or_default:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "std::option::Option::deref:1.30"
    ],
    [
      "Option::deref:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "contains",
      "std::option::Option::transpose:1.30"
    ],
    [
      "Option::transpose:1.30",
      "has description",
      "..."
    ],
    [
      "Option:1.30",
      "implements",
      "IntoIterator:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "Hash:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "Clone:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "PartialOrd:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "Ord:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "Debug:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "Eq:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "PartialEq:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "From<&'a mut Option<T>>:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "From<T>:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "From<&'a Option<T>>:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "Copy:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "FromIterator:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "Try:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "Default:1.30"
    ],
    [
      "NoneError:1.30",
      "has description",
      "The error type that results from applying the try operator (`?`) to a `None` value. If you wish to allow `x?` (where `x` is an `Option<T>`) to be converted into your error type, you can implement `impl From<NoneError>` for `YourErrorType`. In that case, `x?` within a function that returns `Result<_, YourErrorType>` will translate a `None` value into an `Err` result."
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "as_pin_mut:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "iter:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "iter_mut:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "and:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "and_then:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "filter:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "or:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "or_else:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "xor:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "get_or_insert:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "get_or_insert_with:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "take:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "std::option::Option::replace:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "cloned:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "unwrap_or_default:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "std::option::Option::deref:1.30"
    ],
    [
      "std::option::Option:1.30",
      "has method",
      "std::option::Option::transpose:1.30"
    ],
    [
      "std::option::Option::as_pin_mut:1.30",
      "has feature",
      "nightly-only experimental:1.30"
    ],
    [
      "std::option::NoneError:1.30",
      "has description",
      "The error type that results from applying the try operator (`?`) to a `None` value. If you wish to allow `x?` (where `x` is an `Option<T>`) to be converted into your error type, you can implement `impl From<NoneError>` for `YourErrorType`. In that case, `x?` within a function that returns `Result<_, YourErrorType>` will translate a `None` value into an `Err` result."
    ],
    [
      "option:1.30",
      "contains",
      "NoneError:1.30"
    ],
    [
      "NoneError:1.30",
      "is a",
      "struct"
    ],
    [
      "Option:1.30",
      "has method",
      "as_pin_mut:1.30"
    ],
    [
      "Option::as_pin_mut:1.30",
      "has description",
      "Converts from `Option<T>` to `Option<PinMut<'_, T>>`"
    ],
    [
      "Option:1.30",
      "has method",
      "iter:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "iter_mut:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "and:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "and_then:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "filter:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "or:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "or_else:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "xor:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "get_or_insert:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "get_or_insert_with:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "take:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "std::option::Option::replace:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "cloned:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "unwrap_or_default:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "std::option::Option::deref:1.30"
    ],
    [
      "Option:1.30",
      "has method",
      "std::option::Option::transpose:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "PartialOrd<Option<T>>:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "PartialEq<Option<T>>:1.30"
    ],
    [
      "Option:1.30",
      "implements",
      "FromIterator<Option<A>>:1.30"
    ],
    [
      "Option::filter:1.30",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."
    ],
    [
      "Option::filter:1.30",
      "has generic parameter",
      "P:1.30"
    ],
    [
      "P:1.30",
      "requires trait",
      "FnOnce(&T) -> bool:1.30"
    ],
    [
      "Option::filter:1.30",
      "has argument",
      "predicate:1.30"
    ],
    [
      "Option::filter::predicate:1.30",
      "has type",
      "P:1.30"
    ],
    [
      "Option::xor:1.30",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "Option::xor:1.30",
      "requires feature",
      "option_xor:1.30"
    ],
    [
      "Option::xor:1.30",
      "has stability",
      "experimental:1.30"
    ],
    [
      "Option::xor:1.30",
      "has argument",
      "optb:1.30"
    ],
    [
      "Option::xor::optb:1.30",
      "has type",
      "Option<T>:1.30"
    ],
    [
      "Option::xor:1.30",
      "returns",
      "Option<T>:1.30"
    ],
    [
      "std::option::Option::filter:1.30",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."
    ],
    [
      "std::option::Option::filter:1.30",
      "has argument",
      "predicate:1.30"
    ],
    [
      "std::option::Option::filter::predicate:1.30",
      "has type",
      "FnOnce(&T) -> bool:1.30"
    ],
    [
      "std::option::Option::filter:1.30",
      "returns",
      "Option<T>:1.30"
    ],
    [
      "std::option::Option::filter:1.30",
      "has generic parameter",
      "P:1.30"
    ],
    [
      "std::option::Option::xor:1.30",
      "has feature",
      "nightly-only experimental:1.30"
    ],
    [
      "std::option::Option::xor:1.30",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "std::option::Option::xor:1.30",
      "has argument",
      "optb:1.30"
    ],
    [
      "std::option::Option::xor::optb:1.30",
      "has type",
      "Option<T>:1.30"
    ],
    [
      "Iter:1.30",
      "implements",
      "Iterator:1.30"
    ],
    [
      "IterMut:1.30",
      "implements",
      "Iterator:1.30"
    ],
    [
      "filter:1.30",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns: Some(t) if predicate returns true (where t is the wrapped value), and None if predicate returns false."
    ],
    [
      "filter:1.30",
      "has argument",
      "predicate:1.30"
    ],
    [
      "predicate:1.30",
      "has type",
      "FnOnce(&T) -> bool:1.30"
    ],
    [
      "xor:1.30",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "or:1.30",
      "has description",
      "Returns the option if it contains a value, otherwise returns optb. Arguments passed to or are eagerly evaluated; if you are passing the result of a function call, it is recommended to use or_else, which is lazily evaluated."
    ],
    [
      "std::option::Option::replace:1.30",
      "has alias",
      "replace"
    ],
    [
      "std::option::Option::replace:1.30",
      "has argument",
      "value:1.30"
    ],
    [
      "replace::value:1.30",
      "has type",
      "T:1.30"
    ],
    [
      "std::option::Option::replace:1.30",
      "returns",
      "Option<T>:1.30"
    ],
    [
      "std::option::Option::replace:1.30",
      "has description",
      "Replaces the actual value in the option by the value given in parameter, returning the old value if present, leaving a Some in its place without deinitializing either one."
    ],
    [
      "std::option::Option::replace:1.30",
      "has stability",
      "experimental:1.30"
    ],
    [
      "std::option::Option::replace:1.30",
      "requires feature",
      "option_replace:1.30"
    ],
    [
      "std::option::Option::deref:1.30",
      "has alias",
      "deref"
    ],
    [
      "std::option::Option::deref:1.30",
      "returns",
      "Option<&T::Target>:1.30"
    ],
    [
      "std::option::Option::deref:1.30",
      "has description",
      "Converts from &Option<T> to Option<&T::Target>. Leaves the original Option in-place, creating a new one with a reference to the original one, additionally coercing the contents via Deref."
    ],
    [
      "std::option::Option::deref:1.30",
      "has stability",
      "experimental:1.30"
    ],
    [
      "std::option::Option::deref:1.30",
      "requires feature",
      "inner_deref:1.30"
    ],
    [
      "std::option::Option::transpose:1.30",
      "has alias",
      "transpose"
    ],
    [
      "std::option::Option::transpose:1.30",
      "returns",
      "Result<Option<T>, E>:1.30"
    ],
    [
      "std::option::Option::transpose:1.30",
      "has description",
      "Transposes an Option of a Result into a Result of an Option. None will be mapped to Ok(None). Some(Ok(_)) and Some(Err(_)) will be mapped to Ok(Some(_)) and Err(_)."
    ],
    [
      "std::option::Option::transpose:1.30",
      "has stability",
      "experimental:1.30"
    ],
    [
      "std::option::Option::transpose:1.30",
      "requires feature",
      "transpose_result:1.30"
    ],
    [
      "std::option::Option::replace:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "replace::self:1.30",
      "has type",
      "&mut self:1.30"
    ],
    [
      "std::option::Option::replace:1.30",
      "has description",
      "Replaces the actual value in the option by the value given in parameter, returning the old value if present."
    ],
    [
      "std::option::Option::replace:1.30",
      "has feature",
      "nightly-only experimental:1.30"
    ],
    [
      "Option<&mut T>:1.30",
      "has method",
      "cloned:1.30"
    ],
    [
      "cloned:1.30",
      "has description",
      "Maps an Option<&mut T> to an Option<T> by cloning the contents of the option."
    ],
    [
      "std::option::Option::transpose:1.30",
      "has feature",
      "nightly-only experimental:1.30"
    ],
    [
      "std::option::Option::transpose:1.30",
      "has description",
      "Transposes an Option of a Result into a Result of an Option."
    ],
    [
      "std::option::Option::deref:1.30",
      "has feature",
      "nightly-only experimental:1.30"
    ],
    [
      "Option<T>:1.30",
      "has method",
      "std::option::Option::deref:1.30"
    ],
    [
      "std::option::Option::deref:1.30",
      "has description",
      "Converts from &Option<T> to Option<&T::Target> via Deref."
    ],
    [
      "Option<Result<T, E>>:1.30",
      "has method",
      "std::option::Option::transpose:1.30"
    ],
    [
      "std::option::Option::transpose:1.30",
      "has description",
      "Transposes an Option of a Result into a Result of an Option. None maps to Ok(None), Some(Ok(_)) and Some(Err(_)) map to Ok(Some(_)) and Err(_)."
    ],
    [
      "Option<T>:1.30",
      "implements",
      "PartialOrd:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "Debug:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "Eq:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "Copy:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "From<&'a mut Option<T>>:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "From<T>:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "From<&'a Option<T>>:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "Hash:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "Ord:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "PartialEq:1.30"
    ],
    [
      "Option<T>:1.30",
      "implements",
      "Try:1.30"
    ],
    [
      "Option<T> as Try:1.30",
      "has associated type",
      "Ok = T:1.30"
    ],
    [
      "Option<T> as Try:1.30",
      "has associated type",
      "Error = NoneError:1.30"
    ],
    [
      "Option<T>:1.30",
      "has method",
      "partial_cmp:1.30"
    ],
    [
      "partial_cmp:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "partial_cmp:1.30",
      "returns",
      "Option<Ordering>:1.30"
    ],
    [
      "Option<T>:1.30",
      "has method",
      "fmt:1.30"
    ],
    [
      "fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "fmt:1.30",
      "returns",
      "Result<(), Error>:1.30"
    ],
    [
      "Option<&'a mut T>:1.30",
      "implements",
      "From<&'a mut Option<T>>:1.30"
    ],
    [
      "Option<&'a T>:1.30",
      "implements",
      "From<&'a Option<T>>:1.30"
    ],
    [
      "Option<T>:1.30",
      "has method",
      "into_result:1.30"
    ],
    [
      "into_result:1.30",
      "has return type",
      "Result<T, NoneError>:1.30"
    ],
    [
      "into_result:1.30",
      "has description",
      "Applies the `?` operator. A return of `Ok(t)` means execution continues normally; `Err(e)` branches to the innermost `catch` or returns from the function."
    ],
    [
      "Option<T>:1.30",
      "has method",
      "from_ok:1.30"
    ],
    [
      "from_ok:1.30",
      "has return type",
      "Option<T>:1.30"
    ],
    [
      "from_ok:1.30",
      "has description",
      "Wrap an OK value to construct the composite result."
    ],
    [
      "Option<T>:1.30",
      "has method",
      "from_error:1.30"
    ],
    [
      "from_error:1.30",
      "has return type",
      "Option<T>:1.30"
    ],
    [
      "from_error:1.30",
      "has description",
      "Wrap an error value to construct the composite result."
    ],
    [
      "I:1.30",
      "implements",
      "IntoIterator:1.30"
    ],
    [
      "IntoIterator for I:1.30",
      "has associated type",
      "Item = <I as Iterator>::Item:1.30"
    ],
    [
      "IntoIterator for I:1.30",
      "has associated type",
      "IntoIter = I:1.30"
    ],
    [
      "I:1.30",
      "has method",
      "into_iter:1.30"
    ],
    [
      "into_iter:1.30",
      "returns",
      "I:1.30"
    ],
    [
      "T:1.30",
      "implements",
      "TryInto:1.30"
    ],
    [
      "TryInto for T:1.30",
      "has associated type",
      "Error = <U as TryFrom<T>>::Error:1.30"
    ],
    [
      "T:1.30",
      "has method",
      "try_into:1.30"
    ],
    [
      "try_into:1.30",
      "returns",
      "Result<U, <U as TryFrom<T>>::Error>:1.30"
    ],
    [
      "try_into:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "try_into:1.30",
      "has feature",
      "nightly-only experimental:1.30"
    ],
    [
      "try_into:1.30",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.30",
      "implements",
      "Into:1.30"
    ],
    [
      "T:1.30",
      "has method",
      "into:1.30"
    ],
    [
      "into:1.30",
      "returns",
      "U:1.30"
    ],
    [
      "into:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "T:1.30",
      "implements",
      "Borrow:1.30"
    ],
    [
      "T:1.30",
      "has method",
      "borrow:1.30"
    ],
    [
      "borrow:1.30",
      "returns",
      "&T:1.30"
    ],
    [
      "T:1.30",
      "implements",
      "BorrowMut:1.30"
    ],
    [
      "T:1.30",
      "has method",
      "borrow_mut:1.30"
    ],
    [
      "borrow_mut:1.30",
      "returns",
      "&mut T:1.30"
    ],
    [
      "T:1.30",
      "implements",
      "Any:1.30"
    ],
    [
      "Any for T:1.30",
      "has method",
      "get_type_id:1.30"
    ],
    [
      "get_type_id:1.30",
      "returns",
      "TypeId:1.30"
    ],
    [
      "get_type_id:1.30",
      "has feature",
      "nightly-only experimental:1.30"
    ],
    [
      "T:1.30",
      "implements",
      "ToOwned:1.30"
    ],
    [
      "ToOwned for T:1.30",
      "has associated type",
      "Owned = T:1.30"
    ],
    [
      "T:1.30",
      "has method",
      "to_owned:1.30"
    ],
    [
      "to_owned:1.30",
      "returns",
      "T:1.30"
    ],
    [
      "T:1.30",
      "has method",
      "clone_into:1.30"
    ],
    [
      "clone_into:1.30",
      "has argument",
      "target: &mut T:1.30"
    ],
    [
      "clone_into:1.30",
      "has feature",
      "nightly-only experimental:1.30"
    ],
    [
      "std::option:1.40",
      "contains",
      "NoneError:1.40"
    ],
    [
      "Option:1.40",
      "contains",
      "as_pin_mut:1.40"
    ],
    [
      "Option::as_pin_mut:1.40",
      "has description",
      "Converts from Option<T> to Option<PinMut<'_, T>>"
    ],
    [
      "Option:1.40",
      "contains",
      "iter:1.40"
    ],
    [
      "Option::iter:1.40",
      "has description",
      "An iterator over a reference to the Some variant of an Option."
    ],
    [
      "Option:1.40",
      "contains",
      "iter_mut:1.40"
    ],
    [
      "Option::iter_mut:1.40",
      "has description",
      "An iterator over a mutable reference to the Some variant of an Option."
    ],
    [
      "Option:1.40",
      "contains",
      "and:1.40"
    ],
    [
      "Option::and:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "and_then:1.40"
    ],
    [
      "Option::and_then:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "filter:1.40"
    ],
    [
      "Option::filter:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "or:1.40"
    ],
    [
      "Option::or:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "or_else:1.40"
    ],
    [
      "Option::or_else:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "xor:1.40"
    ],
    [
      "Option::xor:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "get_or_insert:1.40"
    ],
    [
      "Option::get_or_insert:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "get_or_insert_with:1.40"
    ],
    [
      "Option::get_or_insert_with:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "take:1.40"
    ],
    [
      "Option::take:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "std::option::Option::replace:1.40"
    ],
    [
      "Option::replace:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "cloned:1.40"
    ],
    [
      "Option::cloned:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "unwrap_or_default:1.40"
    ],
    [
      "Option::unwrap_or_default:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "std::option::Option::deref:1.40"
    ],
    [
      "Option::deref:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "contains",
      "std::option::Option::transpose:1.40"
    ],
    [
      "Option::transpose:1.40",
      "has description",
      "..."
    ],
    [
      "Option:1.40",
      "implements",
      "IntoIterator:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Hash:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Clone:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "PartialOrd:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Ord:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Debug:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Eq:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "PartialEq:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "From<&'a mut Option<T>>:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "From<T>:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "From<&'a Option<T>>:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Copy:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "FromIterator:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Try:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Default:1.40"
    ],
    [
      "NoneError:1.40",
      "has description",
      "The error type that results from applying the try operator (`?`) to a `None` value. If you wish to allow `x?` (where `x` is an `Option<T>`) to be converted into your error type, you can implement `impl From<NoneError>` for `YourErrorType`. In that case, `x?` within a function that returns `Result<_, YourErrorType>` will translate a `None` value into an `Err` result."
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "as_pin_mut:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "iter:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "iter_mut:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "and:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "and_then:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "filter:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "or:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "or_else:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "xor:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "get_or_insert:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "get_or_insert_with:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "take:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "std::option::Option::replace:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "cloned:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "unwrap_or_default:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "std::option::Option::deref:1.40"
    ],
    [
      "std::option::Option:1.40",
      "has method",
      "std::option::Option::transpose:1.40"
    ],
    [
      "std::option::Option::as_pin_mut:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "std::option::NoneError:1.40",
      "has description",
      "The error type that results from applying the try operator (`?`) to a `None` value. If you wish to allow `x?` (where `x` is an `Option<T>`) to be converted into your error type, you can implement `impl From<NoneError>` for `YourErrorType`. In that case, `x?` within a function that returns `Result<_, YourErrorType>` will translate a `None` value into an `Err` result."
    ],
    [
      "option:1.40",
      "contains",
      "NoneError:1.40"
    ],
    [
      "NoneError:1.40",
      "is a",
      "struct"
    ],
    [
      "Option:1.40",
      "has method",
      "as_pin_mut:1.40"
    ],
    [
      "Option::as_pin_mut:1.40",
      "has description",
      "Converts from `Option<T>` to `Option<PinMut<'_, T>>`"
    ],
    [
      "Option:1.40",
      "has method",
      "iter:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "iter_mut:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "and:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "and_then:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "filter:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "or:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "or_else:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "xor:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "get_or_insert:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "get_or_insert_with:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "take:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "std::option::Option::replace:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "cloned:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "unwrap_or_default:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "std::option::Option::deref:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "std::option::Option::transpose:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "PartialOrd<Option<T>>:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "PartialEq<Option<T>>:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "FromIterator<Option<A>>:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "contains:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "as_deref:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "as_deref_mut:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "copied:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "flatten:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "expect_none:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "unwrap_none:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Product<Option<U>>:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "StructuralEq:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "StructuralPartialEq:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Sum<Option<U>>:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "RefUnwindSafe:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Send:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Sync:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Unpin:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "UnwindSafe:1.40"
    ],
    [
      "Option::contains:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "Option:1.40",
      "has method",
      "as_pin_ref:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Product:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "Sum:1.40"
    ],
    [
      "Option::filter:1.40",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."
    ],
    [
      "Option::filter:1.40",
      "has generic parameter",
      "P:1.40"
    ],
    [
      "P:1.40",
      "requires trait",
      "FnOnce(&T) -> bool:1.40"
    ],
    [
      "Option::filter:1.40",
      "has argument",
      "predicate:1.40"
    ],
    [
      "Option::filter::predicate:1.40",
      "has type",
      "P:1.40"
    ],
    [
      "Option::xor:1.40",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "Option::xor:1.40",
      "requires feature",
      "option_xor:1.40"
    ],
    [
      "Option::xor:1.40",
      "has stability",
      "experimental:1.40"
    ],
    [
      "Option::xor:1.40",
      "has argument",
      "optb:1.40"
    ],
    [
      "Option::xor::optb:1.40",
      "has type",
      "Option<T>:1.40"
    ],
    [
      "Option::xor:1.40",
      "returns",
      "Option<T>:1.40"
    ],
    [
      "std::option::Option::filter:1.40",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns the result."
    ],
    [
      "std::option::Option::filter:1.40",
      "has argument",
      "predicate:1.40"
    ],
    [
      "std::option::Option::filter::predicate:1.40",
      "has type",
      "FnOnce(&T) -> bool:1.40"
    ],
    [
      "std::option::Option::filter:1.40",
      "returns",
      "Option<T>:1.40"
    ],
    [
      "std::option::Option::filter:1.40",
      "has generic parameter",
      "P:1.40"
    ],
    [
      "std::option::Option::xor:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "std::option::Option::xor:1.40",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "std::option::Option::xor:1.40",
      "has argument",
      "optb:1.40"
    ],
    [
      "std::option::Option::xor::optb:1.40",
      "has type",
      "Option<T>:1.40"
    ],
    [
      "Iter:1.40",
      "implements",
      "Iterator:1.40"
    ],
    [
      "IterMut:1.40",
      "implements",
      "Iterator:1.40"
    ],
    [
      "filter:1.40",
      "has description",
      "Returns None if the option is None, otherwise calls predicate with the wrapped value and returns: Some(t) if predicate returns true (where t is the wrapped value), and None if predicate returns false."
    ],
    [
      "filter:1.40",
      "has argument",
      "predicate:1.40"
    ],
    [
      "predicate:1.40",
      "has type",
      "FnOnce(&T) -> bool:1.40"
    ],
    [
      "xor:1.40",
      "has description",
      "Returns Some if exactly one of self, optb is Some, otherwise returns None."
    ],
    [
      "or:1.40",
      "has description",
      "Returns the option if it contains a value, otherwise returns optb. Arguments passed to or are eagerly evaluated; if you are passing the result of a function call, it is recommended to use or_else, which is lazily evaluated."
    ],
    [
      "std::option::Option::replace:1.40",
      "has alias",
      "replace"
    ],
    [
      "std::option::Option::replace:1.40",
      "has argument",
      "value:1.40"
    ],
    [
      "replace::value:1.40",
      "has type",
      "T:1.40"
    ],
    [
      "std::option::Option::replace:1.40",
      "returns",
      "Option<T>:1.40"
    ],
    [
      "std::option::Option::replace:1.40",
      "has description",
      "Replaces the actual value in the option by the value given in parameter, returning the old value if present, leaving a Some in its place without deinitializing either one."
    ],
    [
      "std::option::Option::replace:1.40",
      "has stability",
      "experimental:1.40"
    ],
    [
      "std::option::Option::replace:1.40",
      "requires feature",
      "option_replace:1.40"
    ],
    [
      "std::option::Option::deref:1.40",
      "has alias",
      "deref"
    ],
    [
      "std::option::Option::deref:1.40",
      "returns",
      "Option<&T::Target>:1.40"
    ],
    [
      "std::option::Option::deref:1.40",
      "has description",
      "Converts from &Option<T> to Option<&T::Target>. Leaves the original Option in-place, creating a new one with a reference to the original one, additionally coercing the contents via Deref."
    ],
    [
      "std::option::Option::deref:1.40",
      "has stability",
      "experimental:1.40"
    ],
    [
      "std::option::Option::deref:1.40",
      "requires feature",
      "inner_deref:1.40"
    ],
    [
      "std::option::Option::transpose:1.40",
      "has alias",
      "transpose"
    ],
    [
      "std::option::Option::transpose:1.40",
      "returns",
      "Result<Option<T>, E>:1.40"
    ],
    [
      "std::option::Option::transpose:1.40",
      "has description",
      "Transposes an Option of a Result into a Result of an Option. None will be mapped to Ok(None). Some(Ok(_)) and Some(Err(_)) will be mapped to Ok(Some(_)) and Err(_)."
    ],
    [
      "std::option::Option::transpose:1.40",
      "has stability",
      "experimental:1.40"
    ],
    [
      "std::option::Option::transpose:1.40",
      "requires feature",
      "transpose_result:1.40"
    ],
    [
      "std::option::Option::replace:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "replace::self:1.40",
      "has type",
      "&mut self:1.40"
    ],
    [
      "std::option::Option::replace:1.40",
      "has description",
      "Replaces the actual value in the option by the value given in parameter, returning the old value if present."
    ],
    [
      "std::option::Option::replace:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "Option<&mut T>:1.40",
      "has method",
      "cloned:1.40"
    ],
    [
      "cloned:1.40",
      "has description",
      "Maps an Option<&mut T> to an Option<T> by cloning the contents of the option."
    ],
    [
      "std::option::Option::transpose:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "std::option::Option::transpose:1.40",
      "has description",
      "Transposes an Option of a Result into a Result of an Option."
    ],
    [
      "std::option::Option::deref:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "Option<T>:1.40",
      "has method",
      "std::option::Option::deref:1.40"
    ],
    [
      "std::option::Option::deref:1.40",
      "has description",
      "Converts from &Option<T> to Option<&T::Target> via Deref."
    ],
    [
      "Option<Result<T, E>>:1.40",
      "has method",
      "std::option::Option::transpose:1.40"
    ],
    [
      "std::option::Option::transpose:1.40",
      "has description",
      "Transposes an Option of a Result into a Result of an Option. None maps to Ok(None), Some(Ok(_)) and Some(Err(_)) map to Ok(Some(_)) and Err(_)."
    ],
    [
      "Option::replace:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "Option::expect_none:1.40",
      "has feature",
      "option_expect_none:1.40"
    ],
    [
      "Option::unwrap_none:1.40",
      "has feature",
      "option_unwrap_none:1.40"
    ],
    [
      "Option::copied:1.40",
      "has description",
      "Maps an Option<&mut T> to an Option<T> by copying the contents of the option"
    ],
    [
      "Option::as_deref:1.40",
      "has description",
      "Converts from Option<T> to Option<&T::Target> via Deref"
    ],
    [
      "Option::as_deref_mut:1.40",
      "has description",
      "Converts from Option<T> to Option<&mut T::Target> via DerefMut"
    ],
    [
      "Option::replace:1.40",
      "has feature",
      "option_replace:1.40"
    ],
    [
      "Option::replace:1.40",
      "returns",
      "Option<T>:1.40"
    ],
    [
      "Option::take:1.40",
      "returns",
      "Option<T>:1.40"
    ],
    [
      "Option::get_or_insert_with:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "Option::get_or_insert_with::f:1.40",
      "has type",
      "F:1.40"
    ],
    [
      "Option::expect_none:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "Option::unwrap_none:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "Option::copied:1.40",
      "has description",
      "Maps an Option<&T> to an Option<T> by copying the contents of the option."
    ],
    [
      "Option::copied:1.40",
      "returns",
      "Option<T>:1.40"
    ],
    [
      "Option::as_deref:1.40",
      "returns",
      "Option<&T::Target>:1.40"
    ],
    [
      "Option::as_deref_mut:1.40",
      "returns",
      "Option<&mut T::Target>:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "PartialOrd:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Debug:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Eq:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Copy:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "From<&'a mut Option<T>>:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "From<T>:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "From<&'a Option<T>>:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Hash:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Ord:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "PartialEq:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Try:1.40"
    ],
    [
      "Option<T> as Try:1.40",
      "has associated type",
      "Ok = T:1.40"
    ],
    [
      "Option<T> as Try:1.40",
      "has associated type",
      "Error = NoneError:1.40"
    ],
    [
      "Option<T>:1.40",
      "has method",
      "partial_cmp:1.40"
    ],
    [
      "partial_cmp:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "partial_cmp:1.40",
      "returns",
      "Option<Ordering>:1.40"
    ],
    [
      "Option<T>:1.40",
      "has method",
      "fmt:1.40"
    ],
    [
      "fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "fmt:1.40",
      "returns",
      "Result<(), Error>:1.40"
    ],
    [
      "Option<&'a mut T>:1.40",
      "implements",
      "From<&'a mut Option<T>>:1.40"
    ],
    [
      "Option<&'a T>:1.40",
      "implements",
      "From<&'a Option<T>>:1.40"
    ],
    [
      "Option<T>:1.40",
      "has method",
      "into_result:1.40"
    ],
    [
      "into_result:1.40",
      "has return type",
      "Result<T, NoneError>:1.40"
    ],
    [
      "into_result:1.40",
      "has description",
      "Applies the `?` operator. A return of `Ok(t)` means execution continues normally; `Err(e)` branches to the innermost `catch` or returns from the function."
    ],
    [
      "Option<T>:1.40",
      "has method",
      "from_ok:1.40"
    ],
    [
      "from_ok:1.40",
      "has return type",
      "Option<T>:1.40"
    ],
    [
      "from_ok:1.40",
      "has description",
      "Wrap an OK value to construct the composite result."
    ],
    [
      "Option<T>:1.40",
      "has method",
      "from_error:1.40"
    ],
    [
      "from_error:1.40",
      "has return type",
      "Option<T>:1.40"
    ],
    [
      "from_error:1.40",
      "has description",
      "Wrap an error value to construct the composite result."
    ],
    [
      "Option::flatten:1.40",
      "has description",
      "Converts from Option<Option<T>> to Option<T>"
    ],
    [
      "Option<Option<T>>:1.40",
      "has method",
      "flatten:1.40"
    ],
    [
      "Option:1.40",
      "implements",
      "From:1.40"
    ],
    [
      "as_deref_mut:1.40",
      "returns",
      "Option<&mut <T as Deref>::Target>:1.40"
    ],
    [
      "as_deref_mut:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "as_deref_mut::self:1.40",
      "has type",
      "&mut self:1.40"
    ],
    [
      "flatten:1.40",
      "returns",
      "Option<T>:1.40"
    ],
    [
      "flatten:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "flatten::self:1.40",
      "has type",
      "self:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "FromIterator<Option<A>>:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Sum<Option<U>>:1.40"
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Clone:1.40"
    ],
    [
      "Option<T>:1.40",
      "has method",
      "sum:1.40"
    ],
    [
      "as_deref_mut:1.40",
      "returns",
      "Option<&mut T::Target>:1.40"
    ],
    [
      "as_deref_mut:1.40",
      "has description",
      "Converts from Option<T> (or &mut Option<T>) to Option<&mut T::Target>."
    ],
    [
      "flatten:1.40",
      "has description",
      "Converts from Option<Option<T>> to Option<T>."
    ],
    [
      "Option<T>:1.40",
      "implements",
      "Sum:1.40"
    ],
    [
      "sum:1.40",
      "has description",
      "Takes each element in the Iterator: if it is a None, no further elements are taken, and the None is returned. Should no None occur, the sum of all elements is returned."
    ],
    [
      "sum:1.40",
      "returns",
      "Option<T>:1.40"
    ],
    [
      "Option<T>:1.40",
      "has method",
      "clone:1.40"
    ],
    [
      "clone:1.40",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "Option<T>:1.40",
      "has method",
      "clone_from:1.40"
    ],
    [
      "clone_from:1.40",
      "has description",
      "Performs copy-assignment from source."
    ],
    [
      "I:1.40",
      "implements",
      "IntoIterator:1.40"
    ],
    [
      "IntoIterator for I:1.40",
      "has associated type",
      "Item = <I as Iterator>::Item:1.40"
    ],
    [
      "IntoIterator for I:1.40",
      "has associated type",
      "IntoIter = I:1.40"
    ],
    [
      "I:1.40",
      "has method",
      "into_iter:1.40"
    ],
    [
      "into_iter:1.40",
      "returns",
      "I:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "TryInto:1.40"
    ],
    [
      "TryInto for T:1.40",
      "has associated type",
      "Error = <U as TryFrom<T>>::Error:1.40"
    ],
    [
      "T:1.40",
      "has method",
      "try_into:1.40"
    ],
    [
      "try_into:1.40",
      "returns",
      "Result<U, <U as TryFrom<T>>::Error>:1.40"
    ],
    [
      "try_into:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "try_into:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "try_into:1.40",
      "has description",
      "Performs the conversion."
    ],
    [
      "T:1.40",
      "implements",
      "Into:1.40"
    ],
    [
      "T:1.40",
      "has method",
      "into:1.40"
    ],
    [
      "into:1.40",
      "returns",
      "U:1.40"
    ],
    [
      "into:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "Borrow:1.40"
    ],
    [
      "T:1.40",
      "has method",
      "borrow:1.40"
    ],
    [
      "borrow:1.40",
      "returns",
      "&T:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "BorrowMut:1.40"
    ],
    [
      "T:1.40",
      "has method",
      "borrow_mut:1.40"
    ],
    [
      "borrow_mut:1.40",
      "returns",
      "&mut T:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "Any:1.40"
    ],
    [
      "Any for T:1.40",
      "has method",
      "get_type_id:1.40"
    ],
    [
      "get_type_id:1.40",
      "returns",
      "TypeId:1.40"
    ],
    [
      "get_type_id:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "ToOwned:1.40"
    ],
    [
      "ToOwned for T:1.40",
      "has associated type",
      "Owned = T:1.40"
    ],
    [
      "T:1.40",
      "has method",
      "to_owned:1.40"
    ],
    [
      "to_owned:1.40",
      "returns",
      "T:1.40"
    ],
    [
      "T:1.40",
      "has method",
      "clone_into:1.40"
    ],
    [
      "clone_into:1.40",
      "has argument",
      "target: &mut T:1.40"
    ],
    [
      "clone_into:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "TryFrom<T> for U:1.40",
      "has associated type",
      "Error = Infallible:1.40"
    ],
    [
      "TryFrom<T> for U:1.40",
      "has method",
      "try_from:1.40"
    ],
    [
      "TryInto<U> for T:1.40",
      "has method",
      "try_into:1.40"
    ],
    [
      "Into<U> for T:1.40",
      "has method",
      "into:1.40"
    ],
    [
      "Borrow<T> for T:1.40",
      "has method",
      "borrow:1.40"
    ],
    [
      "BorrowMut<T> for T:1.40",
      "has method",
      "borrow_mut:1.40"
    ],
    [
      "Any for T:1.40",
      "has method",
      "type_id:1.40"
    ],
    [
      "ToOwned for T:1.40",
      "has method",
      "to_owned:1.40"
    ],
    [
      "ToOwned for T:1.40",
      "has method",
      "clone_into:1.40"
    ],
    [
      "TryFrom<T>:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "TryInto<U>:1.40",
      "has feature",
      "nightly-only experimental:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "Borrow<T>:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "BorrowMut<T>:1.40"
    ],
    [
      "T:1.40",
      "has method",
      "type_id:1.40"
    ],
    [
      "TryFrom<T>:1.40",
      "has associated type",
      "Error = Infallible:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "TryFrom<U>:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "Into<U>:1.40"
    ],
    [
      "T:1.40",
      "implements",
      "TryInto<U>:1.40"
    ],
    [
      "IntoIterator:1.40",
      "has associated type",
      "Item = <I as Iterator>::Item:1.40"
    ],
    [
      "IntoIterator:1.40",
      "has associated type",
      "IntoIter = I:1.40"
    ],
    [
      "TryFrom<U> for T:1.40",
      "has associated type",
      "Error = Infallible:1.40"
    ],
    [
      "TryFrom<U> for T:1.40",
      "has method",
      "try_from:1.40"
    ],
    [
      "try_from:1.40",
      "returns",
      "Result<T, Infallible>:1.40"
    ],
    [
      "IntoIter:1.20",
      "has description",
      "An iterator over the value in [`Some`] variant of an [`Option`]."
    ],
    [
      "Iter:1.20",
      "has description",
      "An iterator over a reference to the [`Some`] variant of an [`Option`]."
    ],
    [
      "IterMut:1.20",
      "has description",
      "An iterator over a mutable reference to the [`Some`] variant of an [`Option`]."
    ],
    [
      "Option::expect:1.20",
      "has description",
      "Unwraps an option, yielding the content of a Some"
    ],
    [
      "Option::expect:1.20",
      "panics with",
      "custom message provided by msg:1.20"
    ],
    [
      "Option::unwrap:1.20",
      "has description",
      "Moves the value v out of the Option<T> if it is Some(v)"
    ],
    [
      "Option::unwrap:1.20",
      "panics with",
      "None value:1.20"
    ],
    [
      "Option::unwrap_or:1.20",
      "has parameter",
      "def: T:1.20"
    ],
    [
      "Option::unwrap_or:1.20",
      "has description",
      "Returns the contained value or a default"
    ],
    [
      "Option::map:1.20",
      "has generic parameter",
      "U:1.20"
    ],
    [
      "Option::map:1.20",
      "has generic parameter",
      "F:1.20"
    ],
    [
      "Option::map:1.20",
      "has description",
      "Maps an Option<T> to Option<U> by applying a function"
    ],
    [
      "Option:1.20",
      "has method",
      "unwrap_or_else:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "map_or:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "map_or_else:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "ok_or:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "ok_or_else:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "iter:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "iter_mut:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "and:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "or:1.20"
    ],
    [
      "IntoIter:1.20",
      "has description",
      "An iterator over the value in Some variant of an Option."
    ],
    [
      "Iter:1.20",
      "has description",
      "An iterator over a reference to the Some variant of an Option."
    ],
    [
      "IterMut:1.20",
      "has description",
      "An iterator over a mutable reference to the Some variant of an Option."
    ],
    [
      "Option:1.20",
      "has method",
      "std::option::Option::get_or_insert:1.20"
    ],
    [
      "std::option::Option::get_or_insert:1.20",
      "has alias",
      "get_or_insert"
    ],
    [
      "std::option::Option::get_or_insert:1.20",
      "has argument",
      "v:1.20"
    ],
    [
      "get_or_insert::v:1.20",
      "has type",
      "T:1.20"
    ],
    [
      "std::option::Option::get_or_insert:1.20",
      "has return type",
      "&mut T:1.20"
    ],
    [
      "std::option::Option::get_or_insert:1.20",
      "has description",
      "Inserts v into the option if it is None, then returns a mutable reference to the contained value."
    ],
    [
      "Option:1.20",
      "has method",
      "std::option::Option::get_or_insert_with:1.20"
    ],
    [
      "std::option::Option::get_or_insert_with:1.20",
      "has alias",
      "get_or_insert_with"
    ],
    [
      "std::option::Option::get_or_insert_with:1.20",
      "has argument",
      "f:1.20"
    ],
    [
      "get_or_insert_with::f:1.20",
      "has type",
      "F:1.20"
    ],
    [
      "F:1.20",
      "requires trait",
      "FnOnce() -> T:1.20"
    ],
    [
      "std::option::Option::get_or_insert_with:1.20",
      "has return type",
      "&mut T:1.20"
    ],
    [
      "std::option::Option::get_or_insert_with:1.20",
      "has description",
      "Inserts a value computed from f into the option if it is None, then returns a mutable reference to the contained value."
    ],
    [
      "Option::or_else:1.20",
      "has description",
      "Returns the option if it contains a value, otherwise calls f and returns the result."
    ],
    [
      "Option::take:1.20",
      "has description",
      "Takes the value out of the option, leaving a None in its place."
    ],
    [
      "std::option::Option::get_or_insert:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "get_or_insert::self:1.20",
      "has type",
      "&mut self:1.20"
    ],
    [
      "std::option::Option::get_or_insert:1.20",
      "returns",
      "&mut T:1.20"
    ],
    [
      "std::option::Option::get_or_insert_with:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "get_or_insert_with::self:1.20",
      "has type",
      "&mut self:1.20"
    ],
    [
      "std::option::Option::get_or_insert_with:1.20",
      "returns",
      "&mut T:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "std::option::Option::cloned:1.20"
    ],
    [
      "std::option::Option::cloned:1.20",
      "has alias",
      "cloned"
    ],
    [
      "std::option::Option::cloned:1.20",
      "returns",
      "Option<T>:1.20"
    ],
    [
      "std::option::Option::cloned:1.20",
      "has description",
      "Maps an Option<&T> to an Option<T> by cloning the contents of the option."
    ],
    [
      "Option:1.20",
      "has method",
      "std::option::Option::unwrap_or_default:1.20"
    ],
    [
      "std::option::Option::unwrap_or_default:1.20",
      "has alias",
      "unwrap_or_default"
    ],
    [
      "std::option::Option::unwrap_or_default:1.20",
      "returns",
      "T:1.20"
    ],
    [
      "std::option::Option::unwrap_or_default:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "unwrap_or_default::self:1.20",
      "has type",
      "&self:1.20"
    ],
    [
      "std::option::Option::unwrap_or_default:1.20",
      "has description",
      "Returns the contained value or a default"
    ],
    [
      "and_then:1.20",
      "has description",
      "Returns None if the option is None, otherwise calls f with the wrapped value and returns the result. Some languages call this operation flatmap."
    ],
    [
      "Option:1.20",
      "has description",
      "The Option type. See the module level documentation for more."
    ],
    [
      "or:1.20",
      "has description",
      "Returns the option if it contains a value, otherwise returns optb. Examples show short-circuiting behavior"
    ],
    [
      "or_else:1.20",
      "has description",
      "Returns the option if it contains a value, otherwise calls f and returns the result. Enables lazy fallback evaluation"
    ],
    [
      "take:1.20",
      "has description",
      "Takes the value out of the option, leaving a None in its place. Modifies the original option in-place"
    ],
    [
      "Option<T>:1.20",
      "has method",
      "std::option::Option::max:1.20"
    ],
    [
      "std::option::Option::max:1.20",
      "has alias",
      "max"
    ],
    [
      "std::option::Option::max:1.20",
      "returns",
      "Self:1.20"
    ],
    [
      "std::option::Option::max:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "std::option::Option::max:1.20",
      "has argument",
      "other: Self:1.20"
    ],
    [
      "std::option::Option::max:1.20",
      "has description",
      "Compares and returns the maximum of two values."
    ],
    [
      "Option<T>:1.20",
      "has method",
      "std::option::Option::min:1.20"
    ],
    [
      "std::option::Option::min:1.20",
      "has alias",
      "min"
    ],
    [
      "std::option::Option::min:1.20",
      "returns",
      "Self:1.20"
    ],
    [
      "std::option::Option::min:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "std::option::Option::min:1.20",
      "has argument",
      "other: Self:1.20"
    ],
    [
      "std::option::Option::min:1.20",
      "has description",
      "Compares and returns the minimum of two values."
    ],
    [
      "&'a Option<T>:1.20",
      "implements",
      "IntoIterator:1.20"
    ],
    [
      "IntoIterator for &'a Option<T>:1.20",
      "has associated type",
      "Item = &'a T:1.20"
    ],
    [
      "IntoIterator for &'a Option<T>:1.20",
      "has associated type",
      "IntoIter = Iter<'a, T>:1.20"
    ],
    [
      "&'a mut Option<T>:1.20",
      "implements",
      "IntoIterator:1.20"
    ],
    [
      "IntoIterator for &'a mut Option<T>:1.20",
      "has associated type",
      "Item = &'a mut T:1.20"
    ],
    [
      "IntoIterator for &'a mut Option<T>:1.20",
      "has associated type",
      "IntoIter = IterMut<'a, T>:1.20"
    ],
    [
      "&'a Option<T>:1.20",
      "has method",
      "std::option::Option::into_iter:1.20"
    ],
    [
      "into_iter (for &'a Option<T>):1.20",
      "has return type",
      "Iter<'a, T>:1.20"
    ],
    [
      "&'a mut Option<T>:1.20",
      "has method",
      "std::option::Option::into_iter:1.20"
    ],
    [
      "into_iter (for &'a mut Option<T>):1.20",
      "has return type",
      "IterMut<'a, T>:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "std::option::Option::max:1.20"
    ],
    [
      "max::self:1.20",
      "has type",
      "self:1.20"
    ],
    [
      "std::option::Option::max:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "max::other:1.20",
      "has type",
      "Self:1.20"
    ],
    [
      "Option:1.20",
      "has method",
      "std::option::Option::min:1.20"
    ],
    [
      "min::self:1.20",
      "has type",
      "self:1.20"
    ],
    [
      "std::option::Option::min:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "min::other:1.20",
      "has type",
      "Self:1.20"
    ],
    [
      "&Option<T>:1.20",
      "implements",
      "IntoIterator:1.20"
    ],
    [
      "&Option<T> as IntoIterator:1.20",
      "has associated type",
      "Item = &T:1.20"
    ],
    [
      "&Option<T> as IntoIterator:1.20",
      "has associated type",
      "IntoIter = Iter<T>:1.20"
    ],
    [
      "Iter<T>:1.20",
      "is a",
      "struct"
    ],
    [
      "&Option<T>:1.20",
      "has method",
      "std::option::Option::into_iter:1.20"
    ],
    [
      "std::option::Option::into_iter:1.20",
      "has alias",
      "into_iter"
    ],
    [
      "std::option::Option::into_iter:1.20",
      "returns",
      "Iter<T>:1.20"
    ],
    [
      "std::option::Option::into_iter:1.20",
      "has description",
      "Creates an iterator from a value. Read more"
    ],
    [
      "&mut Option<T>:1.20",
      "implements",
      "IntoIterator:1.20"
    ],
    [
      "&mut Option<T> as IntoIterator:1.20",
      "has associated type",
      "Item = &mut T:1.20"
    ],
    [
      "&mut Option<T> as IntoIterator:1.20",
      "has associated type",
      "IntoIter = IterMut<T>:1.20"
    ],
    [
      "IterMut<T>:1.20",
      "is a",
      "struct"
    ],
    [
      "&mut Option<T>:1.20",
      "has method",
      "std::option::Option::into_iter:1.20"
    ],
    [
      "std::option::Option::into_iter:1.20",
      "returns",
      "IterMut<T>:1.20"
    ],
    [
      "std::cmp::Ord::max:1.20",
      "has alias",
      "max"
    ],
    [
      "max::self:1.20",
      "has type",
      "Self:1.20"
    ],
    [
      "std::option::Option::max:1.20",
      "has description",
      "Compares and returns the maximum of two values. Read more"
    ],
    [
      "std::cmp::Ord::min:1.20",
      "has alias",
      "min"
    ],
    [
      "min::self:1.20",
      "has type",
      "Self:1.20"
    ],
    [
      "std::option::Option::min:1.20",
      "has description",
      "Compares and returns the minimum of two values. Read more"
    ],
    [
      "Option<T>:1.20",
      "implements",
      "IntoIterator:1.20"
    ],
    [
      "Option<T> as IntoIterator:1.20",
      "has associated type",
      "Item = T:1.20"
    ],
    [
      "Option<T> as IntoIterator:1.20",
      "has associated type",
      "IntoIter = IntoIter<T>:1.20"
    ],
    [
      "std::option::Option::into_iter:1.20",
      "has description",
      "Returns a consuming iterator over the possibly contained value."
    ],
    [
      "std::iter:1.10",
      "is a",
      "module"
    ],
    [
      "std::iter:1.10",
      "has alias",
      "std::iter"
    ],
    [
      "std::iter:1.10",
      "stable since",
      "1.0.0"
    ],
    [
      "std::iter:1.10",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::iter::Chain:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Chain:1.10",
      "has alias",
      "std::iter::Chain"
    ],
    [
      "std::iter::Chain:1.10",
      "has description",
      "An iterator that strings two iterators together."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::Chain:1.10"
    ],
    [
      "std::iter::Cloned:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cloned:1.10",
      "has alias",
      "std::iter::Cloned"
    ],
    [
      "std::iter::Cloned:1.10",
      "has description",
      "An iterator that clones the elements of an underlying iterator."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::Cloned:1.10"
    ],
    [
      "std::iter::Cycle:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cycle:1.10",
      "has alias",
      "std::iter::Cycle"
    ],
    [
      "std::iter::Cycle:1.10",
      "has description",
      "An iterator that repeats endlessly."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::Cycle:1.10"
    ],
    [
      "std::iter::DoubleEndedIterator:1.10",
      "is a",
      "trait"
    ],
    [
      "std::iter::DoubleEndedIterator:1.10",
      "has alias",
      "std::iter::DoubleEndedIterator"
    ],
    [
      "std::iter::DoubleEndedIterator:1.10",
      "has description",
      "An iterator able to yield elements from both ends."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::DoubleEndedIterator:1.10"
    ],
    [
      "std::iter::empty:1.10",
      "is a",
      "function"
    ],
    [
      "std::iter::empty:1.10",
      "has alias",
      "std::iter::empty"
    ],
    [
      "std::iter::empty:1.10",
      "has description",
      "Creates an iterator that yields nothing."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::empty:1.10"
    ],
    [
      "std::iter::Iterator:1.10",
      "is a",
      "trait"
    ],
    [
      "std::iter::Iterator:1.10",
      "has alias",
      "std::iter::Iterator"
    ],
    [
      "std::iter::Iterator:1.10",
      "has description",
      "An interface for dealing with iterators."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::Iterator:1.10"
    ],
    [
      "std::iter::ExactSizeIterator:1.10",
      "is a",
      "trait"
    ],
    [
      "std::iter::ExactSizeIterator:1.10",
      "has alias",
      "std::iter::ExactSizeIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.10",
      "has description",
      "An iterator that knows its exact length."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::ExactSizeIterator:1.10"
    ],
    [
      "std::iter::Extend:1.10",
      "is a",
      "trait"
    ],
    [
      "std::iter::Extend:1.10",
      "has alias",
      "std::iter::Extend"
    ],
    [
      "std::iter::Extend:1.10",
      "has description",
      "Extend a collection with the contents of an iterator."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::Extend:1.10"
    ],
    [
      "std::iter::FromIterator:1.10",
      "is a",
      "trait"
    ],
    [
      "std::iter::FromIterator:1.10",
      "has alias",
      "std::iter::FromIterator"
    ],
    [
      "std::iter::FromIterator:1.10",
      "has description",
      "Conversion from an Iterator."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::FromIterator:1.10"
    ],
    [
      "std::iter::IntoIterator:1.10",
      "is a",
      "trait"
    ],
    [
      "std::iter::IntoIterator:1.10",
      "has alias",
      "std::iter::IntoIterator"
    ],
    [
      "std::iter::IntoIterator:1.10",
      "has description",
      "Conversion into an Iterator."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::IntoIterator:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::iter:1.10"
    ],
    [
      "std::iter:1.10",
      "description",
      "Composable external iteration.:1.10"
    ],
    [
      "std::iter:1.10",
      "description",
      "If you've found yourself with a collection of some kind...:1.10"
    ],
    [
      "any:1.10",
      "is a",
      "module"
    ],
    [
      "any:1.10",
      "description",
      "This module implements the `Any` trait...:1.10"
    ],
    [
      "ascii:1.10",
      "is a",
      "module"
    ],
    [
      "ascii:1.10",
      "description",
      "Operations on ASCII strings and characters.:1.10"
    ],
    [
      "borrow:1.10",
      "is a",
      "module"
    ],
    [
      "borrow:1.10",
      "description",
      "A module for working with borrowed data.:1.10"
    ],
    [
      "boxed:1.10",
      "is a",
      "module"
    ],
    [
      "boxed:1.10",
      "description",
      "A pointer type for heap allocation.:1.10"
    ],
    [
      "cell:1.10",
      "is a",
      "module"
    ],
    [
      "cell:1.10",
      "description",
      "Shareable mutable containers.:1.10"
    ],
    [
      "assert!:1.10",
      "is a",
      "macro"
    ],
    [
      "assert!:1.10",
      "description",
      "Ensure that a boolean expression is `true`...:1.10"
    ],
    [
      "assert_eq!:1.10",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.10",
      "description",
      "Asserts that two expressions are equal...:1.10"
    ],
    [
      "cfg!:1.10",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.10",
      "description",
      "Boolean evaluation of configuration flags.:1.10"
    ],
    [
      "std::iter::Iterator:1.10",
      "description",
      "An interface for dealing with iterators.:1.10"
    ],
    [
      "std::iter::Iterator:1.10",
      "has associated type",
      "Item:1.10"
    ],
    [
      "std::iter::Iterator:1.10",
      "has method",
      "next():1.10"
    ],
    [
      "Counter:1.10",
      "implements",
      "std::iter::Iterator:1.10"
    ],
    [
      "Counter:1.10",
      "has method",
      "new():1.10"
    ],
    [
      "std::iter::Chain:1.10",
      "description",
      "An iterator that strings two iterators together.:1.10"
    ],
    [
      "std::iter::Cloned:1.10",
      "description",
      "An iterator that clones the elements...:1.10"
    ],
    [
      "std::iter::Cycle:1.10",
      "description",
      "An iterator that repeats endlessly.:1.10"
    ],
    [
      "std::iter::DoubleEndedIterator:1.10",
      "description",
      "An iterator able to yield elements...:1.10"
    ],
    [
      "std::iter::ExactSizeIterator:1.10",
      "description",
      "An iterator that knows its exact length.:1.10"
    ],
    [
      "std::iter::empty:1.10",
      "description",
      "Creates an iterator that yields nothing.:1.10"
    ],
    [
      "std::iter::once:1.10",
      "is a",
      "function"
    ],
    [
      "std::iter::once:1.10",
      "description",
      "Creates an iterator that yields an element exactly once.:1.10"
    ],
    [
      "std::iter:1.10",
      "has alias",
      "iter"
    ],
    [
      "std:1.10",
      "contains",
      "any:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "ascii:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "borrow:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "boxed:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "cell:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "char:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "clone:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "cmp:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "collections:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "convert:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "default:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "env:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "error:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "f32:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "f64:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "ffi:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "fmt:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "fs:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "hash:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "i16:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "i32:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "i64:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "i8:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "intrinsics:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "io:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "isize:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "marker:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "mem:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "net:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "num:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "ops:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "option:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "os:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "panic:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "path:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "prelude:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "process:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "ptr:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "raw:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "rc:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "result:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "slice:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "str:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "string:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "sync:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "thread:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "time:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "u16:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "u32:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "u64:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "u8:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "usize:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "vec:1.10"
    ],
    [
      "std::iter::Chain:1.10",
      "has alias",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.10",
      "has alias",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.10",
      "has alias",
      "Cycle"
    ],
    [
      "std::iter::Empty:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Empty:1.10",
      "has alias",
      "Empty"
    ],
    [
      "std::iter::Empty:1.10",
      "has description",
      "An iterator that yields nothing."
    ],
    [
      "std::iter::Enumerate:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Enumerate:1.10",
      "has alias",
      "Enumerate"
    ],
    [
      "std::iter::Enumerate:1.10",
      "has description",
      "An iterator that yields the current count and the element during iteration."
    ],
    [
      "std::iter::Filter:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Filter:1.10",
      "has alias",
      "Filter"
    ],
    [
      "std::iter::Filter:1.10",
      "has description",
      "An iterator that filters the elements of iter with predicate."
    ],
    [
      "std::iter::FilterMap:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::FilterMap:1.10",
      "has alias",
      "FilterMap"
    ],
    [
      "std::iter::FilterMap:1.10",
      "has description",
      "An iterator that uses f to both filter and map elements from iter."
    ],
    [
      "std::iter::FlatMap:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::FlatMap:1.10",
      "has alias",
      "FlatMap"
    ],
    [
      "std::iter::FlatMap:1.10",
      "has description",
      "An iterator that maps each element to an iterator, and yields the elements of the produced iterators."
    ],
    [
      "std::iter::Fuse:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Fuse:1.10",
      "has alias",
      "Fuse"
    ],
    [
      "std::iter::Fuse:1.10",
      "has description",
      "An iterator that yields None forever after the underlying iterator yields None once."
    ],
    [
      "std::iter::Inspect:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Inspect:1.10",
      "has alias",
      "Inspect"
    ],
    [
      "std::iter::Inspect:1.10",
      "has description",
      "An iterator that calls a function with a reference to each element before yielding it."
    ],
    [
      "std::iter::Map:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Map:1.10",
      "has alias",
      "Map"
    ],
    [
      "std::iter::Map:1.10",
      "has description",
      "An iterator that maps the values of iter with f."
    ],
    [
      "std::iter::Once:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Once:1.10",
      "has alias",
      "Once"
    ],
    [
      "std::iter::Once:1.10",
      "has description",
      "An iterator that yields an element exactly once."
    ],
    [
      "std::iter::Peekable:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Peekable:1.10",
      "has alias",
      "Peekable"
    ],
    [
      "std::iter::Peekable:1.10",
      "has description",
      "An iterator with a peek() that returns an optional reference to the next element."
    ],
    [
      "std::iter::Repeat:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Repeat:1.10",
      "has alias",
      "Repeat"
    ],
    [
      "std::iter::Repeat:1.10",
      "has description",
      "An iterator that repeats an element endlessly."
    ],
    [
      "std::iter::Rev:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Rev:1.10",
      "has alias",
      "Rev"
    ],
    [
      "std::iter::Rev:1.10",
      "has description",
      "An double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Scan:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Scan:1.10",
      "has alias",
      "Scan"
    ],
    [
      "std::iter::Scan:1.10",
      "has description",
      "An iterator to maintain state while iterating another iterator."
    ],
    [
      "std::iter::Skip:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Skip:1.10",
      "has alias",
      "Skip"
    ],
    [
      "std::iter::Skip:1.10",
      "has description",
      "An iterator that skips over n elements of iter."
    ],
    [
      "std::iter::SkipWhile:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::SkipWhile:1.10",
      "has alias",
      "SkipWhile"
    ],
    [
      "std::iter::SkipWhile:1.10",
      "has description",
      "An iterator that rejects elements while predicate is true."
    ],
    [
      "std::iter::Take:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Take:1.10",
      "has alias",
      "Take"
    ],
    [
      "std::iter::Take:1.10",
      "has description",
      "An iterator that only iterates over the first n iterations of iter."
    ],
    [
      "std::iter::TakeWhile:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::TakeWhile:1.10",
      "has alias",
      "TakeWhile"
    ],
    [
      "std::iter::TakeWhile:1.10",
      "has description",
      "An iterator that only accepts elements while predicate is true."
    ],
    [
      "std::iter::Zip:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::Zip:1.10",
      "has alias",
      "Zip"
    ],
    [
      "std::iter::Zip:1.10",
      "has description",
      "An iterator that iterates two other iterators simultaneously."
    ],
    [
      "std::iter::StepBy:1.10",
      "is a",
      "struct"
    ],
    [
      "std::iter::StepBy:1.10",
      "has alias",
      "StepBy"
    ],
    [
      "std::iter::StepBy:1.10",
      "has description",
      "An adapter for stepping range iterators by a custom amount."
    ],
    [
      "std::iter::DoubleEndedIterator:1.10",
      "has alias",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.10",
      "has alias",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.10",
      "has alias",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.10",
      "has alias",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.10",
      "has alias",
      "IntoIterator"
    ],
    [
      "std::iter::Iterator:1.10",
      "has alias",
      "Iterator"
    ],
    [
      "std::iter::Iterator:1.10",
      "has method",
      "next:1.10"
    ],
    [
      "next:1.10",
      "has argument",
      "&mut self:1.10"
    ],
    [
      "next:1.10",
      "has return type",
      "Option<Self::Item>:1.10"
    ],
    [
      "std::iter::Iterator:1.10",
      "implements",
      "std::iter::IntoIterator:1.10"
    ],
    [
      "std::iter::empty:1.10",
      "has alias",
      "empty"
    ],
    [
      "std::iter::Iterator:1.10",
      "has adapter",
      "map:1.10"
    ],
    [
      "std::iter::Iterator:1.10",
      "has adapter",
      "take:1.10"
    ],
    [
      "std::iter::Iterator:1.10",
      "has adapter",
      "collect:1.10"
    ],
    [
      "std::iter::once:1.10",
      "has alias",
      "std::iter::once"
    ],
    [
      "std::iter::once:1.10",
      "has description",
      "Creates an iterator that yields an element exactly once."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::once:1.10"
    ],
    [
      "std::iter::repeat:1.10",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat:1.10",
      "has alias",
      "std::iter::repeat"
    ],
    [
      "std::iter::repeat:1.10",
      "has description",
      "Creates a new iterator that endlessly repeats a single element."
    ],
    [
      "std::iter:1.10",
      "contains",
      "std::iter::repeat:1.10"
    ],
    [
      "std::iter::once:1.10",
      "has alias",
      "once"
    ],
    [
      "std::iter::repeat:1.10",
      "has alias",
      "repeat"
    ],
    [
      "std::iter::repeat:1.10",
      "description",
      "Creates a new iterator that endlessly repeats a single element.:1.10"
    ],
    [
      "std::iter:1.20",
      "is a",
      "module"
    ],
    [
      "std::iter:1.20",
      "has alias",
      "std::iter"
    ],
    [
      "std::iter:1.20",
      "stable since",
      "1.0.0"
    ],
    [
      "std::iter:1.20",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::iter::Chain:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Chain:1.20",
      "has alias",
      "std::iter::Chain"
    ],
    [
      "std::iter::Chain:1.20",
      "has description",
      "An iterator that strings two iterators together."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::Chain:1.20"
    ],
    [
      "std::iter::Cloned:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cloned:1.20",
      "has alias",
      "std::iter::Cloned"
    ],
    [
      "std::iter::Cloned:1.20",
      "has description",
      "An iterator that clones the elements of an underlying iterator."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::Cloned:1.20"
    ],
    [
      "std::iter::Cycle:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cycle:1.20",
      "has alias",
      "std::iter::Cycle"
    ],
    [
      "std::iter::Cycle:1.20",
      "has description",
      "An iterator that repeats endlessly."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::Cycle:1.20"
    ],
    [
      "std::iter::DoubleEndedIterator:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::DoubleEndedIterator:1.20",
      "has alias",
      "std::iter::DoubleEndedIterator"
    ],
    [
      "std::iter::DoubleEndedIterator:1.20",
      "has description",
      "An iterator able to yield elements from both ends."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::DoubleEndedIterator:1.20"
    ],
    [
      "std::iter::empty:1.20",
      "is a",
      "function"
    ],
    [
      "std::iter::empty:1.20",
      "has alias",
      "std::iter::empty"
    ],
    [
      "std::iter::empty:1.20",
      "has description",
      "Creates an iterator that yields nothing."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::empty:1.20"
    ],
    [
      "std::iter::Iterator:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::Iterator:1.20",
      "has alias",
      "std::iter::Iterator"
    ],
    [
      "std::iter::Iterator:1.20",
      "has description",
      "An interface for dealing with iterators."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::Iterator:1.20"
    ],
    [
      "std::iter::ExactSizeIterator:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::ExactSizeIterator:1.20",
      "has alias",
      "std::iter::ExactSizeIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.20",
      "has description",
      "An iterator that knows its exact length."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::ExactSizeIterator:1.20"
    ],
    [
      "std::iter::Extend:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::Extend:1.20",
      "has alias",
      "std::iter::Extend"
    ],
    [
      "std::iter::Extend:1.20",
      "has description",
      "Extend a collection with the contents of an iterator."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::Extend:1.20"
    ],
    [
      "std::iter::FromIterator:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::FromIterator:1.20",
      "has alias",
      "std::iter::FromIterator"
    ],
    [
      "std::iter::FromIterator:1.20",
      "has description",
      "Conversion from an Iterator."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::FromIterator:1.20"
    ],
    [
      "std::iter::IntoIterator:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::IntoIterator:1.20",
      "has alias",
      "std::iter::IntoIterator"
    ],
    [
      "std::iter::IntoIterator:1.20",
      "has description",
      "Conversion into an Iterator."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::IntoIterator:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::iter:1.20"
    ],
    [
      "std::iter:1.20",
      "description",
      "Composable external iteration.:1.20"
    ],
    [
      "std::iter:1.20",
      "description",
      "If you've found yourself with a collection of some kind...:1.20"
    ],
    [
      "any:1.20",
      "is a",
      "module"
    ],
    [
      "any:1.20",
      "description",
      "This module implements the `Any` trait...:1.20"
    ],
    [
      "ascii:1.20",
      "is a",
      "module"
    ],
    [
      "ascii:1.20",
      "description",
      "Operations on ASCII strings and characters.:1.20"
    ],
    [
      "borrow:1.20",
      "is a",
      "module"
    ],
    [
      "borrow:1.20",
      "description",
      "A module for working with borrowed data.:1.20"
    ],
    [
      "boxed:1.20",
      "is a",
      "module"
    ],
    [
      "boxed:1.20",
      "description",
      "A pointer type for heap allocation.:1.20"
    ],
    [
      "cell:1.20",
      "is a",
      "module"
    ],
    [
      "cell:1.20",
      "description",
      "Shareable mutable containers.:1.20"
    ],
    [
      "assert!:1.20",
      "is a",
      "macro"
    ],
    [
      "assert!:1.20",
      "description",
      "Ensure that a boolean expression is `true`...:1.20"
    ],
    [
      "assert_eq!:1.20",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.20",
      "description",
      "Asserts that two expressions are equal...:1.20"
    ],
    [
      "cfg!:1.20",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.20",
      "description",
      "Boolean evaluation of configuration flags.:1.20"
    ],
    [
      "std::iter::Iterator:1.20",
      "description",
      "An interface for dealing with iterators.:1.20"
    ],
    [
      "std::iter::Iterator:1.20",
      "has associated type",
      "Item:1.20"
    ],
    [
      "std::iter::Iterator:1.20",
      "has method",
      "next():1.20"
    ],
    [
      "Counter:1.20",
      "implements",
      "std::iter::Iterator:1.20"
    ],
    [
      "Counter:1.20",
      "has method",
      "new():1.20"
    ],
    [
      "std::iter::Chain:1.20",
      "description",
      "An iterator that strings two iterators together.:1.20"
    ],
    [
      "std::iter::Cloned:1.20",
      "description",
      "An iterator that clones the elements...:1.20"
    ],
    [
      "std::iter::Cycle:1.20",
      "description",
      "An iterator that repeats endlessly.:1.20"
    ],
    [
      "std::iter::DoubleEndedIterator:1.20",
      "description",
      "An iterator able to yield elements...:1.20"
    ],
    [
      "std::iter::ExactSizeIterator:1.20",
      "description",
      "An iterator that knows its exact length.:1.20"
    ],
    [
      "std::iter::empty:1.20",
      "description",
      "Creates an iterator that yields nothing.:1.20"
    ],
    [
      "std::iter::once:1.20",
      "is a",
      "function"
    ],
    [
      "std::iter::once:1.20",
      "description",
      "Creates an iterator that yields an element exactly once.:1.20"
    ],
    [
      "std::iter:1.20",
      "has alias",
      "iter"
    ],
    [
      "std:1.20",
      "contains",
      "any:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "ascii:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "borrow:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "boxed:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "cell:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "char:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "clone:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "cmp:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "collections:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "convert:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "default:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "env:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "error:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "f32:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "f64:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "ffi:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "fmt:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "fs:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "hash:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "i16:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "i32:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "i64:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "i8:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "intrinsics:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "io:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "isize:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "marker:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "mem:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "net:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "num:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "ops:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "option:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "os:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "panic:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "path:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "prelude:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "process:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "ptr:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "raw:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "rc:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "result:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "slice:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "str:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "string:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "sync:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "thread:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "time:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "u16:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "u32:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "u64:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "u8:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "usize:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "vec:1.20"
    ],
    [
      "std::iter::Chain:1.20",
      "has alias",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.20",
      "has alias",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.20",
      "has alias",
      "Cycle"
    ],
    [
      "std::iter::Empty:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Empty:1.20",
      "has alias",
      "Empty"
    ],
    [
      "std::iter::Empty:1.20",
      "has description",
      "An iterator that yields nothing."
    ],
    [
      "std::iter::Enumerate:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Enumerate:1.20",
      "has alias",
      "Enumerate"
    ],
    [
      "std::iter::Enumerate:1.20",
      "has description",
      "An iterator that yields the current count and the element during iteration."
    ],
    [
      "std::iter::Filter:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Filter:1.20",
      "has alias",
      "Filter"
    ],
    [
      "std::iter::Filter:1.20",
      "has description",
      "An iterator that filters the elements of iter with predicate."
    ],
    [
      "std::iter::FilterMap:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::FilterMap:1.20",
      "has alias",
      "FilterMap"
    ],
    [
      "std::iter::FilterMap:1.20",
      "has description",
      "An iterator that uses f to both filter and map elements from iter."
    ],
    [
      "std::iter::FlatMap:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::FlatMap:1.20",
      "has alias",
      "FlatMap"
    ],
    [
      "std::iter::FlatMap:1.20",
      "has description",
      "An iterator that maps each element to an iterator, and yields the elements of the produced iterators."
    ],
    [
      "std::iter::Fuse:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Fuse:1.20",
      "has alias",
      "Fuse"
    ],
    [
      "std::iter::Fuse:1.20",
      "has description",
      "An iterator that yields None forever after the underlying iterator yields None once."
    ],
    [
      "std::iter::Inspect:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Inspect:1.20",
      "has alias",
      "Inspect"
    ],
    [
      "std::iter::Inspect:1.20",
      "has description",
      "An iterator that calls a function with a reference to each element before yielding it."
    ],
    [
      "std::iter::Map:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Map:1.20",
      "has alias",
      "Map"
    ],
    [
      "std::iter::Map:1.20",
      "has description",
      "An iterator that maps the values of iter with f."
    ],
    [
      "std::iter::Once:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Once:1.20",
      "has alias",
      "Once"
    ],
    [
      "std::iter::Once:1.20",
      "has description",
      "An iterator that yields an element exactly once."
    ],
    [
      "std::iter::Peekable:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Peekable:1.20",
      "has alias",
      "Peekable"
    ],
    [
      "std::iter::Peekable:1.20",
      "has description",
      "An iterator with a peek() that returns an optional reference to the next element."
    ],
    [
      "std::iter::Repeat:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Repeat:1.20",
      "has alias",
      "Repeat"
    ],
    [
      "std::iter::Repeat:1.20",
      "has description",
      "An iterator that repeats an element endlessly."
    ],
    [
      "std::iter::Rev:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Rev:1.20",
      "has alias",
      "Rev"
    ],
    [
      "std::iter::Rev:1.20",
      "has description",
      "An double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Scan:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Scan:1.20",
      "has alias",
      "Scan"
    ],
    [
      "std::iter::Scan:1.20",
      "has description",
      "An iterator to maintain state while iterating another iterator."
    ],
    [
      "std::iter::Skip:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Skip:1.20",
      "has alias",
      "Skip"
    ],
    [
      "std::iter::Skip:1.20",
      "has description",
      "An iterator that skips over n elements of iter."
    ],
    [
      "std::iter::SkipWhile:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::SkipWhile:1.20",
      "has alias",
      "SkipWhile"
    ],
    [
      "std::iter::SkipWhile:1.20",
      "has description",
      "An iterator that rejects elements while predicate is true."
    ],
    [
      "std::iter::Take:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Take:1.20",
      "has alias",
      "Take"
    ],
    [
      "std::iter::Take:1.20",
      "has description",
      "An iterator that only iterates over the first n iterations of iter."
    ],
    [
      "std::iter::TakeWhile:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::TakeWhile:1.20",
      "has alias",
      "TakeWhile"
    ],
    [
      "std::iter::TakeWhile:1.20",
      "has description",
      "An iterator that only accepts elements while predicate is true."
    ],
    [
      "std::iter::Zip:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::Zip:1.20",
      "has alias",
      "Zip"
    ],
    [
      "std::iter::Zip:1.20",
      "has description",
      "An iterator that iterates two other iterators simultaneously."
    ],
    [
      "std::iter::StepBy:1.20",
      "is a",
      "struct"
    ],
    [
      "std::iter::StepBy:1.20",
      "has alias",
      "StepBy"
    ],
    [
      "std::iter::StepBy:1.20",
      "has description",
      "An adapter for stepping range iterators by a custom amount."
    ],
    [
      "std::iter::DoubleEndedIterator:1.20",
      "has alias",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.20",
      "has alias",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.20",
      "has alias",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.20",
      "has alias",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.20",
      "has alias",
      "IntoIterator"
    ],
    [
      "std::iter::Iterator:1.20",
      "has alias",
      "Iterator"
    ],
    [
      "std::iter::Iterator:1.20",
      "has method",
      "next:1.20"
    ],
    [
      "next:1.20",
      "has argument",
      "&mut self:1.20"
    ],
    [
      "next:1.20",
      "has return type",
      "Option<Self::Item>:1.20"
    ],
    [
      "std::iter::Iterator:1.20",
      "implements",
      "std::iter::IntoIterator:1.20"
    ],
    [
      "std::iter::empty:1.20",
      "has alias",
      "empty"
    ],
    [
      "std::iter::Iterator:1.20",
      "has adapter",
      "map:1.20"
    ],
    [
      "std::iter::Iterator:1.20",
      "has adapter",
      "take:1.20"
    ],
    [
      "std::iter::Iterator:1.20",
      "has adapter",
      "collect:1.20"
    ],
    [
      "assert:1.20",
      "is a",
      "macro"
    ],
    [
      "assert:1.20",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "assert_eq:1.20",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.20",
      "has description",
      "Asserts that two expressions are equal to each other (using `PartialEq`)."
    ],
    [
      "assert_ne:1.20",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.20",
      "has description",
      "Asserts that two expressions are not equal to each other (using `PartialEq`)."
    ],
    [
      "debug_assert_ne:1.20",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.20",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "eprint:1.20",
      "is a",
      "macro"
    ],
    [
      "eprint:1.20",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln:1.20",
      "is a",
      "macro"
    ],
    [
      "eprintln:1.20",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "std:1.20",
      "contains",
      "heap:1.20"
    ],
    [
      "heap:1.20",
      "is a",
      "module"
    ],
    [
      "heap:1.20",
      "has description",
      "dox"
    ],
    [
      "std::iter:1.20",
      "has description",
      "If you've found yourself with a collection of some kind..."
    ],
    [
      "any:1.20",
      "has description",
      "This module implements the `Any` trait..."
    ],
    [
      "ascii:1.20",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "borrow:1.20",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "boxed:1.20",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "cell:1.20",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "process:1.20",
      "has description",
      "A module for working with processes."
    ],
    [
      "ptr:1.20",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "array:1.20",
      "is a",
      "primitive type"
    ],
    [
      "array:1.20",
      "has description",
      "A fixed-size array, denoted `[T; N]`, for the element type, `T`, and the non-negative compile-time constant size, `N`."
    ],
    [
      "bool:1.20",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.20",
      "has description",
      "The boolean type."
    ],
    [
      "any:1.20",
      "has description",
      "A module for dynamic typing through runtime reflection."
    ],
    [
      "f32:1.20",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.20",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "std::iter::once:1.20",
      "has alias",
      "std::iter::once"
    ],
    [
      "std::iter::once:1.20",
      "has description",
      "Creates an iterator that yields an element exactly once."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::once:1.20"
    ],
    [
      "std::iter::repeat:1.20",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat:1.20",
      "has alias",
      "std::iter::repeat"
    ],
    [
      "std::iter::repeat:1.20",
      "has description",
      "Creates a new iterator that endlessly repeats a single element."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::repeat:1.20"
    ],
    [
      "std::iter::once:1.20",
      "has alias",
      "once"
    ],
    [
      "std::iter::repeat:1.20",
      "has alias",
      "repeat"
    ],
    [
      "std::iter::repeat:1.20",
      "description",
      "Creates a new iterator that endlessly repeats a single element.:1.20"
    ],
    [
      "std::iter::StepBy:1.20",
      "has description",
      "An adapter for stepping iterators by a custom amount."
    ],
    [
      "std::iter::StepBy:1.20",
      "has feature",
      "Experimental:1.20"
    ],
    [
      "std::iter::Rev:1.20",
      "has description",
      "A double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Product:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::Product:1.20",
      "has description",
      "Trait to represent types that can be created by multiplying elements of an iterator."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::Product:1.20"
    ],
    [
      "std::iter::Sum:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::Sum:1.20",
      "has description",
      "Trait to represent types that can be created by summing up an iterator."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::Sum:1.20"
    ],
    [
      "std::iter::FusedIterator:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::FusedIterator:1.20",
      "has description",
      "An iterator that always continues to yield None when exhausted."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::FusedIterator:1.20"
    ],
    [
      "std::iter::FusedIterator:1.20",
      "has feature",
      "Experimental:1.20"
    ],
    [
      "std::iter::TrustedLen:1.20",
      "is a",
      "trait"
    ],
    [
      "std::iter::TrustedLen:1.20",
      "has description",
      "An iterator that reports an accurate length using size_hint."
    ],
    [
      "std::iter:1.20",
      "contains",
      "std::iter::TrustedLen:1.20"
    ],
    [
      "std::iter::TrustedLen:1.20",
      "has feature",
      "Experimental:1.20"
    ],
    [
      "std::iter::Product:1.20",
      "has alias",
      "std::iter::Product"
    ],
    [
      "std::iter::Sum:1.20",
      "has alias",
      "std::iter::Sum"
    ],
    [
      "std::iter::FusedIterator:1.20",
      "has alias",
      "std::iter::FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.20",
      "has alias",
      "std::iter::TrustedLen"
    ],
    [
      "std::iter::Product:1.20",
      "has alias",
      "Product"
    ],
    [
      "std::iter::Sum:1.20",
      "has alias",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.20",
      "has alias",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.20",
      "has alias",
      "TrustedLen"
    ],
    [
      "std::iter:1.60",
      "is a",
      "module"
    ],
    [
      "std::iter:1.60",
      "has alias",
      "std::iter"
    ],
    [
      "std::iter:1.60",
      "stable since",
      "1.0.0"
    ],
    [
      "std::iter:1.60",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::iter::Chain:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Chain:1.60",
      "has alias",
      "std::iter::Chain"
    ],
    [
      "std::iter::Chain:1.60",
      "has description",
      "An iterator that strings two iterators together."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Chain:1.60"
    ],
    [
      "std::iter::Cloned:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cloned:1.60",
      "has alias",
      "std::iter::Cloned"
    ],
    [
      "std::iter::Cloned:1.60",
      "has description",
      "An iterator that clones the elements of an underlying iterator."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Cloned:1.60"
    ],
    [
      "std::iter::Cycle:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cycle:1.60",
      "has alias",
      "std::iter::Cycle"
    ],
    [
      "std::iter::Cycle:1.60",
      "has description",
      "An iterator that repeats endlessly."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Cycle:1.60"
    ],
    [
      "std::iter::DoubleEndedIterator:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::DoubleEndedIterator:1.60",
      "has alias",
      "std::iter::DoubleEndedIterator"
    ],
    [
      "std::iter::DoubleEndedIterator:1.60",
      "has description",
      "An iterator able to yield elements from both ends."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::DoubleEndedIterator:1.60"
    ],
    [
      "std::iter::empty:1.60",
      "is a",
      "function"
    ],
    [
      "std::iter::empty:1.60",
      "has alias",
      "std::iter::empty"
    ],
    [
      "std::iter::empty:1.60",
      "has description",
      "Creates an iterator that yields nothing."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::empty:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::Iterator:1.60",
      "has alias",
      "std::iter::Iterator"
    ],
    [
      "std::iter::Iterator:1.60",
      "has description",
      "An interface for dealing with iterators."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Iterator:1.60"
    ],
    [
      "std::iter::ExactSizeIterator:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::ExactSizeIterator:1.60",
      "has alias",
      "std::iter::ExactSizeIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.60",
      "has description",
      "An iterator that knows its exact length."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::ExactSizeIterator:1.60"
    ],
    [
      "std::iter::Extend:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::Extend:1.60",
      "has alias",
      "std::iter::Extend"
    ],
    [
      "std::iter::Extend:1.60",
      "has description",
      "Extend a collection with the contents of an iterator."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Extend:1.60"
    ],
    [
      "std::iter::FromIterator:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::FromIterator:1.60",
      "has alias",
      "std::iter::FromIterator"
    ],
    [
      "std::iter::FromIterator:1.60",
      "has description",
      "Conversion from an Iterator."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::FromIterator:1.60"
    ],
    [
      "std::iter::IntoIterator:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::IntoIterator:1.60",
      "has alias",
      "std::iter::IntoIterator"
    ],
    [
      "std::iter::IntoIterator:1.60",
      "has description",
      "Conversion into an Iterator."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::IntoIterator:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::iter:1.60"
    ],
    [
      "std::iter:1.60",
      "description",
      "Composable external iteration.:1.60"
    ],
    [
      "std::iter:1.60",
      "description",
      "If you've found yourself with a collection of some kind...:1.60"
    ],
    [
      "any:1.60",
      "is a",
      "module"
    ],
    [
      "any:1.60",
      "description",
      "This module implements the `Any` trait...:1.60"
    ],
    [
      "ascii:1.60",
      "is a",
      "module"
    ],
    [
      "ascii:1.60",
      "description",
      "Operations on ASCII strings and characters.:1.60"
    ],
    [
      "borrow:1.60",
      "is a",
      "module"
    ],
    [
      "borrow:1.60",
      "description",
      "A module for working with borrowed data.:1.60"
    ],
    [
      "boxed:1.60",
      "is a",
      "module"
    ],
    [
      "boxed:1.60",
      "description",
      "A pointer type for heap allocation.:1.60"
    ],
    [
      "cell:1.60",
      "is a",
      "module"
    ],
    [
      "cell:1.60",
      "description",
      "Shareable mutable containers.:1.60"
    ],
    [
      "assert!:1.60",
      "is a",
      "macro"
    ],
    [
      "assert!:1.60",
      "description",
      "Ensure that a boolean expression is `true`...:1.60"
    ],
    [
      "assert_eq!:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.60",
      "description",
      "Asserts that two expressions are equal...:1.60"
    ],
    [
      "cfg!:1.60",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.60",
      "description",
      "Boolean evaluation of configuration flags.:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "description",
      "An interface for dealing with iterators.:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "has associated type",
      "Item:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "has method",
      "next():1.60"
    ],
    [
      "Counter:1.60",
      "implements",
      "std::iter::Iterator:1.60"
    ],
    [
      "Counter:1.60",
      "has method",
      "new():1.60"
    ],
    [
      "std::iter::Chain:1.60",
      "description",
      "An iterator that strings two iterators together.:1.60"
    ],
    [
      "std::iter::Cloned:1.60",
      "description",
      "An iterator that clones the elements...:1.60"
    ],
    [
      "std::iter::Cycle:1.60",
      "description",
      "An iterator that repeats endlessly.:1.60"
    ],
    [
      "std::iter::DoubleEndedIterator:1.60",
      "description",
      "An iterator able to yield elements...:1.60"
    ],
    [
      "std::iter::ExactSizeIterator:1.60",
      "description",
      "An iterator that knows its exact length.:1.60"
    ],
    [
      "std::iter::empty:1.60",
      "description",
      "Creates an iterator that yields nothing.:1.60"
    ],
    [
      "std::iter::once:1.60",
      "is a",
      "function"
    ],
    [
      "std::iter::once:1.60",
      "description",
      "Creates an iterator that yields an element exactly once.:1.60"
    ],
    [
      "std::iter:1.60",
      "has alias",
      "iter"
    ],
    [
      "std:1.60",
      "contains",
      "any:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "ascii:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "borrow:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "boxed:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "cell:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "char:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "clone:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "cmp:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "collections:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "convert:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "default:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "env:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "error:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "f32:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "f64:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "ffi:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "fmt:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "fs:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "hash:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "i16:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "i32:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "i64:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "i8:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "intrinsics:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "io:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "isize:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "marker:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "mem:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "net:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "num:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "ops:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "option:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "os:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "panic:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "path:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "prelude:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "process:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "ptr:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "raw:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "rc:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "result:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "slice:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "str:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "string:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "sync:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "thread:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "time:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "u16:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "u32:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "u64:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "u8:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "usize:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "vec:1.60"
    ],
    [
      "std::iter::Chain:1.60",
      "has alias",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.60",
      "has alias",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.60",
      "has alias",
      "Cycle"
    ],
    [
      "std::iter::Empty:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Empty:1.60",
      "has alias",
      "Empty"
    ],
    [
      "std::iter::Empty:1.60",
      "has description",
      "An iterator that yields nothing."
    ],
    [
      "std::iter::Enumerate:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Enumerate:1.60",
      "has alias",
      "Enumerate"
    ],
    [
      "std::iter::Enumerate:1.60",
      "has description",
      "An iterator that yields the current count and the element during iteration."
    ],
    [
      "std::iter::Filter:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Filter:1.60",
      "has alias",
      "Filter"
    ],
    [
      "std::iter::Filter:1.60",
      "has description",
      "An iterator that filters the elements of iter with predicate."
    ],
    [
      "std::iter::FilterMap:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::FilterMap:1.60",
      "has alias",
      "FilterMap"
    ],
    [
      "std::iter::FilterMap:1.60",
      "has description",
      "An iterator that uses f to both filter and map elements from iter."
    ],
    [
      "std::iter::FlatMap:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::FlatMap:1.60",
      "has alias",
      "FlatMap"
    ],
    [
      "std::iter::FlatMap:1.60",
      "has description",
      "An iterator that maps each element to an iterator, and yields the elements of the produced iterators."
    ],
    [
      "std::iter::Fuse:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Fuse:1.60",
      "has alias",
      "Fuse"
    ],
    [
      "std::iter::Fuse:1.60",
      "has description",
      "An iterator that yields None forever after the underlying iterator yields None once."
    ],
    [
      "std::iter::Inspect:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Inspect:1.60",
      "has alias",
      "Inspect"
    ],
    [
      "std::iter::Inspect:1.60",
      "has description",
      "An iterator that calls a function with a reference to each element before yielding it."
    ],
    [
      "std::iter::Map:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Map:1.60",
      "has alias",
      "Map"
    ],
    [
      "std::iter::Map:1.60",
      "has description",
      "An iterator that maps the values of iter with f."
    ],
    [
      "std::iter::Once:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Once:1.60",
      "has alias",
      "Once"
    ],
    [
      "std::iter::Once:1.60",
      "has description",
      "An iterator that yields an element exactly once."
    ],
    [
      "std::iter::Peekable:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Peekable:1.60",
      "has alias",
      "Peekable"
    ],
    [
      "std::iter::Peekable:1.60",
      "has description",
      "An iterator with a peek() that returns an optional reference to the next element."
    ],
    [
      "std::iter::Repeat:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Repeat:1.60",
      "has alias",
      "Repeat"
    ],
    [
      "std::iter::Repeat:1.60",
      "has description",
      "An iterator that repeats an element endlessly."
    ],
    [
      "std::iter::Rev:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Rev:1.60",
      "has alias",
      "Rev"
    ],
    [
      "std::iter::Rev:1.60",
      "has description",
      "An double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Scan:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Scan:1.60",
      "has alias",
      "Scan"
    ],
    [
      "std::iter::Scan:1.60",
      "has description",
      "An iterator to maintain state while iterating another iterator."
    ],
    [
      "std::iter::Skip:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Skip:1.60",
      "has alias",
      "Skip"
    ],
    [
      "std::iter::Skip:1.60",
      "has description",
      "An iterator that skips over n elements of iter."
    ],
    [
      "std::iter::SkipWhile:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::SkipWhile:1.60",
      "has alias",
      "SkipWhile"
    ],
    [
      "std::iter::SkipWhile:1.60",
      "has description",
      "An iterator that rejects elements while predicate is true."
    ],
    [
      "std::iter::Take:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Take:1.60",
      "has alias",
      "Take"
    ],
    [
      "std::iter::Take:1.60",
      "has description",
      "An iterator that only iterates over the first n iterations of iter."
    ],
    [
      "std::iter::TakeWhile:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::TakeWhile:1.60",
      "has alias",
      "TakeWhile"
    ],
    [
      "std::iter::TakeWhile:1.60",
      "has description",
      "An iterator that only accepts elements while predicate is true."
    ],
    [
      "std::iter::Zip:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Zip:1.60",
      "has alias",
      "Zip"
    ],
    [
      "std::iter::Zip:1.60",
      "has description",
      "An iterator that iterates two other iterators simultaneously."
    ],
    [
      "std::iter::StepBy:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::StepBy:1.60",
      "has alias",
      "StepBy"
    ],
    [
      "std::iter::StepBy:1.60",
      "has description",
      "An adapter for stepping range iterators by a custom amount."
    ],
    [
      "std::iter::DoubleEndedIterator:1.60",
      "has alias",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.60",
      "has alias",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.60",
      "has alias",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.60",
      "has alias",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.60",
      "has alias",
      "IntoIterator"
    ],
    [
      "std::iter::Iterator:1.60",
      "has alias",
      "Iterator"
    ],
    [
      "std::iter::Iterator:1.60",
      "has method",
      "next:1.60"
    ],
    [
      "next:1.60",
      "has argument",
      "&mut self:1.60"
    ],
    [
      "next:1.60",
      "has return type",
      "Option<Self::Item>:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "implements",
      "std::iter::IntoIterator:1.60"
    ],
    [
      "std::iter::empty:1.60",
      "has alias",
      "empty"
    ],
    [
      "std::iter::Iterator:1.60",
      "has adapter",
      "map:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "has adapter",
      "take:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "has adapter",
      "collect:1.60"
    ],
    [
      "assert:1.60",
      "is a",
      "macro"
    ],
    [
      "assert:1.60",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "assert_eq:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.60",
      "has description",
      "Asserts that two expressions are equal to each other (using `PartialEq`)."
    ],
    [
      "assert_ne:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other (using `PartialEq`)."
    ],
    [
      "debug_assert_ne:1.60",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "eprint:1.60",
      "is a",
      "macro"
    ],
    [
      "eprint:1.60",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln:1.60",
      "is a",
      "macro"
    ],
    [
      "eprintln:1.60",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "std:1.60",
      "contains",
      "heap:1.60"
    ],
    [
      "heap:1.60",
      "is a",
      "module"
    ],
    [
      "heap:1.60",
      "has description",
      "dox"
    ],
    [
      "std::iter:1.60",
      "has description",
      "If you've found yourself with a collection of some kind..."
    ],
    [
      "any:1.60",
      "has description",
      "This module implements the `Any` trait..."
    ],
    [
      "ascii:1.60",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "borrow:1.60",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "boxed:1.60",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "cell:1.60",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "process:1.60",
      "has description",
      "A module for working with processes."
    ],
    [
      "ptr:1.60",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "array:1.60",
      "is a",
      "primitive type"
    ],
    [
      "array:1.60",
      "has description",
      "A fixed-size array, denoted `[T; N]`, for the element type, `T`, and the non-negative compile-time constant size, `N`."
    ],
    [
      "bool:1.60",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.60",
      "has description",
      "The boolean type."
    ],
    [
      "any:1.60",
      "has description",
      "A module for dynamic typing through runtime reflection."
    ],
    [
      "f32:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "std:1.60",
      "contains",
      "alloc:1.60"
    ],
    [
      "alloc:1.60",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.60",
      "contains",
      "arch:1.60"
    ],
    [
      "arch:1.60",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.60",
      "contains",
      "future:1.60"
    ],
    [
      "future:1.60",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.60",
      "contains",
      "hint:1.60"
    ],
    [
      "hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "std:1.60",
      "contains",
      "pin:1.60"
    ],
    [
      "pin:1.60",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.60",
      "contains",
      "task:1.60"
    ],
    [
      "task:1.60",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.60",
      "contains",
      "await:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "reference:1.60"
    ],
    [
      "reference:1.60",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.60",
      "contains",
      "never:1.60"
    ],
    [
      "never:1.60",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.60",
      "contains",
      "unit:1.60"
    ],
    [
      "unit:1.60",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std:1.60",
      "contains",
      "primitive::fn:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "primitive::never:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "primitive::reference:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "primitive::unit:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "is_aarch64_feature_detected:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "is_arm_feature_detected:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "is_mips64_feature_detected:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "is_mips_feature_detected:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "is_powerpc64_feature_detected:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "is_powerpc_feature_detected:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "is_x86_feature_detected:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "keyword::fn:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "keyword::let:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "keyword::struct:1.60"
    ],
    [
      "f32:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "std:1.60",
      "contains",
      "fn:1.60"
    ],
    [
      "fn:1.60",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.60",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "never:1.60",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.60",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.60",
      "is a",
      "primitive type"
    ],
    [
      "alloc:1.60",
      "is a",
      "module"
    ],
    [
      "future:1.60",
      "is a",
      "module"
    ],
    [
      "hint:1.60",
      "is a",
      "module"
    ],
    [
      "pin:1.60",
      "is a",
      "module"
    ],
    [
      "task:1.60",
      "is a",
      "module"
    ],
    [
      "await:1.60",
      "is a",
      "macro"
    ],
    [
      "fn:1.60",
      "is a",
      "keyword"
    ],
    [
      "std:1.60",
      "contains",
      "let:1.60"
    ],
    [
      "let:1.60",
      "is a",
      "keyword"
    ],
    [
      "std:1.60",
      "contains",
      "struct:1.60"
    ],
    [
      "struct:1.60",
      "is a",
      "keyword"
    ],
    [
      "std:1.60",
      "contains",
      "array:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "backtrace:1.60"
    ],
    [
      "array:1.60",
      "is a",
      "module"
    ],
    [
      "array:1.60",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "backtrace:1.60",
      "is a",
      "module"
    ],
    [
      "backtrace:1.60",
      "has description",
      "Support for capturing a stack backtrace of an OS thread"
    ],
    [
      "slice:1.60",
      "has description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "asm:1.60",
      "is a",
      "macro"
    ],
    [
      "asm:1.60",
      "has description",
      "Inline assembly."
    ],
    [
      "dbg:1.60",
      "is a",
      "macro"
    ],
    [
      "dbg:1.60",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "global_asm:1.60",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.60",
      "has description",
      "Module-level inline assembly."
    ],
    [
      "async:1.60",
      "is a",
      "keyword"
    ],
    [
      "async:1.60",
      "has description",
      "Return a [`Future`] instead of blocking the current thread."
    ],
    [
      "await:1.60",
      "is a",
      "keyword"
    ],
    [
      "await:1.60",
      "has description",
      "Suspend execution until the result of a [`Future`] is ready."
    ],
    [
      "intrinsics:1.60",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "pin:1.60",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "Self:1.60",
      "is a",
      "keyword"
    ],
    [
      "Self:1.60",
      "has description",
      "The implementing type within a [`trait`] or [`impl`] block, or the current type within a type definition."
    ],
    [
      "as:1.60",
      "is a",
      "keyword"
    ],
    [
      "as:1.60",
      "has description",
      "Cast between types, or rename an import."
    ],
    [
      "std:1.60",
      "contains",
      "asm:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "async:1.60"
    ],
    [
      "pin:1.60",
      "has description",
      "Types which pin data to its location in memory."
    ],
    [
      "std:1.60",
      "contains",
      "dbg:1.60"
    ],
    [
      "f32:1.60",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "f64:1.60",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "unit:1.60",
      "has description",
      "The `()` type, also called \"unit\"."
    ],
    [
      "hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "std:1.60",
      "contains",
      "lazy:1.60"
    ],
    [
      "lazy:1.60",
      "is a",
      "module"
    ],
    [
      "lazy:1.60",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "std:1.60",
      "contains",
      "primitive:1.60"
    ],
    [
      "primitive:1.60",
      "is a",
      "module"
    ],
    [
      "primitive:1.60",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "await:1.60",
      "has description",
      "Suspend execution until the result of a `Future` is ready."
    ],
    [
      "std:1.60",
      "contains",
      "llvm_asm:1.60"
    ],
    [
      "llvm_asm:1.60",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.60",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "dyn:1.60",
      "has description",
      "`dyn` is a prefix of a trait object's type."
    ],
    [
      "fn:1.60",
      "has description",
      "A function or function pointer."
    ],
    [
      "std::iter:1.60",
      "has description",
      "If you’ve found yourself with a collection of some kind..."
    ],
    [
      "std::iter::Iterator:1.60",
      "has argument",
      "&mut self:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "has return type",
      "Option<Self::Item>:1.60"
    ],
    [
      "std::iter::Intersperse:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Intersperse:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::Intersperse:1.60",
      "has description",
      "An iterator adapter that places a separator between all elements."
    ],
    [
      "std::iter::IntersperseWith:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::IntersperseWith:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::IntersperseWith:1.60",
      "has description",
      "An iterator adapter that places a separator between all elements."
    ],
    [
      "std::iter::TrustedStep:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::TrustedStep:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::TrustedStep:1.60",
      "has description",
      "A type that upholds all invariants of Step."
    ],
    [
      "std::iter::zip:1.60",
      "is a",
      "function"
    ],
    [
      "std::iter::zip:1.60",
      "has description",
      "Converts the arguments to iterators and zips them."
    ],
    [
      "std::iter::MapWhile:1.60",
      "has description",
      "An iterator that only accepts elements while predicate returns Some(_)."
    ],
    [
      "async:1.60",
      "has description",
      "Return a `Future` instead of blocking the current thread."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Intersperse:1.60"
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::IntersperseWith:1.60"
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::TrustedStep:1.60"
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::zip:1.60"
    ],
    [
      "assert!:1.60",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "assert_eq!:1.60",
      "has description",
      "Asserts that two expressions are equal to each other (using `PartialEq`)."
    ],
    [
      "assert_ne!:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other (using `PartialEq`)."
    ],
    [
      "cfg!:1.60",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "dbg!:1.60",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "std::iter::once:1.60",
      "has alias",
      "std::iter::once"
    ],
    [
      "std::iter::once:1.60",
      "has description",
      "Creates an iterator that yields an element exactly once."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::once:1.60"
    ],
    [
      "std::iter::repeat:1.60",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat:1.60",
      "has alias",
      "std::iter::repeat"
    ],
    [
      "std::iter::repeat:1.60",
      "has description",
      "Creates a new iterator that endlessly repeats a single element."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::repeat:1.60"
    ],
    [
      "std::iter::once:1.60",
      "has alias",
      "once"
    ],
    [
      "std::iter::repeat:1.60",
      "has alias",
      "repeat"
    ],
    [
      "std::iter::repeat:1.60",
      "description",
      "Creates a new iterator that endlessly repeats a single element.:1.60"
    ],
    [
      "std::iter::StepBy:1.60",
      "has description",
      "An adapter for stepping iterators by a custom amount."
    ],
    [
      "std::iter::StepBy:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::Rev:1.60",
      "has description",
      "A double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Product:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::Product:1.60",
      "has description",
      "Trait to represent types that can be created by multiplying elements of an iterator."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Product:1.60"
    ],
    [
      "std::iter::Sum:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::Sum:1.60",
      "has description",
      "Trait to represent types that can be created by summing up an iterator."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Sum:1.60"
    ],
    [
      "std::iter::FusedIterator:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::FusedIterator:1.60",
      "has description",
      "An iterator that always continues to yield None when exhausted."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::FusedIterator:1.60"
    ],
    [
      "std::iter::FusedIterator:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::TrustedLen:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::TrustedLen:1.60",
      "has description",
      "An iterator that reports an accurate length using size_hint."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::TrustedLen:1.60"
    ],
    [
      "std::iter::TrustedLen:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::Product:1.60",
      "has alias",
      "std::iter::Product"
    ],
    [
      "std::iter::Sum:1.60",
      "has alias",
      "std::iter::Sum"
    ],
    [
      "std::iter::FusedIterator:1.60",
      "has alias",
      "std::iter::FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.60",
      "has alias",
      "std::iter::TrustedLen"
    ],
    [
      "std::iter::Product:1.60",
      "has alias",
      "Product"
    ],
    [
      "std::iter::Sum:1.60",
      "has alias",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.60",
      "has alias",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.60",
      "has alias",
      "TrustedLen"
    ],
    [
      "std::iter::Flatten:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Flatten:1.60",
      "has alias",
      "std::iter::Flatten"
    ],
    [
      "std::iter::Flatten:1.60",
      "has description",
      "An iterator that flattens one level of nesting in an iterator of things that can be turned into iterators."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Flatten:1.60"
    ],
    [
      "std::iter::RepeatWith:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::RepeatWith:1.60",
      "has alias",
      "std::iter::RepeatWith"
    ],
    [
      "std::iter::RepeatWith:1.60",
      "has description",
      "An iterator that repeats elements of type A endlessly by applying the provided closure F: FnMut() -> A."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::RepeatWith:1.60"
    ],
    [
      "std::iter::repeat_with:1.60",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat_with:1.60",
      "has alias",
      "std::iter::repeat_with"
    ],
    [
      "std::iter::repeat_with:1.60",
      "has description",
      "Creates a new iterator that repeats elements of type A endlessly by applying the provided closure, the repeater, F: FnMut() -> A."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::repeat_with:1.60"
    ],
    [
      "std::iter::StepBy:1.60",
      "has description",
      "An iterator for stepping iterators by a custom amount."
    ],
    [
      "std::iter::Copied:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Copied:1.60",
      "has alias",
      "std::iter::Copied"
    ],
    [
      "std::iter::Copied:1.60",
      "has description",
      "An iterator that copies the elements of an underlying iterator."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Copied:1.60"
    ],
    [
      "std::iter::FromFn:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::FromFn:1.60",
      "has alias",
      "std::iter::FromFn"
    ],
    [
      "std::iter::FromFn:1.60",
      "has description",
      "An iterator where each iteration calls the provided closure F: FnMut() -> Option<T>."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::FromFn:1.60"
    ],
    [
      "std::iter::Successors:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::Successors:1.60",
      "has alias",
      "std::iter::Successors"
    ],
    [
      "std::iter::Successors:1.60",
      "has description",
      "An new iterator where each successive item is computed based on the preceding one."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::Successors:1.60"
    ],
    [
      "std::iter::from_fn:1.60",
      "is a",
      "function"
    ],
    [
      "std::iter::from_fn:1.60",
      "has alias",
      "std::iter::from_fn"
    ],
    [
      "std::iter::from_fn:1.60",
      "has description",
      "Creates a new iterator where each iteration calls the provided closure F: FnMut() -> Option<T>."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::from_fn:1.60"
    ],
    [
      "std::iter::successors:1.60",
      "is a",
      "function"
    ],
    [
      "std::iter::successors:1.60",
      "has alias",
      "std::iter::successors"
    ],
    [
      "std::iter::successors:1.60",
      "has description",
      "Creates a new iterator where each successive item is computed based on the preceding one."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::successors:1.60"
    ],
    [
      "std::iter::Iterator:1.60",
      "has method",
      "for_each():1.60"
    ],
    [
      "std::iter::SkipWhile:1.60",
      "has description",
      "An iterator that rejects elements while predicate returns true."
    ],
    [
      "std::iter::TakeWhile:1.60",
      "has description",
      "An iterator that only accepts elements while predicate returns true."
    ],
    [
      "std::iter::Iterator:1.60",
      "has method",
      "for_each:1.60"
    ],
    [
      "std::iter::OnceWith:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::OnceWith:1.60",
      "has description",
      "An iterator that yields a single element of type A by applying the provided closure F: FnOnce() -> A."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::OnceWith:1.60"
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::once_with:1.60"
    ],
    [
      "std::iter::once_with:1.60",
      "is a",
      "function"
    ],
    [
      "std::iter::once_with:1.60",
      "has description",
      "Creates an iterator that lazily generates a value exactly once by invoking the provided closure."
    ],
    [
      "std::iter::Chain:1.60",
      "has description",
      "An iterator that links two iterators together, in a chain."
    ],
    [
      "std::iter::MapWhile:1.60",
      "is a",
      "struct"
    ],
    [
      "std::iter::MapWhile:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::InPlaceIterable:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::InPlaceIterable:1.60",
      "has description",
      "An iterator that when yielding an item will have taken at least one element from its underlying SourceIter."
    ],
    [
      "std::iter::SourceIter:1.60",
      "is a",
      "trait"
    ],
    [
      "std::iter::SourceIter:1.60",
      "has description",
      "This trait provides transitive access to source-stage in an interator-adapter pipeline under the conditions that"
    ],
    [
      "std::iter::Step:1.60",
      "has description",
      "Objects that have a notion of successor and predecessor operations."
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::MapWhile:1.60"
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::InPlaceIterable:1.60"
    ],
    [
      "std::iter::InPlaceIterable:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::SourceIter:1.60",
      "has description",
      "This trait provides transitive access to source-stage in an iterator-adapter pipeline under the conditions that"
    ],
    [
      "std::iter:1.60",
      "contains",
      "std::iter::SourceIter:1.60"
    ],
    [
      "std::iter::SourceIter:1.60",
      "has feature",
      "Experimental:1.60"
    ],
    [
      "std::iter::SourceIter:1.60",
      "has description",
      "This trait provides transitive access to source-stage in an iterator-adapter pipeline"
    ],
    [
      "std::iter:1.50",
      "is a",
      "module"
    ],
    [
      "std::iter:1.50",
      "has alias",
      "std::iter"
    ],
    [
      "std::iter:1.50",
      "stable since",
      "1.0.0"
    ],
    [
      "std::iter:1.50",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::iter::Chain:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Chain:1.50",
      "has alias",
      "std::iter::Chain"
    ],
    [
      "std::iter::Chain:1.50",
      "has description",
      "An iterator that strings two iterators together."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Chain:1.50"
    ],
    [
      "std::iter::Cloned:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cloned:1.50",
      "has alias",
      "std::iter::Cloned"
    ],
    [
      "std::iter::Cloned:1.50",
      "has description",
      "An iterator that clones the elements of an underlying iterator."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Cloned:1.50"
    ],
    [
      "std::iter::Cycle:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cycle:1.50",
      "has alias",
      "std::iter::Cycle"
    ],
    [
      "std::iter::Cycle:1.50",
      "has description",
      "An iterator that repeats endlessly."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Cycle:1.50"
    ],
    [
      "std::iter::DoubleEndedIterator:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::DoubleEndedIterator:1.50",
      "has alias",
      "std::iter::DoubleEndedIterator"
    ],
    [
      "std::iter::DoubleEndedIterator:1.50",
      "has description",
      "An iterator able to yield elements from both ends."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::DoubleEndedIterator:1.50"
    ],
    [
      "std::iter::empty:1.50",
      "is a",
      "function"
    ],
    [
      "std::iter::empty:1.50",
      "has alias",
      "std::iter::empty"
    ],
    [
      "std::iter::empty:1.50",
      "has description",
      "Creates an iterator that yields nothing."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::empty:1.50"
    ],
    [
      "std::iter::Iterator:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::Iterator:1.50",
      "has alias",
      "std::iter::Iterator"
    ],
    [
      "std::iter::Iterator:1.50",
      "has description",
      "An interface for dealing with iterators."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Iterator:1.50"
    ],
    [
      "std::iter::ExactSizeIterator:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::ExactSizeIterator:1.50",
      "has alias",
      "std::iter::ExactSizeIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.50",
      "has description",
      "An iterator that knows its exact length."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::ExactSizeIterator:1.50"
    ],
    [
      "std::iter::Extend:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::Extend:1.50",
      "has alias",
      "std::iter::Extend"
    ],
    [
      "std::iter::Extend:1.50",
      "has description",
      "Extend a collection with the contents of an iterator."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Extend:1.50"
    ],
    [
      "std::iter::FromIterator:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::FromIterator:1.50",
      "has alias",
      "std::iter::FromIterator"
    ],
    [
      "std::iter::FromIterator:1.50",
      "has description",
      "Conversion from an Iterator."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::FromIterator:1.50"
    ],
    [
      "std::iter::IntoIterator:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::IntoIterator:1.50",
      "has alias",
      "std::iter::IntoIterator"
    ],
    [
      "std::iter::IntoIterator:1.50",
      "has description",
      "Conversion into an Iterator."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::IntoIterator:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::iter:1.50"
    ],
    [
      "std::iter:1.50",
      "description",
      "Composable external iteration.:1.50"
    ],
    [
      "std::iter:1.50",
      "description",
      "If you've found yourself with a collection of some kind...:1.50"
    ],
    [
      "any:1.50",
      "is a",
      "module"
    ],
    [
      "any:1.50",
      "description",
      "This module implements the `Any` trait...:1.50"
    ],
    [
      "ascii:1.50",
      "is a",
      "module"
    ],
    [
      "ascii:1.50",
      "description",
      "Operations on ASCII strings and characters.:1.50"
    ],
    [
      "borrow:1.50",
      "is a",
      "module"
    ],
    [
      "borrow:1.50",
      "description",
      "A module for working with borrowed data.:1.50"
    ],
    [
      "boxed:1.50",
      "is a",
      "module"
    ],
    [
      "boxed:1.50",
      "description",
      "A pointer type for heap allocation.:1.50"
    ],
    [
      "cell:1.50",
      "is a",
      "module"
    ],
    [
      "cell:1.50",
      "description",
      "Shareable mutable containers.:1.50"
    ],
    [
      "assert!:1.50",
      "is a",
      "macro"
    ],
    [
      "assert!:1.50",
      "description",
      "Ensure that a boolean expression is `true`...:1.50"
    ],
    [
      "assert_eq!:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.50",
      "description",
      "Asserts that two expressions are equal...:1.50"
    ],
    [
      "cfg!:1.50",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.50",
      "description",
      "Boolean evaluation of configuration flags.:1.50"
    ],
    [
      "std::iter::Iterator:1.50",
      "description",
      "An interface for dealing with iterators.:1.50"
    ],
    [
      "std::iter::Iterator:1.50",
      "has associated type",
      "Item:1.50"
    ],
    [
      "std::iter::Iterator:1.50",
      "has method",
      "next():1.50"
    ],
    [
      "Counter:1.50",
      "implements",
      "std::iter::Iterator:1.50"
    ],
    [
      "Counter:1.50",
      "has method",
      "new():1.50"
    ],
    [
      "std::iter::Chain:1.50",
      "description",
      "An iterator that strings two iterators together.:1.50"
    ],
    [
      "std::iter::Cloned:1.50",
      "description",
      "An iterator that clones the elements...:1.50"
    ],
    [
      "std::iter::Cycle:1.50",
      "description",
      "An iterator that repeats endlessly.:1.50"
    ],
    [
      "std::iter::DoubleEndedIterator:1.50",
      "description",
      "An iterator able to yield elements...:1.50"
    ],
    [
      "std::iter::ExactSizeIterator:1.50",
      "description",
      "An iterator that knows its exact length.:1.50"
    ],
    [
      "std::iter::empty:1.50",
      "description",
      "Creates an iterator that yields nothing.:1.50"
    ],
    [
      "std::iter::once:1.50",
      "is a",
      "function"
    ],
    [
      "std::iter::once:1.50",
      "description",
      "Creates an iterator that yields an element exactly once.:1.50"
    ],
    [
      "std::iter:1.50",
      "has alias",
      "iter"
    ],
    [
      "std:1.50",
      "contains",
      "any:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "ascii:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "borrow:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "boxed:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "cell:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "char:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "clone:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "cmp:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "collections:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "convert:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "default:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "env:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "error:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "f32:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "f64:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "ffi:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "fmt:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "fs:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "hash:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "i16:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "i32:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "i64:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "i8:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "intrinsics:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "io:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "isize:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "marker:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "mem:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "net:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "num:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "ops:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "option:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "os:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "panic:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "path:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "prelude:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "process:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "ptr:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "raw:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "rc:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "result:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "slice:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "str:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "string:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "sync:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "thread:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "time:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "u16:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "u32:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "u64:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "u8:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "usize:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "vec:1.50"
    ],
    [
      "std::iter::Chain:1.50",
      "has alias",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.50",
      "has alias",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.50",
      "has alias",
      "Cycle"
    ],
    [
      "std::iter::Empty:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Empty:1.50",
      "has alias",
      "Empty"
    ],
    [
      "std::iter::Empty:1.50",
      "has description",
      "An iterator that yields nothing."
    ],
    [
      "std::iter::Enumerate:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Enumerate:1.50",
      "has alias",
      "Enumerate"
    ],
    [
      "std::iter::Enumerate:1.50",
      "has description",
      "An iterator that yields the current count and the element during iteration."
    ],
    [
      "std::iter::Filter:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Filter:1.50",
      "has alias",
      "Filter"
    ],
    [
      "std::iter::Filter:1.50",
      "has description",
      "An iterator that filters the elements of iter with predicate."
    ],
    [
      "std::iter::FilterMap:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::FilterMap:1.50",
      "has alias",
      "FilterMap"
    ],
    [
      "std::iter::FilterMap:1.50",
      "has description",
      "An iterator that uses f to both filter and map elements from iter."
    ],
    [
      "std::iter::FlatMap:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::FlatMap:1.50",
      "has alias",
      "FlatMap"
    ],
    [
      "std::iter::FlatMap:1.50",
      "has description",
      "An iterator that maps each element to an iterator, and yields the elements of the produced iterators."
    ],
    [
      "std::iter::Fuse:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Fuse:1.50",
      "has alias",
      "Fuse"
    ],
    [
      "std::iter::Fuse:1.50",
      "has description",
      "An iterator that yields None forever after the underlying iterator yields None once."
    ],
    [
      "std::iter::Inspect:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Inspect:1.50",
      "has alias",
      "Inspect"
    ],
    [
      "std::iter::Inspect:1.50",
      "has description",
      "An iterator that calls a function with a reference to each element before yielding it."
    ],
    [
      "std::iter::Map:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Map:1.50",
      "has alias",
      "Map"
    ],
    [
      "std::iter::Map:1.50",
      "has description",
      "An iterator that maps the values of iter with f."
    ],
    [
      "std::iter::Once:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Once:1.50",
      "has alias",
      "Once"
    ],
    [
      "std::iter::Once:1.50",
      "has description",
      "An iterator that yields an element exactly once."
    ],
    [
      "std::iter::Peekable:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Peekable:1.50",
      "has alias",
      "Peekable"
    ],
    [
      "std::iter::Peekable:1.50",
      "has description",
      "An iterator with a peek() that returns an optional reference to the next element."
    ],
    [
      "std::iter::Repeat:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Repeat:1.50",
      "has alias",
      "Repeat"
    ],
    [
      "std::iter::Repeat:1.50",
      "has description",
      "An iterator that repeats an element endlessly."
    ],
    [
      "std::iter::Rev:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Rev:1.50",
      "has alias",
      "Rev"
    ],
    [
      "std::iter::Rev:1.50",
      "has description",
      "An double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Scan:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Scan:1.50",
      "has alias",
      "Scan"
    ],
    [
      "std::iter::Scan:1.50",
      "has description",
      "An iterator to maintain state while iterating another iterator."
    ],
    [
      "std::iter::Skip:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Skip:1.50",
      "has alias",
      "Skip"
    ],
    [
      "std::iter::Skip:1.50",
      "has description",
      "An iterator that skips over n elements of iter."
    ],
    [
      "std::iter::SkipWhile:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::SkipWhile:1.50",
      "has alias",
      "SkipWhile"
    ],
    [
      "std::iter::SkipWhile:1.50",
      "has description",
      "An iterator that rejects elements while predicate is true."
    ],
    [
      "std::iter::Take:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Take:1.50",
      "has alias",
      "Take"
    ],
    [
      "std::iter::Take:1.50",
      "has description",
      "An iterator that only iterates over the first n iterations of iter."
    ],
    [
      "std::iter::TakeWhile:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::TakeWhile:1.50",
      "has alias",
      "TakeWhile"
    ],
    [
      "std::iter::TakeWhile:1.50",
      "has description",
      "An iterator that only accepts elements while predicate is true."
    ],
    [
      "std::iter::Zip:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Zip:1.50",
      "has alias",
      "Zip"
    ],
    [
      "std::iter::Zip:1.50",
      "has description",
      "An iterator that iterates two other iterators simultaneously."
    ],
    [
      "std::iter::StepBy:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::StepBy:1.50",
      "has alias",
      "StepBy"
    ],
    [
      "std::iter::StepBy:1.50",
      "has description",
      "An adapter for stepping range iterators by a custom amount."
    ],
    [
      "std::iter::DoubleEndedIterator:1.50",
      "has alias",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.50",
      "has alias",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.50",
      "has alias",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.50",
      "has alias",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.50",
      "has alias",
      "IntoIterator"
    ],
    [
      "std::iter::Iterator:1.50",
      "has alias",
      "Iterator"
    ],
    [
      "std::iter::Iterator:1.50",
      "has method",
      "next:1.50"
    ],
    [
      "next:1.50",
      "has argument",
      "&mut self:1.50"
    ],
    [
      "next:1.50",
      "has return type",
      "Option<Self::Item>:1.50"
    ],
    [
      "std::iter::Iterator:1.50",
      "implements",
      "std::iter::IntoIterator:1.50"
    ],
    [
      "std::iter::empty:1.50",
      "has alias",
      "empty"
    ],
    [
      "std::iter::Iterator:1.50",
      "has adapter",
      "map:1.50"
    ],
    [
      "std::iter::Iterator:1.50",
      "has adapter",
      "take:1.50"
    ],
    [
      "std::iter::Iterator:1.50",
      "has adapter",
      "collect:1.50"
    ],
    [
      "assert:1.50",
      "is a",
      "macro"
    ],
    [
      "assert:1.50",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "assert_eq:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.50",
      "has description",
      "Asserts that two expressions are equal to each other (using `PartialEq`)."
    ],
    [
      "assert_ne:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other (using `PartialEq`)."
    ],
    [
      "debug_assert_ne:1.50",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "eprint:1.50",
      "is a",
      "macro"
    ],
    [
      "eprint:1.50",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln:1.50",
      "is a",
      "macro"
    ],
    [
      "eprintln:1.50",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "std:1.50",
      "contains",
      "heap:1.50"
    ],
    [
      "heap:1.50",
      "is a",
      "module"
    ],
    [
      "heap:1.50",
      "has description",
      "dox"
    ],
    [
      "std::iter:1.50",
      "has description",
      "If you've found yourself with a collection of some kind..."
    ],
    [
      "any:1.50",
      "has description",
      "This module implements the `Any` trait..."
    ],
    [
      "ascii:1.50",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "borrow:1.50",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "boxed:1.50",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "cell:1.50",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "process:1.50",
      "has description",
      "A module for working with processes."
    ],
    [
      "ptr:1.50",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "array:1.50",
      "is a",
      "primitive type"
    ],
    [
      "array:1.50",
      "has description",
      "A fixed-size array, denoted `[T; N]`, for the element type, `T`, and the non-negative compile-time constant size, `N`."
    ],
    [
      "bool:1.50",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.50",
      "has description",
      "The boolean type."
    ],
    [
      "any:1.50",
      "has description",
      "A module for dynamic typing through runtime reflection."
    ],
    [
      "f32:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "std:1.50",
      "contains",
      "alloc:1.50"
    ],
    [
      "alloc:1.50",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.50",
      "contains",
      "arch:1.50"
    ],
    [
      "arch:1.50",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.50",
      "contains",
      "future:1.50"
    ],
    [
      "future:1.50",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.50",
      "contains",
      "hint:1.50"
    ],
    [
      "hint:1.50",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "std:1.50",
      "contains",
      "pin:1.50"
    ],
    [
      "pin:1.50",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.50",
      "contains",
      "task:1.50"
    ],
    [
      "task:1.50",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.50",
      "contains",
      "await:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "reference:1.50"
    ],
    [
      "reference:1.50",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.50",
      "contains",
      "never:1.50"
    ],
    [
      "never:1.50",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.50",
      "contains",
      "unit:1.50"
    ],
    [
      "unit:1.50",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std:1.50",
      "contains",
      "primitive::fn:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "primitive::never:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "primitive::reference:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "primitive::unit:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "is_aarch64_feature_detected:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "is_arm_feature_detected:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "is_mips64_feature_detected:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "is_mips_feature_detected:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "is_powerpc64_feature_detected:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "is_powerpc_feature_detected:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "is_x86_feature_detected:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "keyword::fn:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "keyword::let:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "keyword::struct:1.50"
    ],
    [
      "f32:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "std:1.50",
      "contains",
      "fn:1.50"
    ],
    [
      "fn:1.50",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.50",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "never:1.50",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.50",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.50",
      "is a",
      "primitive type"
    ],
    [
      "alloc:1.50",
      "is a",
      "module"
    ],
    [
      "future:1.50",
      "is a",
      "module"
    ],
    [
      "hint:1.50",
      "is a",
      "module"
    ],
    [
      "pin:1.50",
      "is a",
      "module"
    ],
    [
      "task:1.50",
      "is a",
      "module"
    ],
    [
      "await:1.50",
      "is a",
      "macro"
    ],
    [
      "fn:1.50",
      "is a",
      "keyword"
    ],
    [
      "std:1.50",
      "contains",
      "let:1.50"
    ],
    [
      "let:1.50",
      "is a",
      "keyword"
    ],
    [
      "std:1.50",
      "contains",
      "struct:1.50"
    ],
    [
      "struct:1.50",
      "is a",
      "keyword"
    ],
    [
      "std:1.50",
      "contains",
      "array:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "backtrace:1.50"
    ],
    [
      "array:1.50",
      "is a",
      "module"
    ],
    [
      "array:1.50",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "backtrace:1.50",
      "is a",
      "module"
    ],
    [
      "backtrace:1.50",
      "has description",
      "Support for capturing a stack backtrace of an OS thread"
    ],
    [
      "slice:1.50",
      "has description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "asm:1.50",
      "is a",
      "macro"
    ],
    [
      "asm:1.50",
      "has description",
      "Inline assembly."
    ],
    [
      "dbg:1.50",
      "is a",
      "macro"
    ],
    [
      "dbg:1.50",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "global_asm:1.50",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.50",
      "has description",
      "Module-level inline assembly."
    ],
    [
      "async:1.50",
      "is a",
      "keyword"
    ],
    [
      "async:1.50",
      "has description",
      "Return a [`Future`] instead of blocking the current thread."
    ],
    [
      "await:1.50",
      "is a",
      "keyword"
    ],
    [
      "await:1.50",
      "has description",
      "Suspend execution until the result of a [`Future`] is ready."
    ],
    [
      "intrinsics:1.50",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "pin:1.50",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "Self:1.50",
      "is a",
      "keyword"
    ],
    [
      "Self:1.50",
      "has description",
      "The implementing type within a [`trait`] or [`impl`] block, or the current type within a type definition."
    ],
    [
      "as:1.50",
      "is a",
      "keyword"
    ],
    [
      "as:1.50",
      "has description",
      "Cast between types, or rename an import."
    ],
    [
      "std:1.50",
      "contains",
      "asm:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "async:1.50"
    ],
    [
      "pin:1.50",
      "has description",
      "Types which pin data to its location in memory."
    ],
    [
      "std:1.50",
      "contains",
      "dbg:1.50"
    ],
    [
      "f32:1.50",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "f64:1.50",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "unit:1.50",
      "has description",
      "The `()` type, also called \"unit\"."
    ],
    [
      "hint:1.50",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "std:1.50",
      "contains",
      "lazy:1.50"
    ],
    [
      "lazy:1.50",
      "is a",
      "module"
    ],
    [
      "lazy:1.50",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "std:1.50",
      "contains",
      "primitive:1.50"
    ],
    [
      "primitive:1.50",
      "is a",
      "module"
    ],
    [
      "primitive:1.50",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "await:1.50",
      "has description",
      "Suspend execution until the result of a `Future` is ready."
    ],
    [
      "std:1.50",
      "contains",
      "llvm_asm:1.50"
    ],
    [
      "llvm_asm:1.50",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.50",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "dyn:1.50",
      "has description",
      "`dyn` is a prefix of a trait object's type."
    ],
    [
      "fn:1.50",
      "has description",
      "A function or function pointer."
    ],
    [
      "std::iter::once:1.50",
      "has alias",
      "std::iter::once"
    ],
    [
      "std::iter::once:1.50",
      "has description",
      "Creates an iterator that yields an element exactly once."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::once:1.50"
    ],
    [
      "std::iter::repeat:1.50",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat:1.50",
      "has alias",
      "std::iter::repeat"
    ],
    [
      "std::iter::repeat:1.50",
      "has description",
      "Creates a new iterator that endlessly repeats a single element."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::repeat:1.50"
    ],
    [
      "std::iter::once:1.50",
      "has alias",
      "once"
    ],
    [
      "std::iter::repeat:1.50",
      "has alias",
      "repeat"
    ],
    [
      "std::iter::repeat:1.50",
      "description",
      "Creates a new iterator that endlessly repeats a single element.:1.50"
    ],
    [
      "std::iter::StepBy:1.50",
      "has description",
      "An adapter for stepping iterators by a custom amount."
    ],
    [
      "std::iter::StepBy:1.50",
      "has feature",
      "Experimental:1.50"
    ],
    [
      "std::iter::Rev:1.50",
      "has description",
      "A double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Product:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::Product:1.50",
      "has description",
      "Trait to represent types that can be created by multiplying elements of an iterator."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Product:1.50"
    ],
    [
      "std::iter::Sum:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::Sum:1.50",
      "has description",
      "Trait to represent types that can be created by summing up an iterator."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Sum:1.50"
    ],
    [
      "std::iter::FusedIterator:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::FusedIterator:1.50",
      "has description",
      "An iterator that always continues to yield None when exhausted."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::FusedIterator:1.50"
    ],
    [
      "std::iter::FusedIterator:1.50",
      "has feature",
      "Experimental:1.50"
    ],
    [
      "std::iter::TrustedLen:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::TrustedLen:1.50",
      "has description",
      "An iterator that reports an accurate length using size_hint."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::TrustedLen:1.50"
    ],
    [
      "std::iter::TrustedLen:1.50",
      "has feature",
      "Experimental:1.50"
    ],
    [
      "std::iter::Product:1.50",
      "has alias",
      "std::iter::Product"
    ],
    [
      "std::iter::Sum:1.50",
      "has alias",
      "std::iter::Sum"
    ],
    [
      "std::iter::FusedIterator:1.50",
      "has alias",
      "std::iter::FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.50",
      "has alias",
      "std::iter::TrustedLen"
    ],
    [
      "std::iter::Product:1.50",
      "has alias",
      "Product"
    ],
    [
      "std::iter::Sum:1.50",
      "has alias",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.50",
      "has alias",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.50",
      "has alias",
      "TrustedLen"
    ],
    [
      "std::iter::Flatten:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Flatten:1.50",
      "has alias",
      "std::iter::Flatten"
    ],
    [
      "std::iter::Flatten:1.50",
      "has description",
      "An iterator that flattens one level of nesting in an iterator of things that can be turned into iterators."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Flatten:1.50"
    ],
    [
      "std::iter::RepeatWith:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::RepeatWith:1.50",
      "has alias",
      "std::iter::RepeatWith"
    ],
    [
      "std::iter::RepeatWith:1.50",
      "has description",
      "An iterator that repeats elements of type A endlessly by applying the provided closure F: FnMut() -> A."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::RepeatWith:1.50"
    ],
    [
      "std::iter::repeat_with:1.50",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat_with:1.50",
      "has alias",
      "std::iter::repeat_with"
    ],
    [
      "std::iter::repeat_with:1.50",
      "has description",
      "Creates a new iterator that repeats elements of type A endlessly by applying the provided closure, the repeater, F: FnMut() -> A."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::repeat_with:1.50"
    ],
    [
      "std::iter::StepBy:1.50",
      "has description",
      "An iterator for stepping iterators by a custom amount."
    ],
    [
      "std::iter::Copied:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Copied:1.50",
      "has alias",
      "std::iter::Copied"
    ],
    [
      "std::iter::Copied:1.50",
      "has description",
      "An iterator that copies the elements of an underlying iterator."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Copied:1.50"
    ],
    [
      "std::iter::FromFn:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::FromFn:1.50",
      "has alias",
      "std::iter::FromFn"
    ],
    [
      "std::iter::FromFn:1.50",
      "has description",
      "An iterator where each iteration calls the provided closure F: FnMut() -> Option<T>."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::FromFn:1.50"
    ],
    [
      "std::iter::Successors:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::Successors:1.50",
      "has alias",
      "std::iter::Successors"
    ],
    [
      "std::iter::Successors:1.50",
      "has description",
      "An new iterator where each successive item is computed based on the preceding one."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::Successors:1.50"
    ],
    [
      "std::iter::from_fn:1.50",
      "is a",
      "function"
    ],
    [
      "std::iter::from_fn:1.50",
      "has alias",
      "std::iter::from_fn"
    ],
    [
      "std::iter::from_fn:1.50",
      "has description",
      "Creates a new iterator where each iteration calls the provided closure F: FnMut() -> Option<T>."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::from_fn:1.50"
    ],
    [
      "std::iter::successors:1.50",
      "is a",
      "function"
    ],
    [
      "std::iter::successors:1.50",
      "has alias",
      "std::iter::successors"
    ],
    [
      "std::iter::successors:1.50",
      "has description",
      "Creates a new iterator where each successive item is computed based on the preceding one."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::successors:1.50"
    ],
    [
      "std::iter::Iterator:1.50",
      "has method",
      "for_each():1.50"
    ],
    [
      "std::iter::SkipWhile:1.50",
      "has description",
      "An iterator that rejects elements while predicate returns true."
    ],
    [
      "std::iter::TakeWhile:1.50",
      "has description",
      "An iterator that only accepts elements while predicate returns true."
    ],
    [
      "std::iter::Iterator:1.50",
      "has method",
      "for_each:1.50"
    ],
    [
      "std::iter::OnceWith:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::OnceWith:1.50",
      "has description",
      "An iterator that yields a single element of type A by applying the provided closure F: FnOnce() -> A."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::OnceWith:1.50"
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::once_with:1.50"
    ],
    [
      "std::iter::once_with:1.50",
      "is a",
      "function"
    ],
    [
      "std::iter::once_with:1.50",
      "has description",
      "Creates an iterator that lazily generates a value exactly once by invoking the provided closure."
    ],
    [
      "std::iter::Chain:1.50",
      "has description",
      "An iterator that links two iterators together, in a chain."
    ],
    [
      "std::iter::MapWhile:1.50",
      "is a",
      "struct"
    ],
    [
      "std::iter::MapWhile:1.50",
      "has description",
      "An iterator that only accepts elements while predicate returns Some(_)."
    ],
    [
      "std::iter::MapWhile:1.50",
      "has feature",
      "Experimental:1.50"
    ],
    [
      "std::iter::InPlaceIterable:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::InPlaceIterable:1.50",
      "has description",
      "An iterator that when yielding an item will have taken at least one element from its underlying SourceIter."
    ],
    [
      "std::iter::SourceIter:1.50",
      "is a",
      "trait"
    ],
    [
      "std::iter::SourceIter:1.50",
      "has description",
      "This trait provides transitive access to source-stage in an interator-adapter pipeline under the conditions that"
    ],
    [
      "std::iter::Step:1.50",
      "has description",
      "Objects that have a notion of successor and predecessor operations."
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::MapWhile:1.50"
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::InPlaceIterable:1.50"
    ],
    [
      "std::iter::InPlaceIterable:1.50",
      "has feature",
      "Experimental:1.50"
    ],
    [
      "std::iter::SourceIter:1.50",
      "has description",
      "This trait provides transitive access to source-stage in an iterator-adapter pipeline under the conditions that"
    ],
    [
      "std::iter:1.50",
      "contains",
      "std::iter::SourceIter:1.50"
    ],
    [
      "std::iter::SourceIter:1.50",
      "has feature",
      "Experimental:1.50"
    ],
    [
      "std::iter::SourceIter:1.50",
      "has description",
      "This trait provides transitive access to source-stage in an iterator-adapter pipeline"
    ],
    [
      "std::iter:1.40",
      "is a",
      "module"
    ],
    [
      "std::iter:1.40",
      "has alias",
      "std::iter"
    ],
    [
      "std::iter:1.40",
      "stable since",
      "1.0.0"
    ],
    [
      "std::iter:1.40",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::iter::Chain:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Chain:1.40",
      "has alias",
      "std::iter::Chain"
    ],
    [
      "std::iter::Chain:1.40",
      "has description",
      "An iterator that strings two iterators together."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Chain:1.40"
    ],
    [
      "std::iter::Cloned:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cloned:1.40",
      "has alias",
      "std::iter::Cloned"
    ],
    [
      "std::iter::Cloned:1.40",
      "has description",
      "An iterator that clones the elements of an underlying iterator."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Cloned:1.40"
    ],
    [
      "std::iter::Cycle:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cycle:1.40",
      "has alias",
      "std::iter::Cycle"
    ],
    [
      "std::iter::Cycle:1.40",
      "has description",
      "An iterator that repeats endlessly."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Cycle:1.40"
    ],
    [
      "std::iter::DoubleEndedIterator:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::DoubleEndedIterator:1.40",
      "has alias",
      "std::iter::DoubleEndedIterator"
    ],
    [
      "std::iter::DoubleEndedIterator:1.40",
      "has description",
      "An iterator able to yield elements from both ends."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::DoubleEndedIterator:1.40"
    ],
    [
      "std::iter::empty:1.40",
      "is a",
      "function"
    ],
    [
      "std::iter::empty:1.40",
      "has alias",
      "std::iter::empty"
    ],
    [
      "std::iter::empty:1.40",
      "has description",
      "Creates an iterator that yields nothing."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::empty:1.40"
    ],
    [
      "std::iter::Iterator:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::Iterator:1.40",
      "has alias",
      "std::iter::Iterator"
    ],
    [
      "std::iter::Iterator:1.40",
      "has description",
      "An interface for dealing with iterators."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Iterator:1.40"
    ],
    [
      "std::iter::ExactSizeIterator:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::ExactSizeIterator:1.40",
      "has alias",
      "std::iter::ExactSizeIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.40",
      "has description",
      "An iterator that knows its exact length."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::ExactSizeIterator:1.40"
    ],
    [
      "std::iter::Extend:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::Extend:1.40",
      "has alias",
      "std::iter::Extend"
    ],
    [
      "std::iter::Extend:1.40",
      "has description",
      "Extend a collection with the contents of an iterator."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Extend:1.40"
    ],
    [
      "std::iter::FromIterator:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::FromIterator:1.40",
      "has alias",
      "std::iter::FromIterator"
    ],
    [
      "std::iter::FromIterator:1.40",
      "has description",
      "Conversion from an Iterator."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::FromIterator:1.40"
    ],
    [
      "std::iter::IntoIterator:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::IntoIterator:1.40",
      "has alias",
      "std::iter::IntoIterator"
    ],
    [
      "std::iter::IntoIterator:1.40",
      "has description",
      "Conversion into an Iterator."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::IntoIterator:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::iter:1.40"
    ],
    [
      "std::iter:1.40",
      "description",
      "Composable external iteration.:1.40"
    ],
    [
      "std::iter:1.40",
      "description",
      "If you've found yourself with a collection of some kind...:1.40"
    ],
    [
      "any:1.40",
      "is a",
      "module"
    ],
    [
      "any:1.40",
      "description",
      "This module implements the `Any` trait...:1.40"
    ],
    [
      "ascii:1.40",
      "is a",
      "module"
    ],
    [
      "ascii:1.40",
      "description",
      "Operations on ASCII strings and characters.:1.40"
    ],
    [
      "borrow:1.40",
      "is a",
      "module"
    ],
    [
      "borrow:1.40",
      "description",
      "A module for working with borrowed data.:1.40"
    ],
    [
      "boxed:1.40",
      "is a",
      "module"
    ],
    [
      "boxed:1.40",
      "description",
      "A pointer type for heap allocation.:1.40"
    ],
    [
      "cell:1.40",
      "is a",
      "module"
    ],
    [
      "cell:1.40",
      "description",
      "Shareable mutable containers.:1.40"
    ],
    [
      "assert!:1.40",
      "is a",
      "macro"
    ],
    [
      "assert!:1.40",
      "description",
      "Ensure that a boolean expression is `true`...:1.40"
    ],
    [
      "assert_eq!:1.40",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.40",
      "description",
      "Asserts that two expressions are equal...:1.40"
    ],
    [
      "cfg!:1.40",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.40",
      "description",
      "Boolean evaluation of configuration flags.:1.40"
    ],
    [
      "std::iter::Iterator:1.40",
      "description",
      "An interface for dealing with iterators.:1.40"
    ],
    [
      "std::iter::Iterator:1.40",
      "has associated type",
      "Item:1.40"
    ],
    [
      "std::iter::Iterator:1.40",
      "has method",
      "next():1.40"
    ],
    [
      "Counter:1.40",
      "implements",
      "std::iter::Iterator:1.40"
    ],
    [
      "Counter:1.40",
      "has method",
      "new():1.40"
    ],
    [
      "std::iter::Chain:1.40",
      "description",
      "An iterator that strings two iterators together.:1.40"
    ],
    [
      "std::iter::Cloned:1.40",
      "description",
      "An iterator that clones the elements...:1.40"
    ],
    [
      "std::iter::Cycle:1.40",
      "description",
      "An iterator that repeats endlessly.:1.40"
    ],
    [
      "std::iter::DoubleEndedIterator:1.40",
      "description",
      "An iterator able to yield elements...:1.40"
    ],
    [
      "std::iter::ExactSizeIterator:1.40",
      "description",
      "An iterator that knows its exact length.:1.40"
    ],
    [
      "std::iter::empty:1.40",
      "description",
      "Creates an iterator that yields nothing.:1.40"
    ],
    [
      "std::iter::once:1.40",
      "is a",
      "function"
    ],
    [
      "std::iter::once:1.40",
      "description",
      "Creates an iterator that yields an element exactly once.:1.40"
    ],
    [
      "std::iter:1.40",
      "has alias",
      "iter"
    ],
    [
      "std:1.40",
      "contains",
      "any:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "ascii:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "borrow:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "boxed:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "cell:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "char:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "clone:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "cmp:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "collections:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "convert:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "default:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "env:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "error:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "f32:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "f64:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "ffi:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "fmt:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "fs:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "hash:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "i16:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "i32:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "i64:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "i8:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "intrinsics:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "io:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "isize:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "marker:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "mem:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "net:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "num:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "ops:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "option:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "os:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "panic:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "path:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "prelude:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "process:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "ptr:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "raw:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "rc:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "result:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "slice:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "str:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "string:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "sync:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "thread:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "time:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "u16:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "u32:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "u64:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "u8:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "usize:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "vec:1.40"
    ],
    [
      "std::iter::Chain:1.40",
      "has alias",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.40",
      "has alias",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.40",
      "has alias",
      "Cycle"
    ],
    [
      "std::iter::Empty:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Empty:1.40",
      "has alias",
      "Empty"
    ],
    [
      "std::iter::Empty:1.40",
      "has description",
      "An iterator that yields nothing."
    ],
    [
      "std::iter::Enumerate:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Enumerate:1.40",
      "has alias",
      "Enumerate"
    ],
    [
      "std::iter::Enumerate:1.40",
      "has description",
      "An iterator that yields the current count and the element during iteration."
    ],
    [
      "std::iter::Filter:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Filter:1.40",
      "has alias",
      "Filter"
    ],
    [
      "std::iter::Filter:1.40",
      "has description",
      "An iterator that filters the elements of iter with predicate."
    ],
    [
      "std::iter::FilterMap:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::FilterMap:1.40",
      "has alias",
      "FilterMap"
    ],
    [
      "std::iter::FilterMap:1.40",
      "has description",
      "An iterator that uses f to both filter and map elements from iter."
    ],
    [
      "std::iter::FlatMap:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::FlatMap:1.40",
      "has alias",
      "FlatMap"
    ],
    [
      "std::iter::FlatMap:1.40",
      "has description",
      "An iterator that maps each element to an iterator, and yields the elements of the produced iterators."
    ],
    [
      "std::iter::Fuse:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Fuse:1.40",
      "has alias",
      "Fuse"
    ],
    [
      "std::iter::Fuse:1.40",
      "has description",
      "An iterator that yields None forever after the underlying iterator yields None once."
    ],
    [
      "std::iter::Inspect:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Inspect:1.40",
      "has alias",
      "Inspect"
    ],
    [
      "std::iter::Inspect:1.40",
      "has description",
      "An iterator that calls a function with a reference to each element before yielding it."
    ],
    [
      "std::iter::Map:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Map:1.40",
      "has alias",
      "Map"
    ],
    [
      "std::iter::Map:1.40",
      "has description",
      "An iterator that maps the values of iter with f."
    ],
    [
      "std::iter::Once:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Once:1.40",
      "has alias",
      "Once"
    ],
    [
      "std::iter::Once:1.40",
      "has description",
      "An iterator that yields an element exactly once."
    ],
    [
      "std::iter::Peekable:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Peekable:1.40",
      "has alias",
      "Peekable"
    ],
    [
      "std::iter::Peekable:1.40",
      "has description",
      "An iterator with a peek() that returns an optional reference to the next element."
    ],
    [
      "std::iter::Repeat:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Repeat:1.40",
      "has alias",
      "Repeat"
    ],
    [
      "std::iter::Repeat:1.40",
      "has description",
      "An iterator that repeats an element endlessly."
    ],
    [
      "std::iter::Rev:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Rev:1.40",
      "has alias",
      "Rev"
    ],
    [
      "std::iter::Rev:1.40",
      "has description",
      "An double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Scan:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Scan:1.40",
      "has alias",
      "Scan"
    ],
    [
      "std::iter::Scan:1.40",
      "has description",
      "An iterator to maintain state while iterating another iterator."
    ],
    [
      "std::iter::Skip:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Skip:1.40",
      "has alias",
      "Skip"
    ],
    [
      "std::iter::Skip:1.40",
      "has description",
      "An iterator that skips over n elements of iter."
    ],
    [
      "std::iter::SkipWhile:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::SkipWhile:1.40",
      "has alias",
      "SkipWhile"
    ],
    [
      "std::iter::SkipWhile:1.40",
      "has description",
      "An iterator that rejects elements while predicate is true."
    ],
    [
      "std::iter::Take:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Take:1.40",
      "has alias",
      "Take"
    ],
    [
      "std::iter::Take:1.40",
      "has description",
      "An iterator that only iterates over the first n iterations of iter."
    ],
    [
      "std::iter::TakeWhile:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::TakeWhile:1.40",
      "has alias",
      "TakeWhile"
    ],
    [
      "std::iter::TakeWhile:1.40",
      "has description",
      "An iterator that only accepts elements while predicate is true."
    ],
    [
      "std::iter::Zip:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Zip:1.40",
      "has alias",
      "Zip"
    ],
    [
      "std::iter::Zip:1.40",
      "has description",
      "An iterator that iterates two other iterators simultaneously."
    ],
    [
      "std::iter::StepBy:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::StepBy:1.40",
      "has alias",
      "StepBy"
    ],
    [
      "std::iter::StepBy:1.40",
      "has description",
      "An adapter for stepping range iterators by a custom amount."
    ],
    [
      "std::iter::DoubleEndedIterator:1.40",
      "has alias",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.40",
      "has alias",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.40",
      "has alias",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.40",
      "has alias",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.40",
      "has alias",
      "IntoIterator"
    ],
    [
      "std::iter::Iterator:1.40",
      "has alias",
      "Iterator"
    ],
    [
      "std::iter::Iterator:1.40",
      "has method",
      "next:1.40"
    ],
    [
      "next:1.40",
      "has argument",
      "&mut self:1.40"
    ],
    [
      "next:1.40",
      "has return type",
      "Option<Self::Item>:1.40"
    ],
    [
      "std::iter::Iterator:1.40",
      "implements",
      "std::iter::IntoIterator:1.40"
    ],
    [
      "std::iter::empty:1.40",
      "has alias",
      "empty"
    ],
    [
      "std::iter::Iterator:1.40",
      "has adapter",
      "map:1.40"
    ],
    [
      "std::iter::Iterator:1.40",
      "has adapter",
      "take:1.40"
    ],
    [
      "std::iter::Iterator:1.40",
      "has adapter",
      "collect:1.40"
    ],
    [
      "assert:1.40",
      "is a",
      "macro"
    ],
    [
      "assert:1.40",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "assert_eq:1.40",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.40",
      "has description",
      "Asserts that two expressions are equal to each other (using `PartialEq`)."
    ],
    [
      "assert_ne:1.40",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.40",
      "has description",
      "Asserts that two expressions are not equal to each other (using `PartialEq`)."
    ],
    [
      "debug_assert_ne:1.40",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.40",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "eprint:1.40",
      "is a",
      "macro"
    ],
    [
      "eprint:1.40",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln:1.40",
      "is a",
      "macro"
    ],
    [
      "eprintln:1.40",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "std:1.40",
      "contains",
      "heap:1.40"
    ],
    [
      "heap:1.40",
      "is a",
      "module"
    ],
    [
      "heap:1.40",
      "has description",
      "dox"
    ],
    [
      "std::iter:1.40",
      "has description",
      "If you've found yourself with a collection of some kind..."
    ],
    [
      "any:1.40",
      "has description",
      "This module implements the `Any` trait..."
    ],
    [
      "ascii:1.40",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "borrow:1.40",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "boxed:1.40",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "cell:1.40",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "process:1.40",
      "has description",
      "A module for working with processes."
    ],
    [
      "ptr:1.40",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "array:1.40",
      "is a",
      "primitive type"
    ],
    [
      "array:1.40",
      "has description",
      "A fixed-size array, denoted `[T; N]`, for the element type, `T`, and the non-negative compile-time constant size, `N`."
    ],
    [
      "bool:1.40",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.40",
      "has description",
      "The boolean type."
    ],
    [
      "any:1.40",
      "has description",
      "A module for dynamic typing through runtime reflection."
    ],
    [
      "f32:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "std:1.40",
      "contains",
      "alloc:1.40"
    ],
    [
      "alloc:1.40",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.40",
      "contains",
      "arch:1.40"
    ],
    [
      "arch:1.40",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.40",
      "contains",
      "future:1.40"
    ],
    [
      "future:1.40",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.40",
      "contains",
      "hint:1.40"
    ],
    [
      "hint:1.40",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "std:1.40",
      "contains",
      "pin:1.40"
    ],
    [
      "pin:1.40",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.40",
      "contains",
      "task:1.40"
    ],
    [
      "task:1.40",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.40",
      "contains",
      "await:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "reference:1.40"
    ],
    [
      "reference:1.40",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.40",
      "contains",
      "never:1.40"
    ],
    [
      "never:1.40",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.40",
      "contains",
      "unit:1.40"
    ],
    [
      "unit:1.40",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std:1.40",
      "contains",
      "primitive::fn:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "primitive::never:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "primitive::reference:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "primitive::unit:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "is_aarch64_feature_detected:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "is_arm_feature_detected:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "is_mips64_feature_detected:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "is_mips_feature_detected:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "is_powerpc64_feature_detected:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "is_powerpc_feature_detected:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "is_x86_feature_detected:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "keyword::fn:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "keyword::let:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "keyword::struct:1.40"
    ],
    [
      "f32:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "std:1.40",
      "contains",
      "fn:1.40"
    ],
    [
      "fn:1.40",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.40",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "never:1.40",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.40",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.40",
      "is a",
      "primitive type"
    ],
    [
      "alloc:1.40",
      "is a",
      "module"
    ],
    [
      "future:1.40",
      "is a",
      "module"
    ],
    [
      "hint:1.40",
      "is a",
      "module"
    ],
    [
      "pin:1.40",
      "is a",
      "module"
    ],
    [
      "task:1.40",
      "is a",
      "module"
    ],
    [
      "await:1.40",
      "is a",
      "macro"
    ],
    [
      "fn:1.40",
      "is a",
      "keyword"
    ],
    [
      "std:1.40",
      "contains",
      "let:1.40"
    ],
    [
      "let:1.40",
      "is a",
      "keyword"
    ],
    [
      "std:1.40",
      "contains",
      "struct:1.40"
    ],
    [
      "struct:1.40",
      "is a",
      "keyword"
    ],
    [
      "std:1.40",
      "contains",
      "array:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "backtrace:1.40"
    ],
    [
      "array:1.40",
      "is a",
      "module"
    ],
    [
      "array:1.40",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "backtrace:1.40",
      "is a",
      "module"
    ],
    [
      "backtrace:1.40",
      "has description",
      "Support for capturing a stack backtrace of an OS thread"
    ],
    [
      "slice:1.40",
      "has description",
      "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "asm:1.40",
      "is a",
      "macro"
    ],
    [
      "asm:1.40",
      "has description",
      "Inline assembly."
    ],
    [
      "dbg:1.40",
      "is a",
      "macro"
    ],
    [
      "dbg:1.40",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "global_asm:1.40",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.40",
      "has description",
      "Module-level inline assembly."
    ],
    [
      "async:1.40",
      "is a",
      "keyword"
    ],
    [
      "async:1.40",
      "has description",
      "Return a [`Future`] instead of blocking the current thread."
    ],
    [
      "await:1.40",
      "is a",
      "keyword"
    ],
    [
      "await:1.40",
      "has description",
      "Suspend execution until the result of a [`Future`] is ready."
    ],
    [
      "intrinsics:1.40",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "pin:1.40",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "Self:1.40",
      "is a",
      "keyword"
    ],
    [
      "Self:1.40",
      "has description",
      "The implementing type within a [`trait`] or [`impl`] block, or the current type within a type definition."
    ],
    [
      "as:1.40",
      "is a",
      "keyword"
    ],
    [
      "as:1.40",
      "has description",
      "Cast between types, or rename an import."
    ],
    [
      "std:1.40",
      "contains",
      "asm:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "async:1.40"
    ],
    [
      "pin:1.40",
      "has description",
      "Types which pin data to its location in memory."
    ],
    [
      "std:1.40",
      "contains",
      "dbg:1.40"
    ],
    [
      "std::iter::once:1.40",
      "has alias",
      "std::iter::once"
    ],
    [
      "std::iter::once:1.40",
      "has description",
      "Creates an iterator that yields an element exactly once."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::once:1.40"
    ],
    [
      "std::iter::repeat:1.40",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat:1.40",
      "has alias",
      "std::iter::repeat"
    ],
    [
      "std::iter::repeat:1.40",
      "has description",
      "Creates a new iterator that endlessly repeats a single element."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::repeat:1.40"
    ],
    [
      "std::iter::once:1.40",
      "has alias",
      "once"
    ],
    [
      "std::iter::repeat:1.40",
      "has alias",
      "repeat"
    ],
    [
      "std::iter::repeat:1.40",
      "description",
      "Creates a new iterator that endlessly repeats a single element.:1.40"
    ],
    [
      "std::iter::StepBy:1.40",
      "has description",
      "An adapter for stepping iterators by a custom amount."
    ],
    [
      "std::iter::StepBy:1.40",
      "has feature",
      "Experimental:1.40"
    ],
    [
      "std::iter::Rev:1.40",
      "has description",
      "A double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Product:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::Product:1.40",
      "has description",
      "Trait to represent types that can be created by multiplying elements of an iterator."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Product:1.40"
    ],
    [
      "std::iter::Sum:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::Sum:1.40",
      "has description",
      "Trait to represent types that can be created by summing up an iterator."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Sum:1.40"
    ],
    [
      "std::iter::FusedIterator:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::FusedIterator:1.40",
      "has description",
      "An iterator that always continues to yield None when exhausted."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::FusedIterator:1.40"
    ],
    [
      "std::iter::FusedIterator:1.40",
      "has feature",
      "Experimental:1.40"
    ],
    [
      "std::iter::TrustedLen:1.40",
      "is a",
      "trait"
    ],
    [
      "std::iter::TrustedLen:1.40",
      "has description",
      "An iterator that reports an accurate length using size_hint."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::TrustedLen:1.40"
    ],
    [
      "std::iter::TrustedLen:1.40",
      "has feature",
      "Experimental:1.40"
    ],
    [
      "std::iter::Product:1.40",
      "has alias",
      "std::iter::Product"
    ],
    [
      "std::iter::Sum:1.40",
      "has alias",
      "std::iter::Sum"
    ],
    [
      "std::iter::FusedIterator:1.40",
      "has alias",
      "std::iter::FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.40",
      "has alias",
      "std::iter::TrustedLen"
    ],
    [
      "std::iter::Product:1.40",
      "has alias",
      "Product"
    ],
    [
      "std::iter::Sum:1.40",
      "has alias",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.40",
      "has alias",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.40",
      "has alias",
      "TrustedLen"
    ],
    [
      "std::iter::Flatten:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Flatten:1.40",
      "has alias",
      "std::iter::Flatten"
    ],
    [
      "std::iter::Flatten:1.40",
      "has description",
      "An iterator that flattens one level of nesting in an iterator of things that can be turned into iterators."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Flatten:1.40"
    ],
    [
      "std::iter::RepeatWith:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::RepeatWith:1.40",
      "has alias",
      "std::iter::RepeatWith"
    ],
    [
      "std::iter::RepeatWith:1.40",
      "has description",
      "An iterator that repeats elements of type A endlessly by applying the provided closure F: FnMut() -> A."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::RepeatWith:1.40"
    ],
    [
      "std::iter::repeat_with:1.40",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat_with:1.40",
      "has alias",
      "std::iter::repeat_with"
    ],
    [
      "std::iter::repeat_with:1.40",
      "has description",
      "Creates a new iterator that repeats elements of type A endlessly by applying the provided closure, the repeater, F: FnMut() -> A."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::repeat_with:1.40"
    ],
    [
      "std::iter::StepBy:1.40",
      "has description",
      "An iterator for stepping iterators by a custom amount."
    ],
    [
      "std::iter::Copied:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Copied:1.40",
      "has alias",
      "std::iter::Copied"
    ],
    [
      "std::iter::Copied:1.40",
      "has description",
      "An iterator that copies the elements of an underlying iterator."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Copied:1.40"
    ],
    [
      "std::iter::FromFn:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::FromFn:1.40",
      "has alias",
      "std::iter::FromFn"
    ],
    [
      "std::iter::FromFn:1.40",
      "has description",
      "An iterator where each iteration calls the provided closure F: FnMut() -> Option<T>."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::FromFn:1.40"
    ],
    [
      "std::iter::Successors:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::Successors:1.40",
      "has alias",
      "std::iter::Successors"
    ],
    [
      "std::iter::Successors:1.40",
      "has description",
      "An new iterator where each successive item is computed based on the preceding one."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::Successors:1.40"
    ],
    [
      "std::iter::from_fn:1.40",
      "is a",
      "function"
    ],
    [
      "std::iter::from_fn:1.40",
      "has alias",
      "std::iter::from_fn"
    ],
    [
      "std::iter::from_fn:1.40",
      "has description",
      "Creates a new iterator where each iteration calls the provided closure F: FnMut() -> Option<T>."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::from_fn:1.40"
    ],
    [
      "std::iter::successors:1.40",
      "is a",
      "function"
    ],
    [
      "std::iter::successors:1.40",
      "has alias",
      "std::iter::successors"
    ],
    [
      "std::iter::successors:1.40",
      "has description",
      "Creates a new iterator where each successive item is computed based on the preceding one."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::successors:1.40"
    ],
    [
      "std::iter::Iterator:1.40",
      "has method",
      "for_each():1.40"
    ],
    [
      "std::iter::SkipWhile:1.40",
      "has description",
      "An iterator that rejects elements while predicate returns true."
    ],
    [
      "std::iter::TakeWhile:1.40",
      "has description",
      "An iterator that only accepts elements while predicate returns true."
    ],
    [
      "std::iter::Iterator:1.40",
      "has method",
      "for_each:1.40"
    ],
    [
      "std::iter::OnceWith:1.40",
      "is a",
      "struct"
    ],
    [
      "std::iter::OnceWith:1.40",
      "has description",
      "An iterator that yields a single element of type A by applying the provided closure F: FnOnce() -> A."
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::OnceWith:1.40"
    ],
    [
      "std::iter:1.40",
      "contains",
      "std::iter::once_with:1.40"
    ],
    [
      "std::iter::once_with:1.40",
      "is a",
      "function"
    ],
    [
      "std::iter::once_with:1.40",
      "has description",
      "Creates an iterator that lazily generates a value exactly once by invoking the provided closure."
    ],
    [
      "std::iter:1.30",
      "is a",
      "module"
    ],
    [
      "std::iter:1.30",
      "has alias",
      "std::iter"
    ],
    [
      "std::iter:1.30",
      "stable since",
      "1.0.0"
    ],
    [
      "std::iter:1.30",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::iter::Chain:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Chain:1.30",
      "has alias",
      "std::iter::Chain"
    ],
    [
      "std::iter::Chain:1.30",
      "has description",
      "An iterator that strings two iterators together."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::Chain:1.30"
    ],
    [
      "std::iter::Cloned:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cloned:1.30",
      "has alias",
      "std::iter::Cloned"
    ],
    [
      "std::iter::Cloned:1.30",
      "has description",
      "An iterator that clones the elements of an underlying iterator."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::Cloned:1.30"
    ],
    [
      "std::iter::Cycle:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Cycle:1.30",
      "has alias",
      "std::iter::Cycle"
    ],
    [
      "std::iter::Cycle:1.30",
      "has description",
      "An iterator that repeats endlessly."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::Cycle:1.30"
    ],
    [
      "std::iter::DoubleEndedIterator:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::DoubleEndedIterator:1.30",
      "has alias",
      "std::iter::DoubleEndedIterator"
    ],
    [
      "std::iter::DoubleEndedIterator:1.30",
      "has description",
      "An iterator able to yield elements from both ends."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::DoubleEndedIterator:1.30"
    ],
    [
      "std::iter::empty:1.30",
      "is a",
      "function"
    ],
    [
      "std::iter::empty:1.30",
      "has alias",
      "std::iter::empty"
    ],
    [
      "std::iter::empty:1.30",
      "has description",
      "Creates an iterator that yields nothing."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::empty:1.30"
    ],
    [
      "std::iter::Iterator:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::Iterator:1.30",
      "has alias",
      "std::iter::Iterator"
    ],
    [
      "std::iter::Iterator:1.30",
      "has description",
      "An interface for dealing with iterators."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::Iterator:1.30"
    ],
    [
      "std::iter::ExactSizeIterator:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::ExactSizeIterator:1.30",
      "has alias",
      "std::iter::ExactSizeIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.30",
      "has description",
      "An iterator that knows its exact length."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::ExactSizeIterator:1.30"
    ],
    [
      "std::iter::Extend:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::Extend:1.30",
      "has alias",
      "std::iter::Extend"
    ],
    [
      "std::iter::Extend:1.30",
      "has description",
      "Extend a collection with the contents of an iterator."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::Extend:1.30"
    ],
    [
      "std::iter::FromIterator:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::FromIterator:1.30",
      "has alias",
      "std::iter::FromIterator"
    ],
    [
      "std::iter::FromIterator:1.30",
      "has description",
      "Conversion from an Iterator."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::FromIterator:1.30"
    ],
    [
      "std::iter::IntoIterator:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::IntoIterator:1.30",
      "has alias",
      "std::iter::IntoIterator"
    ],
    [
      "std::iter::IntoIterator:1.30",
      "has description",
      "Conversion into an Iterator."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::IntoIterator:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::iter:1.30"
    ],
    [
      "std::iter:1.30",
      "description",
      "Composable external iteration.:1.30"
    ],
    [
      "std::iter:1.30",
      "description",
      "If you've found yourself with a collection of some kind...:1.30"
    ],
    [
      "any:1.30",
      "is a",
      "module"
    ],
    [
      "any:1.30",
      "description",
      "This module implements the `Any` trait...:1.30"
    ],
    [
      "ascii:1.30",
      "is a",
      "module"
    ],
    [
      "ascii:1.30",
      "description",
      "Operations on ASCII strings and characters.:1.30"
    ],
    [
      "borrow:1.30",
      "is a",
      "module"
    ],
    [
      "borrow:1.30",
      "description",
      "A module for working with borrowed data.:1.30"
    ],
    [
      "boxed:1.30",
      "is a",
      "module"
    ],
    [
      "boxed:1.30",
      "description",
      "A pointer type for heap allocation.:1.30"
    ],
    [
      "cell:1.30",
      "is a",
      "module"
    ],
    [
      "cell:1.30",
      "description",
      "Shareable mutable containers.:1.30"
    ],
    [
      "assert!:1.30",
      "is a",
      "macro"
    ],
    [
      "assert!:1.30",
      "description",
      "Ensure that a boolean expression is `true`...:1.30"
    ],
    [
      "assert_eq!:1.30",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.30",
      "description",
      "Asserts that two expressions are equal...:1.30"
    ],
    [
      "cfg!:1.30",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.30",
      "description",
      "Boolean evaluation of configuration flags.:1.30"
    ],
    [
      "std::iter::Iterator:1.30",
      "description",
      "An interface for dealing with iterators.:1.30"
    ],
    [
      "std::iter::Iterator:1.30",
      "has associated type",
      "Item:1.30"
    ],
    [
      "std::iter::Iterator:1.30",
      "has method",
      "next():1.30"
    ],
    [
      "Counter:1.30",
      "implements",
      "std::iter::Iterator:1.30"
    ],
    [
      "Counter:1.30",
      "has method",
      "new():1.30"
    ],
    [
      "std::iter::Chain:1.30",
      "description",
      "An iterator that strings two iterators together.:1.30"
    ],
    [
      "std::iter::Cloned:1.30",
      "description",
      "An iterator that clones the elements...:1.30"
    ],
    [
      "std::iter::Cycle:1.30",
      "description",
      "An iterator that repeats endlessly.:1.30"
    ],
    [
      "std::iter::DoubleEndedIterator:1.30",
      "description",
      "An iterator able to yield elements...:1.30"
    ],
    [
      "std::iter::ExactSizeIterator:1.30",
      "description",
      "An iterator that knows its exact length.:1.30"
    ],
    [
      "std::iter::empty:1.30",
      "description",
      "Creates an iterator that yields nothing.:1.30"
    ],
    [
      "std::iter::once:1.30",
      "is a",
      "function"
    ],
    [
      "std::iter::once:1.30",
      "description",
      "Creates an iterator that yields an element exactly once.:1.30"
    ],
    [
      "std::iter:1.30",
      "has alias",
      "iter"
    ],
    [
      "std:1.30",
      "contains",
      "any:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "ascii:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "borrow:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "boxed:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "cell:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "char:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "clone:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "cmp:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "collections:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "convert:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "default:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "env:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "error:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "f32:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "f64:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "ffi:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "fmt:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "fs:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "hash:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "i16:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "i32:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "i64:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "i8:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "intrinsics:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "io:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "isize:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "marker:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "mem:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "net:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "num:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "ops:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "option:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "os:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "panic:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "path:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "prelude:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "process:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "ptr:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "raw:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "rc:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "result:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "slice:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "str:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "string:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "sync:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "thread:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "time:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "u16:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "u32:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "u64:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "u8:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "usize:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "vec:1.30"
    ],
    [
      "std::iter::Chain:1.30",
      "has alias",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.30",
      "has alias",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.30",
      "has alias",
      "Cycle"
    ],
    [
      "std::iter::Empty:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Empty:1.30",
      "has alias",
      "Empty"
    ],
    [
      "std::iter::Empty:1.30",
      "has description",
      "An iterator that yields nothing."
    ],
    [
      "std::iter::Enumerate:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Enumerate:1.30",
      "has alias",
      "Enumerate"
    ],
    [
      "std::iter::Enumerate:1.30",
      "has description",
      "An iterator that yields the current count and the element during iteration."
    ],
    [
      "std::iter::Filter:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Filter:1.30",
      "has alias",
      "Filter"
    ],
    [
      "std::iter::Filter:1.30",
      "has description",
      "An iterator that filters the elements of iter with predicate."
    ],
    [
      "std::iter::FilterMap:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::FilterMap:1.30",
      "has alias",
      "FilterMap"
    ],
    [
      "std::iter::FilterMap:1.30",
      "has description",
      "An iterator that uses f to both filter and map elements from iter."
    ],
    [
      "std::iter::FlatMap:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::FlatMap:1.30",
      "has alias",
      "FlatMap"
    ],
    [
      "std::iter::FlatMap:1.30",
      "has description",
      "An iterator that maps each element to an iterator, and yields the elements of the produced iterators."
    ],
    [
      "std::iter::Fuse:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Fuse:1.30",
      "has alias",
      "Fuse"
    ],
    [
      "std::iter::Fuse:1.30",
      "has description",
      "An iterator that yields None forever after the underlying iterator yields None once."
    ],
    [
      "std::iter::Inspect:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Inspect:1.30",
      "has alias",
      "Inspect"
    ],
    [
      "std::iter::Inspect:1.30",
      "has description",
      "An iterator that calls a function with a reference to each element before yielding it."
    ],
    [
      "std::iter::Map:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Map:1.30",
      "has alias",
      "Map"
    ],
    [
      "std::iter::Map:1.30",
      "has description",
      "An iterator that maps the values of iter with f."
    ],
    [
      "std::iter::Once:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Once:1.30",
      "has alias",
      "Once"
    ],
    [
      "std::iter::Once:1.30",
      "has description",
      "An iterator that yields an element exactly once."
    ],
    [
      "std::iter::Peekable:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Peekable:1.30",
      "has alias",
      "Peekable"
    ],
    [
      "std::iter::Peekable:1.30",
      "has description",
      "An iterator with a peek() that returns an optional reference to the next element."
    ],
    [
      "std::iter::Repeat:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Repeat:1.30",
      "has alias",
      "Repeat"
    ],
    [
      "std::iter::Repeat:1.30",
      "has description",
      "An iterator that repeats an element endlessly."
    ],
    [
      "std::iter::Rev:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Rev:1.30",
      "has alias",
      "Rev"
    ],
    [
      "std::iter::Rev:1.30",
      "has description",
      "An double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Scan:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Scan:1.30",
      "has alias",
      "Scan"
    ],
    [
      "std::iter::Scan:1.30",
      "has description",
      "An iterator to maintain state while iterating another iterator."
    ],
    [
      "std::iter::Skip:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Skip:1.30",
      "has alias",
      "Skip"
    ],
    [
      "std::iter::Skip:1.30",
      "has description",
      "An iterator that skips over n elements of iter."
    ],
    [
      "std::iter::SkipWhile:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::SkipWhile:1.30",
      "has alias",
      "SkipWhile"
    ],
    [
      "std::iter::SkipWhile:1.30",
      "has description",
      "An iterator that rejects elements while predicate is true."
    ],
    [
      "std::iter::Take:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Take:1.30",
      "has alias",
      "Take"
    ],
    [
      "std::iter::Take:1.30",
      "has description",
      "An iterator that only iterates over the first n iterations of iter."
    ],
    [
      "std::iter::TakeWhile:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::TakeWhile:1.30",
      "has alias",
      "TakeWhile"
    ],
    [
      "std::iter::TakeWhile:1.30",
      "has description",
      "An iterator that only accepts elements while predicate is true."
    ],
    [
      "std::iter::Zip:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Zip:1.30",
      "has alias",
      "Zip"
    ],
    [
      "std::iter::Zip:1.30",
      "has description",
      "An iterator that iterates two other iterators simultaneously."
    ],
    [
      "std::iter::StepBy:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::StepBy:1.30",
      "has alias",
      "StepBy"
    ],
    [
      "std::iter::StepBy:1.30",
      "has description",
      "An adapter for stepping range iterators by a custom amount."
    ],
    [
      "std::iter::DoubleEndedIterator:1.30",
      "has alias",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.30",
      "has alias",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.30",
      "has alias",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.30",
      "has alias",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.30",
      "has alias",
      "IntoIterator"
    ],
    [
      "std::iter::Iterator:1.30",
      "has alias",
      "Iterator"
    ],
    [
      "std::iter::Iterator:1.30",
      "has method",
      "next:1.30"
    ],
    [
      "next:1.30",
      "has argument",
      "&mut self:1.30"
    ],
    [
      "next:1.30",
      "has return type",
      "Option<Self::Item>:1.30"
    ],
    [
      "std::iter::Iterator:1.30",
      "implements",
      "std::iter::IntoIterator:1.30"
    ],
    [
      "std::iter::empty:1.30",
      "has alias",
      "empty"
    ],
    [
      "std::iter::Iterator:1.30",
      "has adapter",
      "map:1.30"
    ],
    [
      "std::iter::Iterator:1.30",
      "has adapter",
      "take:1.30"
    ],
    [
      "std::iter::Iterator:1.30",
      "has adapter",
      "collect:1.30"
    ],
    [
      "assert:1.30",
      "is a",
      "macro"
    ],
    [
      "assert:1.30",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "assert_eq:1.30",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.30",
      "has description",
      "Asserts that two expressions are equal to each other (using `PartialEq`)."
    ],
    [
      "assert_ne:1.30",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.30",
      "has description",
      "Asserts that two expressions are not equal to each other (using `PartialEq`)."
    ],
    [
      "debug_assert_ne:1.30",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.30",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "eprint:1.30",
      "is a",
      "macro"
    ],
    [
      "eprint:1.30",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln:1.30",
      "is a",
      "macro"
    ],
    [
      "eprintln:1.30",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "std:1.30",
      "contains",
      "heap:1.30"
    ],
    [
      "heap:1.30",
      "is a",
      "module"
    ],
    [
      "heap:1.30",
      "has description",
      "dox"
    ],
    [
      "std::iter:1.30",
      "has description",
      "If you've found yourself with a collection of some kind..."
    ],
    [
      "any:1.30",
      "has description",
      "This module implements the `Any` trait..."
    ],
    [
      "ascii:1.30",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "borrow:1.30",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "boxed:1.30",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "cell:1.30",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "process:1.30",
      "has description",
      "A module for working with processes."
    ],
    [
      "ptr:1.30",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "array:1.30",
      "is a",
      "primitive type"
    ],
    [
      "array:1.30",
      "has description",
      "A fixed-size array, denoted `[T; N]`, for the element type, `T`, and the non-negative compile-time constant size, `N`."
    ],
    [
      "bool:1.30",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.30",
      "has description",
      "The boolean type."
    ],
    [
      "any:1.30",
      "has description",
      "A module for dynamic typing through runtime reflection."
    ],
    [
      "f32:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "f64:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type. Mathematically significant numbers are provided in the `consts` sub-module."
    ],
    [
      "std:1.30",
      "contains",
      "alloc:1.30"
    ],
    [
      "alloc:1.30",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "std:1.30",
      "contains",
      "arch:1.30"
    ],
    [
      "arch:1.30",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.30",
      "contains",
      "future:1.30"
    ],
    [
      "future:1.30",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.30",
      "contains",
      "hint:1.30"
    ],
    [
      "hint:1.30",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "std:1.30",
      "contains",
      "pin:1.30"
    ],
    [
      "pin:1.30",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.30",
      "contains",
      "task:1.30"
    ],
    [
      "task:1.30",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.30",
      "contains",
      "await:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "reference:1.30"
    ],
    [
      "reference:1.30",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.30",
      "contains",
      "never:1.30"
    ],
    [
      "never:1.30",
      "has description",
      "The `!` type, also called \"never\"."
    ],
    [
      "std:1.30",
      "contains",
      "unit:1.30"
    ],
    [
      "unit:1.30",
      "has description",
      "The `()` type, sometimes called \"unit\" or \"nil\"."
    ],
    [
      "std:1.30",
      "contains",
      "primitive::fn:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "primitive::never:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "primitive::reference:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "primitive::unit:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "is_aarch64_feature_detected:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "is_arm_feature_detected:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "is_mips64_feature_detected:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "is_mips_feature_detected:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "is_powerpc64_feature_detected:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "is_powerpc_feature_detected:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "is_x86_feature_detected:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "keyword::fn:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "keyword::let:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "keyword::struct:1.30"
    ],
    [
      "f32:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "f64:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "std:1.30",
      "contains",
      "fn:1.30"
    ],
    [
      "fn:1.30",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.30",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "never:1.30",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.30",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.30",
      "is a",
      "primitive type"
    ],
    [
      "alloc:1.30",
      "is a",
      "module"
    ],
    [
      "future:1.30",
      "is a",
      "module"
    ],
    [
      "hint:1.30",
      "is a",
      "module"
    ],
    [
      "pin:1.30",
      "is a",
      "module"
    ],
    [
      "task:1.30",
      "is a",
      "module"
    ],
    [
      "await:1.30",
      "is a",
      "macro"
    ],
    [
      "fn:1.30",
      "is a",
      "keyword"
    ],
    [
      "std:1.30",
      "contains",
      "let:1.30"
    ],
    [
      "let:1.30",
      "is a",
      "keyword"
    ],
    [
      "std:1.30",
      "contains",
      "struct:1.30"
    ],
    [
      "struct:1.30",
      "is a",
      "keyword"
    ],
    [
      "std::iter::once:1.30",
      "has alias",
      "std::iter::once"
    ],
    [
      "std::iter::once:1.30",
      "has description",
      "Creates an iterator that yields an element exactly once."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::once:1.30"
    ],
    [
      "std::iter::repeat:1.30",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat:1.30",
      "has alias",
      "std::iter::repeat"
    ],
    [
      "std::iter::repeat:1.30",
      "has description",
      "Creates a new iterator that endlessly repeats a single element."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::repeat:1.30"
    ],
    [
      "std::iter::once:1.30",
      "has alias",
      "once"
    ],
    [
      "std::iter::repeat:1.30",
      "has alias",
      "repeat"
    ],
    [
      "std::iter::repeat:1.30",
      "description",
      "Creates a new iterator that endlessly repeats a single element.:1.30"
    ],
    [
      "std::iter::StepBy:1.30",
      "has description",
      "An adapter for stepping iterators by a custom amount."
    ],
    [
      "std::iter::StepBy:1.30",
      "has feature",
      "Experimental:1.30"
    ],
    [
      "std::iter::Rev:1.30",
      "has description",
      "A double-ended iterator with the direction inverted."
    ],
    [
      "std::iter::Product:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::Product:1.30",
      "has description",
      "Trait to represent types that can be created by multiplying elements of an iterator."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::Product:1.30"
    ],
    [
      "std::iter::Sum:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::Sum:1.30",
      "has description",
      "Trait to represent types that can be created by summing up an iterator."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::Sum:1.30"
    ],
    [
      "std::iter::FusedIterator:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::FusedIterator:1.30",
      "has description",
      "An iterator that always continues to yield None when exhausted."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::FusedIterator:1.30"
    ],
    [
      "std::iter::FusedIterator:1.30",
      "has feature",
      "Experimental:1.30"
    ],
    [
      "std::iter::TrustedLen:1.30",
      "is a",
      "trait"
    ],
    [
      "std::iter::TrustedLen:1.30",
      "has description",
      "An iterator that reports an accurate length using size_hint."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::TrustedLen:1.30"
    ],
    [
      "std::iter::TrustedLen:1.30",
      "has feature",
      "Experimental:1.30"
    ],
    [
      "std::iter::Product:1.30",
      "has alias",
      "std::iter::Product"
    ],
    [
      "std::iter::Sum:1.30",
      "has alias",
      "std::iter::Sum"
    ],
    [
      "std::iter::FusedIterator:1.30",
      "has alias",
      "std::iter::FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.30",
      "has alias",
      "std::iter::TrustedLen"
    ],
    [
      "std::iter::Product:1.30",
      "has alias",
      "Product"
    ],
    [
      "std::iter::Sum:1.30",
      "has alias",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.30",
      "has alias",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.30",
      "has alias",
      "TrustedLen"
    ],
    [
      "std::iter::Flatten:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::Flatten:1.30",
      "has alias",
      "std::iter::Flatten"
    ],
    [
      "std::iter::Flatten:1.30",
      "has description",
      "An iterator that flattens one level of nesting in an iterator of things that can be turned into iterators."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::Flatten:1.30"
    ],
    [
      "std::iter::RepeatWith:1.30",
      "is a",
      "struct"
    ],
    [
      "std::iter::RepeatWith:1.30",
      "has alias",
      "std::iter::RepeatWith"
    ],
    [
      "std::iter::RepeatWith:1.30",
      "has description",
      "An iterator that repeats elements of type A endlessly by applying the provided closure F: FnMut() -> A."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::RepeatWith:1.30"
    ],
    [
      "std::iter::repeat_with:1.30",
      "is a",
      "function"
    ],
    [
      "std::iter::repeat_with:1.30",
      "has alias",
      "std::iter::repeat_with"
    ],
    [
      "std::iter::repeat_with:1.30",
      "has description",
      "Creates a new iterator that repeats elements of type A endlessly by applying the provided closure, the repeater, F: FnMut() -> A."
    ],
    [
      "std::iter:1.30",
      "contains",
      "std::iter::repeat_with:1.30"
    ],
    [
      "std::iter::StepBy:1.30",
      "has description",
      "An iterator for stepping iterators by a custom amount."
    ],
    [
      "std::io::ErrorKind:1.60",
      "is a",
      "enum"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has alias",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.60",
      "stable since",
      "1.0.0"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has description",
      "A list specifying general categories of I/O error."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "NotFound:1.60"
    ],
    [
      "NotFound:1.60",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "PermissionDenied:1.60"
    ],
    [
      "PermissionDenied:1.60",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "ConnectionRefused:1.60"
    ],
    [
      "ConnectionRefused:1.60",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "ConnectionReset:1.60"
    ],
    [
      "ConnectionReset:1.60",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "ConnectionAborted:1.60"
    ],
    [
      "ConnectionAborted:1.60",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "NotConnected:1.60"
    ],
    [
      "NotConnected:1.60",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "AddrInUse:1.60"
    ],
    [
      "AddrInUse:1.60",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "AddrNotAvailable:1.60"
    ],
    [
      "AddrNotAvailable:1.60",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "BrokenPipe:1.60"
    ],
    [
      "BrokenPipe:1.60",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "AlreadyExists:1.60"
    ],
    [
      "AlreadyExists:1.60",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "WouldBlock:1.60"
    ],
    [
      "WouldBlock:1.60",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "InvalidInput:1.60"
    ],
    [
      "InvalidInput:1.60",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "InvalidData:1.60"
    ],
    [
      "InvalidData:1.60",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."
    ],
    [
      "InvalidData:1.60",
      "stable since",
      "1.2.0"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "TimedOut:1.60"
    ],
    [
      "TimedOut:1.60",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "WriteZero:1.60"
    ],
    [
      "WriteZero:1.60",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "Interrupted:1.60"
    ],
    [
      "Interrupted:1.60",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "Other:1.60"
    ],
    [
      "Other:1.60",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "UnexpectedEof:1.60"
    ],
    [
      "UnexpectedEof:1.60",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "UnexpectedEof:1.60",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Debug:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Clone:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Eq:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "PartialEq:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Copy:1.60"
    ],
    [
      "ErrorKind::fmt:1.60",
      "is a",
      "method"
    ],
    [
      "ErrorKind::fmt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "ErrorKind::fmt:1.60",
      "has argument",
      "__arg_0:1.60"
    ],
    [
      "ErrorKind::fmt:1.60",
      "has return type",
      "Result:1.60"
    ],
    [
      "ErrorKind::fmt:1.60",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "ErrorKind::clone:1.60",
      "is a",
      "method"
    ],
    [
      "ErrorKind::clone:1.60",
      "has return type",
      "std::io::ErrorKind:1.60"
    ],
    [
      "ErrorKind::clone:1.60",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "std::io::ErrorKind:1.60",
      "belongs to module",
      "std::io:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."
    ],
    [
      "InvalidData:1.60",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "WriteZero:1.60",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "UnexpectedEof:1.60",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "ErrorKind::NotFound:1.60",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "ErrorKind::PermissionDenied:1.60",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "ErrorKind::ConnectionRefused:1.60",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "ErrorKind::ConnectionReset:1.60",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "ErrorKind::ConnectionAborted:1.60",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "ErrorKind::NotConnected:1.60",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::AddrInUse:1.60",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.60",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "ErrorKind::BrokenPipe:1.60",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "ErrorKind::AlreadyExists:1.60",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "ErrorKind::WouldBlock:1.60",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "ErrorKind::InvalidInput:1.60",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "ErrorKind::InvalidData:1.60",
      "has description",
      "Data not valid for the operation were encountered."
    ],
    [
      "ErrorKind::InvalidData:1.60",
      "stable since",
      "1.2.0"
    ],
    [
      "ErrorKind::TimedOut:1.60",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "ErrorKind::WriteZero:1.60",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "ErrorKind::Interrupted:1.60",
      "has description",
      "This operation was interrupted."
    ],
    [
      "ErrorKind::Other:1.60",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "ErrorKind::UnexpectedEof:1.60",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "ErrorKind::UnexpectedEof:1.60",
      "stable since",
      "1.6.0"
    ],
    [
      "ErrorKind::fmt:1.60",
      "has return type",
      "std::fmt::Result:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "used with",
      "io::Error:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "PartialOrd:1.60"
    ],
    [
      "ErrorKind::partial_cmp:1.60",
      "is a",
      "method"
    ],
    [
      "ErrorKind::partial_cmp:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "ErrorKind::partial_cmp:1.60",
      "has argument",
      "__arg_0:1.60"
    ],
    [
      "ErrorKind::partial_cmp:1.60",
      "has return type",
      "Option<Ordering>:1.60"
    ],
    [
      "ErrorKind::partial_cmp:1.60",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "ErrorKind::lt:1.60",
      "is a",
      "method"
    ],
    [
      "ErrorKind::lt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "ErrorKind::lt:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "ErrorKind::lt:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "ErrorKind::lt:1.60",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "ErrorKind::le:1.60",
      "is a",
      "method"
    ],
    [
      "ErrorKind::le:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "ErrorKind::le:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "ErrorKind::le:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "ErrorKind::le:1.60",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "ErrorKind::gt:1.60",
      "is a",
      "method"
    ],
    [
      "ErrorKind::gt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "ErrorKind::gt:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "ErrorKind::gt:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "ErrorKind::gt:1.60",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "ErrorKind::ge:1.60",
      "is a",
      "method"
    ],
    [
      "ErrorKind::ge:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "ErrorKind::ge:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "ErrorKind::ge:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "ErrorKind::ge:1.60",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "ErrorKind::InvalidData:1.60",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "ErrorKind::WriteZero:1.60",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "ErrorKind::UnexpectedEof:1.60",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Hash:1.60"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.60",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.60",
      "has argument",
      "__arg_0:1.60"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.60",
      "has return type",
      "Option<Ordering>:1.60"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.60",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "std::io::ErrorKind::lt:1.60",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::lt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::io::ErrorKind::lt:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::io::ErrorKind::lt:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::io::ErrorKind::lt:1.60",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "std::io::ErrorKind::le:1.60",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::le:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::io::ErrorKind::le:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::io::ErrorKind::le:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::io::ErrorKind::le:1.60",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "std::io::ErrorKind::gt:1.60",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::gt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::io::ErrorKind::gt:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::io::ErrorKind::gt:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::io::ErrorKind::gt:1.60",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "std::io::ErrorKind::ge:1.60",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::ge:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "std::io::ErrorKind::ge:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::io::ErrorKind::ge:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "std::io::ErrorKind::ge:1.60",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Ord:1.60"
    ],
    [
      "ErrorKind::partial_cmp:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "ErrorKind::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "std::io::ErrorKind::fmt:1.60",
      "has argument",
      "f:1.60"
    ],
    [
      "std::io::ErrorKind::fmt:1.60",
      "has return type",
      "std::fmt::Result:1.60"
    ],
    [
      "ErrorKind::lt:1.60",
      "has attribute",
      "#[must_use]:1.60"
    ],
    [
      "ErrorKind::le:1.60",
      "has attribute",
      "#[must_use]:1.60"
    ],
    [
      "ErrorKind::gt:1.60",
      "has attribute",
      "#[must_use]:1.60"
    ],
    [
      "ErrorKind::ge:1.60",
      "has attribute",
      "#[must_use]:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "From<ErrorKind>:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "PartialEq<ErrorKind>:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "PartialOrd<ErrorKind>:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "StructuralEq:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "StructuralPartialEq:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "RefUnwindSafe:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Unpin:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "UnwindSafe:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Send:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Sync:1.60"
    ],
    [
      "std::io::Error:1.60",
      "implements",
      "From<ErrorKind>:1.60"
    ],
    [
      "std::io:1.60",
      "contains",
      "IoSlice:1.60"
    ],
    [
      "std::io:1.60",
      "contains",
      "IoSliceMut:1.60"
    ],
    [
      "IoSlice:1.60",
      "is a",
      "struct"
    ],
    [
      "IoSlice:1.60",
      "has description",
      "A buffer type used with `Write::write_vectored`."
    ],
    [
      "IoSliceMut:1.60",
      "is a",
      "struct"
    ],
    [
      "IoSliceMut:1.60",
      "has description",
      "A buffer type used with `Read::read_vectored`."
    ],
    [
      "std::io::ErrorKind::lt:1.60",
      "has attribute",
      "#[must_use]:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "ArgumentListTooLong:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "CrossesDevices:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "Deadlock:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "DirectoryNotEmpty:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "ExecutableFileBusy:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "FileTooLarge:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "FilesystemLoop:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "FilesystemQuotaExceeded:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "HostUnreachable:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "InvalidFilename:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "IsADirectory:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "NetworkDown:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "NetworkUnreachable:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "NotADirectory:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "NotSeekable:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "OutOfMemory:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "ReadOnlyFilesystem:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "ResourceBusy:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "StaleNetworkFileHandle:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "StorageFull:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "TooManyLinks:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has variant",
      "Unsupported:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "implements",
      "Display:1.60"
    ],
    [
      "ErrorKind::AddrNotAvailable:1.60",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "ErrorKind::DirectoryNotEmpty:1.60",
      "has description",
      "A non-empty directory was specified where an empty directory was expected."
    ],
    [
      "ErrorKind::ReadOnlyFilesystem:1.60",
      "has description",
      "The filesystem or storage medium is read-only."
    ],
    [
      "ErrorKind::FilesystemLoop:1.60",
      "has description",
      "Loop in the filesystem or too many symbolic links."
    ],
    [
      "ErrorKind::DirectoryNotEmpty:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "ErrorKind::ReadOnlyFilesystem:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "ErrorKind::FilesystemLoop:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "ErrorKind::StaleNetworkFileHandle:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "ErrorKind::ResourceBusy:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "ErrorKind::FilesystemQuotaExceeded:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "ErrorKind::NetworkDown:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "ErrorKind::ArgumentListTooLong:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "ErrorKind::Interrupted:1.60",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "ErrorKind::Other:1.60",
      "has description",
      "Any I/O error not part of this list. Users are encouraged to consult the platform documentation to identify possible errors."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.60",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "ErrorKind::BrokenPipe:1.60",
      "has description",
      "A directory was specified where a non-directory was expected."
    ],
    [
      "ErrorKind::AlreadyExists:1.60",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "ErrorKind::WouldBlock:1.60",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::InvalidInput:1.60",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::DirectoryNotEmpty:1.60",
      "has description",
      "A non-empty directory was specified where an empty directory was expected."
    ],
    [
      "std::io::ErrorKind::ReadOnlyFilesystem:1.60",
      "has description",
      "The filesystem or storage medium is read-only."
    ],
    [
      "std::io::ErrorKind::FilesystemLoop:1.60",
      "has description",
      "Loop in the filesystem or IO subsystem; often too many levels of symbolic links."
    ],
    [
      "std::io::ErrorKind::AddrNotAvailable:1.60",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "std::io::ErrorKind::ReadOnlyFilesystem:1.60",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "std::io::ErrorKind::StaleNetworkFileHandle:1.60",
      "has description",
      "Stale network file handle. With some network filesystems, an open file can be invalidated by the server."
    ],
    [
      "std::io::ErrorKind::InvalidInput:1.60",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind::WriteZero:1.60",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "std::io::ErrorKind::ResourceBusy:1.60",
      "has description",
      "Resource is busy."
    ],
    [
      "std::io::ErrorKind::Deadlock:1.60",
      "has description",
      "Deadlock (avoided). A file locking operation would result in deadlock."
    ],
    [
      "std::io::ErrorKind::OutOfMemory:1.60",
      "has description",
      "An operation could not be completed, because it failed to allocate enough memory."
    ],
    [
      "std::io::ErrorKind::ArgumentListTooLong:1.60",
      "has description",
      "Program argument list too long."
    ],
    [
      "std::io::ErrorKind::CrossesDevices:1.60",
      "has description",
      "Cross-device or cross-filesystem (hard) link or rename."
    ],
    [
      "std::io::ErrorKind::FileTooLarge:1.60",
      "has description",
      "File larger than allowed or supported."
    ],
    [
      "std::io::ErrorKind::FilesystemQuotaExceeded:1.60",
      "has description",
      "Filesystem quota was exceeded."
    ],
    [
      "std::io::ErrorKind::HostUnreachable:1.60",
      "has description",
      "Host is unreachable."
    ],
    [
      "std::io::ErrorKind::InvalidFilename:1.60",
      "has description",
      "A filename was invalid."
    ],
    [
      "std::io::ErrorKind::IsADirectory:1.60",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "std::io::ErrorKind::NetworkDown:1.60",
      "has description",
      "Network is down."
    ],
    [
      "std::io::ErrorKind::NetworkUnreachable:1.60",
      "has description",
      "Network is unreachable."
    ],
    [
      "std::io::ErrorKind::NotADirectory:1.60",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::NotSeekable:1.60",
      "has description",
      "Seek on unseekable file."
    ],
    [
      "std::io::ErrorKind::TooManyLinks:1.60",
      "has description",
      "Too many (hard) links to the same filesystem object."
    ],
    [
      "std::io::ErrorKind::Unsupported:1.60",
      "has description",
      "This operation is unsupported on this platform."
    ],
    [
      "std::io::ErrorKind:1.60",
      "belongs to module",
      "io:1.60"
    ],
    [
      "&'_ mut F:1.60",
      "implements",
      "Future:1.60"
    ],
    [
      "&'_ mut R:1.60",
      "implements",
      "Read:1.60"
    ],
    [
      "&'_ mut W:1.60",
      "implements",
      "Write:1.60"
    ],
    [
      "BorrowMut::borrow_mut:1.60",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "ToOwned::to_owned:1.60",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "Any::type_id:1.60",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "ToOwned::clone_into:1.60",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "PartialOrd::gt:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "PartialOrd::gt:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "PartialOrd::gt:1.60",
      "has attribute",
      "must_use:1.60"
    ],
    [
      "PartialOrd::gt:1.60",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator"
    ],
    [
      "PartialOrd::gt:1.60",
      "belongs to module",
      "cmp:1.60"
    ],
    [
      "&'_ mut I:1.60",
      "implements",
      "Iterator:1.60"
    ],
    [
      "Hash:1.60",
      "has return type",
      "&mut __H:1.60"
    ],
    [
      "Hash:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Hash:1.60",
      "has argument",
      "state:1.60"
    ],
    [
      "Hash:1.60",
      "stable since",
      "1.3.0"
    ],
    [
      "PartialEq:1.60",
      "has return type",
      "bool:1.60"
    ],
    [
      "PartialEq:1.60",
      "has argument",
      "other:1.60"
    ],
    [
      "std::io::ErrorKind:1.60",
      "has attribute",
      "unsafe:1.60"
    ],
    [
      "PartialOrd::gt:1.60",
      "has argument",
      "self:1.60"
    ],
    [
      "Any::into:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::io::ErrorKind::gt:1.60",
      "has attribute",
      "#[must_use]:1.60"
    ],
    [
      "impl<T, U> Into<U> for T:1.60",
      "has description",
      "Performs the conversion."
    ],
    [
      "impl<T> From<T> for T:1.60",
      "has description",
      "Returns the argument unchanged."
    ],
    [
      "impl<T> BorrowMut<T> for T:1.60",
      "implements",
      "BorrowMut:1.60"
    ],
    [
      "impl<T> Borrow<T> for T:1.60",
      "implements",
      "Borrow:1.60"
    ],
    [
      "impl<T, U> Into<U> for T:1.60",
      "implements",
      "Into:1.60"
    ],
    [
      "impl<T> From<T> for T:1.60",
      "implements",
      "From:1.60"
    ],
    [
      "impl<T> ToString for T:1.60",
      "implements",
      "ToString:1.60"
    ],
    [
      "impl<T> ToString for T:1.60",
      "has description",
      "Converts the given value to a String"
    ],
    [
      "TryFrom:1.60",
      "has description",
      "Performs the conversion when possible."
    ],
    [
      "TryInto:1.60",
      "has description",
      "Attempts to convert the value into another type."
    ],
    [
      "std::io::ErrorKind::Interrupted:1.60",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind::Other:1.60",
      "has description",
      "Any I/O error not part of this list. Users are encouraged to consult the platform documentation to identify possible errors."
    ],
    [
      "std::io::ErrorKind::BrokenPipe:1.60",
      "has description",
      "A directory was specified where a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::AlreadyExists:1.60",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "std::io::ErrorKind::WouldBlock:1.60",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind::InvalidInput:1.60",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::le:1.60",
      "has attribute",
      "#[must_use]:1.60"
    ],
    [
      "std::io::ErrorKind::ge:1.60",
      "has attribute",
      "#[must_use]:1.60"
    ],
    [
      "ToString::to_string:1.60",
      "has description",
      "Converts the given value to a String"
    ],
    [
      "TryFrom<U>:1.60",
      "implements",
      "TryFrom:1.60"
    ],
    [
      "TryInto<U>:1.60",
      "implements",
      "TryInto:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "TryFrom<U>:1.60"
    ],
    [
      "T:1.60",
      "implements",
      "TryInto<U>:1.60"
    ],
    [
      "TryFrom::try_from:1.60",
      "has argument",
      "value:1.60"
    ],
    [
      "TryFrom::try_from:1.60",
      "has return type",
      "Result<T, Error>:1.60"
    ],
    [
      "TryInto::try_into:1.60",
      "has return type",
      "Result<U, Error>:1.60"
    ],
    [
      "ToString::to_string:1.60",
      "has description",
      "Converts the given value to a String."
    ],
    [
      "TryFrom:1.60",
      "implements",
      "TryFrom<U>:1.60"
    ],
    [
      "TryInto:1.60",
      "implements",
      "TryInto<U>:1.60"
    ],
    [
      "TryFrom::try_from:1.60",
      "has return type",
      "Result<T, <T as TryFrom<U>>::Error>:1.60"
    ],
    [
      "TryInto::try_into:1.60",
      "has return type",
      "Result<U, <U as TryFrom<T>>::Error>:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "renamed to",
      "std::io::ErrorKind:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Display:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Hash:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Ord:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "From<ErrorKind>:1.60"
    ],
    [
      "ErrorKind::AddrNotAvailable:undefined",
      "adds feature",
      "A directory was specified when a non-directory was expected.:1.60"
    ],
    [
      "ErrorKind::DirectoryNotEmpty:undefined",
      "adds feature",
      "A non-empty directory was specified where an empty directory was expected.:1.60"
    ],
    [
      "ErrorKind::ReadOnlyFilesystem:undefined",
      "adds feature",
      "The filesystem or storage medium is read-only.:1.60"
    ],
    [
      "ErrorKind::FilesystemLoop:undefined",
      "adds feature",
      "Loop in the filesystem or too many symbolic links.:1.60"
    ],
    [
      "ToOwned::to_owned:undefined",
      "renamed to",
      "ToOwned::clone_into:1.60"
    ],
    [
      "ErrorKind::Interrupted:undefined",
      "renamed to",
      "std::io::ErrorKind::Interrupted:1.60"
    ],
    [
      "ErrorKind::Other:undefined",
      "renamed to",
      "std::io::ErrorKind::Other:1.60"
    ],
    [
      "ErrorKind::AddrNotAvailable:undefined",
      "renamed to",
      "std::io::ErrorKind::AddrNotAvailable:1.60"
    ],
    [
      "ErrorKind::BrokenPipe:undefined",
      "renamed to",
      "std::io::ErrorKind::BrokenPipe:1.60"
    ],
    [
      "ErrorKind::AlreadyExists:undefined",
      "renamed to",
      "std::io::ErrorKind::AlreadyExists:1.60"
    ],
    [
      "ErrorKind::WouldBlock:undefined",
      "renamed to",
      "std::io::ErrorKind::WouldBlock:1.60"
    ],
    [
      "ErrorKind::InvalidInput:undefined",
      "renamed to",
      "std::io::ErrorKind::InvalidInput:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Copy:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialEq<ErrorKind>:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialOrd<ErrorKind>:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "StructuralEq:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "StructuralPartialEq:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "RefUnwindSafe:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Unpin:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "UnwindSafe:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Send:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Sync:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "ArgumentListTooLong:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "CrossesDevices:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Deadlock:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "DirectoryNotEmpty:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "ExecutableFileBusy:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "FileTooLarge:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "FilesystemLoop:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "FilesystemQuotaExceeded:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "HostUnreachable:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "InvalidFilename:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "IsADirectory:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "NetworkDown:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "NetworkUnreachable:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "NotADirectory:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "NotSeekable:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "OutOfMemory:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "ReadOnlyFilesystem:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "ResourceBusy:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "StaleNetworkFileHandle:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "StorageFull:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "TooManyLinks:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Unsupported:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "BrokenPipe:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "AlreadyExists:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "WouldBlock:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "InvalidData:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "TimedOut:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Interrupted:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Other:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "UnexpectedEof:1.60"
    ],
    [
      "ErrorKind::AddrNotAvailable:undefined",
      "updates description",
      "The filesystem object is, unexpectedly, a directory.:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "PartialEq:1.60"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "PartialOrd:1.60"
    ],
    [
      "ErrorKind::fmt:undefined",
      "renames argument",
      "__arg_0 to f:1.60"
    ],
    [
      "ErrorKind::fmt:undefined",
      "changes return type to",
      "std::fmt::Result:1.60"
    ],
    [
      "std::io::ErrorKind:1.80",
      "is a",
      "enum"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has alias",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.80",
      "stable since",
      "1.0.0"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has description",
      "A list specifying general categories of I/O error."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "NotFound:1.80"
    ],
    [
      "NotFound:1.80",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "PermissionDenied:1.80"
    ],
    [
      "PermissionDenied:1.80",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "ConnectionRefused:1.80"
    ],
    [
      "ConnectionRefused:1.80",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "ConnectionReset:1.80"
    ],
    [
      "ConnectionReset:1.80",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "ConnectionAborted:1.80"
    ],
    [
      "ConnectionAborted:1.80",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "NotConnected:1.80"
    ],
    [
      "NotConnected:1.80",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "AddrInUse:1.80"
    ],
    [
      "AddrInUse:1.80",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "AddrNotAvailable:1.80"
    ],
    [
      "AddrNotAvailable:1.80",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "BrokenPipe:1.80"
    ],
    [
      "BrokenPipe:1.80",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "AlreadyExists:1.80"
    ],
    [
      "AlreadyExists:1.80",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "WouldBlock:1.80"
    ],
    [
      "WouldBlock:1.80",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "InvalidInput:1.80"
    ],
    [
      "InvalidInput:1.80",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "InvalidData:1.80"
    ],
    [
      "InvalidData:1.80",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."
    ],
    [
      "InvalidData:1.80",
      "stable since",
      "1.2.0"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "TimedOut:1.80"
    ],
    [
      "TimedOut:1.80",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "WriteZero:1.80"
    ],
    [
      "WriteZero:1.80",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "Interrupted:1.80"
    ],
    [
      "Interrupted:1.80",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "Other:1.80"
    ],
    [
      "Other:1.80",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "UnexpectedEof:1.80"
    ],
    [
      "UnexpectedEof:1.80",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "UnexpectedEof:1.80",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Debug:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Clone:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Eq:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "PartialEq:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Copy:1.80"
    ],
    [
      "ErrorKind::fmt:1.80",
      "is a",
      "method"
    ],
    [
      "ErrorKind::fmt:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "ErrorKind::fmt:1.80",
      "has argument",
      "__arg_0:1.80"
    ],
    [
      "ErrorKind::fmt:1.80",
      "has return type",
      "Result:1.80"
    ],
    [
      "ErrorKind::fmt:1.80",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "ErrorKind::clone:1.80",
      "is a",
      "method"
    ],
    [
      "ErrorKind::clone:1.80",
      "has return type",
      "std::io::ErrorKind:1.80"
    ],
    [
      "ErrorKind::clone:1.80",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "std::io::ErrorKind:1.80",
      "belongs to module",
      "std::io:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."
    ],
    [
      "InvalidData:1.80",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "WriteZero:1.80",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "UnexpectedEof:1.80",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "ErrorKind::NotFound:1.80",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "ErrorKind::PermissionDenied:1.80",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "ErrorKind::ConnectionRefused:1.80",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "ErrorKind::ConnectionReset:1.80",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "ErrorKind::ConnectionAborted:1.80",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "ErrorKind::NotConnected:1.80",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::AddrInUse:1.80",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.80",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "ErrorKind::BrokenPipe:1.80",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "ErrorKind::AlreadyExists:1.80",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "ErrorKind::WouldBlock:1.80",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "ErrorKind::InvalidInput:1.80",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "ErrorKind::InvalidData:1.80",
      "has description",
      "Data not valid for the operation were encountered."
    ],
    [
      "ErrorKind::InvalidData:1.80",
      "stable since",
      "1.2.0"
    ],
    [
      "ErrorKind::TimedOut:1.80",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "ErrorKind::WriteZero:1.80",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "ErrorKind::Interrupted:1.80",
      "has description",
      "This operation was interrupted."
    ],
    [
      "ErrorKind::Other:1.80",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "ErrorKind::UnexpectedEof:1.80",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "ErrorKind::UnexpectedEof:1.80",
      "stable since",
      "1.6.0"
    ],
    [
      "ErrorKind::fmt:1.80",
      "has return type",
      "std::fmt::Result:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "used with",
      "io::Error:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "PartialOrd:1.80"
    ],
    [
      "ErrorKind::partial_cmp:1.80",
      "is a",
      "method"
    ],
    [
      "ErrorKind::partial_cmp:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "ErrorKind::partial_cmp:1.80",
      "has argument",
      "__arg_0:1.80"
    ],
    [
      "ErrorKind::partial_cmp:1.80",
      "has return type",
      "Option<Ordering>:1.80"
    ],
    [
      "ErrorKind::partial_cmp:1.80",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "ErrorKind::lt:1.80",
      "is a",
      "method"
    ],
    [
      "ErrorKind::lt:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "ErrorKind::lt:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "ErrorKind::lt:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "ErrorKind::lt:1.80",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "ErrorKind::le:1.80",
      "is a",
      "method"
    ],
    [
      "ErrorKind::le:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "ErrorKind::le:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "ErrorKind::le:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "ErrorKind::le:1.80",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "ErrorKind::gt:1.80",
      "is a",
      "method"
    ],
    [
      "ErrorKind::gt:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "ErrorKind::gt:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "ErrorKind::gt:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "ErrorKind::gt:1.80",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "ErrorKind::ge:1.80",
      "is a",
      "method"
    ],
    [
      "ErrorKind::ge:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "ErrorKind::ge:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "ErrorKind::ge:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "ErrorKind::ge:1.80",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "ErrorKind::InvalidData:1.80",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "ErrorKind::WriteZero:1.80",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "ErrorKind::UnexpectedEof:1.80",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Hash:1.80"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.80",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.80",
      "has argument",
      "__arg_0:1.80"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.80",
      "has return type",
      "Option<Ordering>:1.80"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.80",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "std::io::ErrorKind::lt:1.80",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::lt:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "std::io::ErrorKind::lt:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "std::io::ErrorKind::lt:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "std::io::ErrorKind::lt:1.80",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "std::io::ErrorKind::le:1.80",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::le:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "std::io::ErrorKind::le:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "std::io::ErrorKind::le:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "std::io::ErrorKind::le:1.80",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "std::io::ErrorKind::gt:1.80",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::gt:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "std::io::ErrorKind::gt:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "std::io::ErrorKind::gt:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "std::io::ErrorKind::gt:1.80",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "std::io::ErrorKind::ge:1.80",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::ge:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "std::io::ErrorKind::ge:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "std::io::ErrorKind::ge:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "std::io::ErrorKind::ge:1.80",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Ord:1.80"
    ],
    [
      "ErrorKind::partial_cmp:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "ErrorKind::fmt:1.80",
      "has argument",
      "f:1.80"
    ],
    [
      "std::io::ErrorKind::fmt:1.80",
      "has argument",
      "f:1.80"
    ],
    [
      "std::io::ErrorKind::fmt:1.80",
      "has return type",
      "std::fmt::Result:1.80"
    ],
    [
      "ErrorKind::lt:1.80",
      "has attribute",
      "#[must_use]:1.80"
    ],
    [
      "ErrorKind::le:1.80",
      "has attribute",
      "#[must_use]:1.80"
    ],
    [
      "ErrorKind::gt:1.80",
      "has attribute",
      "#[must_use]:1.80"
    ],
    [
      "ErrorKind::ge:1.80",
      "has attribute",
      "#[must_use]:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "From<ErrorKind>:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "PartialEq<ErrorKind>:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "PartialOrd<ErrorKind>:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "StructuralEq:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "StructuralPartialEq:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "RefUnwindSafe:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Unpin:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "UnwindSafe:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Send:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Sync:1.80"
    ],
    [
      "std::io::Error:1.80",
      "implements",
      "From<ErrorKind>:1.80"
    ],
    [
      "std::io:1.80",
      "contains",
      "IoSlice:1.80"
    ],
    [
      "std::io:1.80",
      "contains",
      "IoSliceMut:1.80"
    ],
    [
      "IoSlice:1.80",
      "is a",
      "struct"
    ],
    [
      "IoSlice:1.80",
      "has description",
      "A buffer type used with `Write::write_vectored`."
    ],
    [
      "IoSliceMut:1.80",
      "is a",
      "struct"
    ],
    [
      "IoSliceMut:1.80",
      "has description",
      "A buffer type used with `Read::read_vectored`."
    ],
    [
      "std::io::ErrorKind::lt:1.80",
      "has attribute",
      "#[must_use]:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "ArgumentListTooLong:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "CrossesDevices:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "Deadlock:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "DirectoryNotEmpty:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "ExecutableFileBusy:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "FileTooLarge:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "FilesystemLoop:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "FilesystemQuotaExceeded:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "HostUnreachable:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "InvalidFilename:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "IsADirectory:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "NetworkDown:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "NetworkUnreachable:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "NotADirectory:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "NotSeekable:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "OutOfMemory:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "ReadOnlyFilesystem:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "ResourceBusy:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "StaleNetworkFileHandle:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "StorageFull:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "TooManyLinks:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has variant",
      "Unsupported:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Display:1.80"
    ],
    [
      "ErrorKind::AddrNotAvailable:1.80",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "ErrorKind::DirectoryNotEmpty:1.80",
      "has description",
      "A non-empty directory was specified where an empty directory was expected."
    ],
    [
      "ErrorKind::ReadOnlyFilesystem:1.80",
      "has description",
      "The filesystem or storage medium is read-only."
    ],
    [
      "ErrorKind::FilesystemLoop:1.80",
      "has description",
      "Loop in the filesystem or too many symbolic links."
    ],
    [
      "ErrorKind::DirectoryNotEmpty:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "ErrorKind::ReadOnlyFilesystem:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "ErrorKind::FilesystemLoop:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "ErrorKind::StaleNetworkFileHandle:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "ErrorKind::ResourceBusy:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "ErrorKind::FilesystemQuotaExceeded:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "ErrorKind::NetworkDown:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "ErrorKind::ArgumentListTooLong:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "ErrorKind::Interrupted:1.80",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "ErrorKind::Other:1.80",
      "has description",
      "Any I/O error not part of this list. Users are encouraged to consult the platform documentation to identify possible errors."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.80",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "ErrorKind::BrokenPipe:1.80",
      "has description",
      "A directory was specified where a non-directory was expected."
    ],
    [
      "ErrorKind::AlreadyExists:1.80",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "ErrorKind::WouldBlock:1.80",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::InvalidInput:1.80",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::DirectoryNotEmpty:1.80",
      "has description",
      "A non-empty directory was specified where an empty directory was expected."
    ],
    [
      "std::io::ErrorKind::ReadOnlyFilesystem:1.80",
      "has description",
      "The filesystem or storage medium is read-only."
    ],
    [
      "std::io::ErrorKind::FilesystemLoop:1.80",
      "has description",
      "Loop in the filesystem or IO subsystem; often too many levels of symbolic links."
    ],
    [
      "std::io::ErrorKind::AddrNotAvailable:1.80",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "std::io::ErrorKind::ReadOnlyFilesystem:1.80",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "std::io::ErrorKind::StaleNetworkFileHandle:1.80",
      "has description",
      "Stale network file handle. With some network filesystems, an open file can be invalidated by the server."
    ],
    [
      "std::io::ErrorKind::InvalidInput:1.80",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind::WriteZero:1.80",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "std::io::ErrorKind::ResourceBusy:1.80",
      "has description",
      "Resource is busy."
    ],
    [
      "std::io::ErrorKind::Deadlock:1.80",
      "has description",
      "Deadlock (avoided). A file locking operation would result in deadlock."
    ],
    [
      "std::io::ErrorKind::OutOfMemory:1.80",
      "has description",
      "An operation could not be completed, because it failed to allocate enough memory."
    ],
    [
      "std::io::ErrorKind::ArgumentListTooLong:1.80",
      "has description",
      "Program argument list too long."
    ],
    [
      "std::io::ErrorKind::CrossesDevices:1.80",
      "has description",
      "Cross-device or cross-filesystem (hard) link or rename."
    ],
    [
      "std::io::ErrorKind::FileTooLarge:1.80",
      "has description",
      "File larger than allowed or supported."
    ],
    [
      "std::io::ErrorKind::FilesystemQuotaExceeded:1.80",
      "has description",
      "Filesystem quota was exceeded."
    ],
    [
      "std::io::ErrorKind::HostUnreachable:1.80",
      "has description",
      "Host is unreachable."
    ],
    [
      "std::io::ErrorKind::InvalidFilename:1.80",
      "has description",
      "A filename was invalid."
    ],
    [
      "std::io::ErrorKind::IsADirectory:1.80",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "std::io::ErrorKind::NetworkDown:1.80",
      "has description",
      "Network is down."
    ],
    [
      "std::io::ErrorKind::NetworkUnreachable:1.80",
      "has description",
      "Network is unreachable."
    ],
    [
      "std::io::ErrorKind::NotADirectory:1.80",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::NotSeekable:1.80",
      "has description",
      "Seek on unseekable file."
    ],
    [
      "std::io::ErrorKind::TooManyLinks:1.80",
      "has description",
      "Too many (hard) links to the same filesystem object."
    ],
    [
      "std::io::ErrorKind::Unsupported:1.80",
      "has description",
      "This operation is unsupported on this platform."
    ],
    [
      "ErrorKind::IsADirectory:1.80",
      "has description",
      "The filesystem object is, unexpectedly, a directory. A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::IsADirectory:1.80",
      "has description",
      "The filesystem object is, unexpectedly, a directory. A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::FilesystemLoop:1.80",
      "has description",
      "Loop in the filesystem or IO subsystem; often, too many levels of symbolic links."
    ],
    [
      "std::io::ErrorKind:1.80",
      "belongs to module",
      "io:1.80"
    ],
    [
      "&'_ mut F:1.80",
      "implements",
      "Future:1.80"
    ],
    [
      "&'_ mut R:1.80",
      "implements",
      "Read:1.80"
    ],
    [
      "&'_ mut W:1.80",
      "implements",
      "Write:1.80"
    ],
    [
      "BorrowMut::borrow_mut:1.80",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "ToOwned::to_owned:1.80",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "Any::type_id:1.80",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "ToOwned::clone_into:1.80",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "PartialOrd::gt:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "PartialOrd::gt:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "PartialOrd::gt:1.80",
      "has attribute",
      "must_use:1.80"
    ],
    [
      "PartialOrd::gt:1.80",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator"
    ],
    [
      "PartialOrd::gt:1.80",
      "belongs to module",
      "cmp:1.80"
    ],
    [
      "&'_ mut I:1.80",
      "implements",
      "Iterator:1.80"
    ],
    [
      "Hash:1.80",
      "has return type",
      "&mut __H:1.80"
    ],
    [
      "Hash:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "Hash:1.80",
      "has argument",
      "state:1.80"
    ],
    [
      "Hash:1.80",
      "stable since",
      "1.3.0"
    ],
    [
      "PartialEq:1.80",
      "has return type",
      "bool:1.80"
    ],
    [
      "PartialEq:1.80",
      "has argument",
      "other:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has attribute",
      "unsafe:1.80"
    ],
    [
      "PartialOrd::gt:1.80",
      "has argument",
      "self:1.80"
    ],
    [
      "Any::into:1.80",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::io::ErrorKind::gt:1.80",
      "has attribute",
      "#[must_use]:1.80"
    ],
    [
      "impl<T, U> Into<U> for T:1.80",
      "has description",
      "Performs the conversion."
    ],
    [
      "impl<T> From<T> for T:1.80",
      "has description",
      "Returns the argument unchanged."
    ],
    [
      "impl<T> BorrowMut<T> for T:1.80",
      "implements",
      "BorrowMut:1.80"
    ],
    [
      "impl<T> Borrow<T> for T:1.80",
      "implements",
      "Borrow:1.80"
    ],
    [
      "impl<T, U> Into<U> for T:1.80",
      "implements",
      "Into:1.80"
    ],
    [
      "impl<T> From<T> for T:1.80",
      "implements",
      "From:1.80"
    ],
    [
      "impl<T> ToString for T:1.80",
      "implements",
      "ToString:1.80"
    ],
    [
      "impl<T> ToString for T:1.80",
      "has description",
      "Converts the given value to a String"
    ],
    [
      "TryFrom:1.80",
      "has description",
      "Performs the conversion when possible."
    ],
    [
      "TryInto:1.80",
      "has description",
      "Attempts to convert the value into another type."
    ],
    [
      "std::io::ErrorKind::Interrupted:1.80",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind::Other:1.80",
      "has description",
      "Any I/O error not part of this list. Users are encouraged to consult the platform documentation to identify possible errors."
    ],
    [
      "std::io::ErrorKind::BrokenPipe:1.80",
      "has description",
      "A directory was specified where a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::AlreadyExists:1.80",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "std::io::ErrorKind::WouldBlock:1.80",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind::InvalidInput:1.80",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::le:1.80",
      "has attribute",
      "#[must_use]:1.80"
    ],
    [
      "std::io::ErrorKind::ge:1.80",
      "has attribute",
      "#[must_use]:1.80"
    ],
    [
      "ToString::to_string:1.80",
      "has description",
      "Converts the given value to a String"
    ],
    [
      "TryFrom<U>:1.80",
      "implements",
      "TryFrom:1.80"
    ],
    [
      "TryInto<U>:1.80",
      "implements",
      "TryInto:1.80"
    ],
    [
      "T:1.80",
      "implements",
      "TryFrom<U>:1.80"
    ],
    [
      "T:1.80",
      "implements",
      "TryInto<U>:1.80"
    ],
    [
      "TryFrom::try_from:1.80",
      "has argument",
      "value:1.80"
    ],
    [
      "TryFrom::try_from:1.80",
      "has return type",
      "Result<T, Error>:1.80"
    ],
    [
      "TryInto::try_into:1.80",
      "has return type",
      "Result<U, Error>:1.80"
    ],
    [
      "ToString::to_string:1.80",
      "has description",
      "Converts the given value to a String."
    ],
    [
      "TryFrom:1.80",
      "implements",
      "TryFrom<U>:1.80"
    ],
    [
      "TryInto:1.80",
      "implements",
      "TryInto<U>:1.80"
    ],
    [
      "TryFrom::try_from:1.80",
      "has return type",
      "Result<T, <T as TryFrom<U>>::Error>:1.80"
    ],
    [
      "TryInto::try_into:1.80",
      "has return type",
      "Result<U, <U as TryFrom<T>>::Error>:1.80"
    ],
    [
      "std::io::ErrorKind::NotConnected:1.80",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind::WouldBlock:1.80",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind::DirectoryNotEmpty:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::io::ErrorKind::ReadOnlyFilesystem:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::io::ErrorKind::FilesystemLoop:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::io::ErrorKind::StaleNetworkFileHandle:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::io::ErrorKind::ResourceBusy:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::io::ErrorKind::FilesystemQuotaExceeded:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::io::ErrorKind::NetworkDown:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::io::ErrorKind::ArgumentListTooLong:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::io::ErrorKind::ExecutableFileBusy:1.80",
      "has description",
      "Executable file is busy."
    ],
    [
      "std::io::ErrorKind::Deadlock:1.80",
      "has description",
      "Deadlock (avoided)."
    ],
    [
      "std::io::ErrorKind::Unsupported:1.80",
      "stable since",
      "1.53.0"
    ],
    [
      "std::io::ErrorKind::UnexpectedEof:1.80",
      "has description",
      "An error returned when an operation could not be completed because an “end of file” was reached prematurely."
    ],
    [
      "std::io::ErrorKind::UnexpectedEof:1.80",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind::OutOfMemory:1.80",
      "stable since",
      "1.54.0"
    ],
    [
      "std:1.80",
      "has version",
      "1.80.1:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "Freeze:1.80"
    ],
    [
      "std::io:1.80",
      "contains",
      "std::io::ErrorKind:1.80"
    ],
    [
      "std::io:1.80",
      "has type alias",
      "Result:1.80"
    ],
    [
      "std::io:1.80",
      "has type alias",
      "RawOsError:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "has version",
      "1.0.0:1.80"
    ],
    [
      "std::io::ErrorKind:1.80",
      "implements",
      "From:1.80"
    ],
    [
      "std::io::ErrorKind:1.70",
      "is a",
      "enum"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has alias",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.70",
      "stable since",
      "1.0.0"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has description",
      "A list specifying general categories of I/O error."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "NotFound:1.70"
    ],
    [
      "NotFound:1.70",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "PermissionDenied:1.70"
    ],
    [
      "PermissionDenied:1.70",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "ConnectionRefused:1.70"
    ],
    [
      "ConnectionRefused:1.70",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "ConnectionReset:1.70"
    ],
    [
      "ConnectionReset:1.70",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "ConnectionAborted:1.70"
    ],
    [
      "ConnectionAborted:1.70",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "NotConnected:1.70"
    ],
    [
      "NotConnected:1.70",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "AddrInUse:1.70"
    ],
    [
      "AddrInUse:1.70",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "AddrNotAvailable:1.70"
    ],
    [
      "AddrNotAvailable:1.70",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "BrokenPipe:1.70"
    ],
    [
      "BrokenPipe:1.70",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "AlreadyExists:1.70"
    ],
    [
      "AlreadyExists:1.70",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "WouldBlock:1.70"
    ],
    [
      "WouldBlock:1.70",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "InvalidInput:1.70"
    ],
    [
      "InvalidInput:1.70",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "InvalidData:1.70"
    ],
    [
      "InvalidData:1.70",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."
    ],
    [
      "InvalidData:1.70",
      "stable since",
      "1.2.0"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "TimedOut:1.70"
    ],
    [
      "TimedOut:1.70",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "WriteZero:1.70"
    ],
    [
      "WriteZero:1.70",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "Interrupted:1.70"
    ],
    [
      "Interrupted:1.70",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "Other:1.70"
    ],
    [
      "Other:1.70",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "UnexpectedEof:1.70"
    ],
    [
      "UnexpectedEof:1.70",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "UnexpectedEof:1.70",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Debug:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Clone:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Eq:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "PartialEq:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Copy:1.70"
    ],
    [
      "ErrorKind::fmt:1.70",
      "is a",
      "method"
    ],
    [
      "ErrorKind::fmt:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "ErrorKind::fmt:1.70",
      "has argument",
      "__arg_0:1.70"
    ],
    [
      "ErrorKind::fmt:1.70",
      "has return type",
      "Result:1.70"
    ],
    [
      "ErrorKind::fmt:1.70",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "ErrorKind::clone:1.70",
      "is a",
      "method"
    ],
    [
      "ErrorKind::clone:1.70",
      "has return type",
      "std::io::ErrorKind:1.70"
    ],
    [
      "ErrorKind::clone:1.70",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "std::io::ErrorKind:1.70",
      "belongs to module",
      "std::io:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."
    ],
    [
      "InvalidData:1.70",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "WriteZero:1.70",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "UnexpectedEof:1.70",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "ErrorKind::NotFound:1.70",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "ErrorKind::PermissionDenied:1.70",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "ErrorKind::ConnectionRefused:1.70",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "ErrorKind::ConnectionReset:1.70",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "ErrorKind::ConnectionAborted:1.70",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "ErrorKind::NotConnected:1.70",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::AddrInUse:1.70",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.70",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "ErrorKind::BrokenPipe:1.70",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "ErrorKind::AlreadyExists:1.70",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "ErrorKind::WouldBlock:1.70",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "ErrorKind::InvalidInput:1.70",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "ErrorKind::InvalidData:1.70",
      "has description",
      "Data not valid for the operation were encountered."
    ],
    [
      "ErrorKind::InvalidData:1.70",
      "stable since",
      "1.2.0"
    ],
    [
      "ErrorKind::TimedOut:1.70",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "ErrorKind::WriteZero:1.70",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "ErrorKind::Interrupted:1.70",
      "has description",
      "This operation was interrupted."
    ],
    [
      "ErrorKind::Other:1.70",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "ErrorKind::UnexpectedEof:1.70",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "ErrorKind::UnexpectedEof:1.70",
      "stable since",
      "1.6.0"
    ],
    [
      "ErrorKind::fmt:1.70",
      "has return type",
      "std::fmt::Result:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "used with",
      "io::Error:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "PartialOrd:1.70"
    ],
    [
      "ErrorKind::partial_cmp:1.70",
      "is a",
      "method"
    ],
    [
      "ErrorKind::partial_cmp:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "ErrorKind::partial_cmp:1.70",
      "has argument",
      "__arg_0:1.70"
    ],
    [
      "ErrorKind::partial_cmp:1.70",
      "has return type",
      "Option<Ordering>:1.70"
    ],
    [
      "ErrorKind::partial_cmp:1.70",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "ErrorKind::lt:1.70",
      "is a",
      "method"
    ],
    [
      "ErrorKind::lt:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "ErrorKind::lt:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "ErrorKind::lt:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "ErrorKind::lt:1.70",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "ErrorKind::le:1.70",
      "is a",
      "method"
    ],
    [
      "ErrorKind::le:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "ErrorKind::le:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "ErrorKind::le:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "ErrorKind::le:1.70",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "ErrorKind::gt:1.70",
      "is a",
      "method"
    ],
    [
      "ErrorKind::gt:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "ErrorKind::gt:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "ErrorKind::gt:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "ErrorKind::gt:1.70",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "ErrorKind::ge:1.70",
      "is a",
      "method"
    ],
    [
      "ErrorKind::ge:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "ErrorKind::ge:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "ErrorKind::ge:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "ErrorKind::ge:1.70",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "ErrorKind::InvalidData:1.70",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "ErrorKind::WriteZero:1.70",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "ErrorKind::UnexpectedEof:1.70",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Hash:1.70"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.70",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.70",
      "has argument",
      "__arg_0:1.70"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.70",
      "has return type",
      "Option<Ordering>:1.70"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.70",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "std::io::ErrorKind::lt:1.70",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::lt:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "std::io::ErrorKind::lt:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "std::io::ErrorKind::lt:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "std::io::ErrorKind::lt:1.70",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "std::io::ErrorKind::le:1.70",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::le:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "std::io::ErrorKind::le:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "std::io::ErrorKind::le:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "std::io::ErrorKind::le:1.70",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "std::io::ErrorKind::gt:1.70",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::gt:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "std::io::ErrorKind::gt:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "std::io::ErrorKind::gt:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "std::io::ErrorKind::gt:1.70",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "std::io::ErrorKind::ge:1.70",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::ge:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "std::io::ErrorKind::ge:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "std::io::ErrorKind::ge:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "std::io::ErrorKind::ge:1.70",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Ord:1.70"
    ],
    [
      "ErrorKind::partial_cmp:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "ErrorKind::fmt:1.70",
      "has argument",
      "f:1.70"
    ],
    [
      "std::io::ErrorKind::fmt:1.70",
      "has argument",
      "f:1.70"
    ],
    [
      "std::io::ErrorKind::fmt:1.70",
      "has return type",
      "std::fmt::Result:1.70"
    ],
    [
      "ErrorKind::lt:1.70",
      "has attribute",
      "#[must_use]:1.70"
    ],
    [
      "ErrorKind::le:1.70",
      "has attribute",
      "#[must_use]:1.70"
    ],
    [
      "ErrorKind::gt:1.70",
      "has attribute",
      "#[must_use]:1.70"
    ],
    [
      "ErrorKind::ge:1.70",
      "has attribute",
      "#[must_use]:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "From<ErrorKind>:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "PartialEq<ErrorKind>:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "PartialOrd<ErrorKind>:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "StructuralEq:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "StructuralPartialEq:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "RefUnwindSafe:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Unpin:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "UnwindSafe:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Send:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Sync:1.70"
    ],
    [
      "std::io::Error:1.70",
      "implements",
      "From<ErrorKind>:1.70"
    ],
    [
      "std::io:1.70",
      "contains",
      "IoSlice:1.70"
    ],
    [
      "std::io:1.70",
      "contains",
      "IoSliceMut:1.70"
    ],
    [
      "IoSlice:1.70",
      "is a",
      "struct"
    ],
    [
      "IoSlice:1.70",
      "has description",
      "A buffer type used with `Write::write_vectored`."
    ],
    [
      "IoSliceMut:1.70",
      "is a",
      "struct"
    ],
    [
      "IoSliceMut:1.70",
      "has description",
      "A buffer type used with `Read::read_vectored`."
    ],
    [
      "std::io::ErrorKind::lt:1.70",
      "has attribute",
      "#[must_use]:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "ArgumentListTooLong:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "CrossesDevices:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "Deadlock:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "DirectoryNotEmpty:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "ExecutableFileBusy:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "FileTooLarge:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "FilesystemLoop:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "FilesystemQuotaExceeded:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "HostUnreachable:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "InvalidFilename:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "IsADirectory:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "NetworkDown:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "NetworkUnreachable:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "NotADirectory:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "NotSeekable:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "OutOfMemory:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "ReadOnlyFilesystem:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "ResourceBusy:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "StaleNetworkFileHandle:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "StorageFull:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "TooManyLinks:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has variant",
      "Unsupported:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "implements",
      "Display:1.70"
    ],
    [
      "ErrorKind::AddrNotAvailable:1.70",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "ErrorKind::DirectoryNotEmpty:1.70",
      "has description",
      "A non-empty directory was specified where an empty directory was expected."
    ],
    [
      "ErrorKind::ReadOnlyFilesystem:1.70",
      "has description",
      "The filesystem or storage medium is read-only."
    ],
    [
      "ErrorKind::FilesystemLoop:1.70",
      "has description",
      "Loop in the filesystem or too many symbolic links."
    ],
    [
      "ErrorKind::DirectoryNotEmpty:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "ErrorKind::ReadOnlyFilesystem:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "ErrorKind::FilesystemLoop:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "ErrorKind::StaleNetworkFileHandle:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "ErrorKind::ResourceBusy:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "ErrorKind::FilesystemQuotaExceeded:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "ErrorKind::NetworkDown:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "ErrorKind::ArgumentListTooLong:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "ErrorKind::Interrupted:1.70",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "ErrorKind::Other:1.70",
      "has description",
      "Any I/O error not part of this list. Users are encouraged to consult the platform documentation to identify possible errors."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.70",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "ErrorKind::BrokenPipe:1.70",
      "has description",
      "A directory was specified where a non-directory was expected."
    ],
    [
      "ErrorKind::AlreadyExists:1.70",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "ErrorKind::WouldBlock:1.70",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::InvalidInput:1.70",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::DirectoryNotEmpty:1.70",
      "has description",
      "A non-empty directory was specified where an empty directory was expected."
    ],
    [
      "std::io::ErrorKind::ReadOnlyFilesystem:1.70",
      "has description",
      "The filesystem or storage medium is read-only."
    ],
    [
      "std::io::ErrorKind::FilesystemLoop:1.70",
      "has description",
      "Loop in the filesystem or IO subsystem; often too many levels of symbolic links."
    ],
    [
      "std::io::ErrorKind::AddrNotAvailable:1.70",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "std::io::ErrorKind::ReadOnlyFilesystem:1.70",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "std::io::ErrorKind::StaleNetworkFileHandle:1.70",
      "has description",
      "Stale network file handle. With some network filesystems, an open file can be invalidated by the server."
    ],
    [
      "std::io::ErrorKind::InvalidInput:1.70",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind::WriteZero:1.70",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "std::io::ErrorKind::ResourceBusy:1.70",
      "has description",
      "Resource is busy."
    ],
    [
      "std::io::ErrorKind::Deadlock:1.70",
      "has description",
      "Deadlock (avoided). A file locking operation would result in deadlock."
    ],
    [
      "std::io::ErrorKind::OutOfMemory:1.70",
      "has description",
      "An operation could not be completed, because it failed to allocate enough memory."
    ],
    [
      "std::io::ErrorKind::ArgumentListTooLong:1.70",
      "has description",
      "Program argument list too long."
    ],
    [
      "std::io::ErrorKind::CrossesDevices:1.70",
      "has description",
      "Cross-device or cross-filesystem (hard) link or rename."
    ],
    [
      "std::io::ErrorKind::FileTooLarge:1.70",
      "has description",
      "File larger than allowed or supported."
    ],
    [
      "std::io::ErrorKind::FilesystemQuotaExceeded:1.70",
      "has description",
      "Filesystem quota was exceeded."
    ],
    [
      "std::io::ErrorKind::HostUnreachable:1.70",
      "has description",
      "Host is unreachable."
    ],
    [
      "std::io::ErrorKind::InvalidFilename:1.70",
      "has description",
      "A filename was invalid."
    ],
    [
      "std::io::ErrorKind::IsADirectory:1.70",
      "has description",
      "The filesystem object is, unexpectedly, a directory."
    ],
    [
      "std::io::ErrorKind::NetworkDown:1.70",
      "has description",
      "Network is down."
    ],
    [
      "std::io::ErrorKind::NetworkUnreachable:1.70",
      "has description",
      "Network is unreachable."
    ],
    [
      "std::io::ErrorKind::NotADirectory:1.70",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::NotSeekable:1.70",
      "has description",
      "Seek on unseekable file."
    ],
    [
      "std::io::ErrorKind::TooManyLinks:1.70",
      "has description",
      "Too many (hard) links to the same filesystem object."
    ],
    [
      "std::io::ErrorKind::Unsupported:1.70",
      "has description",
      "This operation is unsupported on this platform."
    ],
    [
      "ErrorKind::IsADirectory:1.70",
      "has description",
      "The filesystem object is, unexpectedly, a directory. A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::IsADirectory:1.70",
      "has description",
      "The filesystem object is, unexpectedly, a directory. A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::FilesystemLoop:1.70",
      "has description",
      "Loop in the filesystem or IO subsystem; often, too many levels of symbolic links."
    ],
    [
      "std::io::ErrorKind:1.70",
      "belongs to module",
      "io:1.70"
    ],
    [
      "&'_ mut F:1.70",
      "implements",
      "Future:1.70"
    ],
    [
      "&'_ mut R:1.70",
      "implements",
      "Read:1.70"
    ],
    [
      "&'_ mut W:1.70",
      "implements",
      "Write:1.70"
    ],
    [
      "BorrowMut::borrow_mut:1.70",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "ToOwned::to_owned:1.70",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "Any::type_id:1.70",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "ToOwned::clone_into:1.70",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "PartialOrd::gt:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "PartialOrd::gt:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "PartialOrd::gt:1.70",
      "has attribute",
      "must_use:1.70"
    ],
    [
      "PartialOrd::gt:1.70",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator"
    ],
    [
      "PartialOrd::gt:1.70",
      "belongs to module",
      "cmp:1.70"
    ],
    [
      "&'_ mut I:1.70",
      "implements",
      "Iterator:1.70"
    ],
    [
      "Hash:1.70",
      "has return type",
      "&mut __H:1.70"
    ],
    [
      "Hash:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "Hash:1.70",
      "has argument",
      "state:1.70"
    ],
    [
      "Hash:1.70",
      "stable since",
      "1.3.0"
    ],
    [
      "PartialEq:1.70",
      "has return type",
      "bool:1.70"
    ],
    [
      "PartialEq:1.70",
      "has argument",
      "other:1.70"
    ],
    [
      "std::io::ErrorKind:1.70",
      "has attribute",
      "unsafe:1.70"
    ],
    [
      "PartialOrd::gt:1.70",
      "has argument",
      "self:1.70"
    ],
    [
      "Any::into:1.70",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::io::ErrorKind::gt:1.70",
      "has attribute",
      "#[must_use]:1.70"
    ],
    [
      "impl<T, U> Into<U> for T:1.70",
      "has description",
      "Performs the conversion."
    ],
    [
      "impl<T> From<T> for T:1.70",
      "has description",
      "Returns the argument unchanged."
    ],
    [
      "impl<T> BorrowMut<T> for T:1.70",
      "implements",
      "BorrowMut:1.70"
    ],
    [
      "impl<T> Borrow<T> for T:1.70",
      "implements",
      "Borrow:1.70"
    ],
    [
      "impl<T, U> Into<U> for T:1.70",
      "implements",
      "Into:1.70"
    ],
    [
      "impl<T> From<T> for T:1.70",
      "implements",
      "From:1.70"
    ],
    [
      "impl<T> ToString for T:1.70",
      "implements",
      "ToString:1.70"
    ],
    [
      "impl<T> ToString for T:1.70",
      "has description",
      "Converts the given value to a String"
    ],
    [
      "TryFrom:1.70",
      "has description",
      "Performs the conversion when possible."
    ],
    [
      "TryInto:1.70",
      "has description",
      "Attempts to convert the value into another type."
    ],
    [
      "std::io::ErrorKind::Interrupted:1.70",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind::Other:1.70",
      "has description",
      "Any I/O error not part of this list. Users are encouraged to consult the platform documentation to identify possible errors."
    ],
    [
      "std::io::ErrorKind::BrokenPipe:1.70",
      "has description",
      "A directory was specified where a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::AlreadyExists:1.70",
      "has description",
      "The filesystem or storage medium is read-only, but a write operation was attempted."
    ],
    [
      "std::io::ErrorKind::WouldBlock:1.70",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind::InvalidInput:1.70",
      "has description",
      "A directory was specified when a non-directory was expected."
    ],
    [
      "std::io::ErrorKind::le:1.70",
      "has attribute",
      "#[must_use]:1.70"
    ],
    [
      "std::io::ErrorKind::ge:1.70",
      "has attribute",
      "#[must_use]:1.70"
    ],
    [
      "ToString::to_string:1.70",
      "has description",
      "Converts the given value to a String"
    ],
    [
      "TryFrom<U>:1.70",
      "implements",
      "TryFrom:1.70"
    ],
    [
      "TryInto<U>:1.70",
      "implements",
      "TryInto:1.70"
    ],
    [
      "T:1.70",
      "implements",
      "TryFrom<U>:1.70"
    ],
    [
      "T:1.70",
      "implements",
      "TryInto<U>:1.70"
    ],
    [
      "TryFrom::try_from:1.70",
      "has argument",
      "value:1.70"
    ],
    [
      "TryFrom::try_from:1.70",
      "has return type",
      "Result<T, Error>:1.70"
    ],
    [
      "TryInto::try_into:1.70",
      "has return type",
      "Result<U, Error>:1.70"
    ],
    [
      "ToString::to_string:1.70",
      "has description",
      "Converts the given value to a String."
    ],
    [
      "TryFrom:1.70",
      "implements",
      "TryFrom<U>:1.70"
    ],
    [
      "TryInto:1.70",
      "implements",
      "TryInto<U>:1.70"
    ],
    [
      "TryFrom::try_from:1.70",
      "has return type",
      "Result<T, <T as TryFrom<U>>::Error>:1.70"
    ],
    [
      "TryInto::try_into:1.70",
      "has return type",
      "Result<U, <U as TryFrom<T>>::Error>:1.70"
    ],
    [
      "std::io::ErrorKind::NotConnected:1.70",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind::WouldBlock:1.70",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind::DirectoryNotEmpty:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::io::ErrorKind::ReadOnlyFilesystem:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::io::ErrorKind::FilesystemLoop:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::io::ErrorKind::StaleNetworkFileHandle:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::io::ErrorKind::ResourceBusy:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::io::ErrorKind::FilesystemQuotaExceeded:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::io::ErrorKind::NetworkDown:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::io::ErrorKind::ArgumentListTooLong:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::io::ErrorKind::ExecutableFileBusy:1.70",
      "has description",
      "Executable file is busy."
    ],
    [
      "std::io::ErrorKind::Deadlock:1.70",
      "has description",
      "Deadlock (avoided)."
    ],
    [
      "std::io::ErrorKind::Unsupported:1.70",
      "stable since",
      "1.53.0"
    ],
    [
      "std::io::ErrorKind::UnexpectedEof:1.70",
      "has description",
      "An error returned when an operation could not be completed because an “end of file” was reached prematurely."
    ],
    [
      "std::io::ErrorKind::UnexpectedEof:1.70",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind::OutOfMemory:1.70",
      "stable since",
      "1.54.0"
    ],
    [
      "std::io::ErrorKind:1.20",
      "is a",
      "enum"
    ],
    [
      "std::io::ErrorKind:1.20",
      "has alias",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.20",
      "stable since",
      "1.0.0"
    ],
    [
      "std::io::ErrorKind:1.20",
      "has description",
      "A list specifying general categories of I/O error."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "NotFound:1.20"
    ],
    [
      "NotFound:1.20",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "PermissionDenied:1.20"
    ],
    [
      "PermissionDenied:1.20",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "ConnectionRefused:1.20"
    ],
    [
      "ConnectionRefused:1.20",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "ConnectionReset:1.20"
    ],
    [
      "ConnectionReset:1.20",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "ConnectionAborted:1.20"
    ],
    [
      "ConnectionAborted:1.20",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "NotConnected:1.20"
    ],
    [
      "NotConnected:1.20",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "AddrInUse:1.20"
    ],
    [
      "AddrInUse:1.20",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "AddrNotAvailable:1.20"
    ],
    [
      "AddrNotAvailable:1.20",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "BrokenPipe:1.20"
    ],
    [
      "BrokenPipe:1.20",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "AlreadyExists:1.20"
    ],
    [
      "AlreadyExists:1.20",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "WouldBlock:1.20"
    ],
    [
      "WouldBlock:1.20",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "InvalidInput:1.20"
    ],
    [
      "InvalidInput:1.20",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "InvalidData:1.20"
    ],
    [
      "InvalidData:1.20",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."
    ],
    [
      "InvalidData:1.20",
      "stable since",
      "1.2.0"
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "TimedOut:1.20"
    ],
    [
      "TimedOut:1.20",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "WriteZero:1.20"
    ],
    [
      "WriteZero:1.20",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "Interrupted:1.20"
    ],
    [
      "Interrupted:1.20",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "Other:1.20"
    ],
    [
      "Other:1.20",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "std::io::ErrorKind:1.20",
      "has variant",
      "UnexpectedEof:1.20"
    ],
    [
      "UnexpectedEof:1.20",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "UnexpectedEof:1.20",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.20",
      "implements",
      "Debug:1.20"
    ],
    [
      "std::io::ErrorKind:1.20",
      "implements",
      "Clone:1.20"
    ],
    [
      "std::io::ErrorKind:1.20",
      "implements",
      "Eq:1.20"
    ],
    [
      "std::io::ErrorKind:1.20",
      "implements",
      "PartialEq:1.20"
    ],
    [
      "std::io::ErrorKind:1.20",
      "implements",
      "Copy:1.20"
    ],
    [
      "ErrorKind::fmt:1.20",
      "is a",
      "method"
    ],
    [
      "ErrorKind::fmt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "ErrorKind::fmt:1.20",
      "has argument",
      "__arg_0:1.20"
    ],
    [
      "ErrorKind::fmt:1.20",
      "has return type",
      "Result:1.20"
    ],
    [
      "ErrorKind::fmt:1.20",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "ErrorKind::clone:1.20",
      "is a",
      "method"
    ],
    [
      "ErrorKind::clone:1.20",
      "has return type",
      "std::io::ErrorKind:1.20"
    ],
    [
      "ErrorKind::clone:1.20",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "std::io::ErrorKind:1.20",
      "belongs to module",
      "std::io:1.20"
    ],
    [
      "std::io::ErrorKind:1.20",
      "has description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."
    ],
    [
      "InvalidData:1.20",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "WriteZero:1.20",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "UnexpectedEof:1.20",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "ErrorKind::NotFound:1.20",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "ErrorKind::PermissionDenied:1.20",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "ErrorKind::ConnectionRefused:1.20",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "ErrorKind::ConnectionReset:1.20",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "ErrorKind::ConnectionAborted:1.20",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "ErrorKind::NotConnected:1.20",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::AddrInUse:1.20",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.20",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "ErrorKind::BrokenPipe:1.20",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "ErrorKind::AlreadyExists:1.20",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "ErrorKind::WouldBlock:1.20",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "ErrorKind::InvalidInput:1.20",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "ErrorKind::InvalidData:1.20",
      "has description",
      "Data not valid for the operation were encountered."
    ],
    [
      "ErrorKind::InvalidData:1.20",
      "stable since",
      "1.2.0"
    ],
    [
      "ErrorKind::TimedOut:1.20",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "ErrorKind::WriteZero:1.20",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "ErrorKind::Interrupted:1.20",
      "has description",
      "This operation was interrupted."
    ],
    [
      "ErrorKind::Other:1.20",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "ErrorKind::UnexpectedEof:1.20",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "ErrorKind::UnexpectedEof:1.20",
      "stable since",
      "1.6.0"
    ],
    [
      "ErrorKind::fmt:1.20",
      "has return type",
      "std::fmt::Result:1.20"
    ],
    [
      "std::io::ErrorKind:1.20",
      "used with",
      "io::Error:1.20"
    ],
    [
      "std::io::ErrorKind:1.20",
      "implements",
      "PartialOrd:1.20"
    ],
    [
      "ErrorKind::partial_cmp:1.20",
      "is a",
      "method"
    ],
    [
      "ErrorKind::partial_cmp:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "ErrorKind::partial_cmp:1.20",
      "has argument",
      "__arg_0:1.20"
    ],
    [
      "ErrorKind::partial_cmp:1.20",
      "has return type",
      "Option<Ordering>:1.20"
    ],
    [
      "ErrorKind::partial_cmp:1.20",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "ErrorKind::lt:1.20",
      "is a",
      "method"
    ],
    [
      "ErrorKind::lt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "ErrorKind::lt:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "ErrorKind::lt:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "ErrorKind::lt:1.20",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "ErrorKind::le:1.20",
      "is a",
      "method"
    ],
    [
      "ErrorKind::le:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "ErrorKind::le:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "ErrorKind::le:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "ErrorKind::le:1.20",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "ErrorKind::gt:1.20",
      "is a",
      "method"
    ],
    [
      "ErrorKind::gt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "ErrorKind::gt:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "ErrorKind::gt:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "ErrorKind::gt:1.20",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "ErrorKind::ge:1.20",
      "is a",
      "method"
    ],
    [
      "ErrorKind::ge:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "ErrorKind::ge:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "ErrorKind::ge:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "ErrorKind::ge:1.20",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "ErrorKind::InvalidData:1.20",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "ErrorKind::WriteZero:1.20",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "ErrorKind::UnexpectedEof:1.20",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "std::io::ErrorKind:1.20",
      "implements",
      "Hash:1.20"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.20",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.20",
      "has argument",
      "__arg_0:1.20"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.20",
      "has return type",
      "Option<Ordering>:1.20"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.20",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "std::io::ErrorKind::lt:1.20",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::lt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "std::io::ErrorKind::lt:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "std::io::ErrorKind::lt:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "std::io::ErrorKind::lt:1.20",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "std::io::ErrorKind::le:1.20",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::le:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "std::io::ErrorKind::le:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "std::io::ErrorKind::le:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "std::io::ErrorKind::le:1.20",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "std::io::ErrorKind::gt:1.20",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::gt:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "std::io::ErrorKind::gt:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "std::io::ErrorKind::gt:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "std::io::ErrorKind::gt:1.20",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "std::io::ErrorKind::ge:1.20",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::ge:1.20",
      "has argument",
      "self:1.20"
    ],
    [
      "std::io::ErrorKind::ge:1.20",
      "has argument",
      "other:1.20"
    ],
    [
      "std::io::ErrorKind::ge:1.20",
      "has return type",
      "bool:1.20"
    ],
    [
      "std::io::ErrorKind::ge:1.20",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialOrd:1.20"
    ],
    [
      "ErrorKind::fmt:undefined",
      "changes return type to",
      "std::fmt::Result:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Copy:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds usage with",
      "io::Error:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "partial_cmp:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "lt:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "le:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "gt:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "ge:1.20"
    ],
    [
      "ErrorKind::InvalidData:undefined",
      "removes description",
      "Data not valid for the operation were encountered.:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "updates description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it.:1.20"
    ],
    [
      "InvalidData:undefined",
      "updates description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8.:1.20"
    ],
    [
      "WriteZero:undefined",
      "updates description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written.:1.20"
    ],
    [
      "UnexpectedEof:undefined",
      "updates description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read.:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "fmt:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "clone:1.20"
    ],
    [
      "ErrorKind::InvalidData:undefined",
      "updates description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8.:1.20"
    ],
    [
      "ErrorKind::WriteZero:undefined",
      "updates description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written.:1.20"
    ],
    [
      "ErrorKind::UnexpectedEof:undefined",
      "updates description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read.:1.20"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Hash:1.20"
    ],
    [
      "std::io::ErrorKind:1.40",
      "is a",
      "enum"
    ],
    [
      "std::io::ErrorKind:1.40",
      "has alias",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.40",
      "stable since",
      "1.0.0"
    ],
    [
      "std::io::ErrorKind:1.40",
      "has description",
      "A list specifying general categories of I/O error."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "NotFound:1.40"
    ],
    [
      "NotFound:1.40",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "PermissionDenied:1.40"
    ],
    [
      "PermissionDenied:1.40",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "ConnectionRefused:1.40"
    ],
    [
      "ConnectionRefused:1.40",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "ConnectionReset:1.40"
    ],
    [
      "ConnectionReset:1.40",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "ConnectionAborted:1.40"
    ],
    [
      "ConnectionAborted:1.40",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "NotConnected:1.40"
    ],
    [
      "NotConnected:1.40",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "AddrInUse:1.40"
    ],
    [
      "AddrInUse:1.40",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "AddrNotAvailable:1.40"
    ],
    [
      "AddrNotAvailable:1.40",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "BrokenPipe:1.40"
    ],
    [
      "BrokenPipe:1.40",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "AlreadyExists:1.40"
    ],
    [
      "AlreadyExists:1.40",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "WouldBlock:1.40"
    ],
    [
      "WouldBlock:1.40",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "InvalidInput:1.40"
    ],
    [
      "InvalidInput:1.40",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "InvalidData:1.40"
    ],
    [
      "InvalidData:1.40",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."
    ],
    [
      "InvalidData:1.40",
      "stable since",
      "1.2.0"
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "TimedOut:1.40"
    ],
    [
      "TimedOut:1.40",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "WriteZero:1.40"
    ],
    [
      "WriteZero:1.40",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "Interrupted:1.40"
    ],
    [
      "Interrupted:1.40",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "Other:1.40"
    ],
    [
      "Other:1.40",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "std::io::ErrorKind:1.40",
      "has variant",
      "UnexpectedEof:1.40"
    ],
    [
      "UnexpectedEof:1.40",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "UnexpectedEof:1.40",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Debug:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Clone:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Eq:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "PartialEq:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Copy:1.40"
    ],
    [
      "ErrorKind::fmt:1.40",
      "is a",
      "method"
    ],
    [
      "ErrorKind::fmt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "ErrorKind::fmt:1.40",
      "has argument",
      "__arg_0:1.40"
    ],
    [
      "ErrorKind::fmt:1.40",
      "has return type",
      "Result:1.40"
    ],
    [
      "ErrorKind::fmt:1.40",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "ErrorKind::clone:1.40",
      "is a",
      "method"
    ],
    [
      "ErrorKind::clone:1.40",
      "has return type",
      "std::io::ErrorKind:1.40"
    ],
    [
      "ErrorKind::clone:1.40",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "std::io::ErrorKind:1.40",
      "belongs to module",
      "std::io:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "has description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."
    ],
    [
      "InvalidData:1.40",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "WriteZero:1.40",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "UnexpectedEof:1.40",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "ErrorKind::NotFound:1.40",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "ErrorKind::PermissionDenied:1.40",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "ErrorKind::ConnectionRefused:1.40",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "ErrorKind::ConnectionReset:1.40",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "ErrorKind::ConnectionAborted:1.40",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "ErrorKind::NotConnected:1.40",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::AddrInUse:1.40",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.40",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "ErrorKind::BrokenPipe:1.40",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "ErrorKind::AlreadyExists:1.40",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "ErrorKind::WouldBlock:1.40",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "ErrorKind::InvalidInput:1.40",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "ErrorKind::InvalidData:1.40",
      "has description",
      "Data not valid for the operation were encountered."
    ],
    [
      "ErrorKind::InvalidData:1.40",
      "stable since",
      "1.2.0"
    ],
    [
      "ErrorKind::TimedOut:1.40",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "ErrorKind::WriteZero:1.40",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "ErrorKind::Interrupted:1.40",
      "has description",
      "This operation was interrupted."
    ],
    [
      "ErrorKind::Other:1.40",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "ErrorKind::UnexpectedEof:1.40",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "ErrorKind::UnexpectedEof:1.40",
      "stable since",
      "1.6.0"
    ],
    [
      "ErrorKind::fmt:1.40",
      "has return type",
      "std::fmt::Result:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "used with",
      "io::Error:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "PartialOrd:1.40"
    ],
    [
      "ErrorKind::partial_cmp:1.40",
      "is a",
      "method"
    ],
    [
      "ErrorKind::partial_cmp:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "ErrorKind::partial_cmp:1.40",
      "has argument",
      "__arg_0:1.40"
    ],
    [
      "ErrorKind::partial_cmp:1.40",
      "has return type",
      "Option<Ordering>:1.40"
    ],
    [
      "ErrorKind::partial_cmp:1.40",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "ErrorKind::lt:1.40",
      "is a",
      "method"
    ],
    [
      "ErrorKind::lt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "ErrorKind::lt:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "ErrorKind::lt:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "ErrorKind::lt:1.40",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "ErrorKind::le:1.40",
      "is a",
      "method"
    ],
    [
      "ErrorKind::le:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "ErrorKind::le:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "ErrorKind::le:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "ErrorKind::le:1.40",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "ErrorKind::gt:1.40",
      "is a",
      "method"
    ],
    [
      "ErrorKind::gt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "ErrorKind::gt:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "ErrorKind::gt:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "ErrorKind::gt:1.40",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "ErrorKind::ge:1.40",
      "is a",
      "method"
    ],
    [
      "ErrorKind::ge:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "ErrorKind::ge:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "ErrorKind::ge:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "ErrorKind::ge:1.40",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "ErrorKind::InvalidData:1.40",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "ErrorKind::WriteZero:1.40",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "ErrorKind::UnexpectedEof:1.40",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Hash:1.40"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.40",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.40",
      "has argument",
      "__arg_0:1.40"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.40",
      "has return type",
      "Option<Ordering>:1.40"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.40",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "std::io::ErrorKind::lt:1.40",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::lt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "std::io::ErrorKind::lt:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "std::io::ErrorKind::lt:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "std::io::ErrorKind::lt:1.40",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "std::io::ErrorKind::le:1.40",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::le:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "std::io::ErrorKind::le:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "std::io::ErrorKind::le:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "std::io::ErrorKind::le:1.40",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "std::io::ErrorKind::gt:1.40",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::gt:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "std::io::ErrorKind::gt:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "std::io::ErrorKind::gt:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "std::io::ErrorKind::gt:1.40",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "std::io::ErrorKind::ge:1.40",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::ge:1.40",
      "has argument",
      "self:1.40"
    ],
    [
      "std::io::ErrorKind::ge:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "std::io::ErrorKind::ge:1.40",
      "has return type",
      "bool:1.40"
    ],
    [
      "std::io::ErrorKind::ge:1.40",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Ord:1.40"
    ],
    [
      "ErrorKind::partial_cmp:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.40",
      "has argument",
      "other:1.40"
    ],
    [
      "ErrorKind::fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "std::io::ErrorKind::fmt:1.40",
      "has argument",
      "f:1.40"
    ],
    [
      "std::io::ErrorKind::fmt:1.40",
      "has return type",
      "std::fmt::Result:1.40"
    ],
    [
      "ErrorKind::lt:1.40",
      "has attribute",
      "#[must_use]:1.40"
    ],
    [
      "ErrorKind::le:1.40",
      "has attribute",
      "#[must_use]:1.40"
    ],
    [
      "ErrorKind::gt:1.40",
      "has attribute",
      "#[must_use]:1.40"
    ],
    [
      "ErrorKind::ge:1.40",
      "has attribute",
      "#[must_use]:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "From<ErrorKind>:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "PartialEq<ErrorKind>:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "PartialOrd<ErrorKind>:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "StructuralEq:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "StructuralPartialEq:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "RefUnwindSafe:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Unpin:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "UnwindSafe:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Send:1.40"
    ],
    [
      "std::io::ErrorKind:1.40",
      "implements",
      "Sync:1.40"
    ],
    [
      "std::io::Error:1.40",
      "implements",
      "From<ErrorKind>:1.40"
    ],
    [
      "std::io:1.40",
      "contains",
      "IoSlice:1.40"
    ],
    [
      "std::io:1.40",
      "contains",
      "IoSliceMut:1.40"
    ],
    [
      "IoSlice:1.40",
      "is a",
      "struct"
    ],
    [
      "IoSlice:1.40",
      "has description",
      "A buffer type used with `Write::write_vectored`."
    ],
    [
      "IoSliceMut:1.40",
      "is a",
      "struct"
    ],
    [
      "IoSliceMut:1.40",
      "has description",
      "A buffer type used with `Read::read_vectored`."
    ],
    [
      "std::io::ErrorKind:1.40",
      "belongs to module",
      "io:1.40"
    ],
    [
      "&'_ mut F:1.40",
      "implements",
      "Future:1.40"
    ],
    [
      "&'_ mut R:1.40",
      "implements",
      "Read:1.40"
    ],
    [
      "&'_ mut W:1.40",
      "implements",
      "Write:1.40"
    ],
    [
      "BorrowMut::borrow_mut:1.40",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "ToOwned::to_owned:1.40",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "Any::type_id:1.40",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "ToOwned::clone_into:1.40",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "From<ErrorKind>:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialEq<ErrorKind>:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialOrd<ErrorKind>:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "StructuralEq:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "StructuralPartialEq:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "RefUnwindSafe:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Unpin:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "UnwindSafe:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Send:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Sync:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialEq:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialOrd:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Eq:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "enum:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "io:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Hash:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Ord:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "renamed to",
      "std::io::ErrorKind:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "PartialEq:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "PartialOrd:1.40"
    ],
    [
      "std::io::Error:undefined",
      "adds feature",
      "From<ErrorKind>:1.40"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Clone:1.40"
    ],
    [
      "&'_ mut F:undefined",
      "adds feature",
      "Future:1.40"
    ],
    [
      "&'_ mut R:undefined",
      "adds feature",
      "Read:1.40"
    ],
    [
      "&'_ mut W:undefined",
      "adds feature",
      "Write:1.40"
    ],
    [
      "std::io:undefined",
      "adds struct",
      "IoSlice:1.40"
    ],
    [
      "std::io:undefined",
      "adds struct",
      "IoSliceMut:1.40"
    ],
    [
      "std::io::ErrorKind:1.30",
      "is a",
      "enum"
    ],
    [
      "std::io::ErrorKind:1.30",
      "has alias",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.30",
      "stable since",
      "1.0.0"
    ],
    [
      "std::io::ErrorKind:1.30",
      "has description",
      "A list specifying general categories of I/O error."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "NotFound:1.30"
    ],
    [
      "NotFound:1.30",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "PermissionDenied:1.30"
    ],
    [
      "PermissionDenied:1.30",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "ConnectionRefused:1.30"
    ],
    [
      "ConnectionRefused:1.30",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "ConnectionReset:1.30"
    ],
    [
      "ConnectionReset:1.30",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "ConnectionAborted:1.30"
    ],
    [
      "ConnectionAborted:1.30",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "NotConnected:1.30"
    ],
    [
      "NotConnected:1.30",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "AddrInUse:1.30"
    ],
    [
      "AddrInUse:1.30",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "AddrNotAvailable:1.30"
    ],
    [
      "AddrNotAvailable:1.30",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "BrokenPipe:1.30"
    ],
    [
      "BrokenPipe:1.30",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "AlreadyExists:1.30"
    ],
    [
      "AlreadyExists:1.30",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "WouldBlock:1.30"
    ],
    [
      "WouldBlock:1.30",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "InvalidInput:1.30"
    ],
    [
      "InvalidInput:1.30",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "InvalidData:1.30"
    ],
    [
      "InvalidData:1.30",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."
    ],
    [
      "InvalidData:1.30",
      "stable since",
      "1.2.0"
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "TimedOut:1.30"
    ],
    [
      "TimedOut:1.30",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "WriteZero:1.30"
    ],
    [
      "WriteZero:1.30",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "Interrupted:1.30"
    ],
    [
      "Interrupted:1.30",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "Other:1.30"
    ],
    [
      "Other:1.30",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "std::io::ErrorKind:1.30",
      "has variant",
      "UnexpectedEof:1.30"
    ],
    [
      "UnexpectedEof:1.30",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "UnexpectedEof:1.30",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.30",
      "implements",
      "Debug:1.30"
    ],
    [
      "std::io::ErrorKind:1.30",
      "implements",
      "Clone:1.30"
    ],
    [
      "std::io::ErrorKind:1.30",
      "implements",
      "Eq:1.30"
    ],
    [
      "std::io::ErrorKind:1.30",
      "implements",
      "PartialEq:1.30"
    ],
    [
      "std::io::ErrorKind:1.30",
      "implements",
      "Copy:1.30"
    ],
    [
      "ErrorKind::fmt:1.30",
      "is a",
      "method"
    ],
    [
      "ErrorKind::fmt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "ErrorKind::fmt:1.30",
      "has argument",
      "__arg_0:1.30"
    ],
    [
      "ErrorKind::fmt:1.30",
      "has return type",
      "Result:1.30"
    ],
    [
      "ErrorKind::fmt:1.30",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "ErrorKind::clone:1.30",
      "is a",
      "method"
    ],
    [
      "ErrorKind::clone:1.30",
      "has return type",
      "std::io::ErrorKind:1.30"
    ],
    [
      "ErrorKind::clone:1.30",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "std::io::ErrorKind:1.30",
      "belongs to module",
      "std::io:1.30"
    ],
    [
      "std::io::ErrorKind:1.30",
      "has description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."
    ],
    [
      "InvalidData:1.30",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "WriteZero:1.30",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "UnexpectedEof:1.30",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "ErrorKind::NotFound:1.30",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "ErrorKind::PermissionDenied:1.30",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "ErrorKind::ConnectionRefused:1.30",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "ErrorKind::ConnectionReset:1.30",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "ErrorKind::ConnectionAborted:1.30",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "ErrorKind::NotConnected:1.30",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::AddrInUse:1.30",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.30",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "ErrorKind::BrokenPipe:1.30",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "ErrorKind::AlreadyExists:1.30",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "ErrorKind::WouldBlock:1.30",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "ErrorKind::InvalidInput:1.30",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "ErrorKind::InvalidData:1.30",
      "has description",
      "Data not valid for the operation were encountered."
    ],
    [
      "ErrorKind::InvalidData:1.30",
      "stable since",
      "1.2.0"
    ],
    [
      "ErrorKind::TimedOut:1.30",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "ErrorKind::WriteZero:1.30",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "ErrorKind::Interrupted:1.30",
      "has description",
      "This operation was interrupted."
    ],
    [
      "ErrorKind::Other:1.30",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "ErrorKind::UnexpectedEof:1.30",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "ErrorKind::UnexpectedEof:1.30",
      "stable since",
      "1.6.0"
    ],
    [
      "ErrorKind::fmt:1.30",
      "has return type",
      "std::fmt::Result:1.30"
    ],
    [
      "std::io::ErrorKind:1.30",
      "used with",
      "io::Error:1.30"
    ],
    [
      "std::io::ErrorKind:1.30",
      "implements",
      "PartialOrd:1.30"
    ],
    [
      "ErrorKind::partial_cmp:1.30",
      "is a",
      "method"
    ],
    [
      "ErrorKind::partial_cmp:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "ErrorKind::partial_cmp:1.30",
      "has argument",
      "__arg_0:1.30"
    ],
    [
      "ErrorKind::partial_cmp:1.30",
      "has return type",
      "Option<Ordering>:1.30"
    ],
    [
      "ErrorKind::partial_cmp:1.30",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "ErrorKind::lt:1.30",
      "is a",
      "method"
    ],
    [
      "ErrorKind::lt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "ErrorKind::lt:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "ErrorKind::lt:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "ErrorKind::lt:1.30",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "ErrorKind::le:1.30",
      "is a",
      "method"
    ],
    [
      "ErrorKind::le:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "ErrorKind::le:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "ErrorKind::le:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "ErrorKind::le:1.30",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "ErrorKind::gt:1.30",
      "is a",
      "method"
    ],
    [
      "ErrorKind::gt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "ErrorKind::gt:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "ErrorKind::gt:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "ErrorKind::gt:1.30",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "ErrorKind::ge:1.30",
      "is a",
      "method"
    ],
    [
      "ErrorKind::ge:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "ErrorKind::ge:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "ErrorKind::ge:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "ErrorKind::ge:1.30",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "ErrorKind::InvalidData:1.30",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "ErrorKind::WriteZero:1.30",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "ErrorKind::UnexpectedEof:1.30",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "std::io::ErrorKind:1.30",
      "implements",
      "Hash:1.30"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.30",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.30",
      "has argument",
      "__arg_0:1.30"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.30",
      "has return type",
      "Option<Ordering>:1.30"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.30",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "std::io::ErrorKind::lt:1.30",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::lt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "std::io::ErrorKind::lt:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind::lt:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "std::io::ErrorKind::lt:1.30",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "std::io::ErrorKind::le:1.30",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::le:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "std::io::ErrorKind::le:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind::le:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "std::io::ErrorKind::le:1.30",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "std::io::ErrorKind::gt:1.30",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::gt:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "std::io::ErrorKind::gt:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind::gt:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "std::io::ErrorKind::gt:1.30",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "std::io::ErrorKind::ge:1.30",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::ge:1.30",
      "has argument",
      "self:1.30"
    ],
    [
      "std::io::ErrorKind::ge:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind::ge:1.30",
      "has return type",
      "bool:1.30"
    ],
    [
      "std::io::ErrorKind::ge:1.30",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "std::io::ErrorKind:1.30",
      "implements",
      "Ord:1.30"
    ],
    [
      "ErrorKind::partial_cmp:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.30",
      "has argument",
      "other:1.30"
    ],
    [
      "ErrorKind::fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "std::io::ErrorKind::fmt:1.30",
      "has argument",
      "f:1.30"
    ],
    [
      "std::io::ErrorKind::fmt:1.30",
      "has return type",
      "std::fmt::Result:1.30"
    ],
    [
      "ErrorKind::lt:1.30",
      "has attribute",
      "#[must_use]:1.30"
    ],
    [
      "ErrorKind::le:1.30",
      "has attribute",
      "#[must_use]:1.30"
    ],
    [
      "ErrorKind::gt:1.30",
      "has attribute",
      "#[must_use]:1.30"
    ],
    [
      "ErrorKind::ge:1.30",
      "has attribute",
      "#[must_use]:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Ord:1.30"
    ],
    [
      "ErrorKind::partial_cmp's argument __arg_0:undefined",
      "renames argument",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind::partial_cmp's argument __arg_0:undefined",
      "renames argument",
      "other:1.30"
    ],
    [
      "ErrorKind::fmt's argument __arg_0:undefined",
      "renames argument",
      "f:1.30"
    ],
    [
      "std::io::ErrorKind::fmt's argument __arg_0:undefined",
      "renames argument",
      "f:1.30"
    ],
    [
      "ErrorKind::fmt's return type Result:undefined",
      "updates return type",
      "std::fmt::Result:1.30"
    ],
    [
      "std::io::ErrorKind::fmt's return type Result:undefined",
      "updates return type",
      "std::fmt::Result:1.30"
    ],
    [
      "ErrorKind::fmt.__arg_0:undefined",
      "renamed to",
      "f:1.30"
    ],
    [
      "ErrorKind::lt.__arg_0:undefined",
      "renamed to",
      "other:1.30"
    ],
    [
      "ErrorKind::le.__arg_0:undefined",
      "renamed to",
      "other:1.30"
    ],
    [
      "ErrorKind::gt.__arg_0:undefined",
      "renamed to",
      "other:1.30"
    ],
    [
      "ErrorKind::ge.__arg_0:undefined",
      "renamed to",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Hash:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialOrd:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "updated description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it.:1.30"
    ],
    [
      "ErrorKind::lt:undefined",
      "adds attribute",
      "#[must_use]:1.30"
    ],
    [
      "ErrorKind::le:undefined",
      "adds attribute",
      "#[must_use]:1.30"
    ],
    [
      "ErrorKind::gt:undefined",
      "adds attribute",
      "#[must_use]:1.30"
    ],
    [
      "ErrorKind::ge:undefined",
      "adds attribute",
      "#[must_use]:1.30"
    ],
    [
      "ErrorKind::partial_cmp argument __arg_0:undefined",
      "renamed to",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind::partial_cmp argument __arg_0:undefined",
      "renamed to",
      "other:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "lt:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "le:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "gt:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds method",
      "ge:1.30"
    ],
    [
      "std::io::ErrorKind:undefined",
      "updates description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it.:1.30"
    ],
    [
      "std::io::ErrorKind:1.10",
      "is a",
      "enum"
    ],
    [
      "std::io::ErrorKind:1.10",
      "has alias",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.10",
      "stable since",
      "1.0.0"
    ],
    [
      "std::io::ErrorKind:1.10",
      "has description",
      "A list specifying general categories of I/O error."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "NotFound:1.10"
    ],
    [
      "NotFound:1.10",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "PermissionDenied:1.10"
    ],
    [
      "PermissionDenied:1.10",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "ConnectionRefused:1.10"
    ],
    [
      "ConnectionRefused:1.10",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "ConnectionReset:1.10"
    ],
    [
      "ConnectionReset:1.10",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "ConnectionAborted:1.10"
    ],
    [
      "ConnectionAborted:1.10",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "NotConnected:1.10"
    ],
    [
      "NotConnected:1.10",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "AddrInUse:1.10"
    ],
    [
      "AddrInUse:1.10",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "AddrNotAvailable:1.10"
    ],
    [
      "AddrNotAvailable:1.10",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "BrokenPipe:1.10"
    ],
    [
      "BrokenPipe:1.10",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "AlreadyExists:1.10"
    ],
    [
      "AlreadyExists:1.10",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "WouldBlock:1.10"
    ],
    [
      "WouldBlock:1.10",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "InvalidInput:1.10"
    ],
    [
      "InvalidInput:1.10",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "InvalidData:1.10"
    ],
    [
      "InvalidData:1.10",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."
    ],
    [
      "InvalidData:1.10",
      "stable since",
      "1.2.0"
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "TimedOut:1.10"
    ],
    [
      "TimedOut:1.10",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "WriteZero:1.10"
    ],
    [
      "WriteZero:1.10",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "Interrupted:1.10"
    ],
    [
      "Interrupted:1.10",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "Other:1.10"
    ],
    [
      "Other:1.10",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "std::io::ErrorKind:1.10",
      "has variant",
      "UnexpectedEof:1.10"
    ],
    [
      "UnexpectedEof:1.10",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "UnexpectedEof:1.10",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.10",
      "implements",
      "Debug:1.10"
    ],
    [
      "std::io::ErrorKind:1.10",
      "implements",
      "Clone:1.10"
    ],
    [
      "std::io::ErrorKind:1.10",
      "implements",
      "Eq:1.10"
    ],
    [
      "std::io::ErrorKind:1.10",
      "implements",
      "PartialEq:1.10"
    ],
    [
      "std::io::ErrorKind:1.10",
      "implements",
      "Copy:1.10"
    ],
    [
      "ErrorKind::fmt:1.10",
      "is a",
      "method"
    ],
    [
      "ErrorKind::fmt:1.10",
      "has argument",
      "self:1.10"
    ],
    [
      "ErrorKind::fmt:1.10",
      "has argument",
      "__arg_0:1.10"
    ],
    [
      "ErrorKind::fmt:1.10",
      "has return type",
      "Result:1.10"
    ],
    [
      "ErrorKind::fmt:1.10",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "ErrorKind::clone:1.10",
      "is a",
      "method"
    ],
    [
      "ErrorKind::clone:1.10",
      "has return type",
      "std::io::ErrorKind:1.10"
    ],
    [
      "ErrorKind::clone:1.10",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "std::io::ErrorKind:1.10",
      "belongs to module",
      "std::io:1.10"
    ],
    [
      "std::io::ErrorKind:1.10",
      "has description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."
    ],
    [
      "InvalidData:1.10",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "WriteZero:1.10",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "UnexpectedEof:1.10",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "ErrorKind::NotFound:1.10",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "ErrorKind::PermissionDenied:1.10",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "ErrorKind::ConnectionRefused:1.10",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "ErrorKind::ConnectionReset:1.10",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "ErrorKind::ConnectionAborted:1.10",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "ErrorKind::NotConnected:1.10",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::AddrInUse:1.10",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.10",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "ErrorKind::BrokenPipe:1.10",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "ErrorKind::AlreadyExists:1.10",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "ErrorKind::WouldBlock:1.10",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "ErrorKind::InvalidInput:1.10",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "ErrorKind::InvalidData:1.10",
      "has description",
      "Data not valid for the operation were encountered."
    ],
    [
      "ErrorKind::InvalidData:1.10",
      "stable since",
      "1.2.0"
    ],
    [
      "ErrorKind::TimedOut:1.10",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "ErrorKind::WriteZero:1.10",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "ErrorKind::Interrupted:1.10",
      "has description",
      "This operation was interrupted."
    ],
    [
      "ErrorKind::Other:1.10",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "ErrorKind::UnexpectedEof:1.10",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "ErrorKind::UnexpectedEof:1.10",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.50",
      "is a",
      "enum"
    ],
    [
      "std::io::ErrorKind:1.50",
      "has alias",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.50",
      "stable since",
      "1.0.0"
    ],
    [
      "std::io::ErrorKind:1.50",
      "has description",
      "A list specifying general categories of I/O error."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "NotFound:1.50"
    ],
    [
      "NotFound:1.50",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "PermissionDenied:1.50"
    ],
    [
      "PermissionDenied:1.50",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "ConnectionRefused:1.50"
    ],
    [
      "ConnectionRefused:1.50",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "ConnectionReset:1.50"
    ],
    [
      "ConnectionReset:1.50",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "ConnectionAborted:1.50"
    ],
    [
      "ConnectionAborted:1.50",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "NotConnected:1.50"
    ],
    [
      "NotConnected:1.50",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "AddrInUse:1.50"
    ],
    [
      "AddrInUse:1.50",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "AddrNotAvailable:1.50"
    ],
    [
      "AddrNotAvailable:1.50",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "BrokenPipe:1.50"
    ],
    [
      "BrokenPipe:1.50",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "AlreadyExists:1.50"
    ],
    [
      "AlreadyExists:1.50",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "WouldBlock:1.50"
    ],
    [
      "WouldBlock:1.50",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "InvalidInput:1.50"
    ],
    [
      "InvalidInput:1.50",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "InvalidData:1.50"
    ],
    [
      "InvalidData:1.50",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data."
    ],
    [
      "InvalidData:1.50",
      "stable since",
      "1.2.0"
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "TimedOut:1.50"
    ],
    [
      "TimedOut:1.50",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "WriteZero:1.50"
    ],
    [
      "WriteZero:1.50",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "Interrupted:1.50"
    ],
    [
      "Interrupted:1.50",
      "has description",
      "This operation was interrupted. Interrupted operations can typically be retried."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "Other:1.50"
    ],
    [
      "Other:1.50",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "std::io::ErrorKind:1.50",
      "has variant",
      "UnexpectedEof:1.50"
    ],
    [
      "UnexpectedEof:1.50",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "UnexpectedEof:1.50",
      "stable since",
      "1.6.0"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Debug:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Clone:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Eq:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "PartialEq:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Copy:1.50"
    ],
    [
      "ErrorKind::fmt:1.50",
      "is a",
      "method"
    ],
    [
      "ErrorKind::fmt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "ErrorKind::fmt:1.50",
      "has argument",
      "__arg_0:1.50"
    ],
    [
      "ErrorKind::fmt:1.50",
      "has return type",
      "Result:1.50"
    ],
    [
      "ErrorKind::fmt:1.50",
      "has description",
      "Formats the value using the given formatter."
    ],
    [
      "ErrorKind::clone:1.50",
      "is a",
      "method"
    ],
    [
      "ErrorKind::clone:1.50",
      "has return type",
      "std::io::ErrorKind:1.50"
    ],
    [
      "ErrorKind::clone:1.50",
      "has description",
      "Returns a copy of the value."
    ],
    [
      "std::io::ErrorKind:1.50",
      "belongs to module",
      "std::io:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "has description",
      "A list specifying general categories of I/O error. This list is intended to grow over time and it is not recommended to exhaustively match against it."
    ],
    [
      "InvalidData:1.50",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "WriteZero:1.50",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "UnexpectedEof:1.50",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "ErrorKind::NotFound:1.50",
      "has description",
      "An entity was not found, often a file."
    ],
    [
      "ErrorKind::PermissionDenied:1.50",
      "has description",
      "The operation lacked the necessary privileges to complete."
    ],
    [
      "ErrorKind::ConnectionRefused:1.50",
      "has description",
      "The connection was refused by the remote server."
    ],
    [
      "ErrorKind::ConnectionReset:1.50",
      "has description",
      "The connection was reset by the remote server."
    ],
    [
      "ErrorKind::ConnectionAborted:1.50",
      "has description",
      "The connection was aborted (terminated) by the remote server."
    ],
    [
      "ErrorKind::NotConnected:1.50",
      "has description",
      "The network operation failed because it was not connected yet."
    ],
    [
      "ErrorKind::AddrInUse:1.50",
      "has description",
      "A socket address could not be bound because the address is already in use elsewhere."
    ],
    [
      "ErrorKind::AddrNotAvailable:1.50",
      "has description",
      "A nonexistent interface was requested or the requested address was not local."
    ],
    [
      "ErrorKind::BrokenPipe:1.50",
      "has description",
      "The operation failed because a pipe was closed."
    ],
    [
      "ErrorKind::AlreadyExists:1.50",
      "has description",
      "An entity already exists, often a file."
    ],
    [
      "ErrorKind::WouldBlock:1.50",
      "has description",
      "The operation needs to block to complete, but the blocking operation was requested to not occur."
    ],
    [
      "ErrorKind::InvalidInput:1.50",
      "has description",
      "A parameter was incorrect."
    ],
    [
      "ErrorKind::InvalidData:1.50",
      "has description",
      "Data not valid for the operation were encountered."
    ],
    [
      "ErrorKind::InvalidData:1.50",
      "stable since",
      "1.2.0"
    ],
    [
      "ErrorKind::TimedOut:1.50",
      "has description",
      "The I/O operation's timeout expired, causing it to be canceled."
    ],
    [
      "ErrorKind::WriteZero:1.50",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0)."
    ],
    [
      "ErrorKind::Interrupted:1.50",
      "has description",
      "This operation was interrupted."
    ],
    [
      "ErrorKind::Other:1.50",
      "has description",
      "Any I/O error not part of this list."
    ],
    [
      "ErrorKind::UnexpectedEof:1.50",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely."
    ],
    [
      "ErrorKind::UnexpectedEof:1.50",
      "stable since",
      "1.6.0"
    ],
    [
      "ErrorKind::fmt:1.50",
      "has return type",
      "std::fmt::Result:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "used with",
      "io::Error:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "PartialOrd:1.50"
    ],
    [
      "ErrorKind::partial_cmp:1.50",
      "is a",
      "method"
    ],
    [
      "ErrorKind::partial_cmp:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "ErrorKind::partial_cmp:1.50",
      "has argument",
      "__arg_0:1.50"
    ],
    [
      "ErrorKind::partial_cmp:1.50",
      "has return type",
      "Option<Ordering>:1.50"
    ],
    [
      "ErrorKind::partial_cmp:1.50",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "ErrorKind::lt:1.50",
      "is a",
      "method"
    ],
    [
      "ErrorKind::lt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "ErrorKind::lt:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "ErrorKind::lt:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "ErrorKind::lt:1.50",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "ErrorKind::le:1.50",
      "is a",
      "method"
    ],
    [
      "ErrorKind::le:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "ErrorKind::le:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "ErrorKind::le:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "ErrorKind::le:1.50",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "ErrorKind::gt:1.50",
      "is a",
      "method"
    ],
    [
      "ErrorKind::gt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "ErrorKind::gt:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "ErrorKind::gt:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "ErrorKind::gt:1.50",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "ErrorKind::ge:1.50",
      "is a",
      "method"
    ],
    [
      "ErrorKind::ge:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "ErrorKind::ge:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "ErrorKind::ge:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "ErrorKind::ge:1.50",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "ErrorKind::InvalidData:1.50",
      "has description",
      "Data not valid for the operation were encountered. Unlike InvalidInput, this typically means that the operation parameters were valid, however the error was caused by malformed input data. For example, a function that reads a file into a string will error with InvalidData if the file's contents are not valid UTF-8."
    ],
    [
      "ErrorKind::WriteZero:1.50",
      "has description",
      "An error returned when an operation could not be completed because a call to write returned Ok(0). This typically means that an operation could only succeed if it wrote a particular number of bytes but only a smaller number of bytes could be written."
    ],
    [
      "ErrorKind::UnexpectedEof:1.50",
      "has description",
      "An error returned when an operation could not be completed because an \"end of file\" was reached prematurely. This typically means that an operation could only succeed if it read a particular number of bytes but only a smaller number of bytes could be read."
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Hash:1.50"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.50",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.50",
      "has argument",
      "__arg_0:1.50"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.50",
      "has return type",
      "Option<Ordering>:1.50"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.50",
      "has description",
      "This method returns an ordering between self and other values if one exists."
    ],
    [
      "std::io::ErrorKind::lt:1.50",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::lt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::io::ErrorKind::lt:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::io::ErrorKind::lt:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::io::ErrorKind::lt:1.50",
      "has description",
      "This method tests less than (for self and other) and is used by the < operator."
    ],
    [
      "std::io::ErrorKind::le:1.50",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::le:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::io::ErrorKind::le:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::io::ErrorKind::le:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::io::ErrorKind::le:1.50",
      "has description",
      "This method tests less than or equal to (for self and other) and is used by the <= operator."
    ],
    [
      "std::io::ErrorKind::gt:1.50",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::gt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::io::ErrorKind::gt:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::io::ErrorKind::gt:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::io::ErrorKind::gt:1.50",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator."
    ],
    [
      "std::io::ErrorKind::ge:1.50",
      "is a",
      "method"
    ],
    [
      "std::io::ErrorKind::ge:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "std::io::ErrorKind::ge:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::io::ErrorKind::ge:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "std::io::ErrorKind::ge:1.50",
      "has description",
      "This method tests greater than or equal to (for self and other) and is used by the >= operator."
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Ord:1.50"
    ],
    [
      "ErrorKind::partial_cmp:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::io::ErrorKind::partial_cmp:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "ErrorKind::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "std::io::ErrorKind::fmt:1.50",
      "has argument",
      "f:1.50"
    ],
    [
      "std::io::ErrorKind::fmt:1.50",
      "has return type",
      "std::fmt::Result:1.50"
    ],
    [
      "ErrorKind::lt:1.50",
      "has attribute",
      "#[must_use]:1.50"
    ],
    [
      "ErrorKind::le:1.50",
      "has attribute",
      "#[must_use]:1.50"
    ],
    [
      "ErrorKind::gt:1.50",
      "has attribute",
      "#[must_use]:1.50"
    ],
    [
      "ErrorKind::ge:1.50",
      "has attribute",
      "#[must_use]:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "From<ErrorKind>:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "PartialEq<ErrorKind>:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "PartialOrd<ErrorKind>:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "StructuralEq:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "StructuralPartialEq:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "RefUnwindSafe:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Unpin:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "UnwindSafe:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Send:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "implements",
      "Sync:1.50"
    ],
    [
      "std::io::Error:1.50",
      "implements",
      "From<ErrorKind>:1.50"
    ],
    [
      "std::io:1.50",
      "contains",
      "IoSlice:1.50"
    ],
    [
      "std::io:1.50",
      "contains",
      "IoSliceMut:1.50"
    ],
    [
      "IoSlice:1.50",
      "is a",
      "struct"
    ],
    [
      "IoSlice:1.50",
      "has description",
      "A buffer type used with `Write::write_vectored`."
    ],
    [
      "IoSliceMut:1.50",
      "is a",
      "struct"
    ],
    [
      "IoSliceMut:1.50",
      "has description",
      "A buffer type used with `Read::read_vectored`."
    ],
    [
      "std::io::ErrorKind::lt:1.50",
      "has attribute",
      "#[must_use]:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "belongs to module",
      "io:1.50"
    ],
    [
      "&'_ mut F:1.50",
      "implements",
      "Future:1.50"
    ],
    [
      "&'_ mut R:1.50",
      "implements",
      "Read:1.50"
    ],
    [
      "&'_ mut W:1.50",
      "implements",
      "Write:1.50"
    ],
    [
      "BorrowMut::borrow_mut:1.50",
      "has description",
      "Mutably borrows from an owned value."
    ],
    [
      "ToOwned::to_owned:1.50",
      "has description",
      "Creates owned data from borrowed data, usually by cloning."
    ],
    [
      "Any::type_id:1.50",
      "has description",
      "Gets the TypeId of self."
    ],
    [
      "ToOwned::clone_into:1.50",
      "has description",
      "Uses borrowed data to replace owned data, usually by cloning."
    ],
    [
      "PartialOrd::gt:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "PartialOrd::gt:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "PartialOrd::gt:1.50",
      "has attribute",
      "must_use:1.50"
    ],
    [
      "PartialOrd::gt:1.50",
      "has description",
      "This method tests greater than (for self and other) and is used by the > operator"
    ],
    [
      "PartialOrd::gt:1.50",
      "belongs to module",
      "cmp:1.50"
    ],
    [
      "&'_ mut I:1.50",
      "implements",
      "Iterator:1.50"
    ],
    [
      "Hash:1.50",
      "has return type",
      "&mut __H:1.50"
    ],
    [
      "Hash:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Hash:1.50",
      "has argument",
      "state:1.50"
    ],
    [
      "Hash:1.50",
      "stable since",
      "1.3.0"
    ],
    [
      "PartialEq:1.50",
      "has return type",
      "bool:1.50"
    ],
    [
      "PartialEq:1.50",
      "has argument",
      "other:1.50"
    ],
    [
      "std::io::ErrorKind:1.50",
      "has attribute",
      "unsafe:1.50"
    ],
    [
      "PartialOrd::gt:1.50",
      "has argument",
      "self:1.50"
    ],
    [
      "Any::into:1.50",
      "has description",
      "Performs the conversion."
    ],
    [
      "std::io::ErrorKind::gt:1.50",
      "has attribute",
      "#[must_use]:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "moved to",
      "std::io::ErrorKind:1.50"
    ],
    [
      "ErrorKind::fmt:__arg_0:undefined",
      "renamed to",
      "f:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "PartialOrd:1.50"
    ],
    [
      "&'_ mut F:undefined",
      "removes feature",
      "Future:1.50"
    ],
    [
      "&'_ mut I:undefined",
      "adds feature",
      "Iterator:1.50"
    ],
    [
      "Clone::clone_from:undefined",
      "removes argument",
      "source:1.50"
    ],
    [
      "Clone::clone_from:undefined",
      "removes description",
      "Performs copy-assignment from source:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Hash:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Ord:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialEq:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Eq:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Ord:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "PartialOrd:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Clone:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Clone:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "adds feature",
      "Copy:1.50"
    ],
    [
      "std::io::ErrorKind::partial_cmp's argument __arg_0:undefined",
      "renamed argument",
      "other:1.50"
    ],
    [
      "std::io::ErrorKind::lt's argument __arg_0:undefined",
      "renamed argument",
      "other:1.50"
    ],
    [
      "ErrorKind::fmt's return type Result:undefined",
      "updates return type",
      "std::fmt::Result:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "Hash:1.50"
    ],
    [
      "std::io::ErrorKind:undefined",
      "removes feature",
      "From<ErrorKind>:1.50"
    ],
    [
      "&'_ mut F:undefined",
      "removes implementation",
      "Future:1.50"
    ],
    [
      "std:1.30",
      "is a",
      "crate"
    ],
    [
      "std:1.30",
      "stable since",
      "1.0.0"
    ],
    [
      "std:1.30",
      "has source code",
      "src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.30",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."
    ],
    [
      "std:1.30",
      "contains",
      "std::any:1.30"
    ],
    [
      "std::any:1.30",
      "has description",
      "This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std:1.30",
      "contains",
      "std::ascii:1.30"
    ],
    [
      "std::ascii:1.30",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "std:1.30",
      "contains",
      "std::borrow:1.30"
    ],
    [
      "std::borrow:1.30",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "std:1.30",
      "contains",
      "std::boxed:1.30"
    ],
    [
      "std::boxed:1.30",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "std:1.30",
      "contains",
      "std::cell:1.30"
    ],
    [
      "std::cell:1.30",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "std:1.30",
      "contains",
      "std::char:1.30"
    ],
    [
      "std::char:1.30",
      "has description",
      "A character type."
    ],
    [
      "std:1.30",
      "contains",
      "std::collections:1.30"
    ],
    [
      "std::collections:1.30",
      "has description",
      "Collection types."
    ],
    [
      "std:1.30",
      "contains",
      "std::env:1.30"
    ],
    [
      "std::env:1.30",
      "has description",
      "Inspection and manipulation of the process's environment."
    ],
    [
      "std:1.30",
      "contains",
      "std::fs:1.30"
    ],
    [
      "std::fs:1.30",
      "has description",
      "Filesystem manipulation operations."
    ],
    [
      "std:1.30",
      "contains",
      "std::net:1.30"
    ],
    [
      "std::net:1.30",
      "has description",
      "Networking primitives for TCP/UDP communication."
    ],
    [
      "std:1.30",
      "contains",
      "std::thread:1.30"
    ],
    [
      "std::thread:1.30",
      "has description",
      "Native threads."
    ],
    [
      "array:1.30",
      "is a",
      "primitive type"
    ],
    [
      "array:1.30",
      "has description",
      "A fixed-size array, denoted [T; N]"
    ],
    [
      "std:1.30",
      "contains",
      "array:1.30"
    ],
    [
      "bool:1.30",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.30",
      "has description",
      "The boolean type."
    ],
    [
      "std:1.30",
      "contains",
      "bool:1.30"
    ],
    [
      "std::str:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::str:1.30",
      "has description",
      "String slices."
    ],
    [
      "std:1.30",
      "contains",
      "std::str:1.30"
    ],
    [
      "assert!:1.30",
      "is a",
      "macro"
    ],
    [
      "assert!:1.30",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "std:1.30",
      "contains",
      "assert!:1.30"
    ],
    [
      "format!:1.30",
      "is a",
      "macro"
    ],
    [
      "format!:1.30",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String."
    ],
    [
      "std:1.30",
      "contains",
      "format!:1.30"
    ],
    [
      "vec!:1.30",
      "is a",
      "macro"
    ],
    [
      "vec!:1.30",
      "has description",
      "Creates a Vec containing the arguments."
    ],
    [
      "std:1.30",
      "contains",
      "vec!:1.30"
    ],
    [
      "std::intrinsics:1.30",
      "has stability",
      "Unstable:1.30"
    ],
    [
      "std::intrinsics:1.30",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "std:1.30",
      "contains",
      "std::intrinsics:1.30"
    ],
    [
      "std::raw:1.30",
      "has stability",
      "Unstable:1.30"
    ],
    [
      "std::raw:1.30",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "std:1.30",
      "contains",
      "std::raw:1.30"
    ],
    [
      "std:1.30",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."
    ],
    [
      "std:1.30",
      "contains",
      "std::clone:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::cmp:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::convert:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::default:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::error:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::f32:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::f64:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::ffi:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::fmt:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::hash:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::i16:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::i32:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::i64:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::i8:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::io:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::isize:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::iter:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::marker:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::mem:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::num:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::ops:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::option:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::os:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::panic:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::path:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::prelude:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::process:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::ptr:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::rc:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::result:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::slice:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::string:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::sync:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::time:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::u16:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::u32:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::u64:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::u8:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::usize:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std::vec:1.30"
    ],
    [
      "array:1.30",
      "has description",
      "A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."
    ],
    [
      "std::char:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.30",
      "has description",
      "The 32-bit floating point type."
    ],
    [
      "std::f64:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::f64:1.30",
      "has description",
      "The 64-bit floating point type."
    ],
    [
      "std::i16:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::i16:1.30",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "std::i32:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::i32:1.30",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "std::i64:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::i64:1.30",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "std::i8:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::i8:1.30",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "std::isize:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::isize:1.30",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "pointer:1.30",
      "is a",
      "primitive type"
    ],
    [
      "pointer:1.30",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::slice:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::slice:1.30",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]."
    ],
    [
      "tuple:1.30",
      "is a",
      "primitive type"
    ],
    [
      "tuple:1.30",
      "has description",
      "A finite heterogeneous sequence, (T, U, ..)."
    ],
    [
      "std::u16:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::u16:1.30",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "std::u32:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::u32:1.30",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "std::u64:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::u64:1.30",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "std::u8:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::u8:1.30",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "std::usize:1.30",
      "is a",
      "primitive type"
    ],
    [
      "std::usize:1.30",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "std::any:1.30",
      "is a",
      "module"
    ],
    [
      "std::any:1.30",
      "has description",
      "This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std::ascii:1.30",
      "is a",
      "module"
    ],
    [
      "std::borrow:1.30",
      "is a",
      "module"
    ],
    [
      "std::boxed:1.30",
      "is a",
      "module"
    ],
    [
      "std::cell:1.30",
      "is a",
      "module"
    ],
    [
      "std::char:1.30",
      "is a",
      "module"
    ],
    [
      "std::clone:1.30",
      "is a",
      "module"
    ],
    [
      "std::clone:1.30",
      "has description",
      "The Clone trait for types that cannot be 'implicitly copied'."
    ],
    [
      "std::cmp:1.30",
      "is a",
      "module"
    ],
    [
      "std::cmp:1.30",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "std::collections:1.30",
      "is a",
      "module"
    ],
    [
      "std::convert:1.30",
      "is a",
      "module"
    ],
    [
      "std::convert:1.30",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "std::default:1.30",
      "is a",
      "module"
    ],
    [
      "std::default:1.30",
      "has description",
      "The Default trait for types which may have meaningful default values."
    ],
    [
      "std::env:1.30",
      "is a",
      "module"
    ],
    [
      "std::error:1.30",
      "is a",
      "module"
    ],
    [
      "std::error:1.30",
      "has description",
      "Traits for working with Errors."
    ],
    [
      "std::f32:1.30",
      "is a",
      "module"
    ],
    [
      "std::f64:1.30",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.30",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.30",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "std::fmt:1.30",
      "is a",
      "module"
    ],
    [
      "std::fmt:1.30",
      "has description",
      "Utilities for formatting and printing strings"
    ],
    [
      "std::fs:1.30",
      "is a",
      "module"
    ],
    [
      "std::hash:1.30",
      "is a",
      "module"
    ],
    [
      "std::hash:1.30",
      "has description",
      "Generic hashing support."
    ],
    [
      "std::i16:1.30",
      "is a",
      "module"
    ],
    [
      "std::i32:1.30",
      "is a",
      "module"
    ],
    [
      "std::i64:1.30",
      "is a",
      "module"
    ],
    [
      "std::i8:1.30",
      "is a",
      "module"
    ],
    [
      "std::io:1.30",
      "is a",
      "module"
    ],
    [
      "std::io:1.30",
      "has description",
      "Traits, helpers, and type definitions for core I/O functionality."
    ],
    [
      "std::isize:1.30",
      "is a",
      "module"
    ],
    [
      "std::iter:1.30",
      "is a",
      "module"
    ],
    [
      "std::iter:1.30",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::marker:1.30",
      "is a",
      "module"
    ],
    [
      "std::marker:1.30",
      "has description",
      "Primitive traits and marker types representing basic 'kinds' of types."
    ],
    [
      "std::mem:1.30",
      "is a",
      "module"
    ],
    [
      "std::mem:1.30",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "std::net:1.30",
      "is a",
      "module"
    ],
    [
      "std::num:1.30",
      "is a",
      "module"
    ],
    [
      "std::num:1.30",
      "has description",
      "Additional functionality for numerics."
    ],
    [
      "std::ops:1.30",
      "is a",
      "module"
    ],
    [
      "std::ops:1.30",
      "has description",
      "Overloadable operators."
    ],
    [
      "std::option:1.30",
      "is a",
      "module"
    ],
    [
      "std::option:1.30",
      "has description",
      "Optional values."
    ],
    [
      "std::os:1.30",
      "is a",
      "module"
    ],
    [
      "std::os:1.30",
      "has description",
      "OS-specific functionality."
    ],
    [
      "std::panic:1.30",
      "is a",
      "module"
    ],
    [
      "std::panic:1.30",
      "has description",
      "Panic support in the standard library"
    ],
    [
      "std::path:1.30",
      "is a",
      "module"
    ],
    [
      "std::path:1.30",
      "has description",
      "Cross-platform path manipulation."
    ],
    [
      "std::prelude:1.30",
      "is a",
      "module"
    ],
    [
      "std::prelude:1.30",
      "has description",
      "The Rust Prelude."
    ],
    [
      "std::process:1.30",
      "is a",
      "module"
    ],
    [
      "std::process:1.30",
      "has description",
      "Working with processes."
    ],
    [
      "std::ptr:1.30",
      "is a",
      "module"
    ],
    [
      "std::ptr:1.30",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::rc:1.30",
      "is a",
      "module"
    ],
    [
      "std::rc:1.30",
      "has description",
      "Thread-local reference-counted boxes (the Rc<T> type)."
    ],
    [
      "std::result:1.30",
      "is a",
      "module"
    ],
    [
      "std::result:1.30",
      "has description",
      "Error handling with the Result type."
    ],
    [
      "std::slice:1.30",
      "is a",
      "module"
    ],
    [
      "std::str:1.30",
      "is a",
      "module"
    ],
    [
      "std::str:1.30",
      "has description",
      "Unicode string slices."
    ],
    [
      "std::string:1.30",
      "is a",
      "module"
    ],
    [
      "std::string:1.30",
      "has description",
      "A UTF-8 encoded, growable string."
    ],
    [
      "std::sync:1.30",
      "is a",
      "module"
    ],
    [
      "std::sync:1.30",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::thread:1.30",
      "is a",
      "module"
    ],
    [
      "std::time:1.30",
      "is a",
      "module"
    ],
    [
      "std::time:1.30",
      "has description",
      "Temporal quantification."
    ],
    [
      "std::u16:1.30",
      "is a",
      "module"
    ],
    [
      "std::u32:1.30",
      "is a",
      "module"
    ],
    [
      "std::u64:1.30",
      "is a",
      "module"
    ],
    [
      "std::u8:1.30",
      "is a",
      "module"
    ],
    [
      "std::usize:1.30",
      "is a",
      "module"
    ],
    [
      "std::vec:1.30",
      "is a",
      "module"
    ],
    [
      "std::vec:1.30",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."
    ],
    [
      "std::intrinsics:1.30",
      "is a",
      "module"
    ],
    [
      "std::intrinsics:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "std::raw:1.30",
      "is a",
      "module"
    ],
    [
      "std::raw:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "assert_eq!:1.30",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.30",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "cfg!:1.30",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.30",
      "has description",
      "Boolean evaluation of configuration flags."
    ],
    [
      "column!:1.30",
      "is a",
      "macro"
    ],
    [
      "column!:1.30",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "concat!:1.30",
      "is a",
      "macro"
    ],
    [
      "concat!:1.30",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "concat_idents!:1.30",
      "is a",
      "macro"
    ],
    [
      "concat_idents!:1.30",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "debug_assert!:1.30",
      "is a",
      "macro"
    ],
    [
      "debug_assert!:1.30",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq!:1.30",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq!:1.30",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "env!:1.30",
      "is a",
      "macro"
    ],
    [
      "env!:1.30",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "file!:1.30",
      "is a",
      "macro"
    ],
    [
      "file!:1.30",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "format!:1.30",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."
    ],
    [
      "format_args!:1.30",
      "is a",
      "macro"
    ],
    [
      "format_args!:1.30",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "include!:1.30",
      "is a",
      "macro"
    ],
    [
      "include!:1.30",
      "has description",
      "Parse the current given file as an expression."
    ],
    [
      "include_bytes!:1.30",
      "is a",
      "macro"
    ],
    [
      "include_bytes!:1.30",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "include_str!:1.30",
      "is a",
      "macro"
    ],
    [
      "include_str!:1.30",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "line!:1.30",
      "is a",
      "macro"
    ],
    [
      "line!:1.30",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "module_path!:1.30",
      "is a",
      "macro"
    ],
    [
      "module_path!:1.30",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "option_env!:1.30",
      "is a",
      "macro"
    ],
    [
      "option_env!:1.30",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "panic!:1.30",
      "is a",
      "macro"
    ],
    [
      "panic!:1.30",
      "has description",
      "The entry point for panic of Rust threads."
    ],
    [
      "print!:1.30",
      "is a",
      "macro"
    ],
    [
      "print!:1.30",
      "has description",
      "Macro for printing to the standard output."
    ],
    [
      "println!:1.30",
      "is a",
      "macro"
    ],
    [
      "println!:1.30",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "stringify!:1.30",
      "is a",
      "macro"
    ],
    [
      "stringify!:1.30",
      "has description",
      "A macro which stringifies its argument."
    ],
    [
      "thread_local!:1.30",
      "is a",
      "macro"
    ],
    [
      "thread_local!:1.30",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey."
    ],
    [
      "scoped_thread_local!:1.30",
      "is a",
      "macro"
    ],
    [
      "scoped_thread_local!:1.30",
      "has attribute",
      "deprecated:1.30"
    ],
    [
      "scoped_thread_local!:1.30",
      "has description",
      "Declare a new scoped thread local storage key."
    ],
    [
      "select!:1.30",
      "is a",
      "macro"
    ],
    [
      "select!:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "select!:1.30",
      "has description",
      "A macro to select an event from a number of receivers."
    ],
    [
      "try!:1.30",
      "is a",
      "macro"
    ],
    [
      "try!:1.30",
      "has description",
      "Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."
    ],
    [
      "unimplemented!:1.30",
      "is a",
      "macro"
    ],
    [
      "unimplemented!:1.30",
      "has description",
      "A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."
    ],
    [
      "unreachable!:1.30",
      "is a",
      "macro"
    ],
    [
      "unreachable!:1.30",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "write!:1.30",
      "is a",
      "macro"
    ],
    [
      "write!:1.30",
      "has description",
      "Use the format! syntax to write data into a buffer."
    ],
    [
      "writeln!:1.30",
      "is a",
      "macro"
    ],
    [
      "writeln!:1.30",
      "has description",
      "Use the format! syntax to write data into a buffer, appending a newline."
    ],
    [
      "std:1.30",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.30",
      "contains",
      "alloc:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "core:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "libc:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "rustc_unicode:1.30"
    ],
    [
      "std::any:1.30",
      "has alias",
      "any"
    ],
    [
      "std::ascii:1.30",
      "has alias",
      "ascii"
    ],
    [
      "std::borrow:1.30",
      "has alias",
      "borrow"
    ],
    [
      "std::boxed:1.30",
      "has alias",
      "boxed"
    ],
    [
      "std::cell:1.30",
      "has alias",
      "cell"
    ],
    [
      "std::char:1.30",
      "has alias",
      "char"
    ],
    [
      "std::clone:1.30",
      "has alias",
      "clone"
    ],
    [
      "std::cmp:1.30",
      "has alias",
      "cmp"
    ],
    [
      "std::collections:1.30",
      "has alias",
      "collections"
    ],
    [
      "std::convert:1.30",
      "has alias",
      "convert"
    ],
    [
      "std::default:1.30",
      "has alias",
      "default"
    ],
    [
      "std::env:1.30",
      "has alias",
      "env"
    ],
    [
      "std::error:1.30",
      "has alias",
      "error"
    ],
    [
      "std::f32:1.30",
      "has alias",
      "f32"
    ],
    [
      "std::f64:1.30",
      "has alias",
      "f64"
    ],
    [
      "std::ffi:1.30",
      "has alias",
      "ffi"
    ],
    [
      "std::fmt:1.30",
      "has alias",
      "fmt"
    ],
    [
      "std::fs:1.30",
      "has alias",
      "fs"
    ],
    [
      "std::hash:1.30",
      "has alias",
      "hash"
    ],
    [
      "std::i16:1.30",
      "has alias",
      "i16"
    ],
    [
      "std::i32:1.30",
      "has alias",
      "i32"
    ],
    [
      "std::i64:1.30",
      "has alias",
      "i64"
    ],
    [
      "std::i8:1.30",
      "has alias",
      "i8"
    ],
    [
      "std::io:1.30",
      "has alias",
      "io"
    ],
    [
      "std::isize:1.30",
      "has alias",
      "isize"
    ],
    [
      "std::iter:1.30",
      "has alias",
      "iter"
    ],
    [
      "std::marker:1.30",
      "has alias",
      "marker"
    ],
    [
      "std::mem:1.30",
      "has alias",
      "mem"
    ],
    [
      "std::net:1.30",
      "has alias",
      "net"
    ],
    [
      "std::num:1.30",
      "has alias",
      "num"
    ],
    [
      "std::ops:1.30",
      "has alias",
      "ops"
    ],
    [
      "std::option:1.30",
      "has alias",
      "option"
    ],
    [
      "std::os:1.30",
      "has alias",
      "os"
    ],
    [
      "std::panic:1.30",
      "has alias",
      "panic"
    ],
    [
      "std::path:1.30",
      "has alias",
      "path"
    ],
    [
      "std::prelude:1.30",
      "has alias",
      "prelude"
    ],
    [
      "std::process:1.30",
      "has alias",
      "process"
    ],
    [
      "std::ptr:1.30",
      "has alias",
      "ptr"
    ],
    [
      "std::rc:1.30",
      "has alias",
      "rc"
    ],
    [
      "std::result:1.30",
      "has alias",
      "result"
    ],
    [
      "std::slice:1.30",
      "has alias",
      "slice"
    ],
    [
      "std::str:1.30",
      "has alias",
      "str"
    ],
    [
      "std::string:1.30",
      "has alias",
      "string"
    ],
    [
      "std::sync:1.30",
      "has alias",
      "sync"
    ],
    [
      "std::thread:1.30",
      "has alias",
      "thread"
    ],
    [
      "std::time:1.30",
      "has alias",
      "time"
    ],
    [
      "std::u16:1.30",
      "has alias",
      "u16"
    ],
    [
      "std::u32:1.30",
      "has alias",
      "u32"
    ],
    [
      "std::u64:1.30",
      "has alias",
      "u64"
    ],
    [
      "std::u8:1.30",
      "has alias",
      "u8"
    ],
    [
      "std::usize:1.30",
      "has alias",
      "usize"
    ],
    [
      "std::vec:1.30",
      "has alias",
      "vec"
    ],
    [
      "std::vec:1.30",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"
    ],
    [
      "std::intrinsics:1.30",
      "has alias",
      "intrinsics"
    ],
    [
      "std::raw:1.30",
      "has alias",
      "raw"
    ],
    [
      "scoped_thread_local!:1.30",
      "has stability",
      "Deprecated:1.30"
    ],
    [
      "scoped_thread_local!:1.30",
      "has stability",
      "Unstable:1.30"
    ],
    [
      ":1.30",
      null,
      "undefined:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "proc_macro:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "std_unicode:1.30"
    ],
    [
      "std:1.30",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-493"
    ],
    [
      "std::process:1.30",
      "has description",
      "A module for working with processes."
    ],
    [
      "i128:1.30",
      "is a",
      "primitive type"
    ],
    [
      "i128:1.30",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "i128:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "u128:1.30",
      "is a",
      "primitive type"
    ],
    [
      "u128:1.30",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "u128:1.30",
      "has attribute",
      "unstable:1.30"
    ],
    [
      "eprint!:1.30",
      "is a",
      "macro"
    ],
    [
      "eprint!:1.30",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln!:1.30",
      "is a",
      "macro"
    ],
    [
      "eprintln!:1.30",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "assert_ne!:1.30",
      "is a",
      "macro"
    ],
    [
      "assert_ne!:1.30",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "debug_assert_ne!:1.30",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne!:1.30",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "std::intrinsics:1.30",
      "has attribute",
      "Experimental:1.30"
    ],
    [
      "std::raw:1.30",
      "has attribute",
      "Experimental:1.30"
    ],
    [
      "proc_macro:1.30",
      "is a",
      "crate"
    ],
    [
      "proc_macro:1.30",
      "has description",
      "A support library for macro authors when defining new macros."
    ],
    [
      "std_unicode:1.30",
      "is a",
      "crate"
    ],
    [
      "std_unicode:1.30",
      "has description",
      "The Unicode Library"
    ],
    [
      "select!:1.30",
      "has attribute",
      "Experimental:1.30"
    ],
    [
      "try!:1.30",
      "has description",
      "Helper macro for reducing boilerplate for matching Result together with converting downstream errors."
    ],
    [
      "include!:1.30",
      "has description",
      "Parse a file as an expression or an item according to the context"
    ],
    [
      "println!:1.30",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."
    ],
    [
      "write!:1.30",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "writeln!:1.30",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "std::f32:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::f64:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::intrinsics:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "std::raw:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "println!:1.30",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."
    ],
    [
      "scoped_thread_local!:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "select!:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "write!:1.30",
      "has description",
      "Write formatted data into a buffer"
    ],
    [
      "std::rc:1.30",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std:1.30",
      "contains",
      "i128:1.30"
    ],
    [
      "i128:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "u128:1.30"
    ],
    [
      "u128:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "eprint!:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "eprintln!:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "compile_error!:1.30"
    ],
    [
      "compile_error!:1.30",
      "is a",
      "macro"
    ],
    [
      "compile_error!:1.30",
      "has description",
      "Unconditionally causes compilation to fail with the given error message."
    ],
    [
      "include!:1.30",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "writeln!:1.30",
      "has description",
      "Write formatted data into a buffer with appended newline."
    ],
    [
      "println!:1.30",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."
    ],
    [
      "test:1.30",
      "is a",
      "crate"
    ],
    [
      "test:1.30",
      "has description",
      "Support code for rustc's built in unit-test and micro-benchmarking framework."
    ],
    [
      "std:1.30",
      "contains",
      "test:1.30"
    ],
    [
      "unit:1.30",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.30",
      "has description",
      "The () type, sometimes called 'unit' or 'nil'."
    ],
    [
      "std:1.30",
      "contains",
      "unit:1.30"
    ],
    [
      "never:1.30",
      "is a",
      "primitive type"
    ],
    [
      "never:1.30",
      "has description",
      "The ! type, also called 'never'."
    ],
    [
      "never:1.30",
      "has attribute",
      "Experimental:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "never:1.30"
    ],
    [
      "fn:1.30",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.30",
      "has description",
      "Function pointers, like fn(usize) -> bool."
    ],
    [
      "std:1.30",
      "contains",
      "fn:1.30"
    ],
    [
      "reference:1.30",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.30",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.30",
      "contains",
      "reference:1.30"
    ],
    [
      "alloc:1.30",
      "is a",
      "module"
    ],
    [
      "alloc:1.30",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "arch:1.30",
      "is a",
      "module"
    ],
    [
      "arch:1.30",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.30",
      "contains",
      "arch:1.30"
    ],
    [
      "hint:1.30",
      "is a",
      "module"
    ],
    [
      "hint:1.30",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "std:1.30",
      "contains",
      "hint:1.30"
    ],
    [
      "is_x86_feature_detected!:1.30",
      "is a",
      "macro"
    ],
    [
      "is_x86_feature_detected!:1.30",
      "has description",
      "A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."
    ],
    [
      "std:1.30",
      "contains",
      "is_x86_feature_detected!:1.30"
    ],
    [
      "await!:1.30",
      "is a",
      "macro"
    ],
    [
      "await!:1.30",
      "has attribute",
      "Experimental:1.30"
    ],
    [
      "std:1.30",
      "contains",
      "await!:1.30"
    ],
    [
      "format!:1.30",
      "has description",
      "Creates a String using interpolation of runtime expressions."
    ],
    [
      "std:1.30",
      "has version",
      "1.30.1:1.30"
    ],
    [
      "std:1.30",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-540"
    ],
    [
      "fn:1.30",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "unit:1.30",
      "has description",
      "The `()` type, sometimes called 'unit' or 'nil'."
    ],
    [
      "never:1.30",
      "has description",
      "The `!` type, also called 'never'."
    ],
    [
      "std::ptr:1.30",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "std:1.30",
      "contains",
      "future:1.30"
    ],
    [
      "future:1.30",
      "is a",
      "module"
    ],
    [
      "future:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "future:1.30",
      "has description",
      "Asynchronous values."
    ],
    [
      "std:1.30",
      "contains",
      "pin:1.30"
    ],
    [
      "pin:1.30",
      "is a",
      "module"
    ],
    [
      "pin:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "pin:1.30",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "std:1.30",
      "contains",
      "task:1.30"
    ],
    [
      "task:1.30",
      "is a",
      "module"
    ],
    [
      "task:1.30",
      "has stability",
      "Experimental:1.30"
    ],
    [
      "task:1.30",
      "has description",
      "Types and Traits for working with asynchronous tasks"
    ],
    [
      "std:1.70",
      "is a",
      "crate"
    ],
    [
      "std:1.70",
      "stable since",
      "1.0.0"
    ],
    [
      "std:1.70",
      "has source code",
      "src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.70",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."
    ],
    [
      "std:1.70",
      "contains",
      "std::any:1.70"
    ],
    [
      "std::any:1.70",
      "has description",
      "This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std:1.70",
      "contains",
      "std::ascii:1.70"
    ],
    [
      "std::ascii:1.70",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "std:1.70",
      "contains",
      "std::borrow:1.70"
    ],
    [
      "std::borrow:1.70",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "std:1.70",
      "contains",
      "std::boxed:1.70"
    ],
    [
      "std::boxed:1.70",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "std:1.70",
      "contains",
      "std::cell:1.70"
    ],
    [
      "std::cell:1.70",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "std:1.70",
      "contains",
      "std::char:1.70"
    ],
    [
      "std::char:1.70",
      "has description",
      "A character type."
    ],
    [
      "std:1.70",
      "contains",
      "std::collections:1.70"
    ],
    [
      "std::collections:1.70",
      "has description",
      "Collection types."
    ],
    [
      "std:1.70",
      "contains",
      "std::env:1.70"
    ],
    [
      "std::env:1.70",
      "has description",
      "Inspection and manipulation of the process's environment."
    ],
    [
      "std:1.70",
      "contains",
      "std::fs:1.70"
    ],
    [
      "std::fs:1.70",
      "has description",
      "Filesystem manipulation operations."
    ],
    [
      "std:1.70",
      "contains",
      "std::net:1.70"
    ],
    [
      "std::net:1.70",
      "has description",
      "Networking primitives for TCP/UDP communication."
    ],
    [
      "std:1.70",
      "contains",
      "std::thread:1.70"
    ],
    [
      "std::thread:1.70",
      "has description",
      "Native threads."
    ],
    [
      "array:1.70",
      "is a",
      "primitive type"
    ],
    [
      "array:1.70",
      "has description",
      "A fixed-size array, denoted [T; N]"
    ],
    [
      "std:1.70",
      "contains",
      "array:1.70"
    ],
    [
      "bool:1.70",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.70",
      "has description",
      "The boolean type."
    ],
    [
      "std:1.70",
      "contains",
      "bool:1.70"
    ],
    [
      "std::str:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::str:1.70",
      "has description",
      "String slices."
    ],
    [
      "std:1.70",
      "contains",
      "std::str:1.70"
    ],
    [
      "assert!:1.70",
      "is a",
      "macro"
    ],
    [
      "assert!:1.70",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "std:1.70",
      "contains",
      "assert!:1.70"
    ],
    [
      "format!:1.70",
      "is a",
      "macro"
    ],
    [
      "format!:1.70",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String."
    ],
    [
      "std:1.70",
      "contains",
      "format!:1.70"
    ],
    [
      "vec!:1.70",
      "is a",
      "macro"
    ],
    [
      "vec!:1.70",
      "has description",
      "Creates a Vec containing the arguments."
    ],
    [
      "std:1.70",
      "contains",
      "vec!:1.70"
    ],
    [
      "std::intrinsics:1.70",
      "has stability",
      "Unstable:1.70"
    ],
    [
      "std::intrinsics:1.70",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "std:1.70",
      "contains",
      "std::intrinsics:1.70"
    ],
    [
      "std::raw:1.70",
      "has stability",
      "Unstable:1.70"
    ],
    [
      "std::raw:1.70",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "std:1.70",
      "contains",
      "std::raw:1.70"
    ],
    [
      "std:1.70",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."
    ],
    [
      "std:1.70",
      "contains",
      "std::clone:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::cmp:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::convert:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::default:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::error:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::f32:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::f64:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::ffi:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::fmt:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::hash:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::i16:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::i32:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::i64:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::i8:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::io:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::isize:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::iter:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::marker:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::mem:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::num:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::ops:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::option:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::os:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::panic:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::path:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::prelude:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::process:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::ptr:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::rc:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::result:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::slice:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::string:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::sync:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::time:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::u16:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::u32:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::u64:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::u8:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::usize:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std::vec:1.70"
    ],
    [
      "array:1.70",
      "has description",
      "A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."
    ],
    [
      "std::char:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.70",
      "has description",
      "The 32-bit floating point type."
    ],
    [
      "std::f64:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::f64:1.70",
      "has description",
      "The 64-bit floating point type."
    ],
    [
      "std::i16:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::i16:1.70",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "std::i32:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::i32:1.70",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "std::i64:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::i64:1.70",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "std::i8:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::i8:1.70",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "std::isize:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::isize:1.70",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "pointer:1.70",
      "is a",
      "primitive type"
    ],
    [
      "pointer:1.70",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::slice:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::slice:1.70",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]."
    ],
    [
      "tuple:1.70",
      "is a",
      "primitive type"
    ],
    [
      "tuple:1.70",
      "has description",
      "A finite heterogeneous sequence, (T, U, ..)."
    ],
    [
      "std::u16:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::u16:1.70",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "std::u32:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::u32:1.70",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "std::u64:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::u64:1.70",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "std::u8:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::u8:1.70",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "std::usize:1.70",
      "is a",
      "primitive type"
    ],
    [
      "std::usize:1.70",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "std::any:1.70",
      "is a",
      "module"
    ],
    [
      "std::any:1.70",
      "has description",
      "This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std::ascii:1.70",
      "is a",
      "module"
    ],
    [
      "std::borrow:1.70",
      "is a",
      "module"
    ],
    [
      "std::boxed:1.70",
      "is a",
      "module"
    ],
    [
      "std::cell:1.70",
      "is a",
      "module"
    ],
    [
      "std::char:1.70",
      "is a",
      "module"
    ],
    [
      "std::clone:1.70",
      "is a",
      "module"
    ],
    [
      "std::clone:1.70",
      "has description",
      "The Clone trait for types that cannot be 'implicitly copied'."
    ],
    [
      "std::cmp:1.70",
      "is a",
      "module"
    ],
    [
      "std::cmp:1.70",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "std::collections:1.70",
      "is a",
      "module"
    ],
    [
      "std::convert:1.70",
      "is a",
      "module"
    ],
    [
      "std::convert:1.70",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "std::default:1.70",
      "is a",
      "module"
    ],
    [
      "std::default:1.70",
      "has description",
      "The Default trait for types which may have meaningful default values."
    ],
    [
      "std::env:1.70",
      "is a",
      "module"
    ],
    [
      "std::error:1.70",
      "is a",
      "module"
    ],
    [
      "std::error:1.70",
      "has description",
      "Traits for working with Errors."
    ],
    [
      "std::f32:1.70",
      "is a",
      "module"
    ],
    [
      "std::f64:1.70",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.70",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.70",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "std::fmt:1.70",
      "is a",
      "module"
    ],
    [
      "std::fmt:1.70",
      "has description",
      "Utilities for formatting and printing strings"
    ],
    [
      "std::fs:1.70",
      "is a",
      "module"
    ],
    [
      "std::hash:1.70",
      "is a",
      "module"
    ],
    [
      "std::hash:1.70",
      "has description",
      "Generic hashing support."
    ],
    [
      "std::i16:1.70",
      "is a",
      "module"
    ],
    [
      "std::i32:1.70",
      "is a",
      "module"
    ],
    [
      "std::i64:1.70",
      "is a",
      "module"
    ],
    [
      "std::i8:1.70",
      "is a",
      "module"
    ],
    [
      "std::io:1.70",
      "is a",
      "module"
    ],
    [
      "std::io:1.70",
      "has description",
      "Traits, helpers, and type definitions for core I/O functionality."
    ],
    [
      "std::isize:1.70",
      "is a",
      "module"
    ],
    [
      "std::iter:1.70",
      "is a",
      "module"
    ],
    [
      "std::iter:1.70",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::marker:1.70",
      "is a",
      "module"
    ],
    [
      "std::marker:1.70",
      "has description",
      "Primitive traits and marker types representing basic 'kinds' of types."
    ],
    [
      "std::mem:1.70",
      "is a",
      "module"
    ],
    [
      "std::mem:1.70",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "std::net:1.70",
      "is a",
      "module"
    ],
    [
      "std::num:1.70",
      "is a",
      "module"
    ],
    [
      "std::num:1.70",
      "has description",
      "Additional functionality for numerics."
    ],
    [
      "std::ops:1.70",
      "is a",
      "module"
    ],
    [
      "std::ops:1.70",
      "has description",
      "Overloadable operators."
    ],
    [
      "std::option:1.70",
      "is a",
      "module"
    ],
    [
      "std::option:1.70",
      "has description",
      "Optional values."
    ],
    [
      "std::os:1.70",
      "is a",
      "module"
    ],
    [
      "std::os:1.70",
      "has description",
      "OS-specific functionality."
    ],
    [
      "std::panic:1.70",
      "is a",
      "module"
    ],
    [
      "std::panic:1.70",
      "has description",
      "Panic support in the standard library"
    ],
    [
      "std::path:1.70",
      "is a",
      "module"
    ],
    [
      "std::path:1.70",
      "has description",
      "Cross-platform path manipulation."
    ],
    [
      "std::prelude:1.70",
      "is a",
      "module"
    ],
    [
      "std::prelude:1.70",
      "has description",
      "The Rust Prelude."
    ],
    [
      "std::process:1.70",
      "is a",
      "module"
    ],
    [
      "std::process:1.70",
      "has description",
      "Working with processes."
    ],
    [
      "std::ptr:1.70",
      "is a",
      "module"
    ],
    [
      "std::ptr:1.70",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::rc:1.70",
      "is a",
      "module"
    ],
    [
      "std::rc:1.70",
      "has description",
      "Thread-local reference-counted boxes (the Rc<T> type)."
    ],
    [
      "std::result:1.70",
      "is a",
      "module"
    ],
    [
      "std::result:1.70",
      "has description",
      "Error handling with the Result type."
    ],
    [
      "std::slice:1.70",
      "is a",
      "module"
    ],
    [
      "std::str:1.70",
      "is a",
      "module"
    ],
    [
      "std::str:1.70",
      "has description",
      "Unicode string slices."
    ],
    [
      "std::string:1.70",
      "is a",
      "module"
    ],
    [
      "std::string:1.70",
      "has description",
      "A UTF-8 encoded, growable string."
    ],
    [
      "std::sync:1.70",
      "is a",
      "module"
    ],
    [
      "std::sync:1.70",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::thread:1.70",
      "is a",
      "module"
    ],
    [
      "std::time:1.70",
      "is a",
      "module"
    ],
    [
      "std::time:1.70",
      "has description",
      "Temporal quantification."
    ],
    [
      "std::u16:1.70",
      "is a",
      "module"
    ],
    [
      "std::u32:1.70",
      "is a",
      "module"
    ],
    [
      "std::u64:1.70",
      "is a",
      "module"
    ],
    [
      "std::u8:1.70",
      "is a",
      "module"
    ],
    [
      "std::usize:1.70",
      "is a",
      "module"
    ],
    [
      "std::vec:1.70",
      "is a",
      "module"
    ],
    [
      "std::vec:1.70",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."
    ],
    [
      "std::intrinsics:1.70",
      "is a",
      "module"
    ],
    [
      "std::intrinsics:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "std::raw:1.70",
      "is a",
      "module"
    ],
    [
      "std::raw:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "assert_eq!:1.70",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.70",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "cfg!:1.70",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.70",
      "has description",
      "Boolean evaluation of configuration flags."
    ],
    [
      "column!:1.70",
      "is a",
      "macro"
    ],
    [
      "column!:1.70",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "concat!:1.70",
      "is a",
      "macro"
    ],
    [
      "concat!:1.70",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "concat_idents!:1.70",
      "is a",
      "macro"
    ],
    [
      "concat_idents!:1.70",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "debug_assert!:1.70",
      "is a",
      "macro"
    ],
    [
      "debug_assert!:1.70",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq!:1.70",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq!:1.70",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "env!:1.70",
      "is a",
      "macro"
    ],
    [
      "env!:1.70",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "file!:1.70",
      "is a",
      "macro"
    ],
    [
      "file!:1.70",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "format!:1.70",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."
    ],
    [
      "format_args!:1.70",
      "is a",
      "macro"
    ],
    [
      "format_args!:1.70",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "include!:1.70",
      "is a",
      "macro"
    ],
    [
      "include!:1.70",
      "has description",
      "Parse the current given file as an expression."
    ],
    [
      "include_bytes!:1.70",
      "is a",
      "macro"
    ],
    [
      "include_bytes!:1.70",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "include_str!:1.70",
      "is a",
      "macro"
    ],
    [
      "include_str!:1.70",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "line!:1.70",
      "is a",
      "macro"
    ],
    [
      "line!:1.70",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "module_path!:1.70",
      "is a",
      "macro"
    ],
    [
      "module_path!:1.70",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "option_env!:1.70",
      "is a",
      "macro"
    ],
    [
      "option_env!:1.70",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "panic!:1.70",
      "is a",
      "macro"
    ],
    [
      "panic!:1.70",
      "has description",
      "The entry point for panic of Rust threads."
    ],
    [
      "print!:1.70",
      "is a",
      "macro"
    ],
    [
      "print!:1.70",
      "has description",
      "Macro for printing to the standard output."
    ],
    [
      "println!:1.70",
      "is a",
      "macro"
    ],
    [
      "println!:1.70",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "stringify!:1.70",
      "is a",
      "macro"
    ],
    [
      "stringify!:1.70",
      "has description",
      "A macro which stringifies its argument."
    ],
    [
      "thread_local!:1.70",
      "is a",
      "macro"
    ],
    [
      "thread_local!:1.70",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey."
    ],
    [
      "scoped_thread_local!:1.70",
      "is a",
      "macro"
    ],
    [
      "scoped_thread_local!:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "scoped_thread_local!:1.70",
      "has description",
      "Declare a new scoped thread local storage key."
    ],
    [
      "select!:1.70",
      "is a",
      "macro"
    ],
    [
      "select!:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "select!:1.70",
      "has description",
      "A macro to select an event from a number of receivers."
    ],
    [
      "try!:1.70",
      "is a",
      "macro"
    ],
    [
      "try!:1.70",
      "has description",
      "Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."
    ],
    [
      "unimplemented!:1.70",
      "is a",
      "macro"
    ],
    [
      "unimplemented!:1.70",
      "has description",
      "A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."
    ],
    [
      "unreachable!:1.70",
      "is a",
      "macro"
    ],
    [
      "unreachable!:1.70",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "write!:1.70",
      "is a",
      "macro"
    ],
    [
      "write!:1.70",
      "has description",
      "Use the format! syntax to write data into a buffer."
    ],
    [
      "writeln!:1.70",
      "is a",
      "macro"
    ],
    [
      "writeln!:1.70",
      "has description",
      "Use the format! syntax to write data into a buffer, appending a newline."
    ],
    [
      "std:1.70",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.70",
      "contains",
      "alloc:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "core:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "libc:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "rustc_unicode:1.70"
    ],
    [
      "std::any:1.70",
      "has alias",
      "any"
    ],
    [
      "std::ascii:1.70",
      "has alias",
      "ascii"
    ],
    [
      "std::borrow:1.70",
      "has alias",
      "borrow"
    ],
    [
      "std::boxed:1.70",
      "has alias",
      "boxed"
    ],
    [
      "std::cell:1.70",
      "has alias",
      "cell"
    ],
    [
      "std::char:1.70",
      "has alias",
      "char"
    ],
    [
      "std::clone:1.70",
      "has alias",
      "clone"
    ],
    [
      "std::cmp:1.70",
      "has alias",
      "cmp"
    ],
    [
      "std::collections:1.70",
      "has alias",
      "collections"
    ],
    [
      "std::convert:1.70",
      "has alias",
      "convert"
    ],
    [
      "std::default:1.70",
      "has alias",
      "default"
    ],
    [
      "std::env:1.70",
      "has alias",
      "env"
    ],
    [
      "std::error:1.70",
      "has alias",
      "error"
    ],
    [
      "std::f32:1.70",
      "has alias",
      "f32"
    ],
    [
      "std::f64:1.70",
      "has alias",
      "f64"
    ],
    [
      "std::ffi:1.70",
      "has alias",
      "ffi"
    ],
    [
      "std::fmt:1.70",
      "has alias",
      "fmt"
    ],
    [
      "std::fs:1.70",
      "has alias",
      "fs"
    ],
    [
      "std::hash:1.70",
      "has alias",
      "hash"
    ],
    [
      "std::i16:1.70",
      "has alias",
      "i16"
    ],
    [
      "std::i32:1.70",
      "has alias",
      "i32"
    ],
    [
      "std::i64:1.70",
      "has alias",
      "i64"
    ],
    [
      "std::i8:1.70",
      "has alias",
      "i8"
    ],
    [
      "std::io:1.70",
      "has alias",
      "io"
    ],
    [
      "std::isize:1.70",
      "has alias",
      "isize"
    ],
    [
      "std::iter:1.70",
      "has alias",
      "iter"
    ],
    [
      "std::marker:1.70",
      "has alias",
      "marker"
    ],
    [
      "std::mem:1.70",
      "has alias",
      "mem"
    ],
    [
      "std::net:1.70",
      "has alias",
      "net"
    ],
    [
      "std::num:1.70",
      "has alias",
      "num"
    ],
    [
      "std::ops:1.70",
      "has alias",
      "ops"
    ],
    [
      "std::option:1.70",
      "has alias",
      "option"
    ],
    [
      "std::os:1.70",
      "has alias",
      "os"
    ],
    [
      "std::panic:1.70",
      "has alias",
      "panic"
    ],
    [
      "std::path:1.70",
      "has alias",
      "path"
    ],
    [
      "std::prelude:1.70",
      "has alias",
      "prelude"
    ],
    [
      "std::process:1.70",
      "has alias",
      "process"
    ],
    [
      "std::ptr:1.70",
      "has alias",
      "ptr"
    ],
    [
      "std::rc:1.70",
      "has alias",
      "rc"
    ],
    [
      "std::result:1.70",
      "has alias",
      "result"
    ],
    [
      "std::slice:1.70",
      "has alias",
      "slice"
    ],
    [
      "std::str:1.70",
      "has alias",
      "str"
    ],
    [
      "std::string:1.70",
      "has alias",
      "string"
    ],
    [
      "std::sync:1.70",
      "has alias",
      "sync"
    ],
    [
      "std::thread:1.70",
      "has alias",
      "thread"
    ],
    [
      "std::time:1.70",
      "has alias",
      "time"
    ],
    [
      "std::u16:1.70",
      "has alias",
      "u16"
    ],
    [
      "std::u32:1.70",
      "has alias",
      "u32"
    ],
    [
      "std::u64:1.70",
      "has alias",
      "u64"
    ],
    [
      "std::u8:1.70",
      "has alias",
      "u8"
    ],
    [
      "std::usize:1.70",
      "has alias",
      "usize"
    ],
    [
      "std::vec:1.70",
      "has alias",
      "vec"
    ],
    [
      "std::vec:1.70",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"
    ],
    [
      "std::intrinsics:1.70",
      "has alias",
      "intrinsics"
    ],
    [
      "std::raw:1.70",
      "has alias",
      "raw"
    ],
    [
      "scoped_thread_local!:1.70",
      "has stability",
      "Deprecated:1.70"
    ],
    [
      "scoped_thread_local!:1.70",
      "has stability",
      "Unstable:1.70"
    ],
    [
      ":1.70",
      null,
      "undefined:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "proc_macro:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "std_unicode:1.70"
    ],
    [
      "std:1.70",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-493"
    ],
    [
      "std::process:1.70",
      "has description",
      "A module for working with processes."
    ],
    [
      "i128:1.70",
      "is a",
      "primitive type"
    ],
    [
      "i128:1.70",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "i128:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "u128:1.70",
      "is a",
      "primitive type"
    ],
    [
      "u128:1.70",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "u128:1.70",
      "has attribute",
      "unstable:1.70"
    ],
    [
      "eprint!:1.70",
      "is a",
      "macro"
    ],
    [
      "eprint!:1.70",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln!:1.70",
      "is a",
      "macro"
    ],
    [
      "eprintln!:1.70",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "assert_ne!:1.70",
      "is a",
      "macro"
    ],
    [
      "assert_ne!:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "debug_assert_ne!:1.70",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne!:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "std::intrinsics:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "std::raw:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "proc_macro:1.70",
      "is a",
      "crate"
    ],
    [
      "proc_macro:1.70",
      "has description",
      "A support library for macro authors when defining new macros."
    ],
    [
      "std_unicode:1.70",
      "is a",
      "crate"
    ],
    [
      "std_unicode:1.70",
      "has description",
      "The Unicode Library"
    ],
    [
      "select!:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "try!:1.70",
      "has description",
      "Helper macro for reducing boilerplate for matching Result together with converting downstream errors."
    ],
    [
      "include!:1.70",
      "has description",
      "Parse a file as an expression or an item according to the context"
    ],
    [
      "println!:1.70",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."
    ],
    [
      "write!:1.70",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "writeln!:1.70",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "std::f32:1.70",
      "has description",
      "This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::f64:1.70",
      "has description",
      "This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::intrinsics:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "std::raw:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "println!:1.70",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."
    ],
    [
      "scoped_thread_local!:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "select!:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "write!:1.70",
      "has description",
      "Write formatted data into a buffer"
    ],
    [
      "std::rc:1.70",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std:1.70",
      "contains",
      "i128:1.70"
    ],
    [
      "i128:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "u128:1.70"
    ],
    [
      "u128:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "eprint!:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "eprintln!:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "compile_error!:1.70"
    ],
    [
      "compile_error!:1.70",
      "is a",
      "macro"
    ],
    [
      "compile_error!:1.70",
      "has description",
      "Unconditionally causes compilation to fail with the given error message."
    ],
    [
      "include!:1.70",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "writeln!:1.70",
      "has description",
      "Write formatted data into a buffer with appended newline."
    ],
    [
      "println!:1.70",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."
    ],
    [
      "std:1.70",
      "stable since",
      "1.40.0"
    ],
    [
      "std:1.70",
      "contains",
      "future:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "pin:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "task:1.70"
    ],
    [
      "std::ptr:1.70",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "std::slice:1.70",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "future:1.70",
      "is a",
      "module"
    ],
    [
      "future:1.70",
      "has description",
      "Asynchronous values."
    ],
    [
      "pin:1.70",
      "is a",
      "module"
    ],
    [
      "pin:1.70",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "task:1.70",
      "is a",
      "module"
    ],
    [
      "task:1.70",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.70",
      "has version",
      "1.40.0:1.70"
    ],
    [
      "std:1.70",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#1-571"
    ],
    [
      "array:1.70",
      "is a",
      "module"
    ],
    [
      "array:1.70",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.70",
      "stable since",
      "1.50.0"
    ],
    [
      "std::f32:1.70",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "std::f64:1.70",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "std:1.70",
      "contains",
      "backtrace:1.70"
    ],
    [
      "backtrace:1.70",
      "is a",
      "module"
    ],
    [
      "backtrace:1.70",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "backtrace:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "format_args_nl:1.70",
      "is a",
      "macro"
    ],
    [
      "format_args_nl:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "format_args_nl:1.70",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "std:1.70",
      "has version",
      "1.50.0:1.70"
    ],
    [
      "backtrace:1.70",
      "has description",
      "Support for capturing a stack backtrace of an OS thread"
    ],
    [
      "backtrace:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "unit:1.70",
      "has description",
      "The () type, also called \"unit\"."
    ],
    [
      "format_args_nl!:1.70",
      "is a",
      "macro"
    ],
    [
      "std:1.70",
      "contains",
      "format_args_nl!:1.70"
    ],
    [
      "format_args_nl!:1.70",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "format_args_nl!:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "unit:1.70",
      "has description",
      "The () type, also called \"unit\""
    ],
    [
      "format_args_nl:1.70",
      "has description",
      "Same as format_args, but adds a newline in the end"
    ],
    [
      "format_args_nl:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "std:1.70",
      "stable since",
      "1.60.0"
    ],
    [
      "std:1.70",
      "contains",
      "async_iter:1.70"
    ],
    [
      "async_iter:1.70",
      "is a",
      "module"
    ],
    [
      "async_iter:1.70",
      "has description",
      "Composable asynchronous iteration."
    ],
    [
      "std:1.70",
      "contains",
      "assert_matches:1.70"
    ],
    [
      "assert_matches:1.70",
      "is a",
      "module"
    ],
    [
      "assert_matches:1.70",
      "has description",
      "Unstable module containing the unstable assert_matches macro."
    ],
    [
      "std:1.70",
      "contains",
      "simd:1.70"
    ],
    [
      "simd:1.70",
      "is a",
      "module"
    ],
    [
      "simd:1.70",
      "has description",
      "Portable SIMD module."
    ],
    [
      "std::ptr:1.70",
      "has description",
      "Manually manage memory through raw pointers."
    ],
    [
      "std:1.70",
      "contains",
      "hint:1.70"
    ],
    [
      "hint:1.70",
      "is a",
      "module"
    ],
    [
      "hint:1.70",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "std::f32:1.70",
      "has description",
      "Constants specific to the f32 single-precision floating point type."
    ],
    [
      "std::f64:1.70",
      "has description",
      "Constants specific to the f64 double-precision floating point type."
    ],
    [
      "std::i8:1.70",
      "has description",
      "Constants for the 8-bit signed integer type."
    ],
    [
      "std::i8:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::i16:1.70",
      "has description",
      "Constants for the 16-bit signed integer type."
    ],
    [
      "std::i16:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::i32:1.70",
      "has description",
      "Constants for the 32-bit signed integer type."
    ],
    [
      "std::i32:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::i64:1.70",
      "has description",
      "Constants for the 64-bit signed integer type."
    ],
    [
      "std::i64:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "i128:1.70",
      "has description",
      "Constants for the 128-bit signed integer type."
    ],
    [
      "i128:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::isize:1.70",
      "has description",
      "Constants for the pointer-sized signed integer type."
    ],
    [
      "std::isize:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::u8:1.70",
      "has description",
      "Constants for the 8-bit unsigned integer type."
    ],
    [
      "std::u8:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::u16:1.70",
      "has description",
      "Constants for the 16-bit unsigned integer type."
    ],
    [
      "std::u16:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::u32:1.70",
      "has description",
      "Constants for the 32-bit unsigned integer type."
    ],
    [
      "std::u32:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::u64:1.70",
      "has description",
      "Constants for the 64-bit unsigned integer type."
    ],
    [
      "std::u64:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "u128:1.70",
      "has description",
      "Constants for the 128-bit unsigned integer type."
    ],
    [
      "u128:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std::usize:1.70",
      "has description",
      "Constants for the pointer-sized unsigned integer type."
    ],
    [
      "std::usize:1.70",
      "has attribute",
      "deprecated:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "concat_bytes!:1.70"
    ],
    [
      "concat_bytes!:1.70",
      "is a",
      "macro"
    ],
    [
      "concat_bytes!:1.70",
      "has description",
      "Concatenates literals into a byte slice."
    ],
    [
      "std:1.70",
      "has version",
      "1.60.0:1.70"
    ],
    [
      "format_args_nl!:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "arch:1.70"
    ],
    [
      "arch:1.70",
      "is a",
      "module"
    ],
    [
      "arch:1.70",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.70",
      "contains",
      "concat_bytes:1.70"
    ],
    [
      "concat_bytes:1.70",
      "is a",
      "macro"
    ],
    [
      "concat_bytes:1.70",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "std:1.70",
      "contains",
      "const_format_args:1.70"
    ],
    [
      "const_format_args:1.70",
      "is a",
      "macro"
    ],
    [
      "std::f32:1.70",
      "has description",
      "Constants specific to the implementation of the f32 floating point type."
    ],
    [
      "std::f64:1.70",
      "has description",
      "Constants specific to the implementation of the f64 floating point type."
    ],
    [
      "std:1.70",
      "has version",
      "1.70.0:1.70"
    ],
    [
      "std:1.70",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#1-686"
    ],
    [
      "std:1.70",
      "stable since",
      "1.70.0"
    ],
    [
      "never:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "never:1.70",
      "is a",
      "primitive type"
    ],
    [
      "never:1.70",
      "has description",
      "The ! type, also called 'never'."
    ],
    [
      "async_iter:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "simd:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "test:1.70",
      "is a",
      "crate"
    ],
    [
      "test:1.70",
      "has description",
      "Support code for rustc's built in unit-test and micro-benchmarking framework."
    ],
    [
      "std:1.70",
      "contains",
      "test:1.70"
    ],
    [
      "unit:1.70",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.70",
      "has description",
      "The () type, sometimes called 'unit' or 'nil'."
    ],
    [
      "std:1.70",
      "contains",
      "unit:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "never:1.70"
    ],
    [
      "fn:1.70",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.70",
      "has description",
      "Function pointers, like fn(usize) -> bool."
    ],
    [
      "std:1.70",
      "contains",
      "fn:1.70"
    ],
    [
      "reference:1.70",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.70",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.70",
      "contains",
      "reference:1.70"
    ],
    [
      "alloc:1.70",
      "is a",
      "module"
    ],
    [
      "alloc:1.70",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "hint:1.70",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "is_x86_feature_detected!:1.70",
      "is a",
      "macro"
    ],
    [
      "is_x86_feature_detected!:1.70",
      "has description",
      "A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."
    ],
    [
      "std:1.70",
      "contains",
      "is_x86_feature_detected!:1.70"
    ],
    [
      "await!:1.70",
      "is a",
      "macro"
    ],
    [
      "await!:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "await!:1.70"
    ],
    [
      "format!:1.70",
      "has description",
      "Creates a String using interpolation of runtime expressions."
    ],
    [
      "std:1.70",
      "has version",
      "1.30.1:1.70"
    ],
    [
      "std:1.70",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-540"
    ],
    [
      "fn:1.70",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "unit:1.70",
      "has description",
      "The `()` type, sometimes called 'unit' or 'nil'."
    ],
    [
      "never:1.70",
      "has description",
      "The `!` type, also called 'never'."
    ],
    [
      "future:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "pin:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "pin:1.70",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "task:1.70",
      "has stability",
      "Experimental:1.70"
    ],
    [
      "task:1.70",
      "has description",
      "Types and Traits for working with asynchronous tasks"
    ],
    [
      "backtrace:1.70",
      "has description",
      "Support for capturing OS thread backtraces"
    ],
    [
      "std::intrinsics:1.70",
      "has description",
      "Compiler intrinsics module"
    ],
    [
      "dbg:1.70",
      "is a",
      "macro"
    ],
    [
      "dbg:1.70",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "debug_assert:1.70",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq:1.70",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "debug_assert_ne:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "global_asm:1.70",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "std:1.70",
      "contains",
      "super:1.70"
    ],
    [
      "super:1.70",
      "has description",
      "The parent of the current module"
    ],
    [
      "std:1.70",
      "contains",
      "trait:1.70"
    ],
    [
      "trait:1.70",
      "has description",
      "A common interface for a class of types."
    ],
    [
      "std:1.70",
      "contains",
      "true:1.70"
    ],
    [
      "true:1.70",
      "has description",
      "A value of type bool representing logical true."
    ],
    [
      "std:1.70",
      "contains",
      "type:1.70"
    ],
    [
      "type:1.70",
      "has description",
      "Define an alias for an existing type."
    ],
    [
      "std:1.70",
      "contains",
      "union:1.70"
    ],
    [
      "union:1.70",
      "has description",
      "The Rust equivalent of a C-style union"
    ],
    [
      "std:1.70",
      "contains",
      "unsafe:1.70"
    ],
    [
      "unsafe:1.70",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system."
    ],
    [
      "std:1.70",
      "contains",
      "use:1.70"
    ],
    [
      "use:1.70",
      "has description",
      "Import or rename items from other crates or modules."
    ],
    [
      "std:1.70",
      "contains",
      "where:1.70"
    ],
    [
      "where:1.70",
      "has description",
      "Add constraints that must be upheld to use an item."
    ],
    [
      "std:1.70",
      "contains",
      "while:1.70"
    ],
    [
      "while:1.70",
      "has description",
      "Loop while a condition is upheld."
    ],
    [
      "std::intrinsics:1.70",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "std:1.70",
      "contains",
      "async:1.70"
    ],
    [
      "async:1.70",
      "is a",
      "keyword"
    ],
    [
      "async:1.70",
      "has description",
      "Return a Future instead of blocking the current thread."
    ],
    [
      "std:1.70",
      "contains",
      "await:1.70"
    ],
    [
      "await:1.70",
      "is a",
      "keyword"
    ],
    [
      "await:1.70",
      "has description",
      "Suspend execution until the result of a Future is ready."
    ],
    [
      "super:1.70",
      "is a",
      "keyword"
    ],
    [
      "super:1.70",
      "has description",
      "The parent of the current module."
    ],
    [
      "trait:1.70",
      "is a",
      "keyword"
    ],
    [
      "true:1.70",
      "is a",
      "keyword"
    ],
    [
      "type:1.70",
      "is a",
      "keyword"
    ],
    [
      "union:1.70",
      "is a",
      "keyword"
    ],
    [
      "union:1.70",
      "has description",
      "The Rust equivalent of a C-style union."
    ],
    [
      "unsafe:1.70",
      "is a",
      "keyword"
    ],
    [
      "use:1.70",
      "is a",
      "keyword"
    ],
    [
      "where:1.70",
      "is a",
      "keyword"
    ],
    [
      "while:1.70",
      "is a",
      "keyword"
    ],
    [
      "backtrace:1.70",
      "has description",
      "Support for capturing stack backtraces"
    ],
    [
      "todo:1.70",
      "is a",
      "macro"
    ],
    [
      "todo:1.70",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "asm:1.70",
      "is a",
      "macro"
    ],
    [
      "asm:1.70",
      "has description",
      "Inline assembly."
    ],
    [
      "format_args_nl:1.70",
      "has description",
      "Same as format_args but adds a newline"
    ],
    [
      "assert:1.70",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "trait:1.70",
      "has description",
      "A common interface for a class of types"
    ],
    [
      "true:1.70",
      "has description",
      "A value of type bool representing logical true"
    ],
    [
      "type:1.70",
      "has description",
      "Define an alias for an existing type"
    ],
    [
      "unsafe:1.70",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system"
    ],
    [
      "use:1.70",
      "has description",
      "Import or rename items from other crates or modules"
    ],
    [
      "where:1.70",
      "has description",
      "Add constraints that must be upheld to use an item"
    ],
    [
      "while:1.70",
      "has description",
      "Loop while a condition is upheld"
    ],
    [
      "assert_eq:1.70",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "assert_ne:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "cfg:1.70",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "debug_assert_eq:1.70",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "debug_assert_ne:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "const:1.70",
      "has description",
      "Compile-time constants and compile-time evaluable functions."
    ],
    [
      "dyn:1.70",
      "has description",
      "dyn is a prefix of a trait object's type."
    ],
    [
      "static:1.70",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."
    ],
    [
      "option_env:1.70",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "assert:1.70",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.70",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.70",
      "is a",
      "macro"
    ],
    [
      "cfg:1.70",
      "is a",
      "macro"
    ],
    [
      "assert:1.70",
      "has description",
      "Asserts that a boolean expression is true at runtime"
    ],
    [
      "assert_eq:1.70",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "assert_ne:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "cfg:1.70",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time"
    ],
    [
      "dbg:1.70",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging"
    ],
    [
      "debug_assert:1.70",
      "has description",
      "Asserts that a boolean expression is true at runtime"
    ],
    [
      "std::env:1.70",
      "has description",
      "Inspects an environment variable at compile time"
    ],
    [
      "eprint:1.70",
      "has description",
      "Prints to the standard error"
    ],
    [
      "eprintln:1.70",
      "has description",
      "Prints to the standard error, with a newline"
    ],
    [
      "file:1.70",
      "has description",
      "Expands to the file name in which it was invoked"
    ],
    [
      "format:1.70",
      "has description",
      "Creates a String using interpolation of runtime expressions"
    ],
    [
      "static:1.70",
      "has description",
      "A static item is a value which is valid for the entire duration of your program"
    ],
    [
      "log_syntax:1.70",
      "is a",
      "macro"
    ],
    [
      "log_syntax:1.70",
      "has description",
      "Prints passed tokens into the standard output"
    ],
    [
      "SelfTy:1.70",
      "is a",
      "keyword"
    ],
    [
      "SelfTy:1.70",
      "has description",
      "The implementing type within a trait or impl block, or the current type within a type definition"
    ],
    [
      "const:1.70",
      "has description",
      "Compile-time constants, compile-time evaluable functions, and raw pointers"
    ],
    [
      "hint:1.70",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime"
    ],
    [
      "trait:1.70",
      "has description",
      "A common interface for a group of types."
    ],
    [
      "const:1.70",
      "has description",
      "Compile-time constants, compile-time evaluable functions, and raw pointers."
    ],
    [
      "log_syntax:1.70",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "SelfTy:1.70",
      "has description",
      "The implementing type within a trait or impl block, or the current type within a type definition."
    ],
    [
      "trace_macros:1.70",
      "has description",
      "Enables or disables tracing functionality used for debugging other macros."
    ],
    [
      "format_args!:1.70",
      "has description",
      "Constructs parameters for the other string-formatting macros."
    ],
    [
      "format_args_nl!:1.70",
      "has description",
      "Same as format_args but adds a newline"
    ],
    [
      "log_syntax!:1.70",
      "is a",
      "macro"
    ],
    [
      "log_syntax!:1.70",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "is_x86_feature_detected!:1.70",
      "has attribute",
      "x86 or x86-64:1.70"
    ],
    [
      "std::char:1.70",
      "has description",
      "Utilities for the char primitive type."
    ],
    [
      "std::cmp:1.70",
      "has description",
      "Utilities for comparing and ordering values."
    ],
    [
      "future:1.70",
      "has description",
      "Asynchronous basic functionality."
    ],
    [
      "std::slice:1.70",
      "has description",
      "Utilities for the slice primitive type."
    ],
    [
      "std::str:1.70",
      "has description",
      "Utilities for the str primitive type."
    ],
    [
      "std::i8:1.70",
      "has description",
      "Redundant constants module for the i8 primitive type."
    ],
    [
      "std::i16:1.70",
      "has description",
      "Redundant constants module for the i16 primitive type."
    ],
    [
      "std::i32:1.70",
      "has description",
      "Redundant constants module for the i32 primitive type."
    ],
    [
      "std::i64:1.70",
      "has description",
      "Redundant constants module for the i64 primitive type."
    ],
    [
      "i128:1.70",
      "has description",
      "Redundant constants module for the i128 primitive type."
    ],
    [
      "std::isize:1.70",
      "has description",
      "Redundant constants module for the isize primitive type."
    ],
    [
      "std::u8:1.70",
      "has description",
      "Redundant constants module for the u8 primitive type."
    ],
    [
      "std::u16:1.70",
      "has description",
      "Redundant constants module for the u16 primitive type."
    ],
    [
      "std::u32:1.70",
      "has description",
      "Redundant constants module for the u32 primitive type."
    ],
    [
      "std::u64:1.70",
      "has description",
      "Redundant constants module for the u64 primitive type."
    ],
    [
      "u128:1.70",
      "has description",
      "Redundant constants module for the u128 primitive type."
    ],
    [
      "std::usize:1.70",
      "has description",
      "Redundant constants module for the usize primitive type."
    ],
    [
      "std::i8:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::i16:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::i32:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::i64:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "i128:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::isize:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::u8:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::u16:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::u32:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::u64:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "u128:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::usize:1.70",
      "has attribute",
      "Deprecation planned:1.70"
    ],
    [
      "std::default:1.70",
      "has description",
      "The Default trait for types with a default value."
    ],
    [
      "std::error:1.70",
      "has description",
      "Interfaces for working with Errors."
    ],
    [
      "std::f32:1.70",
      "has description",
      "Constants for the f32 single-precision floating point type."
    ],
    [
      "std::f64:1.70",
      "has description",
      "Constants for the f64 double-precision floating point type."
    ],
    [
      "concat_bytes!:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "concat_bytes:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "concat_idents:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "const_format_args:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "log_syntax:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "trace_macros:1.70",
      "has attribute",
      "Experimental:1.70"
    ],
    [
      "std::cfg:1.70",
      "is a",
      "macro"
    ],
    [
      "std::cfg:1.70",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time"
    ],
    [
      "std::column:1.70",
      "is a",
      "macro"
    ],
    [
      "std::column:1.70",
      "has description",
      "Expands to the column number at which it was invoked"
    ],
    [
      "std::compile_error:1.70",
      "is a",
      "macro"
    ],
    [
      "std::compile_error:1.70",
      "has description",
      "Causes compilation to fail with the given error message when encountered"
    ],
    [
      "std::concat:1.70",
      "is a",
      "macro"
    ],
    [
      "std::concat:1.70",
      "has description",
      "Concatenates literals into a static string slice"
    ],
    [
      "std::dbg:1.70",
      "is a",
      "macro"
    ],
    [
      "std::dbg:1.70",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging"
    ],
    [
      "std::debug_assert:1.70",
      "is a",
      "macro"
    ],
    [
      "std::debug_assert:1.70",
      "has description",
      "Asserts that a boolean expression is <code>true</code> at runtime"
    ],
    [
      "std::debug_assert_eq:1.70",
      "is a",
      "macro"
    ],
    [
      "std::debug_assert_eq:1.70",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "std::debug_assert_ne:1.70",
      "is a",
      "macro"
    ],
    [
      "std::debug_assert_ne:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "std::env:1.70",
      "is a",
      "macro"
    ],
    [
      "std::eprint:1.70",
      "is a",
      "macro"
    ],
    [
      "std::eprint:1.70",
      "has description",
      "Prints to the standard error"
    ],
    [
      "std::eprintln:1.70",
      "is a",
      "macro"
    ],
    [
      "std::eprintln:1.70",
      "has description",
      "Prints to the standard error, with a newline"
    ],
    [
      "std::file:1.70",
      "is a",
      "macro"
    ],
    [
      "std::file:1.70",
      "has description",
      "Expands to the file name in which it was invoked"
    ],
    [
      "std::format:1.70",
      "is a",
      "macro"
    ],
    [
      "std::format:1.70",
      "has description",
      "Creates a <code>String</code> using interpolation of runtime expressions"
    ],
    [
      "std::format_args:1.70",
      "is a",
      "macro"
    ],
    [
      "std::format_args:1.70",
      "has description",
      "Constructs parameters for the other string-formatting macros"
    ],
    [
      "std::include:1.70",
      "is a",
      "macro"
    ],
    [
      "std::include:1.70",
      "has description",
      "Parses a file as an expression or an item according to the context"
    ],
    [
      "std::include_bytes:1.70",
      "is a",
      "macro"
    ],
    [
      "std::include_bytes:1.70",
      "has description",
      "Includes a file as a reference to a byte array"
    ],
    [
      "std::include_str:1.70",
      "is a",
      "macro"
    ],
    [
      "std::include_str:1.70",
      "has description",
      "Includes a UTF-8 encoded file as a string"
    ],
    [
      "std::is_x86_feature_detected!:1.70",
      "has attribute",
      "x86 or x86-64:1.70"
    ],
    [
      "std::line:1.70",
      "is a",
      "macro"
    ],
    [
      "std::line:1.70",
      "has description",
      "Expands to the line number on which it was invoked"
    ],
    [
      "std::matches:1.70",
      "is a",
      "macro"
    ],
    [
      "std::matches:1.70",
      "has description",
      "Returns whether the given expression matches any of the given patterns"
    ],
    [
      "std::module_path:1.70",
      "is a",
      "macro"
    ],
    [
      "std::module_path:1.70",
      "has description",
      "Expands to a string that represents the current module path"
    ],
    [
      "std::option_env:1.70",
      "is a",
      "macro"
    ],
    [
      "std::option_env:1.70",
      "has description",
      "Optionally inspects an environment variable at compile time"
    ],
    [
      "std::panic:1.70",
      "is a",
      "macro"
    ],
    [
      "std::panic:1.70",
      "has description",
      "Panics the current thread"
    ],
    [
      "std::print:1.70",
      "is a",
      "macro"
    ],
    [
      "std::print:1.70",
      "has description",
      "Prints to the standard output"
    ],
    [
      "std::println:1.70",
      "is a",
      "macro"
    ],
    [
      "std::println:1.70",
      "has description",
      "Prints to the standard output, with a newline"
    ],
    [
      "std::stringify:1.70",
      "is a",
      "macro"
    ],
    [
      "std::stringify:1.70",
      "has description",
      "Stringifies its arguments"
    ],
    [
      "std::thread_local:1.70",
      "is a",
      "macro"
    ],
    [
      "std::thread_local:1.70",
      "has description",
      "Declare a new thread local storage key of type <a href='thread/struct.LocalKey.html' title='struct std::thread::LocalKey'><code>std::thread::LocalKey</code></a>"
    ],
    [
      "std::todo:1.70",
      "is a",
      "macro"
    ],
    [
      "std::todo:1.70",
      "has description",
      "Indicates unfinished code"
    ],
    [
      "std::try:1.70",
      "is a",
      "macro"
    ],
    [
      "std::try:1.70",
      "has attribute",
      "Deprecated:1.70"
    ],
    [
      "std::unimplemented:1.70",
      "is a",
      "macro"
    ],
    [
      "std::unimplemented:1.70",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'"
    ],
    [
      "std::unreachable:1.70",
      "is a",
      "macro"
    ],
    [
      "std::unreachable:1.70",
      "has description",
      "Indicates unreachable code"
    ],
    [
      "std::vec:1.70",
      "is a",
      "macro"
    ],
    [
      "std::vec:1.70",
      "has description",
      "Creates a <a href='vec/struct.Vec.html' title='struct std::vec::Vec'><code>Vec</code></a> containing the arguments"
    ],
    [
      "std::write:1.70",
      "is a",
      "macro"
    ],
    [
      "std::write:1.70",
      "has description",
      "Writes formatted data into a buffer"
    ],
    [
      "std::writeln:1.70",
      "is a",
      "macro"
    ],
    [
      "std::writeln:1.70",
      "has description",
      "Write formatted data into a buffer, with a newline appended"
    ],
    [
      "std::try:1.70",
      "is a",
      "keyword"
    ],
    [
      "std::try:1.70",
      "has description",
      "Unwraps a result or propagates its error. (Deprecated)"
    ],
    [
      "column:1.70",
      "has description",
      "Expands to the column number at which it was invoked"
    ],
    [
      "compile_error:1.70",
      "has description",
      "Causes compilation to fail with the given error message when encountered"
    ],
    [
      "concat:1.70",
      "has description",
      "Concatenates literals into a static string slice"
    ],
    [
      "format_args:1.70",
      "has description",
      "Constructs parameters for the other string-formatting macros"
    ],
    [
      "include:1.70",
      "has description",
      "Parses a file as an expression or an item according to the context"
    ],
    [
      "include_bytes:1.70",
      "has description",
      "Includes a file as a reference to a byte array"
    ],
    [
      "include_str:1.70",
      "has description",
      "Includes a UTF-8 encoded file as a string"
    ],
    [
      "is_x86_feature_detected!:1.70",
      "has description",
      "A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms"
    ],
    [
      "line:1.70",
      "has description",
      "Expands to the line number on which it was invoked"
    ],
    [
      "matches:1.70",
      "has description",
      "Returns whether the given expression matches any of the given patterns"
    ],
    [
      "module_path:1.70",
      "has description",
      "Expands to a string that represents the current module path"
    ],
    [
      "option_env:1.70",
      "has description",
      "Optionally inspects an environment variable at compile time"
    ],
    [
      "print:1.70",
      "has description",
      "Prints to the standard output"
    ],
    [
      "println:1.70",
      "has description",
      "Prints to the standard output, with a newline"
    ],
    [
      "stringify:1.70",
      "has description",
      "Stringifies its arguments"
    ],
    [
      "thread_local:1.70",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey"
    ],
    [
      "todo:1.70",
      "has description",
      "Indicates unfinished code"
    ],
    [
      "unimplemented:1.70",
      "has description",
      "Indicates unimplemented code by panicking with a message of “not implemented”"
    ],
    [
      "unreachable:1.70",
      "has description",
      "Indicates unreachable code"
    ],
    [
      "std::vec:1.70",
      "has description",
      "Creates a Vec containing the arguments"
    ],
    [
      "write:1.70",
      "has description",
      "Writes formatted data into a buffer"
    ],
    [
      "writeln:1.70",
      "has description",
      "Write formatted data into a buffer, with a newline appended"
    ],
    [
      "std:1.20",
      "is a",
      "crate"
    ],
    [
      "std:1.20",
      "stable since",
      "1.0.0"
    ],
    [
      "std:1.20",
      "has source code",
      "src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.20",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."
    ],
    [
      "std:1.20",
      "contains",
      "std::any:1.20"
    ],
    [
      "std::any:1.20",
      "has description",
      "This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std:1.20",
      "contains",
      "std::ascii:1.20"
    ],
    [
      "std::ascii:1.20",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "std:1.20",
      "contains",
      "std::borrow:1.20"
    ],
    [
      "std::borrow:1.20",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "std:1.20",
      "contains",
      "std::boxed:1.20"
    ],
    [
      "std::boxed:1.20",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "std:1.20",
      "contains",
      "std::cell:1.20"
    ],
    [
      "std::cell:1.20",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "std:1.20",
      "contains",
      "std::char:1.20"
    ],
    [
      "std::char:1.20",
      "has description",
      "A character type."
    ],
    [
      "std:1.20",
      "contains",
      "std::collections:1.20"
    ],
    [
      "std::collections:1.20",
      "has description",
      "Collection types."
    ],
    [
      "std:1.20",
      "contains",
      "std::env:1.20"
    ],
    [
      "std::env:1.20",
      "has description",
      "Inspection and manipulation of the process's environment."
    ],
    [
      "std:1.20",
      "contains",
      "std::fs:1.20"
    ],
    [
      "std::fs:1.20",
      "has description",
      "Filesystem manipulation operations."
    ],
    [
      "std:1.20",
      "contains",
      "std::net:1.20"
    ],
    [
      "std::net:1.20",
      "has description",
      "Networking primitives for TCP/UDP communication."
    ],
    [
      "std:1.20",
      "contains",
      "std::thread:1.20"
    ],
    [
      "std::thread:1.20",
      "has description",
      "Native threads."
    ],
    [
      "array:1.20",
      "is a",
      "primitive type"
    ],
    [
      "array:1.20",
      "has description",
      "A fixed-size array, denoted [T; N]"
    ],
    [
      "std:1.20",
      "contains",
      "array:1.20"
    ],
    [
      "bool:1.20",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.20",
      "has description",
      "The boolean type."
    ],
    [
      "std:1.20",
      "contains",
      "bool:1.20"
    ],
    [
      "std::str:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::str:1.20",
      "has description",
      "String slices."
    ],
    [
      "std:1.20",
      "contains",
      "std::str:1.20"
    ],
    [
      "assert!:1.20",
      "is a",
      "macro"
    ],
    [
      "assert!:1.20",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "std:1.20",
      "contains",
      "assert!:1.20"
    ],
    [
      "format!:1.20",
      "is a",
      "macro"
    ],
    [
      "format!:1.20",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String."
    ],
    [
      "std:1.20",
      "contains",
      "format!:1.20"
    ],
    [
      "vec!:1.20",
      "is a",
      "macro"
    ],
    [
      "vec!:1.20",
      "has description",
      "Creates a Vec containing the arguments."
    ],
    [
      "std:1.20",
      "contains",
      "vec!:1.20"
    ],
    [
      "std::intrinsics:1.20",
      "has stability",
      "Unstable:1.20"
    ],
    [
      "std::intrinsics:1.20",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "std:1.20",
      "contains",
      "std::intrinsics:1.20"
    ],
    [
      "std::raw:1.20",
      "has stability",
      "Unstable:1.20"
    ],
    [
      "std::raw:1.20",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "std:1.20",
      "contains",
      "std::raw:1.20"
    ],
    [
      "std:1.20",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."
    ],
    [
      "std:1.20",
      "contains",
      "std::clone:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::cmp:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::convert:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::default:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::error:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::f32:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::f64:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::ffi:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::fmt:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::hash:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::i16:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::i32:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::i64:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::i8:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::io:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::isize:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::iter:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::marker:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::mem:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::num:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::ops:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::option:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::os:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::panic:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::path:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::prelude:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::process:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::ptr:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::rc:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::result:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::slice:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::string:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::sync:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::time:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::u16:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::u32:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::u64:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::u8:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::usize:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std::vec:1.20"
    ],
    [
      "array:1.20",
      "has description",
      "A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."
    ],
    [
      "std::char:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.20",
      "has description",
      "The 32-bit floating point type."
    ],
    [
      "std::f64:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::f64:1.20",
      "has description",
      "The 64-bit floating point type."
    ],
    [
      "std::i16:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::i16:1.20",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "std::i32:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::i32:1.20",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "std::i64:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::i64:1.20",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "std::i8:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::i8:1.20",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "std::isize:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::isize:1.20",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "pointer:1.20",
      "is a",
      "primitive type"
    ],
    [
      "pointer:1.20",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::slice:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::slice:1.20",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]."
    ],
    [
      "tuple:1.20",
      "is a",
      "primitive type"
    ],
    [
      "tuple:1.20",
      "has description",
      "A finite heterogeneous sequence, (T, U, ..)."
    ],
    [
      "std::u16:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::u16:1.20",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "std::u32:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::u32:1.20",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "std::u64:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::u64:1.20",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "std::u8:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::u8:1.20",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "std::usize:1.20",
      "is a",
      "primitive type"
    ],
    [
      "std::usize:1.20",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "std::any:1.20",
      "is a",
      "module"
    ],
    [
      "std::any:1.20",
      "has description",
      "This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std::ascii:1.20",
      "is a",
      "module"
    ],
    [
      "std::borrow:1.20",
      "is a",
      "module"
    ],
    [
      "std::boxed:1.20",
      "is a",
      "module"
    ],
    [
      "std::cell:1.20",
      "is a",
      "module"
    ],
    [
      "std::char:1.20",
      "is a",
      "module"
    ],
    [
      "std::clone:1.20",
      "is a",
      "module"
    ],
    [
      "std::clone:1.20",
      "has description",
      "The Clone trait for types that cannot be 'implicitly copied'."
    ],
    [
      "std::cmp:1.20",
      "is a",
      "module"
    ],
    [
      "std::cmp:1.20",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "std::collections:1.20",
      "is a",
      "module"
    ],
    [
      "std::convert:1.20",
      "is a",
      "module"
    ],
    [
      "std::convert:1.20",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "std::default:1.20",
      "is a",
      "module"
    ],
    [
      "std::default:1.20",
      "has description",
      "The Default trait for types which may have meaningful default values."
    ],
    [
      "std::env:1.20",
      "is a",
      "module"
    ],
    [
      "std::error:1.20",
      "is a",
      "module"
    ],
    [
      "std::error:1.20",
      "has description",
      "Traits for working with Errors."
    ],
    [
      "std::f32:1.20",
      "is a",
      "module"
    ],
    [
      "std::f64:1.20",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.20",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.20",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "std::fmt:1.20",
      "is a",
      "module"
    ],
    [
      "std::fmt:1.20",
      "has description",
      "Utilities for formatting and printing strings"
    ],
    [
      "std::fs:1.20",
      "is a",
      "module"
    ],
    [
      "std::hash:1.20",
      "is a",
      "module"
    ],
    [
      "std::hash:1.20",
      "has description",
      "Generic hashing support."
    ],
    [
      "std::i16:1.20",
      "is a",
      "module"
    ],
    [
      "std::i32:1.20",
      "is a",
      "module"
    ],
    [
      "std::i64:1.20",
      "is a",
      "module"
    ],
    [
      "std::i8:1.20",
      "is a",
      "module"
    ],
    [
      "std::io:1.20",
      "is a",
      "module"
    ],
    [
      "std::io:1.20",
      "has description",
      "Traits, helpers, and type definitions for core I/O functionality."
    ],
    [
      "std::isize:1.20",
      "is a",
      "module"
    ],
    [
      "std::iter:1.20",
      "is a",
      "module"
    ],
    [
      "std::iter:1.20",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::marker:1.20",
      "is a",
      "module"
    ],
    [
      "std::marker:1.20",
      "has description",
      "Primitive traits and marker types representing basic 'kinds' of types."
    ],
    [
      "std::mem:1.20",
      "is a",
      "module"
    ],
    [
      "std::mem:1.20",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "std::net:1.20",
      "is a",
      "module"
    ],
    [
      "std::num:1.20",
      "is a",
      "module"
    ],
    [
      "std::num:1.20",
      "has description",
      "Additional functionality for numerics."
    ],
    [
      "std::ops:1.20",
      "is a",
      "module"
    ],
    [
      "std::ops:1.20",
      "has description",
      "Overloadable operators."
    ],
    [
      "std::option:1.20",
      "is a",
      "module"
    ],
    [
      "std::option:1.20",
      "has description",
      "Optional values."
    ],
    [
      "std::os:1.20",
      "is a",
      "module"
    ],
    [
      "std::os:1.20",
      "has description",
      "OS-specific functionality."
    ],
    [
      "std::panic:1.20",
      "is a",
      "module"
    ],
    [
      "std::panic:1.20",
      "has description",
      "Panic support in the standard library"
    ],
    [
      "std::path:1.20",
      "is a",
      "module"
    ],
    [
      "std::path:1.20",
      "has description",
      "Cross-platform path manipulation."
    ],
    [
      "std::prelude:1.20",
      "is a",
      "module"
    ],
    [
      "std::prelude:1.20",
      "has description",
      "The Rust Prelude."
    ],
    [
      "std::process:1.20",
      "is a",
      "module"
    ],
    [
      "std::process:1.20",
      "has description",
      "Working with processes."
    ],
    [
      "std::ptr:1.20",
      "is a",
      "module"
    ],
    [
      "std::ptr:1.20",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::rc:1.20",
      "is a",
      "module"
    ],
    [
      "std::rc:1.20",
      "has description",
      "Thread-local reference-counted boxes (the Rc<T> type)."
    ],
    [
      "std::result:1.20",
      "is a",
      "module"
    ],
    [
      "std::result:1.20",
      "has description",
      "Error handling with the Result type."
    ],
    [
      "std::slice:1.20",
      "is a",
      "module"
    ],
    [
      "std::str:1.20",
      "is a",
      "module"
    ],
    [
      "std::str:1.20",
      "has description",
      "Unicode string slices."
    ],
    [
      "std::string:1.20",
      "is a",
      "module"
    ],
    [
      "std::string:1.20",
      "has description",
      "A UTF-8 encoded, growable string."
    ],
    [
      "std::sync:1.20",
      "is a",
      "module"
    ],
    [
      "std::sync:1.20",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::thread:1.20",
      "is a",
      "module"
    ],
    [
      "std::time:1.20",
      "is a",
      "module"
    ],
    [
      "std::time:1.20",
      "has description",
      "Temporal quantification."
    ],
    [
      "std::u16:1.20",
      "is a",
      "module"
    ],
    [
      "std::u32:1.20",
      "is a",
      "module"
    ],
    [
      "std::u64:1.20",
      "is a",
      "module"
    ],
    [
      "std::u8:1.20",
      "is a",
      "module"
    ],
    [
      "std::usize:1.20",
      "is a",
      "module"
    ],
    [
      "std::vec:1.20",
      "is a",
      "module"
    ],
    [
      "std::vec:1.20",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."
    ],
    [
      "std::intrinsics:1.20",
      "is a",
      "module"
    ],
    [
      "std::intrinsics:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "std::raw:1.20",
      "is a",
      "module"
    ],
    [
      "std::raw:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "assert_eq!:1.20",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.20",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "cfg!:1.20",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.20",
      "has description",
      "Boolean evaluation of configuration flags."
    ],
    [
      "column!:1.20",
      "is a",
      "macro"
    ],
    [
      "column!:1.20",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "concat!:1.20",
      "is a",
      "macro"
    ],
    [
      "concat!:1.20",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "concat_idents!:1.20",
      "is a",
      "macro"
    ],
    [
      "concat_idents!:1.20",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "debug_assert!:1.20",
      "is a",
      "macro"
    ],
    [
      "debug_assert!:1.20",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq!:1.20",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq!:1.20",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "env!:1.20",
      "is a",
      "macro"
    ],
    [
      "env!:1.20",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "file!:1.20",
      "is a",
      "macro"
    ],
    [
      "file!:1.20",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "format!:1.20",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."
    ],
    [
      "format_args!:1.20",
      "is a",
      "macro"
    ],
    [
      "format_args!:1.20",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "include!:1.20",
      "is a",
      "macro"
    ],
    [
      "include!:1.20",
      "has description",
      "Parse the current given file as an expression."
    ],
    [
      "include_bytes!:1.20",
      "is a",
      "macro"
    ],
    [
      "include_bytes!:1.20",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "include_str!:1.20",
      "is a",
      "macro"
    ],
    [
      "include_str!:1.20",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "line!:1.20",
      "is a",
      "macro"
    ],
    [
      "line!:1.20",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "module_path!:1.20",
      "is a",
      "macro"
    ],
    [
      "module_path!:1.20",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "option_env!:1.20",
      "is a",
      "macro"
    ],
    [
      "option_env!:1.20",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "panic!:1.20",
      "is a",
      "macro"
    ],
    [
      "panic!:1.20",
      "has description",
      "The entry point for panic of Rust threads."
    ],
    [
      "print!:1.20",
      "is a",
      "macro"
    ],
    [
      "print!:1.20",
      "has description",
      "Macro for printing to the standard output."
    ],
    [
      "println!:1.20",
      "is a",
      "macro"
    ],
    [
      "println!:1.20",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "stringify!:1.20",
      "is a",
      "macro"
    ],
    [
      "stringify!:1.20",
      "has description",
      "A macro which stringifies its argument."
    ],
    [
      "thread_local!:1.20",
      "is a",
      "macro"
    ],
    [
      "thread_local!:1.20",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey."
    ],
    [
      "scoped_thread_local!:1.20",
      "is a",
      "macro"
    ],
    [
      "scoped_thread_local!:1.20",
      "has attribute",
      "deprecated:1.20"
    ],
    [
      "scoped_thread_local!:1.20",
      "has description",
      "Declare a new scoped thread local storage key."
    ],
    [
      "select!:1.20",
      "is a",
      "macro"
    ],
    [
      "select!:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "select!:1.20",
      "has description",
      "A macro to select an event from a number of receivers."
    ],
    [
      "try!:1.20",
      "is a",
      "macro"
    ],
    [
      "try!:1.20",
      "has description",
      "Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."
    ],
    [
      "unimplemented!:1.20",
      "is a",
      "macro"
    ],
    [
      "unimplemented!:1.20",
      "has description",
      "A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."
    ],
    [
      "unreachable!:1.20",
      "is a",
      "macro"
    ],
    [
      "unreachable!:1.20",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "write!:1.20",
      "is a",
      "macro"
    ],
    [
      "write!:1.20",
      "has description",
      "Use the format! syntax to write data into a buffer."
    ],
    [
      "writeln!:1.20",
      "is a",
      "macro"
    ],
    [
      "writeln!:1.20",
      "has description",
      "Use the format! syntax to write data into a buffer, appending a newline."
    ],
    [
      "std:1.20",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.20",
      "contains",
      "alloc:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "core:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "libc:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "rustc_unicode:1.20"
    ],
    [
      "std::any:1.20",
      "has alias",
      "any"
    ],
    [
      "std::ascii:1.20",
      "has alias",
      "ascii"
    ],
    [
      "std::borrow:1.20",
      "has alias",
      "borrow"
    ],
    [
      "std::boxed:1.20",
      "has alias",
      "boxed"
    ],
    [
      "std::cell:1.20",
      "has alias",
      "cell"
    ],
    [
      "std::char:1.20",
      "has alias",
      "char"
    ],
    [
      "std::clone:1.20",
      "has alias",
      "clone"
    ],
    [
      "std::cmp:1.20",
      "has alias",
      "cmp"
    ],
    [
      "std::collections:1.20",
      "has alias",
      "collections"
    ],
    [
      "std::convert:1.20",
      "has alias",
      "convert"
    ],
    [
      "std::default:1.20",
      "has alias",
      "default"
    ],
    [
      "std::env:1.20",
      "has alias",
      "env"
    ],
    [
      "std::error:1.20",
      "has alias",
      "error"
    ],
    [
      "std::f32:1.20",
      "has alias",
      "f32"
    ],
    [
      "std::f64:1.20",
      "has alias",
      "f64"
    ],
    [
      "std::ffi:1.20",
      "has alias",
      "ffi"
    ],
    [
      "std::fmt:1.20",
      "has alias",
      "fmt"
    ],
    [
      "std::fs:1.20",
      "has alias",
      "fs"
    ],
    [
      "std::hash:1.20",
      "has alias",
      "hash"
    ],
    [
      "std::i16:1.20",
      "has alias",
      "i16"
    ],
    [
      "std::i32:1.20",
      "has alias",
      "i32"
    ],
    [
      "std::i64:1.20",
      "has alias",
      "i64"
    ],
    [
      "std::i8:1.20",
      "has alias",
      "i8"
    ],
    [
      "std::io:1.20",
      "has alias",
      "io"
    ],
    [
      "std::isize:1.20",
      "has alias",
      "isize"
    ],
    [
      "std::iter:1.20",
      "has alias",
      "iter"
    ],
    [
      "std::marker:1.20",
      "has alias",
      "marker"
    ],
    [
      "std::mem:1.20",
      "has alias",
      "mem"
    ],
    [
      "std::net:1.20",
      "has alias",
      "net"
    ],
    [
      "std::num:1.20",
      "has alias",
      "num"
    ],
    [
      "std::ops:1.20",
      "has alias",
      "ops"
    ],
    [
      "std::option:1.20",
      "has alias",
      "option"
    ],
    [
      "std::os:1.20",
      "has alias",
      "os"
    ],
    [
      "std::panic:1.20",
      "has alias",
      "panic"
    ],
    [
      "std::path:1.20",
      "has alias",
      "path"
    ],
    [
      "std::prelude:1.20",
      "has alias",
      "prelude"
    ],
    [
      "std::process:1.20",
      "has alias",
      "process"
    ],
    [
      "std::ptr:1.20",
      "has alias",
      "ptr"
    ],
    [
      "std::rc:1.20",
      "has alias",
      "rc"
    ],
    [
      "std::result:1.20",
      "has alias",
      "result"
    ],
    [
      "std::slice:1.20",
      "has alias",
      "slice"
    ],
    [
      "std::str:1.20",
      "has alias",
      "str"
    ],
    [
      "std::string:1.20",
      "has alias",
      "string"
    ],
    [
      "std::sync:1.20",
      "has alias",
      "sync"
    ],
    [
      "std::thread:1.20",
      "has alias",
      "thread"
    ],
    [
      "std::time:1.20",
      "has alias",
      "time"
    ],
    [
      "std::u16:1.20",
      "has alias",
      "u16"
    ],
    [
      "std::u32:1.20",
      "has alias",
      "u32"
    ],
    [
      "std::u64:1.20",
      "has alias",
      "u64"
    ],
    [
      "std::u8:1.20",
      "has alias",
      "u8"
    ],
    [
      "std::usize:1.20",
      "has alias",
      "usize"
    ],
    [
      "std::vec:1.20",
      "has alias",
      "vec"
    ],
    [
      "std::vec:1.20",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"
    ],
    [
      "std::intrinsics:1.20",
      "has alias",
      "intrinsics"
    ],
    [
      "std::raw:1.20",
      "has alias",
      "raw"
    ],
    [
      "scoped_thread_local!:1.20",
      "has stability",
      "Deprecated:1.20"
    ],
    [
      "scoped_thread_local!:1.20",
      "has stability",
      "Unstable:1.20"
    ],
    [
      ":1.20",
      null,
      "undefined:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "proc_macro:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "std_unicode:1.20"
    ],
    [
      "std:1.20",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-493"
    ],
    [
      "std::process:1.20",
      "has description",
      "A module for working with processes."
    ],
    [
      "i128:1.20",
      "is a",
      "primitive type"
    ],
    [
      "i128:1.20",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "i128:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "u128:1.20",
      "is a",
      "primitive type"
    ],
    [
      "u128:1.20",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "u128:1.20",
      "has attribute",
      "unstable:1.20"
    ],
    [
      "eprint!:1.20",
      "is a",
      "macro"
    ],
    [
      "eprint!:1.20",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln!:1.20",
      "is a",
      "macro"
    ],
    [
      "eprintln!:1.20",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "assert_ne!:1.20",
      "is a",
      "macro"
    ],
    [
      "assert_ne!:1.20",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "debug_assert_ne!:1.20",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne!:1.20",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "std::intrinsics:1.20",
      "has attribute",
      "Experimental:1.20"
    ],
    [
      "std::raw:1.20",
      "has attribute",
      "Experimental:1.20"
    ],
    [
      "proc_macro:1.20",
      "is a",
      "crate"
    ],
    [
      "proc_macro:1.20",
      "has description",
      "A support library for macro authors when defining new macros."
    ],
    [
      "std_unicode:1.20",
      "is a",
      "crate"
    ],
    [
      "std_unicode:1.20",
      "has description",
      "The Unicode Library"
    ],
    [
      "select!:1.20",
      "has attribute",
      "Experimental:1.20"
    ],
    [
      "try!:1.20",
      "has description",
      "Helper macro for reducing boilerplate for matching Result together with converting downstream errors."
    ],
    [
      "include!:1.20",
      "has description",
      "Parse a file as an expression or an item according to the context"
    ],
    [
      "println!:1.20",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."
    ],
    [
      "write!:1.20",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "writeln!:1.20",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "std::f32:1.20",
      "has description",
      "This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::f64:1.20",
      "has description",
      "This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::intrinsics:1.20",
      "has stability",
      "Experimental:1.20"
    ],
    [
      "std::raw:1.20",
      "has stability",
      "Experimental:1.20"
    ],
    [
      "println!:1.20",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."
    ],
    [
      "scoped_thread_local!:1.20",
      "has stability",
      "Experimental:1.20"
    ],
    [
      "select!:1.20",
      "has stability",
      "Experimental:1.20"
    ],
    [
      "write!:1.20",
      "has description",
      "Write formatted data into a buffer"
    ],
    [
      "std::rc:1.20",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std:1.20",
      "contains",
      "i128:1.20"
    ],
    [
      "i128:1.20",
      "has stability",
      "Experimental:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "u128:1.20"
    ],
    [
      "u128:1.20",
      "has stability",
      "Experimental:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "eprint!:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "eprintln!:1.20"
    ],
    [
      "std:1.20",
      "contains",
      "compile_error!:1.20"
    ],
    [
      "compile_error!:1.20",
      "is a",
      "macro"
    ],
    [
      "compile_error!:1.20",
      "has description",
      "Unconditionally causes compilation to fail with the given error message."
    ],
    [
      "include!:1.20",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "writeln!:1.20",
      "has description",
      "Write formatted data into a buffer with appended newline."
    ],
    [
      "println!:1.20",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."
    ],
    [
      "std:1.10",
      "is a",
      "crate"
    ],
    [
      "std:1.10",
      "stable since",
      "1.0.0"
    ],
    [
      "std:1.10",
      "has source code",
      "src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.10",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."
    ],
    [
      "std:1.10",
      "contains",
      "std::any:1.10"
    ],
    [
      "std::any:1.10",
      "has description",
      "This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std:1.10",
      "contains",
      "std::ascii:1.10"
    ],
    [
      "std::ascii:1.10",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "std:1.10",
      "contains",
      "std::borrow:1.10"
    ],
    [
      "std::borrow:1.10",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "std:1.10",
      "contains",
      "std::boxed:1.10"
    ],
    [
      "std::boxed:1.10",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "std:1.10",
      "contains",
      "std::cell:1.10"
    ],
    [
      "std::cell:1.10",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "std:1.10",
      "contains",
      "std::char:1.10"
    ],
    [
      "std::char:1.10",
      "has description",
      "A character type."
    ],
    [
      "std:1.10",
      "contains",
      "std::collections:1.10"
    ],
    [
      "std::collections:1.10",
      "has description",
      "Collection types."
    ],
    [
      "std:1.10",
      "contains",
      "std::env:1.10"
    ],
    [
      "std::env:1.10",
      "has description",
      "Inspection and manipulation of the process's environment."
    ],
    [
      "std:1.10",
      "contains",
      "std::fs:1.10"
    ],
    [
      "std::fs:1.10",
      "has description",
      "Filesystem manipulation operations."
    ],
    [
      "std:1.10",
      "contains",
      "std::net:1.10"
    ],
    [
      "std::net:1.10",
      "has description",
      "Networking primitives for TCP/UDP communication."
    ],
    [
      "std:1.10",
      "contains",
      "std::thread:1.10"
    ],
    [
      "std::thread:1.10",
      "has description",
      "Native threads."
    ],
    [
      "array:1.10",
      "is a",
      "primitive type"
    ],
    [
      "array:1.10",
      "has description",
      "A fixed-size array, denoted [T; N]"
    ],
    [
      "std:1.10",
      "contains",
      "array:1.10"
    ],
    [
      "bool:1.10",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.10",
      "has description",
      "The boolean type."
    ],
    [
      "std:1.10",
      "contains",
      "bool:1.10"
    ],
    [
      "std::str:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::str:1.10",
      "has description",
      "String slices."
    ],
    [
      "std:1.10",
      "contains",
      "std::str:1.10"
    ],
    [
      "assert!:1.10",
      "is a",
      "macro"
    ],
    [
      "assert!:1.10",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "std:1.10",
      "contains",
      "assert!:1.10"
    ],
    [
      "format!:1.10",
      "is a",
      "macro"
    ],
    [
      "format!:1.10",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String."
    ],
    [
      "std:1.10",
      "contains",
      "format!:1.10"
    ],
    [
      "vec!:1.10",
      "is a",
      "macro"
    ],
    [
      "vec!:1.10",
      "has description",
      "Creates a Vec containing the arguments."
    ],
    [
      "std:1.10",
      "contains",
      "vec!:1.10"
    ],
    [
      "std::intrinsics:1.10",
      "has stability",
      "Unstable:1.10"
    ],
    [
      "std::intrinsics:1.10",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "std:1.10",
      "contains",
      "std::intrinsics:1.10"
    ],
    [
      "std::raw:1.10",
      "has stability",
      "Unstable:1.10"
    ],
    [
      "std::raw:1.10",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "std:1.10",
      "contains",
      "std::raw:1.10"
    ],
    [
      "std:1.10",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."
    ],
    [
      "std:1.10",
      "contains",
      "std::clone:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::cmp:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::convert:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::default:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::error:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::f32:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::f64:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::ffi:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::fmt:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::hash:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::i16:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::i32:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::i64:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::i8:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::io:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::isize:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::iter:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::marker:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::mem:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::num:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::ops:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::option:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::os:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::panic:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::path:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::prelude:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::process:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::ptr:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::rc:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::result:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::slice:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::string:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::sync:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::time:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::u16:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::u32:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::u64:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::u8:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::usize:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "std::vec:1.10"
    ],
    [
      "array:1.10",
      "has description",
      "A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."
    ],
    [
      "std::char:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.10",
      "has description",
      "The 32-bit floating point type."
    ],
    [
      "std::f64:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::f64:1.10",
      "has description",
      "The 64-bit floating point type."
    ],
    [
      "std::i16:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::i16:1.10",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "std::i32:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::i32:1.10",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "std::i64:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::i64:1.10",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "std::i8:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::i8:1.10",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "std::isize:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::isize:1.10",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "pointer:1.10",
      "is a",
      "primitive type"
    ],
    [
      "pointer:1.10",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::slice:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::slice:1.10",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]."
    ],
    [
      "tuple:1.10",
      "is a",
      "primitive type"
    ],
    [
      "tuple:1.10",
      "has description",
      "A finite heterogeneous sequence, (T, U, ..)."
    ],
    [
      "std::u16:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::u16:1.10",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "std::u32:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::u32:1.10",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "std::u64:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::u64:1.10",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "std::u8:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::u8:1.10",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "std::usize:1.10",
      "is a",
      "primitive type"
    ],
    [
      "std::usize:1.10",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "std::any:1.10",
      "is a",
      "module"
    ],
    [
      "std::any:1.10",
      "has description",
      "This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std::ascii:1.10",
      "is a",
      "module"
    ],
    [
      "std::borrow:1.10",
      "is a",
      "module"
    ],
    [
      "std::boxed:1.10",
      "is a",
      "module"
    ],
    [
      "std::cell:1.10",
      "is a",
      "module"
    ],
    [
      "std::char:1.10",
      "is a",
      "module"
    ],
    [
      "std::clone:1.10",
      "is a",
      "module"
    ],
    [
      "std::clone:1.10",
      "has description",
      "The Clone trait for types that cannot be 'implicitly copied'."
    ],
    [
      "std::cmp:1.10",
      "is a",
      "module"
    ],
    [
      "std::cmp:1.10",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "std::collections:1.10",
      "is a",
      "module"
    ],
    [
      "std::convert:1.10",
      "is a",
      "module"
    ],
    [
      "std::convert:1.10",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "std::default:1.10",
      "is a",
      "module"
    ],
    [
      "std::default:1.10",
      "has description",
      "The Default trait for types which may have meaningful default values."
    ],
    [
      "std::env:1.10",
      "is a",
      "module"
    ],
    [
      "std::error:1.10",
      "is a",
      "module"
    ],
    [
      "std::error:1.10",
      "has description",
      "Traits for working with Errors."
    ],
    [
      "std::f32:1.10",
      "is a",
      "module"
    ],
    [
      "std::f64:1.10",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.10",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.10",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "std::fmt:1.10",
      "is a",
      "module"
    ],
    [
      "std::fmt:1.10",
      "has description",
      "Utilities for formatting and printing strings"
    ],
    [
      "std::fs:1.10",
      "is a",
      "module"
    ],
    [
      "std::hash:1.10",
      "is a",
      "module"
    ],
    [
      "std::hash:1.10",
      "has description",
      "Generic hashing support."
    ],
    [
      "std::i16:1.10",
      "is a",
      "module"
    ],
    [
      "std::i32:1.10",
      "is a",
      "module"
    ],
    [
      "std::i64:1.10",
      "is a",
      "module"
    ],
    [
      "std::i8:1.10",
      "is a",
      "module"
    ],
    [
      "std::io:1.10",
      "is a",
      "module"
    ],
    [
      "std::io:1.10",
      "has description",
      "Traits, helpers, and type definitions for core I/O functionality."
    ],
    [
      "std::isize:1.10",
      "is a",
      "module"
    ],
    [
      "std::iter:1.10",
      "is a",
      "module"
    ],
    [
      "std::iter:1.10",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::marker:1.10",
      "is a",
      "module"
    ],
    [
      "std::marker:1.10",
      "has description",
      "Primitive traits and marker types representing basic 'kinds' of types."
    ],
    [
      "std::mem:1.10",
      "is a",
      "module"
    ],
    [
      "std::mem:1.10",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "std::net:1.10",
      "is a",
      "module"
    ],
    [
      "std::num:1.10",
      "is a",
      "module"
    ],
    [
      "std::num:1.10",
      "has description",
      "Additional functionality for numerics."
    ],
    [
      "std::ops:1.10",
      "is a",
      "module"
    ],
    [
      "std::ops:1.10",
      "has description",
      "Overloadable operators."
    ],
    [
      "std::option:1.10",
      "is a",
      "module"
    ],
    [
      "std::option:1.10",
      "has description",
      "Optional values."
    ],
    [
      "std::os:1.10",
      "is a",
      "module"
    ],
    [
      "std::os:1.10",
      "has description",
      "OS-specific functionality."
    ],
    [
      "std::panic:1.10",
      "is a",
      "module"
    ],
    [
      "std::panic:1.10",
      "has description",
      "Panic support in the standard library"
    ],
    [
      "std::path:1.10",
      "is a",
      "module"
    ],
    [
      "std::path:1.10",
      "has description",
      "Cross-platform path manipulation."
    ],
    [
      "std::prelude:1.10",
      "is a",
      "module"
    ],
    [
      "std::prelude:1.10",
      "has description",
      "The Rust Prelude."
    ],
    [
      "std::process:1.10",
      "is a",
      "module"
    ],
    [
      "std::process:1.10",
      "has description",
      "Working with processes."
    ],
    [
      "std::ptr:1.10",
      "is a",
      "module"
    ],
    [
      "std::ptr:1.10",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::rc:1.10",
      "is a",
      "module"
    ],
    [
      "std::rc:1.10",
      "has description",
      "Thread-local reference-counted boxes (the Rc<T> type)."
    ],
    [
      "std::result:1.10",
      "is a",
      "module"
    ],
    [
      "std::result:1.10",
      "has description",
      "Error handling with the Result type."
    ],
    [
      "std::slice:1.10",
      "is a",
      "module"
    ],
    [
      "std::str:1.10",
      "is a",
      "module"
    ],
    [
      "std::str:1.10",
      "has description",
      "Unicode string slices."
    ],
    [
      "std::string:1.10",
      "is a",
      "module"
    ],
    [
      "std::string:1.10",
      "has description",
      "A UTF-8 encoded, growable string."
    ],
    [
      "std::sync:1.10",
      "is a",
      "module"
    ],
    [
      "std::sync:1.10",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::thread:1.10",
      "is a",
      "module"
    ],
    [
      "std::time:1.10",
      "is a",
      "module"
    ],
    [
      "std::time:1.10",
      "has description",
      "Temporal quantification."
    ],
    [
      "std::u16:1.10",
      "is a",
      "module"
    ],
    [
      "std::u32:1.10",
      "is a",
      "module"
    ],
    [
      "std::u64:1.10",
      "is a",
      "module"
    ],
    [
      "std::u8:1.10",
      "is a",
      "module"
    ],
    [
      "std::usize:1.10",
      "is a",
      "module"
    ],
    [
      "std::vec:1.10",
      "is a",
      "module"
    ],
    [
      "std::vec:1.10",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."
    ],
    [
      "std::intrinsics:1.10",
      "is a",
      "module"
    ],
    [
      "std::intrinsics:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "std::raw:1.10",
      "is a",
      "module"
    ],
    [
      "std::raw:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "assert_eq!:1.10",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.10",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "cfg!:1.10",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.10",
      "has description",
      "Boolean evaluation of configuration flags."
    ],
    [
      "column!:1.10",
      "is a",
      "macro"
    ],
    [
      "column!:1.10",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "concat!:1.10",
      "is a",
      "macro"
    ],
    [
      "concat!:1.10",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "concat_idents!:1.10",
      "is a",
      "macro"
    ],
    [
      "concat_idents!:1.10",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "debug_assert!:1.10",
      "is a",
      "macro"
    ],
    [
      "debug_assert!:1.10",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq!:1.10",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq!:1.10",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "env!:1.10",
      "is a",
      "macro"
    ],
    [
      "env!:1.10",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "file!:1.10",
      "is a",
      "macro"
    ],
    [
      "file!:1.10",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "format!:1.10",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."
    ],
    [
      "format_args!:1.10",
      "is a",
      "macro"
    ],
    [
      "format_args!:1.10",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "include!:1.10",
      "is a",
      "macro"
    ],
    [
      "include!:1.10",
      "has description",
      "Parse the current given file as an expression."
    ],
    [
      "include_bytes!:1.10",
      "is a",
      "macro"
    ],
    [
      "include_bytes!:1.10",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "include_str!:1.10",
      "is a",
      "macro"
    ],
    [
      "include_str!:1.10",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "line!:1.10",
      "is a",
      "macro"
    ],
    [
      "line!:1.10",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "module_path!:1.10",
      "is a",
      "macro"
    ],
    [
      "module_path!:1.10",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "option_env!:1.10",
      "is a",
      "macro"
    ],
    [
      "option_env!:1.10",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "panic!:1.10",
      "is a",
      "macro"
    ],
    [
      "panic!:1.10",
      "has description",
      "The entry point for panic of Rust threads."
    ],
    [
      "print!:1.10",
      "is a",
      "macro"
    ],
    [
      "print!:1.10",
      "has description",
      "Macro for printing to the standard output."
    ],
    [
      "println!:1.10",
      "is a",
      "macro"
    ],
    [
      "println!:1.10",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "stringify!:1.10",
      "is a",
      "macro"
    ],
    [
      "stringify!:1.10",
      "has description",
      "A macro which stringifies its argument."
    ],
    [
      "thread_local!:1.10",
      "is a",
      "macro"
    ],
    [
      "thread_local!:1.10",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey."
    ],
    [
      "scoped_thread_local!:1.10",
      "is a",
      "macro"
    ],
    [
      "scoped_thread_local!:1.10",
      "has attribute",
      "deprecated:1.10"
    ],
    [
      "scoped_thread_local!:1.10",
      "has description",
      "Declare a new scoped thread local storage key."
    ],
    [
      "select!:1.10",
      "is a",
      "macro"
    ],
    [
      "select!:1.10",
      "has attribute",
      "unstable:1.10"
    ],
    [
      "select!:1.10",
      "has description",
      "A macro to select an event from a number of receivers."
    ],
    [
      "try!:1.10",
      "is a",
      "macro"
    ],
    [
      "try!:1.10",
      "has description",
      "Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."
    ],
    [
      "unimplemented!:1.10",
      "is a",
      "macro"
    ],
    [
      "unimplemented!:1.10",
      "has description",
      "A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."
    ],
    [
      "unreachable!:1.10",
      "is a",
      "macro"
    ],
    [
      "unreachable!:1.10",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "write!:1.10",
      "is a",
      "macro"
    ],
    [
      "write!:1.10",
      "has description",
      "Use the format! syntax to write data into a buffer."
    ],
    [
      "writeln!:1.10",
      "is a",
      "macro"
    ],
    [
      "writeln!:1.10",
      "has description",
      "Use the format! syntax to write data into a buffer, appending a newline."
    ],
    [
      "std:1.10",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.10",
      "contains",
      "alloc:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "core:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "libc:1.10"
    ],
    [
      "std:1.10",
      "contains",
      "rustc_unicode:1.10"
    ],
    [
      "std::any:1.10",
      "has alias",
      "any"
    ],
    [
      "std::ascii:1.10",
      "has alias",
      "ascii"
    ],
    [
      "std::borrow:1.10",
      "has alias",
      "borrow"
    ],
    [
      "std::boxed:1.10",
      "has alias",
      "boxed"
    ],
    [
      "std::cell:1.10",
      "has alias",
      "cell"
    ],
    [
      "std::char:1.10",
      "has alias",
      "char"
    ],
    [
      "std::clone:1.10",
      "has alias",
      "clone"
    ],
    [
      "std::cmp:1.10",
      "has alias",
      "cmp"
    ],
    [
      "std::collections:1.10",
      "has alias",
      "collections"
    ],
    [
      "std::convert:1.10",
      "has alias",
      "convert"
    ],
    [
      "std::default:1.10",
      "has alias",
      "default"
    ],
    [
      "std::env:1.10",
      "has alias",
      "env"
    ],
    [
      "std::error:1.10",
      "has alias",
      "error"
    ],
    [
      "std::f32:1.10",
      "has alias",
      "f32"
    ],
    [
      "std::f64:1.10",
      "has alias",
      "f64"
    ],
    [
      "std::ffi:1.10",
      "has alias",
      "ffi"
    ],
    [
      "std::fmt:1.10",
      "has alias",
      "fmt"
    ],
    [
      "std::fs:1.10",
      "has alias",
      "fs"
    ],
    [
      "std::hash:1.10",
      "has alias",
      "hash"
    ],
    [
      "std::i16:1.10",
      "has alias",
      "i16"
    ],
    [
      "std::i32:1.10",
      "has alias",
      "i32"
    ],
    [
      "std::i64:1.10",
      "has alias",
      "i64"
    ],
    [
      "std::i8:1.10",
      "has alias",
      "i8"
    ],
    [
      "std::io:1.10",
      "has alias",
      "io"
    ],
    [
      "std::isize:1.10",
      "has alias",
      "isize"
    ],
    [
      "std::iter:1.10",
      "has alias",
      "iter"
    ],
    [
      "std::marker:1.10",
      "has alias",
      "marker"
    ],
    [
      "std::mem:1.10",
      "has alias",
      "mem"
    ],
    [
      "std::net:1.10",
      "has alias",
      "net"
    ],
    [
      "std::num:1.10",
      "has alias",
      "num"
    ],
    [
      "std::ops:1.10",
      "has alias",
      "ops"
    ],
    [
      "std::option:1.10",
      "has alias",
      "option"
    ],
    [
      "std::os:1.10",
      "has alias",
      "os"
    ],
    [
      "std::panic:1.10",
      "has alias",
      "panic"
    ],
    [
      "std::path:1.10",
      "has alias",
      "path"
    ],
    [
      "std::prelude:1.10",
      "has alias",
      "prelude"
    ],
    [
      "std::process:1.10",
      "has alias",
      "process"
    ],
    [
      "std::ptr:1.10",
      "has alias",
      "ptr"
    ],
    [
      "std::rc:1.10",
      "has alias",
      "rc"
    ],
    [
      "std::result:1.10",
      "has alias",
      "result"
    ],
    [
      "std::slice:1.10",
      "has alias",
      "slice"
    ],
    [
      "std::str:1.10",
      "has alias",
      "str"
    ],
    [
      "std::string:1.10",
      "has alias",
      "string"
    ],
    [
      "std::sync:1.10",
      "has alias",
      "sync"
    ],
    [
      "std::thread:1.10",
      "has alias",
      "thread"
    ],
    [
      "std::time:1.10",
      "has alias",
      "time"
    ],
    [
      "std::u16:1.10",
      "has alias",
      "u16"
    ],
    [
      "std::u32:1.10",
      "has alias",
      "u32"
    ],
    [
      "std::u64:1.10",
      "has alias",
      "u64"
    ],
    [
      "std::u8:1.10",
      "has alias",
      "u8"
    ],
    [
      "std::usize:1.10",
      "has alias",
      "usize"
    ],
    [
      "std::vec:1.10",
      "has alias",
      "vec"
    ],
    [
      "std::vec:1.10",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"
    ],
    [
      "std::intrinsics:1.10",
      "has alias",
      "intrinsics"
    ],
    [
      "std::raw:1.10",
      "has alias",
      "raw"
    ],
    [
      "scoped_thread_local!:1.10",
      "has stability",
      "Deprecated:1.10"
    ],
    [
      "scoped_thread_local!:1.10",
      "has stability",
      "Unstable:1.10"
    ],
    [
      ":1.10",
      null,
      "undefined:1.10"
    ],
    [
      "std:1.40",
      "is a",
      "crate"
    ],
    [
      "std:1.40",
      "stable since",
      "1.0.0"
    ],
    [
      "std:1.40",
      "has source code",
      "src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.40",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."
    ],
    [
      "std:1.40",
      "contains",
      "std::any:1.40"
    ],
    [
      "std::any:1.40",
      "has description",
      "This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std:1.40",
      "contains",
      "std::ascii:1.40"
    ],
    [
      "std::ascii:1.40",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "std:1.40",
      "contains",
      "std::borrow:1.40"
    ],
    [
      "std::borrow:1.40",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "std:1.40",
      "contains",
      "std::boxed:1.40"
    ],
    [
      "std::boxed:1.40",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "std:1.40",
      "contains",
      "std::cell:1.40"
    ],
    [
      "std::cell:1.40",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "std:1.40",
      "contains",
      "std::char:1.40"
    ],
    [
      "std::char:1.40",
      "has description",
      "A character type."
    ],
    [
      "std:1.40",
      "contains",
      "std::collections:1.40"
    ],
    [
      "std::collections:1.40",
      "has description",
      "Collection types."
    ],
    [
      "std:1.40",
      "contains",
      "std::env:1.40"
    ],
    [
      "std::env:1.40",
      "has description",
      "Inspection and manipulation of the process's environment."
    ],
    [
      "std:1.40",
      "contains",
      "std::fs:1.40"
    ],
    [
      "std::fs:1.40",
      "has description",
      "Filesystem manipulation operations."
    ],
    [
      "std:1.40",
      "contains",
      "std::net:1.40"
    ],
    [
      "std::net:1.40",
      "has description",
      "Networking primitives for TCP/UDP communication."
    ],
    [
      "std:1.40",
      "contains",
      "std::thread:1.40"
    ],
    [
      "std::thread:1.40",
      "has description",
      "Native threads."
    ],
    [
      "array:1.40",
      "is a",
      "primitive type"
    ],
    [
      "array:1.40",
      "has description",
      "A fixed-size array, denoted [T; N]"
    ],
    [
      "std:1.40",
      "contains",
      "array:1.40"
    ],
    [
      "bool:1.40",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.40",
      "has description",
      "The boolean type."
    ],
    [
      "std:1.40",
      "contains",
      "bool:1.40"
    ],
    [
      "std::str:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::str:1.40",
      "has description",
      "String slices."
    ],
    [
      "std:1.40",
      "contains",
      "std::str:1.40"
    ],
    [
      "assert!:1.40",
      "is a",
      "macro"
    ],
    [
      "assert!:1.40",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "std:1.40",
      "contains",
      "assert!:1.40"
    ],
    [
      "format!:1.40",
      "is a",
      "macro"
    ],
    [
      "format!:1.40",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String."
    ],
    [
      "std:1.40",
      "contains",
      "format!:1.40"
    ],
    [
      "vec!:1.40",
      "is a",
      "macro"
    ],
    [
      "vec!:1.40",
      "has description",
      "Creates a Vec containing the arguments."
    ],
    [
      "std:1.40",
      "contains",
      "vec!:1.40"
    ],
    [
      "std::intrinsics:1.40",
      "has stability",
      "Unstable:1.40"
    ],
    [
      "std::intrinsics:1.40",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "std:1.40",
      "contains",
      "std::intrinsics:1.40"
    ],
    [
      "std::raw:1.40",
      "has stability",
      "Unstable:1.40"
    ],
    [
      "std::raw:1.40",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "std:1.40",
      "contains",
      "std::raw:1.40"
    ],
    [
      "std:1.40",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."
    ],
    [
      "std:1.40",
      "contains",
      "std::clone:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::cmp:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::convert:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::default:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::error:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::f32:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::f64:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::ffi:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::fmt:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::hash:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::i16:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::i32:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::i64:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::i8:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::io:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::isize:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::iter:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::marker:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::mem:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::num:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::ops:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::option:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::os:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::panic:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::path:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::prelude:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::process:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::ptr:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::rc:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::result:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::slice:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::string:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::sync:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::time:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::u16:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::u32:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::u64:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::u8:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::usize:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std::vec:1.40"
    ],
    [
      "array:1.40",
      "has description",
      "A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."
    ],
    [
      "std::char:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.40",
      "has description",
      "The 32-bit floating point type."
    ],
    [
      "std::f64:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::f64:1.40",
      "has description",
      "The 64-bit floating point type."
    ],
    [
      "std::i16:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::i16:1.40",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "std::i32:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::i32:1.40",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "std::i64:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::i64:1.40",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "std::i8:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::i8:1.40",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "std::isize:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::isize:1.40",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "pointer:1.40",
      "is a",
      "primitive type"
    ],
    [
      "pointer:1.40",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::slice:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::slice:1.40",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]."
    ],
    [
      "tuple:1.40",
      "is a",
      "primitive type"
    ],
    [
      "tuple:1.40",
      "has description",
      "A finite heterogeneous sequence, (T, U, ..)."
    ],
    [
      "std::u16:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::u16:1.40",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "std::u32:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::u32:1.40",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "std::u64:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::u64:1.40",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "std::u8:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::u8:1.40",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "std::usize:1.40",
      "is a",
      "primitive type"
    ],
    [
      "std::usize:1.40",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "std::any:1.40",
      "is a",
      "module"
    ],
    [
      "std::any:1.40",
      "has description",
      "This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std::ascii:1.40",
      "is a",
      "module"
    ],
    [
      "std::borrow:1.40",
      "is a",
      "module"
    ],
    [
      "std::boxed:1.40",
      "is a",
      "module"
    ],
    [
      "std::cell:1.40",
      "is a",
      "module"
    ],
    [
      "std::char:1.40",
      "is a",
      "module"
    ],
    [
      "std::clone:1.40",
      "is a",
      "module"
    ],
    [
      "std::clone:1.40",
      "has description",
      "The Clone trait for types that cannot be 'implicitly copied'."
    ],
    [
      "std::cmp:1.40",
      "is a",
      "module"
    ],
    [
      "std::cmp:1.40",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "std::collections:1.40",
      "is a",
      "module"
    ],
    [
      "std::convert:1.40",
      "is a",
      "module"
    ],
    [
      "std::convert:1.40",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "std::default:1.40",
      "is a",
      "module"
    ],
    [
      "std::default:1.40",
      "has description",
      "The Default trait for types which may have meaningful default values."
    ],
    [
      "std::env:1.40",
      "is a",
      "module"
    ],
    [
      "std::error:1.40",
      "is a",
      "module"
    ],
    [
      "std::error:1.40",
      "has description",
      "Traits for working with Errors."
    ],
    [
      "std::f32:1.40",
      "is a",
      "module"
    ],
    [
      "std::f64:1.40",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.40",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.40",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "std::fmt:1.40",
      "is a",
      "module"
    ],
    [
      "std::fmt:1.40",
      "has description",
      "Utilities for formatting and printing strings"
    ],
    [
      "std::fs:1.40",
      "is a",
      "module"
    ],
    [
      "std::hash:1.40",
      "is a",
      "module"
    ],
    [
      "std::hash:1.40",
      "has description",
      "Generic hashing support."
    ],
    [
      "std::i16:1.40",
      "is a",
      "module"
    ],
    [
      "std::i32:1.40",
      "is a",
      "module"
    ],
    [
      "std::i64:1.40",
      "is a",
      "module"
    ],
    [
      "std::i8:1.40",
      "is a",
      "module"
    ],
    [
      "std::io:1.40",
      "is a",
      "module"
    ],
    [
      "std::io:1.40",
      "has description",
      "Traits, helpers, and type definitions for core I/O functionality."
    ],
    [
      "std::isize:1.40",
      "is a",
      "module"
    ],
    [
      "std::iter:1.40",
      "is a",
      "module"
    ],
    [
      "std::iter:1.40",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::marker:1.40",
      "is a",
      "module"
    ],
    [
      "std::marker:1.40",
      "has description",
      "Primitive traits and marker types representing basic 'kinds' of types."
    ],
    [
      "std::mem:1.40",
      "is a",
      "module"
    ],
    [
      "std::mem:1.40",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "std::net:1.40",
      "is a",
      "module"
    ],
    [
      "std::num:1.40",
      "is a",
      "module"
    ],
    [
      "std::num:1.40",
      "has description",
      "Additional functionality for numerics."
    ],
    [
      "std::ops:1.40",
      "is a",
      "module"
    ],
    [
      "std::ops:1.40",
      "has description",
      "Overloadable operators."
    ],
    [
      "std::option:1.40",
      "is a",
      "module"
    ],
    [
      "std::option:1.40",
      "has description",
      "Optional values."
    ],
    [
      "std::os:1.40",
      "is a",
      "module"
    ],
    [
      "std::os:1.40",
      "has description",
      "OS-specific functionality."
    ],
    [
      "std::panic:1.40",
      "is a",
      "module"
    ],
    [
      "std::panic:1.40",
      "has description",
      "Panic support in the standard library"
    ],
    [
      "std::path:1.40",
      "is a",
      "module"
    ],
    [
      "std::path:1.40",
      "has description",
      "Cross-platform path manipulation."
    ],
    [
      "std::prelude:1.40",
      "is a",
      "module"
    ],
    [
      "std::prelude:1.40",
      "has description",
      "The Rust Prelude."
    ],
    [
      "std::process:1.40",
      "is a",
      "module"
    ],
    [
      "std::process:1.40",
      "has description",
      "Working with processes."
    ],
    [
      "std::ptr:1.40",
      "is a",
      "module"
    ],
    [
      "std::ptr:1.40",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::rc:1.40",
      "is a",
      "module"
    ],
    [
      "std::rc:1.40",
      "has description",
      "Thread-local reference-counted boxes (the Rc<T> type)."
    ],
    [
      "std::result:1.40",
      "is a",
      "module"
    ],
    [
      "std::result:1.40",
      "has description",
      "Error handling with the Result type."
    ],
    [
      "std::slice:1.40",
      "is a",
      "module"
    ],
    [
      "std::str:1.40",
      "is a",
      "module"
    ],
    [
      "std::str:1.40",
      "has description",
      "Unicode string slices."
    ],
    [
      "std::string:1.40",
      "is a",
      "module"
    ],
    [
      "std::string:1.40",
      "has description",
      "A UTF-8 encoded, growable string."
    ],
    [
      "std::sync:1.40",
      "is a",
      "module"
    ],
    [
      "std::sync:1.40",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::thread:1.40",
      "is a",
      "module"
    ],
    [
      "std::time:1.40",
      "is a",
      "module"
    ],
    [
      "std::time:1.40",
      "has description",
      "Temporal quantification."
    ],
    [
      "std::u16:1.40",
      "is a",
      "module"
    ],
    [
      "std::u32:1.40",
      "is a",
      "module"
    ],
    [
      "std::u64:1.40",
      "is a",
      "module"
    ],
    [
      "std::u8:1.40",
      "is a",
      "module"
    ],
    [
      "std::usize:1.40",
      "is a",
      "module"
    ],
    [
      "std::vec:1.40",
      "is a",
      "module"
    ],
    [
      "std::vec:1.40",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."
    ],
    [
      "std::intrinsics:1.40",
      "is a",
      "module"
    ],
    [
      "std::intrinsics:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "std::raw:1.40",
      "is a",
      "module"
    ],
    [
      "std::raw:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "assert_eq!:1.40",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.40",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "cfg!:1.40",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.40",
      "has description",
      "Boolean evaluation of configuration flags."
    ],
    [
      "column!:1.40",
      "is a",
      "macro"
    ],
    [
      "column!:1.40",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "concat!:1.40",
      "is a",
      "macro"
    ],
    [
      "concat!:1.40",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "concat_idents!:1.40",
      "is a",
      "macro"
    ],
    [
      "concat_idents!:1.40",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "debug_assert!:1.40",
      "is a",
      "macro"
    ],
    [
      "debug_assert!:1.40",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq!:1.40",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq!:1.40",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "env!:1.40",
      "is a",
      "macro"
    ],
    [
      "env!:1.40",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "file!:1.40",
      "is a",
      "macro"
    ],
    [
      "file!:1.40",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "format!:1.40",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."
    ],
    [
      "format_args!:1.40",
      "is a",
      "macro"
    ],
    [
      "format_args!:1.40",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "include!:1.40",
      "is a",
      "macro"
    ],
    [
      "include!:1.40",
      "has description",
      "Parse the current given file as an expression."
    ],
    [
      "include_bytes!:1.40",
      "is a",
      "macro"
    ],
    [
      "include_bytes!:1.40",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "include_str!:1.40",
      "is a",
      "macro"
    ],
    [
      "include_str!:1.40",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "line!:1.40",
      "is a",
      "macro"
    ],
    [
      "line!:1.40",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "module_path!:1.40",
      "is a",
      "macro"
    ],
    [
      "module_path!:1.40",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "option_env!:1.40",
      "is a",
      "macro"
    ],
    [
      "option_env!:1.40",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "panic!:1.40",
      "is a",
      "macro"
    ],
    [
      "panic!:1.40",
      "has description",
      "The entry point for panic of Rust threads."
    ],
    [
      "print!:1.40",
      "is a",
      "macro"
    ],
    [
      "print!:1.40",
      "has description",
      "Macro for printing to the standard output."
    ],
    [
      "println!:1.40",
      "is a",
      "macro"
    ],
    [
      "println!:1.40",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "stringify!:1.40",
      "is a",
      "macro"
    ],
    [
      "stringify!:1.40",
      "has description",
      "A macro which stringifies its argument."
    ],
    [
      "thread_local!:1.40",
      "is a",
      "macro"
    ],
    [
      "thread_local!:1.40",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey."
    ],
    [
      "scoped_thread_local!:1.40",
      "is a",
      "macro"
    ],
    [
      "scoped_thread_local!:1.40",
      "has attribute",
      "deprecated:1.40"
    ],
    [
      "scoped_thread_local!:1.40",
      "has description",
      "Declare a new scoped thread local storage key."
    ],
    [
      "select!:1.40",
      "is a",
      "macro"
    ],
    [
      "select!:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "select!:1.40",
      "has description",
      "A macro to select an event from a number of receivers."
    ],
    [
      "try!:1.40",
      "is a",
      "macro"
    ],
    [
      "try!:1.40",
      "has description",
      "Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."
    ],
    [
      "unimplemented!:1.40",
      "is a",
      "macro"
    ],
    [
      "unimplemented!:1.40",
      "has description",
      "A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."
    ],
    [
      "unreachable!:1.40",
      "is a",
      "macro"
    ],
    [
      "unreachable!:1.40",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "write!:1.40",
      "is a",
      "macro"
    ],
    [
      "write!:1.40",
      "has description",
      "Use the format! syntax to write data into a buffer."
    ],
    [
      "writeln!:1.40",
      "is a",
      "macro"
    ],
    [
      "writeln!:1.40",
      "has description",
      "Use the format! syntax to write data into a buffer, appending a newline."
    ],
    [
      "std:1.40",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.40",
      "contains",
      "alloc:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "core:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "libc:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "rustc_unicode:1.40"
    ],
    [
      "std::any:1.40",
      "has alias",
      "any"
    ],
    [
      "std::ascii:1.40",
      "has alias",
      "ascii"
    ],
    [
      "std::borrow:1.40",
      "has alias",
      "borrow"
    ],
    [
      "std::boxed:1.40",
      "has alias",
      "boxed"
    ],
    [
      "std::cell:1.40",
      "has alias",
      "cell"
    ],
    [
      "std::char:1.40",
      "has alias",
      "char"
    ],
    [
      "std::clone:1.40",
      "has alias",
      "clone"
    ],
    [
      "std::cmp:1.40",
      "has alias",
      "cmp"
    ],
    [
      "std::collections:1.40",
      "has alias",
      "collections"
    ],
    [
      "std::convert:1.40",
      "has alias",
      "convert"
    ],
    [
      "std::default:1.40",
      "has alias",
      "default"
    ],
    [
      "std::env:1.40",
      "has alias",
      "env"
    ],
    [
      "std::error:1.40",
      "has alias",
      "error"
    ],
    [
      "std::f32:1.40",
      "has alias",
      "f32"
    ],
    [
      "std::f64:1.40",
      "has alias",
      "f64"
    ],
    [
      "std::ffi:1.40",
      "has alias",
      "ffi"
    ],
    [
      "std::fmt:1.40",
      "has alias",
      "fmt"
    ],
    [
      "std::fs:1.40",
      "has alias",
      "fs"
    ],
    [
      "std::hash:1.40",
      "has alias",
      "hash"
    ],
    [
      "std::i16:1.40",
      "has alias",
      "i16"
    ],
    [
      "std::i32:1.40",
      "has alias",
      "i32"
    ],
    [
      "std::i64:1.40",
      "has alias",
      "i64"
    ],
    [
      "std::i8:1.40",
      "has alias",
      "i8"
    ],
    [
      "std::io:1.40",
      "has alias",
      "io"
    ],
    [
      "std::isize:1.40",
      "has alias",
      "isize"
    ],
    [
      "std::iter:1.40",
      "has alias",
      "iter"
    ],
    [
      "std::marker:1.40",
      "has alias",
      "marker"
    ],
    [
      "std::mem:1.40",
      "has alias",
      "mem"
    ],
    [
      "std::net:1.40",
      "has alias",
      "net"
    ],
    [
      "std::num:1.40",
      "has alias",
      "num"
    ],
    [
      "std::ops:1.40",
      "has alias",
      "ops"
    ],
    [
      "std::option:1.40",
      "has alias",
      "option"
    ],
    [
      "std::os:1.40",
      "has alias",
      "os"
    ],
    [
      "std::panic:1.40",
      "has alias",
      "panic"
    ],
    [
      "std::path:1.40",
      "has alias",
      "path"
    ],
    [
      "std::prelude:1.40",
      "has alias",
      "prelude"
    ],
    [
      "std::process:1.40",
      "has alias",
      "process"
    ],
    [
      "std::ptr:1.40",
      "has alias",
      "ptr"
    ],
    [
      "std::rc:1.40",
      "has alias",
      "rc"
    ],
    [
      "std::result:1.40",
      "has alias",
      "result"
    ],
    [
      "std::slice:1.40",
      "has alias",
      "slice"
    ],
    [
      "std::str:1.40",
      "has alias",
      "str"
    ],
    [
      "std::string:1.40",
      "has alias",
      "string"
    ],
    [
      "std::sync:1.40",
      "has alias",
      "sync"
    ],
    [
      "std::thread:1.40",
      "has alias",
      "thread"
    ],
    [
      "std::time:1.40",
      "has alias",
      "time"
    ],
    [
      "std::u16:1.40",
      "has alias",
      "u16"
    ],
    [
      "std::u32:1.40",
      "has alias",
      "u32"
    ],
    [
      "std::u64:1.40",
      "has alias",
      "u64"
    ],
    [
      "std::u8:1.40",
      "has alias",
      "u8"
    ],
    [
      "std::usize:1.40",
      "has alias",
      "usize"
    ],
    [
      "std::vec:1.40",
      "has alias",
      "vec"
    ],
    [
      "std::vec:1.40",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"
    ],
    [
      "std::intrinsics:1.40",
      "has alias",
      "intrinsics"
    ],
    [
      "std::raw:1.40",
      "has alias",
      "raw"
    ],
    [
      "scoped_thread_local!:1.40",
      "has stability",
      "Deprecated:1.40"
    ],
    [
      "scoped_thread_local!:1.40",
      "has stability",
      "Unstable:1.40"
    ],
    [
      ":1.40",
      null,
      "undefined:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "proc_macro:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "std_unicode:1.40"
    ],
    [
      "std:1.40",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-493"
    ],
    [
      "std::process:1.40",
      "has description",
      "A module for working with processes."
    ],
    [
      "i128:1.40",
      "is a",
      "primitive type"
    ],
    [
      "i128:1.40",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "i128:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "u128:1.40",
      "is a",
      "primitive type"
    ],
    [
      "u128:1.40",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "u128:1.40",
      "has attribute",
      "unstable:1.40"
    ],
    [
      "eprint!:1.40",
      "is a",
      "macro"
    ],
    [
      "eprint!:1.40",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln!:1.40",
      "is a",
      "macro"
    ],
    [
      "eprintln!:1.40",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "assert_ne!:1.40",
      "is a",
      "macro"
    ],
    [
      "assert_ne!:1.40",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "debug_assert_ne!:1.40",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne!:1.40",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "std::intrinsics:1.40",
      "has attribute",
      "Experimental:1.40"
    ],
    [
      "std::raw:1.40",
      "has attribute",
      "Experimental:1.40"
    ],
    [
      "proc_macro:1.40",
      "is a",
      "crate"
    ],
    [
      "proc_macro:1.40",
      "has description",
      "A support library for macro authors when defining new macros."
    ],
    [
      "std_unicode:1.40",
      "is a",
      "crate"
    ],
    [
      "std_unicode:1.40",
      "has description",
      "The Unicode Library"
    ],
    [
      "select!:1.40",
      "has attribute",
      "Experimental:1.40"
    ],
    [
      "try!:1.40",
      "has description",
      "Helper macro for reducing boilerplate for matching Result together with converting downstream errors."
    ],
    [
      "include!:1.40",
      "has description",
      "Parse a file as an expression or an item according to the context"
    ],
    [
      "println!:1.40",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."
    ],
    [
      "write!:1.40",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "writeln!:1.40",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "std::f32:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::f64:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::intrinsics:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "std::raw:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "println!:1.40",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."
    ],
    [
      "scoped_thread_local!:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "select!:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "write!:1.40",
      "has description",
      "Write formatted data into a buffer"
    ],
    [
      "std::rc:1.40",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std:1.40",
      "contains",
      "i128:1.40"
    ],
    [
      "i128:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "u128:1.40"
    ],
    [
      "u128:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "eprint!:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "eprintln!:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "compile_error!:1.40"
    ],
    [
      "compile_error!:1.40",
      "is a",
      "macro"
    ],
    [
      "compile_error!:1.40",
      "has description",
      "Unconditionally causes compilation to fail with the given error message."
    ],
    [
      "include!:1.40",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "writeln!:1.40",
      "has description",
      "Write formatted data into a buffer with appended newline."
    ],
    [
      "println!:1.40",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."
    ],
    [
      "std:1.40",
      "stable since",
      "1.40.0"
    ],
    [
      "std:1.40",
      "contains",
      "future:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "pin:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "task:1.40"
    ],
    [
      "std::ptr:1.40",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "std::slice:1.40",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "future:1.40",
      "is a",
      "module"
    ],
    [
      "future:1.40",
      "has description",
      "Asynchronous values."
    ],
    [
      "pin:1.40",
      "is a",
      "module"
    ],
    [
      "pin:1.40",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "task:1.40",
      "is a",
      "module"
    ],
    [
      "task:1.40",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.40",
      "has version",
      "1.40.0:1.40"
    ],
    [
      "std:1.40",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#1-571"
    ],
    [
      "array:1.40",
      "is a",
      "module"
    ],
    [
      "array:1.40",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "test:1.40",
      "is a",
      "crate"
    ],
    [
      "test:1.40",
      "has description",
      "Support code for rustc's built in unit-test and micro-benchmarking framework."
    ],
    [
      "std:1.40",
      "contains",
      "test:1.40"
    ],
    [
      "unit:1.40",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.40",
      "has description",
      "The () type, sometimes called 'unit' or 'nil'."
    ],
    [
      "std:1.40",
      "contains",
      "unit:1.40"
    ],
    [
      "never:1.40",
      "is a",
      "primitive type"
    ],
    [
      "never:1.40",
      "has description",
      "The ! type, also called 'never'."
    ],
    [
      "never:1.40",
      "has attribute",
      "Experimental:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "never:1.40"
    ],
    [
      "fn:1.40",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.40",
      "has description",
      "Function pointers, like fn(usize) -> bool."
    ],
    [
      "std:1.40",
      "contains",
      "fn:1.40"
    ],
    [
      "reference:1.40",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.40",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.40",
      "contains",
      "reference:1.40"
    ],
    [
      "alloc:1.40",
      "is a",
      "module"
    ],
    [
      "alloc:1.40",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "arch:1.40",
      "is a",
      "module"
    ],
    [
      "arch:1.40",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.40",
      "contains",
      "arch:1.40"
    ],
    [
      "hint:1.40",
      "is a",
      "module"
    ],
    [
      "hint:1.40",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "std:1.40",
      "contains",
      "hint:1.40"
    ],
    [
      "is_x86_feature_detected!:1.40",
      "is a",
      "macro"
    ],
    [
      "is_x86_feature_detected!:1.40",
      "has description",
      "A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."
    ],
    [
      "std:1.40",
      "contains",
      "is_x86_feature_detected!:1.40"
    ],
    [
      "await!:1.40",
      "is a",
      "macro"
    ],
    [
      "await!:1.40",
      "has attribute",
      "Experimental:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "await!:1.40"
    ],
    [
      "format!:1.40",
      "has description",
      "Creates a String using interpolation of runtime expressions."
    ],
    [
      "std:1.40",
      "has version",
      "1.30.1:1.40"
    ],
    [
      "std:1.40",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-540"
    ],
    [
      "fn:1.40",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "unit:1.40",
      "has description",
      "The `()` type, sometimes called 'unit' or 'nil'."
    ],
    [
      "never:1.40",
      "has description",
      "The `!` type, also called 'never'."
    ],
    [
      "future:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "pin:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "pin:1.40",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "task:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "task:1.40",
      "has description",
      "Types and Traits for working with asynchronous tasks"
    ],
    [
      "backtrace:1.40",
      "is a",
      "module"
    ],
    [
      "backtrace:1.40",
      "has description",
      "Support for capturing OS thread backtraces"
    ],
    [
      "std::intrinsics:1.40",
      "has description",
      "Compiler intrinsics module"
    ],
    [
      "dbg:1.40",
      "is a",
      "macro"
    ],
    [
      "dbg:1.40",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "debug_assert:1.40",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq:1.40",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "debug_assert_ne:1.40",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "format_args_nl:1.40",
      "is a",
      "macro"
    ],
    [
      "format_args_nl:1.40",
      "has attribute",
      "Experimental:1.40"
    ],
    [
      "global_asm:1.40",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.40",
      "has attribute",
      "Experimental:1.40"
    ],
    [
      "std:1.40",
      "contains",
      "super:1.40"
    ],
    [
      "super:1.40",
      "has description",
      "The parent of the current module"
    ],
    [
      "std:1.40",
      "contains",
      "trait:1.40"
    ],
    [
      "trait:1.40",
      "has description",
      "A common interface for a class of types."
    ],
    [
      "std:1.40",
      "contains",
      "true:1.40"
    ],
    [
      "true:1.40",
      "has description",
      "A value of type bool representing logical true."
    ],
    [
      "std:1.40",
      "contains",
      "type:1.40"
    ],
    [
      "type:1.40",
      "has description",
      "Define an alias for an existing type."
    ],
    [
      "std:1.40",
      "contains",
      "union:1.40"
    ],
    [
      "union:1.40",
      "has description",
      "The Rust equivalent of a C-style union"
    ],
    [
      "std:1.40",
      "contains",
      "unsafe:1.40"
    ],
    [
      "unsafe:1.40",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system."
    ],
    [
      "std:1.40",
      "contains",
      "use:1.40"
    ],
    [
      "use:1.40",
      "has description",
      "Import or rename items from other crates or modules."
    ],
    [
      "std:1.40",
      "contains",
      "where:1.40"
    ],
    [
      "where:1.40",
      "has description",
      "Add constraints that must be upheld to use an item."
    ],
    [
      "std:1.40",
      "contains",
      "while:1.40"
    ],
    [
      "while:1.40",
      "has description",
      "Loop while a condition is upheld."
    ],
    [
      "std:1.40",
      "contains",
      "backtrace:1.40"
    ],
    [
      "backtrace:1.40",
      "has attribute",
      "Experimental:1.40"
    ],
    [
      "backtrace:1.40",
      "has description",
      "Support for capturing a stack backtrace of an OS thread"
    ],
    [
      "std::intrinsics:1.40",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "format_args_nl:1.40",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "std:1.40",
      "contains",
      "async:1.40"
    ],
    [
      "async:1.40",
      "is a",
      "keyword"
    ],
    [
      "async:1.40",
      "has description",
      "Return a Future instead of blocking the current thread."
    ],
    [
      "std:1.40",
      "contains",
      "await:1.40"
    ],
    [
      "await:1.40",
      "is a",
      "keyword"
    ],
    [
      "await:1.40",
      "has description",
      "Suspend execution until the result of a Future is ready."
    ],
    [
      "super:1.40",
      "is a",
      "keyword"
    ],
    [
      "super:1.40",
      "has description",
      "The parent of the current module."
    ],
    [
      "trait:1.40",
      "is a",
      "keyword"
    ],
    [
      "true:1.40",
      "is a",
      "keyword"
    ],
    [
      "type:1.40",
      "is a",
      "keyword"
    ],
    [
      "union:1.40",
      "is a",
      "keyword"
    ],
    [
      "union:1.40",
      "has description",
      "The Rust equivalent of a C-style union."
    ],
    [
      "unsafe:1.40",
      "is a",
      "keyword"
    ],
    [
      "use:1.40",
      "is a",
      "keyword"
    ],
    [
      "where:1.40",
      "is a",
      "keyword"
    ],
    [
      "while:1.40",
      "is a",
      "keyword"
    ],
    [
      "backtrace:1.40",
      "has description",
      "Support for capturing stack backtraces"
    ],
    [
      "todo:1.40",
      "is a",
      "macro"
    ],
    [
      "todo:1.40",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "asm:1.40",
      "is a",
      "macro"
    ],
    [
      "asm:1.40",
      "has description",
      "Inline assembly."
    ],
    [
      "format_args_nl:1.40",
      "has description",
      "Same as format_args but adds a newline"
    ],
    [
      "backtrace:1.40",
      "has stability",
      "Experimental:1.40"
    ],
    [
      "assert:1.40",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "trait:1.40",
      "has description",
      "A common interface for a class of types"
    ],
    [
      "true:1.40",
      "has description",
      "A value of type bool representing logical true"
    ],
    [
      "type:1.40",
      "has description",
      "Define an alias for an existing type"
    ],
    [
      "unsafe:1.40",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system"
    ],
    [
      "use:1.40",
      "has description",
      "Import or rename items from other crates or modules"
    ],
    [
      "where:1.40",
      "has description",
      "Add constraints that must be upheld to use an item"
    ],
    [
      "while:1.40",
      "has description",
      "Loop while a condition is upheld"
    ],
    [
      "std:1.80",
      "is a",
      "crate"
    ],
    [
      "std:1.80",
      "stable since",
      "1.0.0"
    ],
    [
      "std:1.80",
      "has source code",
      "src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.80",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."
    ],
    [
      "std:1.80",
      "contains",
      "std::any:1.80"
    ],
    [
      "std::any:1.80",
      "has description",
      "This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std:1.80",
      "contains",
      "std::ascii:1.80"
    ],
    [
      "std::ascii:1.80",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "std:1.80",
      "contains",
      "std::borrow:1.80"
    ],
    [
      "std::borrow:1.80",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "std:1.80",
      "contains",
      "std::boxed:1.80"
    ],
    [
      "std::boxed:1.80",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "std:1.80",
      "contains",
      "std::cell:1.80"
    ],
    [
      "std::cell:1.80",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "std:1.80",
      "contains",
      "std::char:1.80"
    ],
    [
      "std::char:1.80",
      "has description",
      "A character type."
    ],
    [
      "std:1.80",
      "contains",
      "std::collections:1.80"
    ],
    [
      "std::collections:1.80",
      "has description",
      "Collection types."
    ],
    [
      "std:1.80",
      "contains",
      "std::env:1.80"
    ],
    [
      "std::env:1.80",
      "has description",
      "Inspection and manipulation of the process's environment."
    ],
    [
      "std:1.80",
      "contains",
      "std::fs:1.80"
    ],
    [
      "std::fs:1.80",
      "has description",
      "Filesystem manipulation operations."
    ],
    [
      "std:1.80",
      "contains",
      "std::net:1.80"
    ],
    [
      "std::net:1.80",
      "has description",
      "Networking primitives for TCP/UDP communication."
    ],
    [
      "std:1.80",
      "contains",
      "std::thread:1.80"
    ],
    [
      "std::thread:1.80",
      "has description",
      "Native threads."
    ],
    [
      "array:1.80",
      "is a",
      "primitive type"
    ],
    [
      "array:1.80",
      "has description",
      "A fixed-size array, denoted [T; N]"
    ],
    [
      "std:1.80",
      "contains",
      "array:1.80"
    ],
    [
      "bool:1.80",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.80",
      "has description",
      "The boolean type."
    ],
    [
      "std:1.80",
      "contains",
      "bool:1.80"
    ],
    [
      "std::str:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::str:1.80",
      "has description",
      "String slices."
    ],
    [
      "std:1.80",
      "contains",
      "std::str:1.80"
    ],
    [
      "assert!:1.80",
      "is a",
      "macro"
    ],
    [
      "assert!:1.80",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "std:1.80",
      "contains",
      "assert!:1.80"
    ],
    [
      "format!:1.80",
      "is a",
      "macro"
    ],
    [
      "format!:1.80",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String."
    ],
    [
      "std:1.80",
      "contains",
      "format!:1.80"
    ],
    [
      "vec!:1.80",
      "is a",
      "macro"
    ],
    [
      "vec!:1.80",
      "has description",
      "Creates a Vec containing the arguments."
    ],
    [
      "std:1.80",
      "contains",
      "vec!:1.80"
    ],
    [
      "std::intrinsics:1.80",
      "has stability",
      "Unstable:1.80"
    ],
    [
      "std::intrinsics:1.80",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "std:1.80",
      "contains",
      "std::intrinsics:1.80"
    ],
    [
      "std::raw:1.80",
      "has stability",
      "Unstable:1.80"
    ],
    [
      "std::raw:1.80",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "std:1.80",
      "contains",
      "std::raw:1.80"
    ],
    [
      "std:1.80",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."
    ],
    [
      "std:1.80",
      "contains",
      "std::clone:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::cmp:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::convert:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::default:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::error:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::f32:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::f64:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::ffi:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::fmt:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::hash:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::i16:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::i32:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::i64:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::i8:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::io:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::isize:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::iter:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::marker:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::mem:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::num:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::ops:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::option:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::os:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::panic:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::path:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::prelude:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::process:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::ptr:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::rc:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::result:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::slice:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::string:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::sync:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::time:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::u16:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::u32:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::u64:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::u8:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::usize:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std::vec:1.80"
    ],
    [
      "array:1.80",
      "has description",
      "A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."
    ],
    [
      "std::char:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.80",
      "has description",
      "The 32-bit floating point type."
    ],
    [
      "std::f64:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::f64:1.80",
      "has description",
      "The 64-bit floating point type."
    ],
    [
      "std::i16:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::i16:1.80",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "std::i32:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::i32:1.80",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "std::i64:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::i64:1.80",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "std::i8:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::i8:1.80",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "std::isize:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::isize:1.80",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "pointer:1.80",
      "is a",
      "primitive type"
    ],
    [
      "pointer:1.80",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::slice:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::slice:1.80",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]."
    ],
    [
      "tuple:1.80",
      "is a",
      "primitive type"
    ],
    [
      "tuple:1.80",
      "has description",
      "A finite heterogeneous sequence, (T, U, ..)."
    ],
    [
      "std::u16:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::u16:1.80",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "std::u32:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::u32:1.80",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "std::u64:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::u64:1.80",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "std::u8:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::u8:1.80",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "std::usize:1.80",
      "is a",
      "primitive type"
    ],
    [
      "std::usize:1.80",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "std::any:1.80",
      "is a",
      "module"
    ],
    [
      "std::any:1.80",
      "has description",
      "This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std::ascii:1.80",
      "is a",
      "module"
    ],
    [
      "std::borrow:1.80",
      "is a",
      "module"
    ],
    [
      "std::boxed:1.80",
      "is a",
      "module"
    ],
    [
      "std::cell:1.80",
      "is a",
      "module"
    ],
    [
      "std::char:1.80",
      "is a",
      "module"
    ],
    [
      "std::clone:1.80",
      "is a",
      "module"
    ],
    [
      "std::clone:1.80",
      "has description",
      "The Clone trait for types that cannot be 'implicitly copied'."
    ],
    [
      "std::cmp:1.80",
      "is a",
      "module"
    ],
    [
      "std::cmp:1.80",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "std::collections:1.80",
      "is a",
      "module"
    ],
    [
      "std::convert:1.80",
      "is a",
      "module"
    ],
    [
      "std::convert:1.80",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "std::default:1.80",
      "is a",
      "module"
    ],
    [
      "std::default:1.80",
      "has description",
      "The Default trait for types which may have meaningful default values."
    ],
    [
      "std::env:1.80",
      "is a",
      "module"
    ],
    [
      "std::error:1.80",
      "is a",
      "module"
    ],
    [
      "std::error:1.80",
      "has description",
      "Traits for working with Errors."
    ],
    [
      "std::f32:1.80",
      "is a",
      "module"
    ],
    [
      "std::f64:1.80",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.80",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.80",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "std::fmt:1.80",
      "is a",
      "module"
    ],
    [
      "std::fmt:1.80",
      "has description",
      "Utilities for formatting and printing strings"
    ],
    [
      "std::fs:1.80",
      "is a",
      "module"
    ],
    [
      "std::hash:1.80",
      "is a",
      "module"
    ],
    [
      "std::hash:1.80",
      "has description",
      "Generic hashing support."
    ],
    [
      "std::i16:1.80",
      "is a",
      "module"
    ],
    [
      "std::i32:1.80",
      "is a",
      "module"
    ],
    [
      "std::i64:1.80",
      "is a",
      "module"
    ],
    [
      "std::i8:1.80",
      "is a",
      "module"
    ],
    [
      "std::io:1.80",
      "is a",
      "module"
    ],
    [
      "std::io:1.80",
      "has description",
      "Traits, helpers, and type definitions for core I/O functionality."
    ],
    [
      "std::isize:1.80",
      "is a",
      "module"
    ],
    [
      "std::iter:1.80",
      "is a",
      "module"
    ],
    [
      "std::iter:1.80",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::marker:1.80",
      "is a",
      "module"
    ],
    [
      "std::marker:1.80",
      "has description",
      "Primitive traits and marker types representing basic 'kinds' of types."
    ],
    [
      "std::mem:1.80",
      "is a",
      "module"
    ],
    [
      "std::mem:1.80",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "std::net:1.80",
      "is a",
      "module"
    ],
    [
      "std::num:1.80",
      "is a",
      "module"
    ],
    [
      "std::num:1.80",
      "has description",
      "Additional functionality for numerics."
    ],
    [
      "std::ops:1.80",
      "is a",
      "module"
    ],
    [
      "std::ops:1.80",
      "has description",
      "Overloadable operators."
    ],
    [
      "std::option:1.80",
      "is a",
      "module"
    ],
    [
      "std::option:1.80",
      "has description",
      "Optional values."
    ],
    [
      "std::os:1.80",
      "is a",
      "module"
    ],
    [
      "std::os:1.80",
      "has description",
      "OS-specific functionality."
    ],
    [
      "std::panic:1.80",
      "is a",
      "module"
    ],
    [
      "std::panic:1.80",
      "has description",
      "Panic support in the standard library"
    ],
    [
      "std::path:1.80",
      "is a",
      "module"
    ],
    [
      "std::path:1.80",
      "has description",
      "Cross-platform path manipulation."
    ],
    [
      "std::prelude:1.80",
      "is a",
      "module"
    ],
    [
      "std::prelude:1.80",
      "has description",
      "The Rust Prelude."
    ],
    [
      "std::process:1.80",
      "is a",
      "module"
    ],
    [
      "std::process:1.80",
      "has description",
      "Working with processes."
    ],
    [
      "std::ptr:1.80",
      "is a",
      "module"
    ],
    [
      "std::ptr:1.80",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::rc:1.80",
      "is a",
      "module"
    ],
    [
      "std::rc:1.80",
      "has description",
      "Thread-local reference-counted boxes (the Rc<T> type)."
    ],
    [
      "std::result:1.80",
      "is a",
      "module"
    ],
    [
      "std::result:1.80",
      "has description",
      "Error handling with the Result type."
    ],
    [
      "std::slice:1.80",
      "is a",
      "module"
    ],
    [
      "std::str:1.80",
      "is a",
      "module"
    ],
    [
      "std::str:1.80",
      "has description",
      "Unicode string slices."
    ],
    [
      "std::string:1.80",
      "is a",
      "module"
    ],
    [
      "std::string:1.80",
      "has description",
      "A UTF-8 encoded, growable string."
    ],
    [
      "std::sync:1.80",
      "is a",
      "module"
    ],
    [
      "std::sync:1.80",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::thread:1.80",
      "is a",
      "module"
    ],
    [
      "std::time:1.80",
      "is a",
      "module"
    ],
    [
      "std::time:1.80",
      "has description",
      "Temporal quantification."
    ],
    [
      "std::u16:1.80",
      "is a",
      "module"
    ],
    [
      "std::u32:1.80",
      "is a",
      "module"
    ],
    [
      "std::u64:1.80",
      "is a",
      "module"
    ],
    [
      "std::u8:1.80",
      "is a",
      "module"
    ],
    [
      "std::usize:1.80",
      "is a",
      "module"
    ],
    [
      "std::vec:1.80",
      "is a",
      "module"
    ],
    [
      "std::vec:1.80",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."
    ],
    [
      "std::intrinsics:1.80",
      "is a",
      "module"
    ],
    [
      "std::intrinsics:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "std::raw:1.80",
      "is a",
      "module"
    ],
    [
      "std::raw:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "assert_eq!:1.80",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.80",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "cfg!:1.80",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.80",
      "has description",
      "Boolean evaluation of configuration flags."
    ],
    [
      "column!:1.80",
      "is a",
      "macro"
    ],
    [
      "column!:1.80",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "concat!:1.80",
      "is a",
      "macro"
    ],
    [
      "concat!:1.80",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "concat_idents!:1.80",
      "is a",
      "macro"
    ],
    [
      "concat_idents!:1.80",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "debug_assert!:1.80",
      "is a",
      "macro"
    ],
    [
      "debug_assert!:1.80",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq!:1.80",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq!:1.80",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "env!:1.80",
      "is a",
      "macro"
    ],
    [
      "env!:1.80",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "file!:1.80",
      "is a",
      "macro"
    ],
    [
      "file!:1.80",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "format!:1.80",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."
    ],
    [
      "format_args!:1.80",
      "is a",
      "macro"
    ],
    [
      "format_args!:1.80",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "include!:1.80",
      "is a",
      "macro"
    ],
    [
      "include!:1.80",
      "has description",
      "Parse the current given file as an expression."
    ],
    [
      "include_bytes!:1.80",
      "is a",
      "macro"
    ],
    [
      "include_bytes!:1.80",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "include_str!:1.80",
      "is a",
      "macro"
    ],
    [
      "include_str!:1.80",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "line!:1.80",
      "is a",
      "macro"
    ],
    [
      "line!:1.80",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "module_path!:1.80",
      "is a",
      "macro"
    ],
    [
      "module_path!:1.80",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "option_env!:1.80",
      "is a",
      "macro"
    ],
    [
      "option_env!:1.80",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "panic!:1.80",
      "is a",
      "macro"
    ],
    [
      "panic!:1.80",
      "has description",
      "The entry point for panic of Rust threads."
    ],
    [
      "print!:1.80",
      "is a",
      "macro"
    ],
    [
      "print!:1.80",
      "has description",
      "Macro for printing to the standard output."
    ],
    [
      "println!:1.80",
      "is a",
      "macro"
    ],
    [
      "println!:1.80",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "stringify!:1.80",
      "is a",
      "macro"
    ],
    [
      "stringify!:1.80",
      "has description",
      "A macro which stringifies its argument."
    ],
    [
      "thread_local!:1.80",
      "is a",
      "macro"
    ],
    [
      "thread_local!:1.80",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey."
    ],
    [
      "scoped_thread_local!:1.80",
      "is a",
      "macro"
    ],
    [
      "scoped_thread_local!:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "scoped_thread_local!:1.80",
      "has description",
      "Declare a new scoped thread local storage key."
    ],
    [
      "select!:1.80",
      "is a",
      "macro"
    ],
    [
      "select!:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "select!:1.80",
      "has description",
      "A macro to select an event from a number of receivers."
    ],
    [
      "try!:1.80",
      "is a",
      "macro"
    ],
    [
      "try!:1.80",
      "has description",
      "Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."
    ],
    [
      "unimplemented!:1.80",
      "is a",
      "macro"
    ],
    [
      "unimplemented!:1.80",
      "has description",
      "A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."
    ],
    [
      "unreachable!:1.80",
      "is a",
      "macro"
    ],
    [
      "unreachable!:1.80",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "write!:1.80",
      "is a",
      "macro"
    ],
    [
      "write!:1.80",
      "has description",
      "Use the format! syntax to write data into a buffer."
    ],
    [
      "writeln!:1.80",
      "is a",
      "macro"
    ],
    [
      "writeln!:1.80",
      "has description",
      "Use the format! syntax to write data into a buffer, appending a newline."
    ],
    [
      "std:1.80",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.80",
      "contains",
      "alloc:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "core:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "libc:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "rustc_unicode:1.80"
    ],
    [
      "std::any:1.80",
      "has alias",
      "any"
    ],
    [
      "std::ascii:1.80",
      "has alias",
      "ascii"
    ],
    [
      "std::borrow:1.80",
      "has alias",
      "borrow"
    ],
    [
      "std::boxed:1.80",
      "has alias",
      "boxed"
    ],
    [
      "std::cell:1.80",
      "has alias",
      "cell"
    ],
    [
      "std::char:1.80",
      "has alias",
      "char"
    ],
    [
      "std::clone:1.80",
      "has alias",
      "clone"
    ],
    [
      "std::cmp:1.80",
      "has alias",
      "cmp"
    ],
    [
      "std::collections:1.80",
      "has alias",
      "collections"
    ],
    [
      "std::convert:1.80",
      "has alias",
      "convert"
    ],
    [
      "std::default:1.80",
      "has alias",
      "default"
    ],
    [
      "std::env:1.80",
      "has alias",
      "env"
    ],
    [
      "std::error:1.80",
      "has alias",
      "error"
    ],
    [
      "std::f32:1.80",
      "has alias",
      "f32"
    ],
    [
      "std::f64:1.80",
      "has alias",
      "f64"
    ],
    [
      "std::ffi:1.80",
      "has alias",
      "ffi"
    ],
    [
      "std::fmt:1.80",
      "has alias",
      "fmt"
    ],
    [
      "std::fs:1.80",
      "has alias",
      "fs"
    ],
    [
      "std::hash:1.80",
      "has alias",
      "hash"
    ],
    [
      "std::i16:1.80",
      "has alias",
      "i16"
    ],
    [
      "std::i32:1.80",
      "has alias",
      "i32"
    ],
    [
      "std::i64:1.80",
      "has alias",
      "i64"
    ],
    [
      "std::i8:1.80",
      "has alias",
      "i8"
    ],
    [
      "std::io:1.80",
      "has alias",
      "io"
    ],
    [
      "std::isize:1.80",
      "has alias",
      "isize"
    ],
    [
      "std::iter:1.80",
      "has alias",
      "iter"
    ],
    [
      "std::marker:1.80",
      "has alias",
      "marker"
    ],
    [
      "std::mem:1.80",
      "has alias",
      "mem"
    ],
    [
      "std::net:1.80",
      "has alias",
      "net"
    ],
    [
      "std::num:1.80",
      "has alias",
      "num"
    ],
    [
      "std::ops:1.80",
      "has alias",
      "ops"
    ],
    [
      "std::option:1.80",
      "has alias",
      "option"
    ],
    [
      "std::os:1.80",
      "has alias",
      "os"
    ],
    [
      "std::panic:1.80",
      "has alias",
      "panic"
    ],
    [
      "std::path:1.80",
      "has alias",
      "path"
    ],
    [
      "std::prelude:1.80",
      "has alias",
      "prelude"
    ],
    [
      "std::process:1.80",
      "has alias",
      "process"
    ],
    [
      "std::ptr:1.80",
      "has alias",
      "ptr"
    ],
    [
      "std::rc:1.80",
      "has alias",
      "rc"
    ],
    [
      "std::result:1.80",
      "has alias",
      "result"
    ],
    [
      "std::slice:1.80",
      "has alias",
      "slice"
    ],
    [
      "std::str:1.80",
      "has alias",
      "str"
    ],
    [
      "std::string:1.80",
      "has alias",
      "string"
    ],
    [
      "std::sync:1.80",
      "has alias",
      "sync"
    ],
    [
      "std::thread:1.80",
      "has alias",
      "thread"
    ],
    [
      "std::time:1.80",
      "has alias",
      "time"
    ],
    [
      "std::u16:1.80",
      "has alias",
      "u16"
    ],
    [
      "std::u32:1.80",
      "has alias",
      "u32"
    ],
    [
      "std::u64:1.80",
      "has alias",
      "u64"
    ],
    [
      "std::u8:1.80",
      "has alias",
      "u8"
    ],
    [
      "std::usize:1.80",
      "has alias",
      "usize"
    ],
    [
      "std::vec:1.80",
      "has alias",
      "vec"
    ],
    [
      "std::vec:1.80",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"
    ],
    [
      "std::intrinsics:1.80",
      "has alias",
      "intrinsics"
    ],
    [
      "std::raw:1.80",
      "has alias",
      "raw"
    ],
    [
      "scoped_thread_local!:1.80",
      "has stability",
      "Deprecated:1.80"
    ],
    [
      "scoped_thread_local!:1.80",
      "has stability",
      "Unstable:1.80"
    ],
    [
      ":1.80",
      null,
      "undefined:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "proc_macro:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "std_unicode:1.80"
    ],
    [
      "std:1.80",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-493"
    ],
    [
      "std::process:1.80",
      "has description",
      "A module for working with processes."
    ],
    [
      "i128:1.80",
      "is a",
      "primitive type"
    ],
    [
      "i128:1.80",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "i128:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "u128:1.80",
      "is a",
      "primitive type"
    ],
    [
      "u128:1.80",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "u128:1.80",
      "has attribute",
      "unstable:1.80"
    ],
    [
      "eprint!:1.80",
      "is a",
      "macro"
    ],
    [
      "eprint!:1.80",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln!:1.80",
      "is a",
      "macro"
    ],
    [
      "eprintln!:1.80",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "assert_ne!:1.80",
      "is a",
      "macro"
    ],
    [
      "assert_ne!:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "debug_assert_ne!:1.80",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne!:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "std::intrinsics:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "std::raw:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "proc_macro:1.80",
      "is a",
      "crate"
    ],
    [
      "proc_macro:1.80",
      "has description",
      "A support library for macro authors when defining new macros."
    ],
    [
      "std_unicode:1.80",
      "is a",
      "crate"
    ],
    [
      "std_unicode:1.80",
      "has description",
      "The Unicode Library"
    ],
    [
      "select!:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "try!:1.80",
      "has description",
      "Helper macro for reducing boilerplate for matching Result together with converting downstream errors."
    ],
    [
      "include!:1.80",
      "has description",
      "Parse a file as an expression or an item according to the context"
    ],
    [
      "println!:1.80",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."
    ],
    [
      "write!:1.80",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "writeln!:1.80",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "std::f32:1.80",
      "has description",
      "This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::f64:1.80",
      "has description",
      "This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::intrinsics:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "std::raw:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "println!:1.80",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."
    ],
    [
      "scoped_thread_local!:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "select!:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "write!:1.80",
      "has description",
      "Write formatted data into a buffer"
    ],
    [
      "std::rc:1.80",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std:1.80",
      "contains",
      "i128:1.80"
    ],
    [
      "i128:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "u128:1.80"
    ],
    [
      "u128:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "eprint!:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "eprintln!:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "compile_error!:1.80"
    ],
    [
      "compile_error!:1.80",
      "is a",
      "macro"
    ],
    [
      "compile_error!:1.80",
      "has description",
      "Unconditionally causes compilation to fail with the given error message."
    ],
    [
      "include!:1.80",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "writeln!:1.80",
      "has description",
      "Write formatted data into a buffer with appended newline."
    ],
    [
      "println!:1.80",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."
    ],
    [
      "std:1.80",
      "stable since",
      "1.40.0"
    ],
    [
      "std:1.80",
      "contains",
      "future:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "pin:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "task:1.80"
    ],
    [
      "std::ptr:1.80",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "std::slice:1.80",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "future:1.80",
      "is a",
      "module"
    ],
    [
      "future:1.80",
      "has description",
      "Asynchronous values."
    ],
    [
      "pin:1.80",
      "is a",
      "module"
    ],
    [
      "pin:1.80",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "task:1.80",
      "is a",
      "module"
    ],
    [
      "task:1.80",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.80",
      "has version",
      "1.40.0:1.80"
    ],
    [
      "std:1.80",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#1-571"
    ],
    [
      "array:1.80",
      "is a",
      "module"
    ],
    [
      "array:1.80",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.80",
      "stable since",
      "1.50.0"
    ],
    [
      "std::f32:1.80",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "std::f64:1.80",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "std:1.80",
      "contains",
      "backtrace:1.80"
    ],
    [
      "backtrace:1.80",
      "is a",
      "module"
    ],
    [
      "backtrace:1.80",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "backtrace:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "format_args_nl:1.80",
      "is a",
      "macro"
    ],
    [
      "format_args_nl:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "format_args_nl:1.80",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "std:1.80",
      "has version",
      "1.50.0:1.80"
    ],
    [
      "backtrace:1.80",
      "has description",
      "Support for capturing a stack backtrace of an OS thread"
    ],
    [
      "backtrace:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "unit:1.80",
      "has description",
      "The () type, also called \"unit\"."
    ],
    [
      "format_args_nl!:1.80",
      "is a",
      "macro"
    ],
    [
      "std:1.80",
      "contains",
      "format_args_nl!:1.80"
    ],
    [
      "format_args_nl!:1.80",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "format_args_nl!:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "unit:1.80",
      "has description",
      "The () type, also called \"unit\""
    ],
    [
      "format_args_nl:1.80",
      "has description",
      "Same as format_args, but adds a newline in the end"
    ],
    [
      "format_args_nl:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "std:1.80",
      "stable since",
      "1.60.0"
    ],
    [
      "std:1.80",
      "contains",
      "async_iter:1.80"
    ],
    [
      "async_iter:1.80",
      "is a",
      "module"
    ],
    [
      "async_iter:1.80",
      "has description",
      "Composable asynchronous iteration."
    ],
    [
      "std:1.80",
      "contains",
      "assert_matches:1.80"
    ],
    [
      "assert_matches:1.80",
      "is a",
      "module"
    ],
    [
      "assert_matches:1.80",
      "has description",
      "Unstable module containing the unstable assert_matches macro."
    ],
    [
      "std:1.80",
      "contains",
      "simd:1.80"
    ],
    [
      "simd:1.80",
      "is a",
      "module"
    ],
    [
      "simd:1.80",
      "has description",
      "Portable SIMD module."
    ],
    [
      "std::ptr:1.80",
      "has description",
      "Manually manage memory through raw pointers."
    ],
    [
      "std:1.80",
      "contains",
      "hint:1.80"
    ],
    [
      "hint:1.80",
      "is a",
      "module"
    ],
    [
      "hint:1.80",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "std::f32:1.80",
      "has description",
      "Constants specific to the f32 single-precision floating point type."
    ],
    [
      "std::f64:1.80",
      "has description",
      "Constants specific to the f64 double-precision floating point type."
    ],
    [
      "std::i8:1.80",
      "has description",
      "Constants for the 8-bit signed integer type."
    ],
    [
      "std::i8:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::i16:1.80",
      "has description",
      "Constants for the 16-bit signed integer type."
    ],
    [
      "std::i16:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::i32:1.80",
      "has description",
      "Constants for the 32-bit signed integer type."
    ],
    [
      "std::i32:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::i64:1.80",
      "has description",
      "Constants for the 64-bit signed integer type."
    ],
    [
      "std::i64:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "i128:1.80",
      "has description",
      "Constants for the 128-bit signed integer type."
    ],
    [
      "i128:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::isize:1.80",
      "has description",
      "Constants for the pointer-sized signed integer type."
    ],
    [
      "std::isize:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::u8:1.80",
      "has description",
      "Constants for the 8-bit unsigned integer type."
    ],
    [
      "std::u8:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::u16:1.80",
      "has description",
      "Constants for the 16-bit unsigned integer type."
    ],
    [
      "std::u16:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::u32:1.80",
      "has description",
      "Constants for the 32-bit unsigned integer type."
    ],
    [
      "std::u32:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::u64:1.80",
      "has description",
      "Constants for the 64-bit unsigned integer type."
    ],
    [
      "std::u64:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "u128:1.80",
      "has description",
      "Constants for the 128-bit unsigned integer type."
    ],
    [
      "u128:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std::usize:1.80",
      "has description",
      "Constants for the pointer-sized unsigned integer type."
    ],
    [
      "std::usize:1.80",
      "has attribute",
      "deprecated:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "concat_bytes!:1.80"
    ],
    [
      "concat_bytes!:1.80",
      "is a",
      "macro"
    ],
    [
      "concat_bytes!:1.80",
      "has description",
      "Concatenates literals into a byte slice."
    ],
    [
      "std:1.80",
      "has version",
      "1.60.0:1.80"
    ],
    [
      "format_args_nl!:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "arch:1.80"
    ],
    [
      "arch:1.80",
      "is a",
      "module"
    ],
    [
      "arch:1.80",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.80",
      "contains",
      "concat_bytes:1.80"
    ],
    [
      "concat_bytes:1.80",
      "is a",
      "macro"
    ],
    [
      "concat_bytes:1.80",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "std:1.80",
      "contains",
      "const_format_args:1.80"
    ],
    [
      "const_format_args:1.80",
      "is a",
      "macro"
    ],
    [
      "std::f32:1.80",
      "has description",
      "Constants specific to the implementation of the f32 floating point type."
    ],
    [
      "std::f64:1.80",
      "has description",
      "Constants specific to the implementation of the f64 floating point type."
    ],
    [
      "std:1.80",
      "has version",
      "1.70.0:1.80"
    ],
    [
      "std:1.80",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#1-686"
    ],
    [
      "std:1.80",
      "stable since",
      "1.70.0"
    ],
    [
      "never:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "never:1.80",
      "is a",
      "primitive type"
    ],
    [
      "never:1.80",
      "has description",
      "The ! type, also called 'never'."
    ],
    [
      "async_iter:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "simd:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "test:1.80",
      "is a",
      "crate"
    ],
    [
      "test:1.80",
      "has description",
      "Support code for rustc's built in unit-test and micro-benchmarking framework."
    ],
    [
      "std:1.80",
      "contains",
      "test:1.80"
    ],
    [
      "unit:1.80",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.80",
      "has description",
      "The () type, sometimes called 'unit' or 'nil'."
    ],
    [
      "std:1.80",
      "contains",
      "unit:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "never:1.80"
    ],
    [
      "fn:1.80",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.80",
      "has description",
      "Function pointers, like fn(usize) -> bool."
    ],
    [
      "std:1.80",
      "contains",
      "fn:1.80"
    ],
    [
      "reference:1.80",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.80",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.80",
      "contains",
      "reference:1.80"
    ],
    [
      "alloc:1.80",
      "is a",
      "module"
    ],
    [
      "alloc:1.80",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "hint:1.80",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "is_x86_feature_detected!:1.80",
      "is a",
      "macro"
    ],
    [
      "is_x86_feature_detected!:1.80",
      "has description",
      "A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."
    ],
    [
      "std:1.80",
      "contains",
      "is_x86_feature_detected!:1.80"
    ],
    [
      "await!:1.80",
      "is a",
      "macro"
    ],
    [
      "await!:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "await!:1.80"
    ],
    [
      "format!:1.80",
      "has description",
      "Creates a String using interpolation of runtime expressions."
    ],
    [
      "std:1.80",
      "has version",
      "1.30.1:1.80"
    ],
    [
      "std:1.80",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-540"
    ],
    [
      "fn:1.80",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "unit:1.80",
      "has description",
      "The `()` type, sometimes called 'unit' or 'nil'."
    ],
    [
      "never:1.80",
      "has description",
      "The `!` type, also called 'never'."
    ],
    [
      "future:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "pin:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "pin:1.80",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "task:1.80",
      "has stability",
      "Experimental:1.80"
    ],
    [
      "task:1.80",
      "has description",
      "Types and Traits for working with asynchronous tasks"
    ],
    [
      "backtrace:1.80",
      "has description",
      "Support for capturing OS thread backtraces"
    ],
    [
      "std::intrinsics:1.80",
      "has description",
      "Compiler intrinsics module"
    ],
    [
      "dbg:1.80",
      "is a",
      "macro"
    ],
    [
      "dbg:1.80",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "debug_assert:1.80",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq:1.80",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "debug_assert_ne:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "global_asm:1.80",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "std:1.80",
      "contains",
      "super:1.80"
    ],
    [
      "super:1.80",
      "has description",
      "The parent of the current module"
    ],
    [
      "std:1.80",
      "contains",
      "trait:1.80"
    ],
    [
      "trait:1.80",
      "has description",
      "A common interface for a class of types."
    ],
    [
      "std:1.80",
      "contains",
      "true:1.80"
    ],
    [
      "true:1.80",
      "has description",
      "A value of type bool representing logical true."
    ],
    [
      "std:1.80",
      "contains",
      "type:1.80"
    ],
    [
      "type:1.80",
      "has description",
      "Define an alias for an existing type."
    ],
    [
      "std:1.80",
      "contains",
      "union:1.80"
    ],
    [
      "union:1.80",
      "has description",
      "The Rust equivalent of a C-style union"
    ],
    [
      "std:1.80",
      "contains",
      "unsafe:1.80"
    ],
    [
      "unsafe:1.80",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system."
    ],
    [
      "std:1.80",
      "contains",
      "use:1.80"
    ],
    [
      "use:1.80",
      "has description",
      "Import or rename items from other crates or modules."
    ],
    [
      "std:1.80",
      "contains",
      "where:1.80"
    ],
    [
      "where:1.80",
      "has description",
      "Add constraints that must be upheld to use an item."
    ],
    [
      "std:1.80",
      "contains",
      "while:1.80"
    ],
    [
      "while:1.80",
      "has description",
      "Loop while a condition is upheld."
    ],
    [
      "std::intrinsics:1.80",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "std:1.80",
      "contains",
      "async:1.80"
    ],
    [
      "async:1.80",
      "is a",
      "keyword"
    ],
    [
      "async:1.80",
      "has description",
      "Return a Future instead of blocking the current thread."
    ],
    [
      "std:1.80",
      "contains",
      "await:1.80"
    ],
    [
      "await:1.80",
      "is a",
      "keyword"
    ],
    [
      "await:1.80",
      "has description",
      "Suspend execution until the result of a Future is ready."
    ],
    [
      "super:1.80",
      "is a",
      "keyword"
    ],
    [
      "super:1.80",
      "has description",
      "The parent of the current module."
    ],
    [
      "trait:1.80",
      "is a",
      "keyword"
    ],
    [
      "true:1.80",
      "is a",
      "keyword"
    ],
    [
      "type:1.80",
      "is a",
      "keyword"
    ],
    [
      "union:1.80",
      "is a",
      "keyword"
    ],
    [
      "union:1.80",
      "has description",
      "The Rust equivalent of a C-style union."
    ],
    [
      "unsafe:1.80",
      "is a",
      "keyword"
    ],
    [
      "use:1.80",
      "is a",
      "keyword"
    ],
    [
      "where:1.80",
      "is a",
      "keyword"
    ],
    [
      "while:1.80",
      "is a",
      "keyword"
    ],
    [
      "backtrace:1.80",
      "has description",
      "Support for capturing stack backtraces"
    ],
    [
      "todo:1.80",
      "is a",
      "macro"
    ],
    [
      "todo:1.80",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "asm:1.80",
      "is a",
      "macro"
    ],
    [
      "asm:1.80",
      "has description",
      "Inline assembly."
    ],
    [
      "format_args_nl:1.80",
      "has description",
      "Same as format_args but adds a newline"
    ],
    [
      "assert:1.80",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "trait:1.80",
      "has description",
      "A common interface for a class of types"
    ],
    [
      "true:1.80",
      "has description",
      "A value of type bool representing logical true"
    ],
    [
      "type:1.80",
      "has description",
      "Define an alias for an existing type"
    ],
    [
      "unsafe:1.80",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system"
    ],
    [
      "use:1.80",
      "has description",
      "Import or rename items from other crates or modules"
    ],
    [
      "where:1.80",
      "has description",
      "Add constraints that must be upheld to use an item"
    ],
    [
      "while:1.80",
      "has description",
      "Loop while a condition is upheld"
    ],
    [
      "assert_eq:1.80",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "assert_ne:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "cfg:1.80",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "debug_assert_eq:1.80",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "debug_assert_ne:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "const:1.80",
      "has description",
      "Compile-time constants and compile-time evaluable functions."
    ],
    [
      "dyn:1.80",
      "has description",
      "dyn is a prefix of a trait object's type."
    ],
    [
      "static:1.80",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."
    ],
    [
      "option_env:1.80",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "assert:1.80",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.80",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.80",
      "is a",
      "macro"
    ],
    [
      "cfg:1.80",
      "is a",
      "macro"
    ],
    [
      "assert:1.80",
      "has description",
      "Asserts that a boolean expression is true at runtime"
    ],
    [
      "assert_eq:1.80",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "assert_ne:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "cfg:1.80",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time"
    ],
    [
      "dbg:1.80",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging"
    ],
    [
      "debug_assert:1.80",
      "has description",
      "Asserts that a boolean expression is true at runtime"
    ],
    [
      "std::env:1.80",
      "has description",
      "Inspects an environment variable at compile time"
    ],
    [
      "eprint:1.80",
      "has description",
      "Prints to the standard error"
    ],
    [
      "eprintln:1.80",
      "has description",
      "Prints to the standard error, with a newline"
    ],
    [
      "file:1.80",
      "has description",
      "Expands to the file name in which it was invoked"
    ],
    [
      "format:1.80",
      "has description",
      "Creates a String using interpolation of runtime expressions"
    ],
    [
      "static:1.80",
      "has description",
      "A static item is a value which is valid for the entire duration of your program"
    ],
    [
      "log_syntax:1.80",
      "is a",
      "macro"
    ],
    [
      "log_syntax:1.80",
      "has description",
      "Prints passed tokens into the standard output"
    ],
    [
      "SelfTy:1.80",
      "is a",
      "keyword"
    ],
    [
      "SelfTy:1.80",
      "has description",
      "The implementing type within a trait or impl block, or the current type within a type definition"
    ],
    [
      "const:1.80",
      "has description",
      "Compile-time constants, compile-time evaluable functions, and raw pointers"
    ],
    [
      "hint:1.80",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime"
    ],
    [
      "trait:1.80",
      "has description",
      "A common interface for a group of types."
    ],
    [
      "const:1.80",
      "has description",
      "Compile-time constants, compile-time evaluable functions, and raw pointers."
    ],
    [
      "log_syntax:1.80",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "SelfTy:1.80",
      "has description",
      "The implementing type within a trait or impl block, or the current type within a type definition."
    ],
    [
      "trace_macros:1.80",
      "has description",
      "Enables or disables tracing functionality used for debugging other macros."
    ],
    [
      "format_args!:1.80",
      "has description",
      "Constructs parameters for the other string-formatting macros."
    ],
    [
      "format_args_nl!:1.80",
      "has description",
      "Same as format_args but adds a newline"
    ],
    [
      "log_syntax!:1.80",
      "is a",
      "macro"
    ],
    [
      "log_syntax!:1.80",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "is_x86_feature_detected!:1.80",
      "has attribute",
      "x86 or x86-64:1.80"
    ],
    [
      "std::char:1.80",
      "has description",
      "Utilities for the char primitive type."
    ],
    [
      "std::cmp:1.80",
      "has description",
      "Utilities for comparing and ordering values."
    ],
    [
      "future:1.80",
      "has description",
      "Asynchronous basic functionality."
    ],
    [
      "std::slice:1.80",
      "has description",
      "Utilities for the slice primitive type."
    ],
    [
      "std::str:1.80",
      "has description",
      "Utilities for the str primitive type."
    ],
    [
      "std::i8:1.80",
      "has description",
      "Redundant constants module for the i8 primitive type."
    ],
    [
      "std::i16:1.80",
      "has description",
      "Redundant constants module for the i16 primitive type."
    ],
    [
      "std::i32:1.80",
      "has description",
      "Redundant constants module for the i32 primitive type."
    ],
    [
      "std::i64:1.80",
      "has description",
      "Redundant constants module for the i64 primitive type."
    ],
    [
      "i128:1.80",
      "has description",
      "Redundant constants module for the i128 primitive type."
    ],
    [
      "std::isize:1.80",
      "has description",
      "Redundant constants module for the isize primitive type."
    ],
    [
      "std::u8:1.80",
      "has description",
      "Redundant constants module for the u8 primitive type."
    ],
    [
      "std::u16:1.80",
      "has description",
      "Redundant constants module for the u16 primitive type."
    ],
    [
      "std::u32:1.80",
      "has description",
      "Redundant constants module for the u32 primitive type."
    ],
    [
      "std::u64:1.80",
      "has description",
      "Redundant constants module for the u64 primitive type."
    ],
    [
      "u128:1.80",
      "has description",
      "Redundant constants module for the u128 primitive type."
    ],
    [
      "std::usize:1.80",
      "has description",
      "Redundant constants module for the usize primitive type."
    ],
    [
      "std::i8:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::i16:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::i32:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::i64:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "i128:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::isize:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::u8:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::u16:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::u32:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::u64:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "u128:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::usize:1.80",
      "has attribute",
      "Deprecation planned:1.80"
    ],
    [
      "std::default:1.80",
      "has description",
      "The Default trait for types with a default value."
    ],
    [
      "std::error:1.80",
      "has description",
      "Interfaces for working with Errors."
    ],
    [
      "std::f32:1.80",
      "has description",
      "Constants for the f32 single-precision floating point type."
    ],
    [
      "std::f64:1.80",
      "has description",
      "Constants for the f64 double-precision floating point type."
    ],
    [
      "concat_bytes!:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "concat_bytes:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "concat_idents:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "const_format_args:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "log_syntax:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "trace_macros:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "std::cfg:1.80",
      "is a",
      "macro"
    ],
    [
      "std::cfg:1.80",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time"
    ],
    [
      "std::column:1.80",
      "is a",
      "macro"
    ],
    [
      "std::column:1.80",
      "has description",
      "Expands to the column number at which it was invoked"
    ],
    [
      "std::compile_error:1.80",
      "is a",
      "macro"
    ],
    [
      "std::compile_error:1.80",
      "has description",
      "Causes compilation to fail with the given error message when encountered"
    ],
    [
      "std::concat:1.80",
      "is a",
      "macro"
    ],
    [
      "std::concat:1.80",
      "has description",
      "Concatenates literals into a static string slice"
    ],
    [
      "std::dbg:1.80",
      "is a",
      "macro"
    ],
    [
      "std::dbg:1.80",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging"
    ],
    [
      "std::debug_assert:1.80",
      "is a",
      "macro"
    ],
    [
      "std::debug_assert:1.80",
      "has description",
      "Asserts that a boolean expression is <code>true</code> at runtime"
    ],
    [
      "std::debug_assert_eq:1.80",
      "is a",
      "macro"
    ],
    [
      "std::debug_assert_eq:1.80",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "std::debug_assert_ne:1.80",
      "is a",
      "macro"
    ],
    [
      "std::debug_assert_ne:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "std::env:1.80",
      "is a",
      "macro"
    ],
    [
      "std::eprint:1.80",
      "is a",
      "macro"
    ],
    [
      "std::eprint:1.80",
      "has description",
      "Prints to the standard error"
    ],
    [
      "std::eprintln:1.80",
      "is a",
      "macro"
    ],
    [
      "std::eprintln:1.80",
      "has description",
      "Prints to the standard error, with a newline"
    ],
    [
      "std::file:1.80",
      "is a",
      "macro"
    ],
    [
      "std::file:1.80",
      "has description",
      "Expands to the file name in which it was invoked"
    ],
    [
      "std::format:1.80",
      "is a",
      "macro"
    ],
    [
      "std::format:1.80",
      "has description",
      "Creates a <code>String</code> using interpolation of runtime expressions"
    ],
    [
      "std::format_args:1.80",
      "is a",
      "macro"
    ],
    [
      "std::format_args:1.80",
      "has description",
      "Constructs parameters for the other string-formatting macros"
    ],
    [
      "std::include:1.80",
      "is a",
      "macro"
    ],
    [
      "std::include:1.80",
      "has description",
      "Parses a file as an expression or an item according to the context"
    ],
    [
      "std::include_bytes:1.80",
      "is a",
      "macro"
    ],
    [
      "std::include_bytes:1.80",
      "has description",
      "Includes a file as a reference to a byte array"
    ],
    [
      "std::include_str:1.80",
      "is a",
      "macro"
    ],
    [
      "std::include_str:1.80",
      "has description",
      "Includes a UTF-8 encoded file as a string"
    ],
    [
      "std::is_x86_feature_detected!:1.80",
      "has attribute",
      "x86 or x86-64:1.80"
    ],
    [
      "std::line:1.80",
      "is a",
      "macro"
    ],
    [
      "std::line:1.80",
      "has description",
      "Expands to the line number on which it was invoked"
    ],
    [
      "std::matches:1.80",
      "is a",
      "macro"
    ],
    [
      "std::matches:1.80",
      "has description",
      "Returns whether the given expression matches any of the given patterns"
    ],
    [
      "std::module_path:1.80",
      "is a",
      "macro"
    ],
    [
      "std::module_path:1.80",
      "has description",
      "Expands to a string that represents the current module path"
    ],
    [
      "std::option_env:1.80",
      "is a",
      "macro"
    ],
    [
      "std::option_env:1.80",
      "has description",
      "Optionally inspects an environment variable at compile time"
    ],
    [
      "std::panic:1.80",
      "is a",
      "macro"
    ],
    [
      "std::panic:1.80",
      "has description",
      "Panics the current thread"
    ],
    [
      "std::print:1.80",
      "is a",
      "macro"
    ],
    [
      "std::print:1.80",
      "has description",
      "Prints to the standard output"
    ],
    [
      "std::println:1.80",
      "is a",
      "macro"
    ],
    [
      "std::println:1.80",
      "has description",
      "Prints to the standard output, with a newline"
    ],
    [
      "std::stringify:1.80",
      "is a",
      "macro"
    ],
    [
      "std::stringify:1.80",
      "has description",
      "Stringifies its arguments"
    ],
    [
      "std::thread_local:1.80",
      "is a",
      "macro"
    ],
    [
      "std::thread_local:1.80",
      "has description",
      "Declare a new thread local storage key of type <a href='thread/struct.LocalKey.html' title='struct std::thread::LocalKey'><code>std::thread::LocalKey</code></a>"
    ],
    [
      "std::todo:1.80",
      "is a",
      "macro"
    ],
    [
      "std::todo:1.80",
      "has description",
      "Indicates unfinished code"
    ],
    [
      "std::try:1.80",
      "is a",
      "macro"
    ],
    [
      "std::try:1.80",
      "has attribute",
      "Deprecated:1.80"
    ],
    [
      "std::unimplemented:1.80",
      "is a",
      "macro"
    ],
    [
      "std::unimplemented:1.80",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'"
    ],
    [
      "std::unreachable:1.80",
      "is a",
      "macro"
    ],
    [
      "std::unreachable:1.80",
      "has description",
      "Indicates unreachable code"
    ],
    [
      "std::vec:1.80",
      "is a",
      "macro"
    ],
    [
      "std::vec:1.80",
      "has description",
      "Creates a <a href='vec/struct.Vec.html' title='struct std::vec::Vec'><code>Vec</code></a> containing the arguments"
    ],
    [
      "std::write:1.80",
      "is a",
      "macro"
    ],
    [
      "std::write:1.80",
      "has description",
      "Writes formatted data into a buffer"
    ],
    [
      "std::writeln:1.80",
      "is a",
      "macro"
    ],
    [
      "std::writeln:1.80",
      "has description",
      "Write formatted data into a buffer, with a newline appended"
    ],
    [
      "std::try:1.80",
      "is a",
      "keyword"
    ],
    [
      "std::try:1.80",
      "has description",
      "Unwraps a result or propagates its error. (Deprecated)"
    ],
    [
      "column:1.80",
      "has description",
      "Expands to the column number at which it was invoked"
    ],
    [
      "compile_error:1.80",
      "has description",
      "Causes compilation to fail with the given error message when encountered"
    ],
    [
      "concat:1.80",
      "has description",
      "Concatenates literals into a static string slice"
    ],
    [
      "format_args:1.80",
      "has description",
      "Constructs parameters for the other string-formatting macros"
    ],
    [
      "include:1.80",
      "has description",
      "Parses a file as an expression or an item according to the context"
    ],
    [
      "include_bytes:1.80",
      "has description",
      "Includes a file as a reference to a byte array"
    ],
    [
      "include_str:1.80",
      "has description",
      "Includes a UTF-8 encoded file as a string"
    ],
    [
      "is_x86_feature_detected!:1.80",
      "has description",
      "A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms"
    ],
    [
      "line:1.80",
      "has description",
      "Expands to the line number on which it was invoked"
    ],
    [
      "matches:1.80",
      "has description",
      "Returns whether the given expression matches any of the given patterns"
    ],
    [
      "module_path:1.80",
      "has description",
      "Expands to a string that represents the current module path"
    ],
    [
      "option_env:1.80",
      "has description",
      "Optionally inspects an environment variable at compile time"
    ],
    [
      "print:1.80",
      "has description",
      "Prints to the standard output"
    ],
    [
      "println:1.80",
      "has description",
      "Prints to the standard output, with a newline"
    ],
    [
      "stringify:1.80",
      "has description",
      "Stringifies its arguments"
    ],
    [
      "thread_local:1.80",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey"
    ],
    [
      "todo:1.80",
      "has description",
      "Indicates unfinished code"
    ],
    [
      "unimplemented:1.80",
      "has description",
      "Indicates unimplemented code by panicking with a message of “not implemented”"
    ],
    [
      "unreachable:1.80",
      "has description",
      "Indicates unreachable code"
    ],
    [
      "std::vec:1.80",
      "has description",
      "Creates a Vec containing the arguments"
    ],
    [
      "write:1.80",
      "has description",
      "Writes formatted data into a buffer"
    ],
    [
      "writeln:1.80",
      "has description",
      "Write formatted data into a buffer, with a newline appended"
    ],
    [
      "std:1.80",
      "has version",
      "1.80.1:1.80"
    ],
    [
      "f16:1.80",
      "is a",
      "module"
    ],
    [
      "f16:1.80",
      "has description",
      "A 16-bit floating point type (specifically, the “binary16” type defined in IEEE 754-2008)"
    ],
    [
      "f16:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "f128:1.80",
      "is a",
      "module"
    ],
    [
      "f128:1.80",
      "has description",
      "A 128-bit floating point type (specifically, the “binary128” type defined in IEEE 754-2008)"
    ],
    [
      "f128:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "pat:1.80",
      "is a",
      "module"
    ],
    [
      "pat:1.80",
      "has description",
      "Helper module for exporting pattern_type macro"
    ],
    [
      "simd:1.80",
      "has description",
      "Portable SIMD module"
    ],
    [
      "cfg_match:1.80",
      "is a",
      "macro"
    ],
    [
      "cfg_match:1.80",
      "has description",
      "A macro for defining #[cfg] match-like statements"
    ],
    [
      "cfg_match:1.80",
      "has attribute",
      "Experimental:1.80"
    ],
    [
      "simd:1.80",
      "has description",
      "Portable SIMD operations module"
    ],
    [
      "cfg_match:1.80",
      "has description",
      "A macro for defining #[cfg] match-like statements."
    ],
    [
      "std:1.80",
      "has source code",
      "../src/std/lib.rs.html#1-754"
    ],
    [
      "std:1.50",
      "is a",
      "crate"
    ],
    [
      "std:1.50",
      "stable since",
      "1.0.0"
    ],
    [
      "std:1.50",
      "has source code",
      "src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.50",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."
    ],
    [
      "std:1.50",
      "contains",
      "std::any:1.50"
    ],
    [
      "std::any:1.50",
      "has description",
      "This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std:1.50",
      "contains",
      "std::ascii:1.50"
    ],
    [
      "std::ascii:1.50",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "std:1.50",
      "contains",
      "std::borrow:1.50"
    ],
    [
      "std::borrow:1.50",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "std:1.50",
      "contains",
      "std::boxed:1.50"
    ],
    [
      "std::boxed:1.50",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "std:1.50",
      "contains",
      "std::cell:1.50"
    ],
    [
      "std::cell:1.50",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "std:1.50",
      "contains",
      "std::char:1.50"
    ],
    [
      "std::char:1.50",
      "has description",
      "A character type."
    ],
    [
      "std:1.50",
      "contains",
      "std::collections:1.50"
    ],
    [
      "std::collections:1.50",
      "has description",
      "Collection types."
    ],
    [
      "std:1.50",
      "contains",
      "std::env:1.50"
    ],
    [
      "std::env:1.50",
      "has description",
      "Inspection and manipulation of the process's environment."
    ],
    [
      "std:1.50",
      "contains",
      "std::fs:1.50"
    ],
    [
      "std::fs:1.50",
      "has description",
      "Filesystem manipulation operations."
    ],
    [
      "std:1.50",
      "contains",
      "std::net:1.50"
    ],
    [
      "std::net:1.50",
      "has description",
      "Networking primitives for TCP/UDP communication."
    ],
    [
      "std:1.50",
      "contains",
      "std::thread:1.50"
    ],
    [
      "std::thread:1.50",
      "has description",
      "Native threads."
    ],
    [
      "array:1.50",
      "is a",
      "primitive type"
    ],
    [
      "array:1.50",
      "has description",
      "A fixed-size array, denoted [T; N]"
    ],
    [
      "std:1.50",
      "contains",
      "array:1.50"
    ],
    [
      "bool:1.50",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.50",
      "has description",
      "The boolean type."
    ],
    [
      "std:1.50",
      "contains",
      "bool:1.50"
    ],
    [
      "std::str:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::str:1.50",
      "has description",
      "String slices."
    ],
    [
      "std:1.50",
      "contains",
      "std::str:1.50"
    ],
    [
      "assert!:1.50",
      "is a",
      "macro"
    ],
    [
      "assert!:1.50",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "std:1.50",
      "contains",
      "assert!:1.50"
    ],
    [
      "format!:1.50",
      "is a",
      "macro"
    ],
    [
      "format!:1.50",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String."
    ],
    [
      "std:1.50",
      "contains",
      "format!:1.50"
    ],
    [
      "vec!:1.50",
      "is a",
      "macro"
    ],
    [
      "vec!:1.50",
      "has description",
      "Creates a Vec containing the arguments."
    ],
    [
      "std:1.50",
      "contains",
      "vec!:1.50"
    ],
    [
      "std::intrinsics:1.50",
      "has stability",
      "Unstable:1.50"
    ],
    [
      "std::intrinsics:1.50",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "std:1.50",
      "contains",
      "std::intrinsics:1.50"
    ],
    [
      "std::raw:1.50",
      "has stability",
      "Unstable:1.50"
    ],
    [
      "std::raw:1.50",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "std:1.50",
      "contains",
      "std::raw:1.50"
    ],
    [
      "std:1.50",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."
    ],
    [
      "std:1.50",
      "contains",
      "std::clone:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::cmp:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::convert:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::default:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::error:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::f32:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::f64:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::ffi:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::fmt:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::hash:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::i16:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::i32:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::i64:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::i8:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::io:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::isize:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::iter:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::marker:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::mem:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::num:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::ops:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::option:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::os:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::panic:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::path:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::prelude:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::process:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::ptr:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::rc:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::result:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::slice:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::string:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::sync:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::time:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::u16:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::u32:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::u64:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::u8:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::usize:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std::vec:1.50"
    ],
    [
      "array:1.50",
      "has description",
      "A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."
    ],
    [
      "std::char:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.50",
      "has description",
      "The 32-bit floating point type."
    ],
    [
      "std::f64:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::f64:1.50",
      "has description",
      "The 64-bit floating point type."
    ],
    [
      "std::i16:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::i16:1.50",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "std::i32:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::i32:1.50",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "std::i64:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::i64:1.50",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "std::i8:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::i8:1.50",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "std::isize:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::isize:1.50",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "pointer:1.50",
      "is a",
      "primitive type"
    ],
    [
      "pointer:1.50",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::slice:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::slice:1.50",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]."
    ],
    [
      "tuple:1.50",
      "is a",
      "primitive type"
    ],
    [
      "tuple:1.50",
      "has description",
      "A finite heterogeneous sequence, (T, U, ..)."
    ],
    [
      "std::u16:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::u16:1.50",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "std::u32:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::u32:1.50",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "std::u64:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::u64:1.50",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "std::u8:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::u8:1.50",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "std::usize:1.50",
      "is a",
      "primitive type"
    ],
    [
      "std::usize:1.50",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "std::any:1.50",
      "is a",
      "module"
    ],
    [
      "std::any:1.50",
      "has description",
      "This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std::ascii:1.50",
      "is a",
      "module"
    ],
    [
      "std::borrow:1.50",
      "is a",
      "module"
    ],
    [
      "std::boxed:1.50",
      "is a",
      "module"
    ],
    [
      "std::cell:1.50",
      "is a",
      "module"
    ],
    [
      "std::char:1.50",
      "is a",
      "module"
    ],
    [
      "std::clone:1.50",
      "is a",
      "module"
    ],
    [
      "std::clone:1.50",
      "has description",
      "The Clone trait for types that cannot be 'implicitly copied'."
    ],
    [
      "std::cmp:1.50",
      "is a",
      "module"
    ],
    [
      "std::cmp:1.50",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "std::collections:1.50",
      "is a",
      "module"
    ],
    [
      "std::convert:1.50",
      "is a",
      "module"
    ],
    [
      "std::convert:1.50",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "std::default:1.50",
      "is a",
      "module"
    ],
    [
      "std::default:1.50",
      "has description",
      "The Default trait for types which may have meaningful default values."
    ],
    [
      "std::env:1.50",
      "is a",
      "module"
    ],
    [
      "std::error:1.50",
      "is a",
      "module"
    ],
    [
      "std::error:1.50",
      "has description",
      "Traits for working with Errors."
    ],
    [
      "std::f32:1.50",
      "is a",
      "module"
    ],
    [
      "std::f64:1.50",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.50",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.50",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "std::fmt:1.50",
      "is a",
      "module"
    ],
    [
      "std::fmt:1.50",
      "has description",
      "Utilities for formatting and printing strings"
    ],
    [
      "std::fs:1.50",
      "is a",
      "module"
    ],
    [
      "std::hash:1.50",
      "is a",
      "module"
    ],
    [
      "std::hash:1.50",
      "has description",
      "Generic hashing support."
    ],
    [
      "std::i16:1.50",
      "is a",
      "module"
    ],
    [
      "std::i32:1.50",
      "is a",
      "module"
    ],
    [
      "std::i64:1.50",
      "is a",
      "module"
    ],
    [
      "std::i8:1.50",
      "is a",
      "module"
    ],
    [
      "std::io:1.50",
      "is a",
      "module"
    ],
    [
      "std::io:1.50",
      "has description",
      "Traits, helpers, and type definitions for core I/O functionality."
    ],
    [
      "std::isize:1.50",
      "is a",
      "module"
    ],
    [
      "std::iter:1.50",
      "is a",
      "module"
    ],
    [
      "std::iter:1.50",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::marker:1.50",
      "is a",
      "module"
    ],
    [
      "std::marker:1.50",
      "has description",
      "Primitive traits and marker types representing basic 'kinds' of types."
    ],
    [
      "std::mem:1.50",
      "is a",
      "module"
    ],
    [
      "std::mem:1.50",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "std::net:1.50",
      "is a",
      "module"
    ],
    [
      "std::num:1.50",
      "is a",
      "module"
    ],
    [
      "std::num:1.50",
      "has description",
      "Additional functionality for numerics."
    ],
    [
      "std::ops:1.50",
      "is a",
      "module"
    ],
    [
      "std::ops:1.50",
      "has description",
      "Overloadable operators."
    ],
    [
      "std::option:1.50",
      "is a",
      "module"
    ],
    [
      "std::option:1.50",
      "has description",
      "Optional values."
    ],
    [
      "std::os:1.50",
      "is a",
      "module"
    ],
    [
      "std::os:1.50",
      "has description",
      "OS-specific functionality."
    ],
    [
      "std::panic:1.50",
      "is a",
      "module"
    ],
    [
      "std::panic:1.50",
      "has description",
      "Panic support in the standard library"
    ],
    [
      "std::path:1.50",
      "is a",
      "module"
    ],
    [
      "std::path:1.50",
      "has description",
      "Cross-platform path manipulation."
    ],
    [
      "std::prelude:1.50",
      "is a",
      "module"
    ],
    [
      "std::prelude:1.50",
      "has description",
      "The Rust Prelude."
    ],
    [
      "std::process:1.50",
      "is a",
      "module"
    ],
    [
      "std::process:1.50",
      "has description",
      "Working with processes."
    ],
    [
      "std::ptr:1.50",
      "is a",
      "module"
    ],
    [
      "std::ptr:1.50",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::rc:1.50",
      "is a",
      "module"
    ],
    [
      "std::rc:1.50",
      "has description",
      "Thread-local reference-counted boxes (the Rc<T> type)."
    ],
    [
      "std::result:1.50",
      "is a",
      "module"
    ],
    [
      "std::result:1.50",
      "has description",
      "Error handling with the Result type."
    ],
    [
      "std::slice:1.50",
      "is a",
      "module"
    ],
    [
      "std::str:1.50",
      "is a",
      "module"
    ],
    [
      "std::str:1.50",
      "has description",
      "Unicode string slices."
    ],
    [
      "std::string:1.50",
      "is a",
      "module"
    ],
    [
      "std::string:1.50",
      "has description",
      "A UTF-8 encoded, growable string."
    ],
    [
      "std::sync:1.50",
      "is a",
      "module"
    ],
    [
      "std::sync:1.50",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::thread:1.50",
      "is a",
      "module"
    ],
    [
      "std::time:1.50",
      "is a",
      "module"
    ],
    [
      "std::time:1.50",
      "has description",
      "Temporal quantification."
    ],
    [
      "std::u16:1.50",
      "is a",
      "module"
    ],
    [
      "std::u32:1.50",
      "is a",
      "module"
    ],
    [
      "std::u64:1.50",
      "is a",
      "module"
    ],
    [
      "std::u8:1.50",
      "is a",
      "module"
    ],
    [
      "std::usize:1.50",
      "is a",
      "module"
    ],
    [
      "std::vec:1.50",
      "is a",
      "module"
    ],
    [
      "std::vec:1.50",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."
    ],
    [
      "std::intrinsics:1.50",
      "is a",
      "module"
    ],
    [
      "std::intrinsics:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "std::raw:1.50",
      "is a",
      "module"
    ],
    [
      "std::raw:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "assert_eq!:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.50",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "cfg!:1.50",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.50",
      "has description",
      "Boolean evaluation of configuration flags."
    ],
    [
      "column!:1.50",
      "is a",
      "macro"
    ],
    [
      "column!:1.50",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "concat!:1.50",
      "is a",
      "macro"
    ],
    [
      "concat!:1.50",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "concat_idents!:1.50",
      "is a",
      "macro"
    ],
    [
      "concat_idents!:1.50",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "debug_assert!:1.50",
      "is a",
      "macro"
    ],
    [
      "debug_assert!:1.50",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq!:1.50",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq!:1.50",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "env!:1.50",
      "is a",
      "macro"
    ],
    [
      "env!:1.50",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "file!:1.50",
      "is a",
      "macro"
    ],
    [
      "file!:1.50",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "format!:1.50",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."
    ],
    [
      "format_args!:1.50",
      "is a",
      "macro"
    ],
    [
      "format_args!:1.50",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "include!:1.50",
      "is a",
      "macro"
    ],
    [
      "include!:1.50",
      "has description",
      "Parse the current given file as an expression."
    ],
    [
      "include_bytes!:1.50",
      "is a",
      "macro"
    ],
    [
      "include_bytes!:1.50",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "include_str!:1.50",
      "is a",
      "macro"
    ],
    [
      "include_str!:1.50",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "line!:1.50",
      "is a",
      "macro"
    ],
    [
      "line!:1.50",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "module_path!:1.50",
      "is a",
      "macro"
    ],
    [
      "module_path!:1.50",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "option_env!:1.50",
      "is a",
      "macro"
    ],
    [
      "option_env!:1.50",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "panic!:1.50",
      "is a",
      "macro"
    ],
    [
      "panic!:1.50",
      "has description",
      "The entry point for panic of Rust threads."
    ],
    [
      "print!:1.50",
      "is a",
      "macro"
    ],
    [
      "print!:1.50",
      "has description",
      "Macro for printing to the standard output."
    ],
    [
      "println!:1.50",
      "is a",
      "macro"
    ],
    [
      "println!:1.50",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "stringify!:1.50",
      "is a",
      "macro"
    ],
    [
      "stringify!:1.50",
      "has description",
      "A macro which stringifies its argument."
    ],
    [
      "thread_local!:1.50",
      "is a",
      "macro"
    ],
    [
      "thread_local!:1.50",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey."
    ],
    [
      "scoped_thread_local!:1.50",
      "is a",
      "macro"
    ],
    [
      "scoped_thread_local!:1.50",
      "has attribute",
      "deprecated:1.50"
    ],
    [
      "scoped_thread_local!:1.50",
      "has description",
      "Declare a new scoped thread local storage key."
    ],
    [
      "select!:1.50",
      "is a",
      "macro"
    ],
    [
      "select!:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "select!:1.50",
      "has description",
      "A macro to select an event from a number of receivers."
    ],
    [
      "try!:1.50",
      "is a",
      "macro"
    ],
    [
      "try!:1.50",
      "has description",
      "Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."
    ],
    [
      "unimplemented!:1.50",
      "is a",
      "macro"
    ],
    [
      "unimplemented!:1.50",
      "has description",
      "A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."
    ],
    [
      "unreachable!:1.50",
      "is a",
      "macro"
    ],
    [
      "unreachable!:1.50",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "write!:1.50",
      "is a",
      "macro"
    ],
    [
      "write!:1.50",
      "has description",
      "Use the format! syntax to write data into a buffer."
    ],
    [
      "writeln!:1.50",
      "is a",
      "macro"
    ],
    [
      "writeln!:1.50",
      "has description",
      "Use the format! syntax to write data into a buffer, appending a newline."
    ],
    [
      "std:1.50",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.50",
      "contains",
      "alloc:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "core:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "libc:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "rustc_unicode:1.50"
    ],
    [
      "std::any:1.50",
      "has alias",
      "any"
    ],
    [
      "std::ascii:1.50",
      "has alias",
      "ascii"
    ],
    [
      "std::borrow:1.50",
      "has alias",
      "borrow"
    ],
    [
      "std::boxed:1.50",
      "has alias",
      "boxed"
    ],
    [
      "std::cell:1.50",
      "has alias",
      "cell"
    ],
    [
      "std::char:1.50",
      "has alias",
      "char"
    ],
    [
      "std::clone:1.50",
      "has alias",
      "clone"
    ],
    [
      "std::cmp:1.50",
      "has alias",
      "cmp"
    ],
    [
      "std::collections:1.50",
      "has alias",
      "collections"
    ],
    [
      "std::convert:1.50",
      "has alias",
      "convert"
    ],
    [
      "std::default:1.50",
      "has alias",
      "default"
    ],
    [
      "std::env:1.50",
      "has alias",
      "env"
    ],
    [
      "std::error:1.50",
      "has alias",
      "error"
    ],
    [
      "std::f32:1.50",
      "has alias",
      "f32"
    ],
    [
      "std::f64:1.50",
      "has alias",
      "f64"
    ],
    [
      "std::ffi:1.50",
      "has alias",
      "ffi"
    ],
    [
      "std::fmt:1.50",
      "has alias",
      "fmt"
    ],
    [
      "std::fs:1.50",
      "has alias",
      "fs"
    ],
    [
      "std::hash:1.50",
      "has alias",
      "hash"
    ],
    [
      "std::i16:1.50",
      "has alias",
      "i16"
    ],
    [
      "std::i32:1.50",
      "has alias",
      "i32"
    ],
    [
      "std::i64:1.50",
      "has alias",
      "i64"
    ],
    [
      "std::i8:1.50",
      "has alias",
      "i8"
    ],
    [
      "std::io:1.50",
      "has alias",
      "io"
    ],
    [
      "std::isize:1.50",
      "has alias",
      "isize"
    ],
    [
      "std::iter:1.50",
      "has alias",
      "iter"
    ],
    [
      "std::marker:1.50",
      "has alias",
      "marker"
    ],
    [
      "std::mem:1.50",
      "has alias",
      "mem"
    ],
    [
      "std::net:1.50",
      "has alias",
      "net"
    ],
    [
      "std::num:1.50",
      "has alias",
      "num"
    ],
    [
      "std::ops:1.50",
      "has alias",
      "ops"
    ],
    [
      "std::option:1.50",
      "has alias",
      "option"
    ],
    [
      "std::os:1.50",
      "has alias",
      "os"
    ],
    [
      "std::panic:1.50",
      "has alias",
      "panic"
    ],
    [
      "std::path:1.50",
      "has alias",
      "path"
    ],
    [
      "std::prelude:1.50",
      "has alias",
      "prelude"
    ],
    [
      "std::process:1.50",
      "has alias",
      "process"
    ],
    [
      "std::ptr:1.50",
      "has alias",
      "ptr"
    ],
    [
      "std::rc:1.50",
      "has alias",
      "rc"
    ],
    [
      "std::result:1.50",
      "has alias",
      "result"
    ],
    [
      "std::slice:1.50",
      "has alias",
      "slice"
    ],
    [
      "std::str:1.50",
      "has alias",
      "str"
    ],
    [
      "std::string:1.50",
      "has alias",
      "string"
    ],
    [
      "std::sync:1.50",
      "has alias",
      "sync"
    ],
    [
      "std::thread:1.50",
      "has alias",
      "thread"
    ],
    [
      "std::time:1.50",
      "has alias",
      "time"
    ],
    [
      "std::u16:1.50",
      "has alias",
      "u16"
    ],
    [
      "std::u32:1.50",
      "has alias",
      "u32"
    ],
    [
      "std::u64:1.50",
      "has alias",
      "u64"
    ],
    [
      "std::u8:1.50",
      "has alias",
      "u8"
    ],
    [
      "std::usize:1.50",
      "has alias",
      "usize"
    ],
    [
      "std::vec:1.50",
      "has alias",
      "vec"
    ],
    [
      "std::vec:1.50",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"
    ],
    [
      "std::intrinsics:1.50",
      "has alias",
      "intrinsics"
    ],
    [
      "std::raw:1.50",
      "has alias",
      "raw"
    ],
    [
      "scoped_thread_local!:1.50",
      "has stability",
      "Deprecated:1.50"
    ],
    [
      "scoped_thread_local!:1.50",
      "has stability",
      "Unstable:1.50"
    ],
    [
      ":1.50",
      null,
      "undefined:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "proc_macro:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "std_unicode:1.50"
    ],
    [
      "std:1.50",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-493"
    ],
    [
      "std::process:1.50",
      "has description",
      "A module for working with processes."
    ],
    [
      "i128:1.50",
      "is a",
      "primitive type"
    ],
    [
      "i128:1.50",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "i128:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "u128:1.50",
      "is a",
      "primitive type"
    ],
    [
      "u128:1.50",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "u128:1.50",
      "has attribute",
      "unstable:1.50"
    ],
    [
      "eprint!:1.50",
      "is a",
      "macro"
    ],
    [
      "eprint!:1.50",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln!:1.50",
      "is a",
      "macro"
    ],
    [
      "eprintln!:1.50",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "assert_ne!:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_ne!:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "debug_assert_ne!:1.50",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne!:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "std::intrinsics:1.50",
      "has attribute",
      "Experimental:1.50"
    ],
    [
      "std::raw:1.50",
      "has attribute",
      "Experimental:1.50"
    ],
    [
      "proc_macro:1.50",
      "is a",
      "crate"
    ],
    [
      "proc_macro:1.50",
      "has description",
      "A support library for macro authors when defining new macros."
    ],
    [
      "std_unicode:1.50",
      "is a",
      "crate"
    ],
    [
      "std_unicode:1.50",
      "has description",
      "The Unicode Library"
    ],
    [
      "select!:1.50",
      "has attribute",
      "Experimental:1.50"
    ],
    [
      "try!:1.50",
      "has description",
      "Helper macro for reducing boilerplate for matching Result together with converting downstream errors."
    ],
    [
      "include!:1.50",
      "has description",
      "Parse a file as an expression or an item according to the context"
    ],
    [
      "println!:1.50",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."
    ],
    [
      "write!:1.50",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "writeln!:1.50",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "std::f32:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::f64:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::intrinsics:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "std::raw:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "println!:1.50",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."
    ],
    [
      "scoped_thread_local!:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "select!:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "write!:1.50",
      "has description",
      "Write formatted data into a buffer"
    ],
    [
      "std::rc:1.50",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std:1.50",
      "contains",
      "i128:1.50"
    ],
    [
      "i128:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "u128:1.50"
    ],
    [
      "u128:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "eprint!:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "eprintln!:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "compile_error!:1.50"
    ],
    [
      "compile_error!:1.50",
      "is a",
      "macro"
    ],
    [
      "compile_error!:1.50",
      "has description",
      "Unconditionally causes compilation to fail with the given error message."
    ],
    [
      "include!:1.50",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "writeln!:1.50",
      "has description",
      "Write formatted data into a buffer with appended newline."
    ],
    [
      "println!:1.50",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."
    ],
    [
      "std:1.50",
      "stable since",
      "1.40.0"
    ],
    [
      "std:1.50",
      "contains",
      "future:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "pin:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "task:1.50"
    ],
    [
      "std::ptr:1.50",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "std::slice:1.50",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "future:1.50",
      "is a",
      "module"
    ],
    [
      "future:1.50",
      "has description",
      "Asynchronous values."
    ],
    [
      "pin:1.50",
      "is a",
      "module"
    ],
    [
      "pin:1.50",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "task:1.50",
      "is a",
      "module"
    ],
    [
      "task:1.50",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.50",
      "has version",
      "1.40.0:1.50"
    ],
    [
      "std:1.50",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#1-571"
    ],
    [
      "array:1.50",
      "is a",
      "module"
    ],
    [
      "array:1.50",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.50",
      "stable since",
      "1.50.0"
    ],
    [
      "std::f32:1.50",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "std::f64:1.50",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "std:1.50",
      "contains",
      "backtrace:1.50"
    ],
    [
      "backtrace:1.50",
      "is a",
      "module"
    ],
    [
      "backtrace:1.50",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "backtrace:1.50",
      "has attribute",
      "Experimental:1.50"
    ],
    [
      "format_args_nl:1.50",
      "is a",
      "macro"
    ],
    [
      "format_args_nl:1.50",
      "has attribute",
      "Experimental:1.50"
    ],
    [
      "format_args_nl:1.50",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "std:1.50",
      "has version",
      "1.50.0:1.50"
    ],
    [
      "backtrace:1.50",
      "has description",
      "Support for capturing a stack backtrace of an OS thread"
    ],
    [
      "backtrace:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "unit:1.50",
      "has description",
      "The () type, also called \"unit\"."
    ],
    [
      "format_args_nl!:1.50",
      "is a",
      "macro"
    ],
    [
      "std:1.50",
      "contains",
      "format_args_nl!:1.50"
    ],
    [
      "format_args_nl!:1.50",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "format_args_nl!:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "unit:1.50",
      "has description",
      "The () type, also called \"unit\""
    ],
    [
      "format_args_nl:1.50",
      "has description",
      "Same as format_args, but adds a newline in the end"
    ],
    [
      "format_args_nl:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "test:1.50",
      "is a",
      "crate"
    ],
    [
      "test:1.50",
      "has description",
      "Support code for rustc's built in unit-test and micro-benchmarking framework."
    ],
    [
      "std:1.50",
      "contains",
      "test:1.50"
    ],
    [
      "unit:1.50",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.50",
      "has description",
      "The () type, sometimes called 'unit' or 'nil'."
    ],
    [
      "std:1.50",
      "contains",
      "unit:1.50"
    ],
    [
      "never:1.50",
      "is a",
      "primitive type"
    ],
    [
      "never:1.50",
      "has description",
      "The ! type, also called 'never'."
    ],
    [
      "never:1.50",
      "has attribute",
      "Experimental:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "never:1.50"
    ],
    [
      "fn:1.50",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.50",
      "has description",
      "Function pointers, like fn(usize) -> bool."
    ],
    [
      "std:1.50",
      "contains",
      "fn:1.50"
    ],
    [
      "reference:1.50",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.50",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.50",
      "contains",
      "reference:1.50"
    ],
    [
      "alloc:1.50",
      "is a",
      "module"
    ],
    [
      "alloc:1.50",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "arch:1.50",
      "is a",
      "module"
    ],
    [
      "arch:1.50",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.50",
      "contains",
      "arch:1.50"
    ],
    [
      "hint:1.50",
      "is a",
      "module"
    ],
    [
      "hint:1.50",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "std:1.50",
      "contains",
      "hint:1.50"
    ],
    [
      "is_x86_feature_detected!:1.50",
      "is a",
      "macro"
    ],
    [
      "is_x86_feature_detected!:1.50",
      "has description",
      "A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."
    ],
    [
      "std:1.50",
      "contains",
      "is_x86_feature_detected!:1.50"
    ],
    [
      "await!:1.50",
      "is a",
      "macro"
    ],
    [
      "await!:1.50",
      "has attribute",
      "Experimental:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "await!:1.50"
    ],
    [
      "format!:1.50",
      "has description",
      "Creates a String using interpolation of runtime expressions."
    ],
    [
      "std:1.50",
      "has version",
      "1.30.1:1.50"
    ],
    [
      "std:1.50",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-540"
    ],
    [
      "fn:1.50",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "unit:1.50",
      "has description",
      "The `()` type, sometimes called 'unit' or 'nil'."
    ],
    [
      "never:1.50",
      "has description",
      "The `!` type, also called 'never'."
    ],
    [
      "future:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "pin:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "pin:1.50",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "task:1.50",
      "has stability",
      "Experimental:1.50"
    ],
    [
      "task:1.50",
      "has description",
      "Types and Traits for working with asynchronous tasks"
    ],
    [
      "backtrace:1.50",
      "has description",
      "Support for capturing OS thread backtraces"
    ],
    [
      "std::intrinsics:1.50",
      "has description",
      "Compiler intrinsics module"
    ],
    [
      "dbg:1.50",
      "is a",
      "macro"
    ],
    [
      "dbg:1.50",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "debug_assert:1.50",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq:1.50",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "debug_assert_ne:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "global_asm:1.50",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.50",
      "has attribute",
      "Experimental:1.50"
    ],
    [
      "std:1.50",
      "contains",
      "super:1.50"
    ],
    [
      "super:1.50",
      "has description",
      "The parent of the current module"
    ],
    [
      "std:1.50",
      "contains",
      "trait:1.50"
    ],
    [
      "trait:1.50",
      "has description",
      "A common interface for a class of types."
    ],
    [
      "std:1.50",
      "contains",
      "true:1.50"
    ],
    [
      "true:1.50",
      "has description",
      "A value of type bool representing logical true."
    ],
    [
      "std:1.50",
      "contains",
      "type:1.50"
    ],
    [
      "type:1.50",
      "has description",
      "Define an alias for an existing type."
    ],
    [
      "std:1.50",
      "contains",
      "union:1.50"
    ],
    [
      "union:1.50",
      "has description",
      "The Rust equivalent of a C-style union"
    ],
    [
      "std:1.50",
      "contains",
      "unsafe:1.50"
    ],
    [
      "unsafe:1.50",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system."
    ],
    [
      "std:1.50",
      "contains",
      "use:1.50"
    ],
    [
      "use:1.50",
      "has description",
      "Import or rename items from other crates or modules."
    ],
    [
      "std:1.50",
      "contains",
      "where:1.50"
    ],
    [
      "where:1.50",
      "has description",
      "Add constraints that must be upheld to use an item."
    ],
    [
      "std:1.50",
      "contains",
      "while:1.50"
    ],
    [
      "while:1.50",
      "has description",
      "Loop while a condition is upheld."
    ],
    [
      "std::intrinsics:1.50",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "std:1.50",
      "contains",
      "async:1.50"
    ],
    [
      "async:1.50",
      "is a",
      "keyword"
    ],
    [
      "async:1.50",
      "has description",
      "Return a Future instead of blocking the current thread."
    ],
    [
      "std:1.50",
      "contains",
      "await:1.50"
    ],
    [
      "await:1.50",
      "is a",
      "keyword"
    ],
    [
      "await:1.50",
      "has description",
      "Suspend execution until the result of a Future is ready."
    ],
    [
      "super:1.50",
      "is a",
      "keyword"
    ],
    [
      "super:1.50",
      "has description",
      "The parent of the current module."
    ],
    [
      "trait:1.50",
      "is a",
      "keyword"
    ],
    [
      "true:1.50",
      "is a",
      "keyword"
    ],
    [
      "type:1.50",
      "is a",
      "keyword"
    ],
    [
      "union:1.50",
      "is a",
      "keyword"
    ],
    [
      "union:1.50",
      "has description",
      "The Rust equivalent of a C-style union."
    ],
    [
      "unsafe:1.50",
      "is a",
      "keyword"
    ],
    [
      "use:1.50",
      "is a",
      "keyword"
    ],
    [
      "where:1.50",
      "is a",
      "keyword"
    ],
    [
      "while:1.50",
      "is a",
      "keyword"
    ],
    [
      "backtrace:1.50",
      "has description",
      "Support for capturing stack backtraces"
    ],
    [
      "todo:1.50",
      "is a",
      "macro"
    ],
    [
      "todo:1.50",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "asm:1.50",
      "is a",
      "macro"
    ],
    [
      "asm:1.50",
      "has description",
      "Inline assembly."
    ],
    [
      "format_args_nl:1.50",
      "has description",
      "Same as format_args but adds a newline"
    ],
    [
      "assert:1.50",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "trait:1.50",
      "has description",
      "A common interface for a class of types"
    ],
    [
      "true:1.50",
      "has description",
      "A value of type bool representing logical true"
    ],
    [
      "type:1.50",
      "has description",
      "Define an alias for an existing type"
    ],
    [
      "unsafe:1.50",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system"
    ],
    [
      "use:1.50",
      "has description",
      "Import or rename items from other crates or modules"
    ],
    [
      "where:1.50",
      "has description",
      "Add constraints that must be upheld to use an item"
    ],
    [
      "while:1.50",
      "has description",
      "Loop while a condition is upheld"
    ],
    [
      "assert_eq:1.50",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "assert_ne:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "cfg:1.50",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "debug_assert_eq:1.50",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "debug_assert_ne:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "const:1.50",
      "has description",
      "Compile-time constants and compile-time evaluable functions."
    ],
    [
      "dyn:1.50",
      "has description",
      "dyn is a prefix of a trait object's type."
    ],
    [
      "static:1.50",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."
    ],
    [
      "option_env:1.50",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "assert:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.50",
      "is a",
      "macro"
    ],
    [
      "cfg:1.50",
      "is a",
      "macro"
    ],
    [
      "assert:1.50",
      "has description",
      "Asserts that a boolean expression is true at runtime"
    ],
    [
      "assert_eq:1.50",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "assert_ne:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "cfg:1.50",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time"
    ],
    [
      "dbg:1.50",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging"
    ],
    [
      "debug_assert:1.50",
      "has description",
      "Asserts that a boolean expression is true at runtime"
    ],
    [
      "std::env:1.50",
      "has description",
      "Inspects an environment variable at compile time"
    ],
    [
      "eprint:1.50",
      "has description",
      "Prints to the standard error"
    ],
    [
      "eprintln:1.50",
      "has description",
      "Prints to the standard error, with a newline"
    ],
    [
      "file:1.50",
      "has description",
      "Expands to the file name in which it was invoked"
    ],
    [
      "format:1.50",
      "has description",
      "Creates a String using interpolation of runtime expressions"
    ],
    [
      "static:1.50",
      "has description",
      "A static item is a value which is valid for the entire duration of your program"
    ],
    [
      "std:1.60",
      "is a",
      "crate"
    ],
    [
      "std:1.60",
      "stable since",
      "1.0.0"
    ],
    [
      "std:1.60",
      "has source code",
      "src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.60",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem."
    ],
    [
      "std:1.60",
      "contains",
      "std::any:1.60"
    ],
    [
      "std::any:1.60",
      "has description",
      "This module implements the Any trait which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std:1.60",
      "contains",
      "std::ascii:1.60"
    ],
    [
      "std::ascii:1.60",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "std:1.60",
      "contains",
      "std::borrow:1.60"
    ],
    [
      "std::borrow:1.60",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "std:1.60",
      "contains",
      "std::boxed:1.60"
    ],
    [
      "std::boxed:1.60",
      "has description",
      "A pointer type for heap allocation."
    ],
    [
      "std:1.60",
      "contains",
      "std::cell:1.60"
    ],
    [
      "std::cell:1.60",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "std:1.60",
      "contains",
      "std::char:1.60"
    ],
    [
      "std::char:1.60",
      "has description",
      "A character type."
    ],
    [
      "std:1.60",
      "contains",
      "std::collections:1.60"
    ],
    [
      "std::collections:1.60",
      "has description",
      "Collection types."
    ],
    [
      "std:1.60",
      "contains",
      "std::env:1.60"
    ],
    [
      "std::env:1.60",
      "has description",
      "Inspection and manipulation of the process's environment."
    ],
    [
      "std:1.60",
      "contains",
      "std::fs:1.60"
    ],
    [
      "std::fs:1.60",
      "has description",
      "Filesystem manipulation operations."
    ],
    [
      "std:1.60",
      "contains",
      "std::net:1.60"
    ],
    [
      "std::net:1.60",
      "has description",
      "Networking primitives for TCP/UDP communication."
    ],
    [
      "std:1.60",
      "contains",
      "std::thread:1.60"
    ],
    [
      "std::thread:1.60",
      "has description",
      "Native threads."
    ],
    [
      "array:1.60",
      "is a",
      "primitive type"
    ],
    [
      "array:1.60",
      "has description",
      "A fixed-size array, denoted [T; N]"
    ],
    [
      "std:1.60",
      "contains",
      "array:1.60"
    ],
    [
      "bool:1.60",
      "is a",
      "primitive type"
    ],
    [
      "bool:1.60",
      "has description",
      "The boolean type."
    ],
    [
      "std:1.60",
      "contains",
      "bool:1.60"
    ],
    [
      "std::str:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::str:1.60",
      "has description",
      "String slices."
    ],
    [
      "std:1.60",
      "contains",
      "std::str:1.60"
    ],
    [
      "assert!:1.60",
      "is a",
      "macro"
    ],
    [
      "assert!:1.60",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "std:1.60",
      "contains",
      "assert!:1.60"
    ],
    [
      "format!:1.60",
      "is a",
      "macro"
    ],
    [
      "format!:1.60",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String."
    ],
    [
      "std:1.60",
      "contains",
      "format!:1.60"
    ],
    [
      "vec!:1.60",
      "is a",
      "macro"
    ],
    [
      "vec!:1.60",
      "has description",
      "Creates a Vec containing the arguments."
    ],
    [
      "std:1.60",
      "contains",
      "vec!:1.60"
    ],
    [
      "std::intrinsics:1.60",
      "has stability",
      "Unstable:1.60"
    ],
    [
      "std::intrinsics:1.60",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "std:1.60",
      "contains",
      "std::intrinsics:1.60"
    ],
    [
      "std::raw:1.60",
      "has stability",
      "Unstable:1.60"
    ],
    [
      "std::raw:1.60",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "std:1.60",
      "contains",
      "std::raw:1.60"
    ],
    [
      "std:1.60",
      "has description",
      "The Rust Standard Library is the foundation of portable Rust software, a set of minimal and battle-tested shared abstractions for the broader Rust ecosystem. It offers core types, like Vec<T> and Option<T>, library-defined operations on language primitives, standard macros, I/O and multithreading, among many other things."
    ],
    [
      "std:1.60",
      "contains",
      "std::clone:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::cmp:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::convert:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::default:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::error:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::f32:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::f64:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::ffi:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::fmt:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::hash:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::i16:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::i32:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::i64:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::i8:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::io:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::isize:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::iter:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::marker:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::mem:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::num:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::ops:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::option:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::os:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::panic:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::path:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::prelude:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::process:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::ptr:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::rc:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::result:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::slice:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::string:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::sync:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::time:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::u16:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::u32:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::u64:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::u8:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::usize:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std::vec:1.60"
    ],
    [
      "array:1.60",
      "has description",
      "A fixed-size array, denoted [T; N], for the element type, T, and the non-negative compile time constant size, N."
    ],
    [
      "std::char:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::f32:1.60",
      "has description",
      "The 32-bit floating point type."
    ],
    [
      "std::f64:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::f64:1.60",
      "has description",
      "The 64-bit floating point type."
    ],
    [
      "std::i16:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::i16:1.60",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "std::i32:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::i32:1.60",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "std::i64:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::i64:1.60",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "std::i8:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::i8:1.60",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "std::isize:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::isize:1.60",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "pointer:1.60",
      "is a",
      "primitive type"
    ],
    [
      "pointer:1.60",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::slice:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::slice:1.60",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]."
    ],
    [
      "tuple:1.60",
      "is a",
      "primitive type"
    ],
    [
      "tuple:1.60",
      "has description",
      "A finite heterogeneous sequence, (T, U, ..)."
    ],
    [
      "std::u16:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::u16:1.60",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "std::u32:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::u32:1.60",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "std::u64:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::u64:1.60",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "std::u8:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::u8:1.60",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "std::usize:1.60",
      "is a",
      "primitive type"
    ],
    [
      "std::usize:1.60",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "std::any:1.60",
      "is a",
      "module"
    ],
    [
      "std::any:1.60",
      "has description",
      "This module implements the Any trait, which enables dynamic typing of any 'static type through runtime reflection."
    ],
    [
      "std::ascii:1.60",
      "is a",
      "module"
    ],
    [
      "std::borrow:1.60",
      "is a",
      "module"
    ],
    [
      "std::boxed:1.60",
      "is a",
      "module"
    ],
    [
      "std::cell:1.60",
      "is a",
      "module"
    ],
    [
      "std::char:1.60",
      "is a",
      "module"
    ],
    [
      "std::clone:1.60",
      "is a",
      "module"
    ],
    [
      "std::clone:1.60",
      "has description",
      "The Clone trait for types that cannot be 'implicitly copied'."
    ],
    [
      "std::cmp:1.60",
      "is a",
      "module"
    ],
    [
      "std::cmp:1.60",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "std::collections:1.60",
      "is a",
      "module"
    ],
    [
      "std::convert:1.60",
      "is a",
      "module"
    ],
    [
      "std::convert:1.60",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "std::default:1.60",
      "is a",
      "module"
    ],
    [
      "std::default:1.60",
      "has description",
      "The Default trait for types which may have meaningful default values."
    ],
    [
      "std::env:1.60",
      "is a",
      "module"
    ],
    [
      "std::error:1.60",
      "is a",
      "module"
    ],
    [
      "std::error:1.60",
      "has description",
      "Traits for working with Errors."
    ],
    [
      "std::f32:1.60",
      "is a",
      "module"
    ],
    [
      "std::f64:1.60",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.60",
      "is a",
      "module"
    ],
    [
      "std::ffi:1.60",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "std::fmt:1.60",
      "is a",
      "module"
    ],
    [
      "std::fmt:1.60",
      "has description",
      "Utilities for formatting and printing strings"
    ],
    [
      "std::fs:1.60",
      "is a",
      "module"
    ],
    [
      "std::hash:1.60",
      "is a",
      "module"
    ],
    [
      "std::hash:1.60",
      "has description",
      "Generic hashing support."
    ],
    [
      "std::i16:1.60",
      "is a",
      "module"
    ],
    [
      "std::i32:1.60",
      "is a",
      "module"
    ],
    [
      "std::i64:1.60",
      "is a",
      "module"
    ],
    [
      "std::i8:1.60",
      "is a",
      "module"
    ],
    [
      "std::io:1.60",
      "is a",
      "module"
    ],
    [
      "std::io:1.60",
      "has description",
      "Traits, helpers, and type definitions for core I/O functionality."
    ],
    [
      "std::isize:1.60",
      "is a",
      "module"
    ],
    [
      "std::iter:1.60",
      "is a",
      "module"
    ],
    [
      "std::iter:1.60",
      "has description",
      "Composable external iteration."
    ],
    [
      "std::marker:1.60",
      "is a",
      "module"
    ],
    [
      "std::marker:1.60",
      "has description",
      "Primitive traits and marker types representing basic 'kinds' of types."
    ],
    [
      "std::mem:1.60",
      "is a",
      "module"
    ],
    [
      "std::mem:1.60",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "std::net:1.60",
      "is a",
      "module"
    ],
    [
      "std::num:1.60",
      "is a",
      "module"
    ],
    [
      "std::num:1.60",
      "has description",
      "Additional functionality for numerics."
    ],
    [
      "std::ops:1.60",
      "is a",
      "module"
    ],
    [
      "std::ops:1.60",
      "has description",
      "Overloadable operators."
    ],
    [
      "std::option:1.60",
      "is a",
      "module"
    ],
    [
      "std::option:1.60",
      "has description",
      "Optional values."
    ],
    [
      "std::os:1.60",
      "is a",
      "module"
    ],
    [
      "std::os:1.60",
      "has description",
      "OS-specific functionality."
    ],
    [
      "std::panic:1.60",
      "is a",
      "module"
    ],
    [
      "std::panic:1.60",
      "has description",
      "Panic support in the standard library"
    ],
    [
      "std::path:1.60",
      "is a",
      "module"
    ],
    [
      "std::path:1.60",
      "has description",
      "Cross-platform path manipulation."
    ],
    [
      "std::prelude:1.60",
      "is a",
      "module"
    ],
    [
      "std::prelude:1.60",
      "has description",
      "The Rust Prelude."
    ],
    [
      "std::process:1.60",
      "is a",
      "module"
    ],
    [
      "std::process:1.60",
      "has description",
      "Working with processes."
    ],
    [
      "std::ptr:1.60",
      "is a",
      "module"
    ],
    [
      "std::ptr:1.60",
      "has description",
      "Raw, unsafe pointers, *const T, and *mut T."
    ],
    [
      "std::rc:1.60",
      "is a",
      "module"
    ],
    [
      "std::rc:1.60",
      "has description",
      "Thread-local reference-counted boxes (the Rc<T> type)."
    ],
    [
      "std::result:1.60",
      "is a",
      "module"
    ],
    [
      "std::result:1.60",
      "has description",
      "Error handling with the Result type."
    ],
    [
      "std::slice:1.60",
      "is a",
      "module"
    ],
    [
      "std::str:1.60",
      "is a",
      "module"
    ],
    [
      "std::str:1.60",
      "has description",
      "Unicode string slices."
    ],
    [
      "std::string:1.60",
      "is a",
      "module"
    ],
    [
      "std::string:1.60",
      "has description",
      "A UTF-8 encoded, growable string."
    ],
    [
      "std::sync:1.60",
      "is a",
      "module"
    ],
    [
      "std::sync:1.60",
      "has description",
      "Useful synchronization primitives."
    ],
    [
      "std::thread:1.60",
      "is a",
      "module"
    ],
    [
      "std::time:1.60",
      "is a",
      "module"
    ],
    [
      "std::time:1.60",
      "has description",
      "Temporal quantification."
    ],
    [
      "std::u16:1.60",
      "is a",
      "module"
    ],
    [
      "std::u32:1.60",
      "is a",
      "module"
    ],
    [
      "std::u64:1.60",
      "is a",
      "module"
    ],
    [
      "std::u8:1.60",
      "is a",
      "module"
    ],
    [
      "std::usize:1.60",
      "is a",
      "module"
    ],
    [
      "std::vec:1.60",
      "is a",
      "module"
    ],
    [
      "std::vec:1.60",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector'."
    ],
    [
      "std::intrinsics:1.60",
      "is a",
      "module"
    ],
    [
      "std::intrinsics:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "std::raw:1.60",
      "is a",
      "module"
    ],
    [
      "std::raw:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "assert_eq!:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_eq!:1.60",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "cfg!:1.60",
      "is a",
      "macro"
    ],
    [
      "cfg!:1.60",
      "has description",
      "Boolean evaluation of configuration flags."
    ],
    [
      "column!:1.60",
      "is a",
      "macro"
    ],
    [
      "column!:1.60",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "concat!:1.60",
      "is a",
      "macro"
    ],
    [
      "concat!:1.60",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "concat_idents!:1.60",
      "is a",
      "macro"
    ],
    [
      "concat_idents!:1.60",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "debug_assert!:1.60",
      "is a",
      "macro"
    ],
    [
      "debug_assert!:1.60",
      "has description",
      "Ensure that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq!:1.60",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq!:1.60",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "env!:1.60",
      "is a",
      "macro"
    ],
    [
      "env!:1.60",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "file!:1.60",
      "is a",
      "macro"
    ],
    [
      "file!:1.60",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "format!:1.60",
      "has description",
      "Use the syntax described in std::fmt to create a value of type String. See std::fmt for more information."
    ],
    [
      "format_args!:1.60",
      "is a",
      "macro"
    ],
    [
      "format_args!:1.60",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "include!:1.60",
      "is a",
      "macro"
    ],
    [
      "include!:1.60",
      "has description",
      "Parse the current given file as an expression."
    ],
    [
      "include_bytes!:1.60",
      "is a",
      "macro"
    ],
    [
      "include_bytes!:1.60",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "include_str!:1.60",
      "is a",
      "macro"
    ],
    [
      "include_str!:1.60",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "line!:1.60",
      "is a",
      "macro"
    ],
    [
      "line!:1.60",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "module_path!:1.60",
      "is a",
      "macro"
    ],
    [
      "module_path!:1.60",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "option_env!:1.60",
      "is a",
      "macro"
    ],
    [
      "option_env!:1.60",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "panic!:1.60",
      "is a",
      "macro"
    ],
    [
      "panic!:1.60",
      "has description",
      "The entry point for panic of Rust threads."
    ],
    [
      "print!:1.60",
      "is a",
      "macro"
    ],
    [
      "print!:1.60",
      "has description",
      "Macro for printing to the standard output."
    ],
    [
      "println!:1.60",
      "is a",
      "macro"
    ],
    [
      "println!:1.60",
      "has description",
      "Macro for printing to the standard output, with a newline."
    ],
    [
      "stringify!:1.60",
      "is a",
      "macro"
    ],
    [
      "stringify!:1.60",
      "has description",
      "A macro which stringifies its argument."
    ],
    [
      "thread_local!:1.60",
      "is a",
      "macro"
    ],
    [
      "thread_local!:1.60",
      "has description",
      "Declare a new thread local storage key of type std::thread::LocalKey."
    ],
    [
      "scoped_thread_local!:1.60",
      "is a",
      "macro"
    ],
    [
      "scoped_thread_local!:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "scoped_thread_local!:1.60",
      "has description",
      "Declare a new scoped thread local storage key."
    ],
    [
      "select!:1.60",
      "is a",
      "macro"
    ],
    [
      "select!:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "select!:1.60",
      "has description",
      "A macro to select an event from a number of receivers."
    ],
    [
      "try!:1.60",
      "is a",
      "macro"
    ],
    [
      "try!:1.60",
      "has description",
      "Helper macro for unwrapping Result values while returning early with an error if the value of the expression is Err. Can only be used in functions that return Result because of the early return of Err that it provides."
    ],
    [
      "unimplemented!:1.60",
      "is a",
      "macro"
    ],
    [
      "unimplemented!:1.60",
      "has description",
      "A standardized placeholder for marking unfinished code. It panics with the message \"not yet implemented\" when executed."
    ],
    [
      "unreachable!:1.60",
      "is a",
      "macro"
    ],
    [
      "unreachable!:1.60",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "write!:1.60",
      "is a",
      "macro"
    ],
    [
      "write!:1.60",
      "has description",
      "Use the format! syntax to write data into a buffer."
    ],
    [
      "writeln!:1.60",
      "is a",
      "macro"
    ],
    [
      "writeln!:1.60",
      "has description",
      "Use the format! syntax to write data into a buffer, appending a newline."
    ],
    [
      "std:1.60",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-473"
    ],
    [
      "std:1.60",
      "contains",
      "alloc:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "core:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "libc:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "rustc_unicode:1.60"
    ],
    [
      "std::any:1.60",
      "has alias",
      "any"
    ],
    [
      "std::ascii:1.60",
      "has alias",
      "ascii"
    ],
    [
      "std::borrow:1.60",
      "has alias",
      "borrow"
    ],
    [
      "std::boxed:1.60",
      "has alias",
      "boxed"
    ],
    [
      "std::cell:1.60",
      "has alias",
      "cell"
    ],
    [
      "std::char:1.60",
      "has alias",
      "char"
    ],
    [
      "std::clone:1.60",
      "has alias",
      "clone"
    ],
    [
      "std::cmp:1.60",
      "has alias",
      "cmp"
    ],
    [
      "std::collections:1.60",
      "has alias",
      "collections"
    ],
    [
      "std::convert:1.60",
      "has alias",
      "convert"
    ],
    [
      "std::default:1.60",
      "has alias",
      "default"
    ],
    [
      "std::env:1.60",
      "has alias",
      "env"
    ],
    [
      "std::error:1.60",
      "has alias",
      "error"
    ],
    [
      "std::f32:1.60",
      "has alias",
      "f32"
    ],
    [
      "std::f64:1.60",
      "has alias",
      "f64"
    ],
    [
      "std::ffi:1.60",
      "has alias",
      "ffi"
    ],
    [
      "std::fmt:1.60",
      "has alias",
      "fmt"
    ],
    [
      "std::fs:1.60",
      "has alias",
      "fs"
    ],
    [
      "std::hash:1.60",
      "has alias",
      "hash"
    ],
    [
      "std::i16:1.60",
      "has alias",
      "i16"
    ],
    [
      "std::i32:1.60",
      "has alias",
      "i32"
    ],
    [
      "std::i64:1.60",
      "has alias",
      "i64"
    ],
    [
      "std::i8:1.60",
      "has alias",
      "i8"
    ],
    [
      "std::io:1.60",
      "has alias",
      "io"
    ],
    [
      "std::isize:1.60",
      "has alias",
      "isize"
    ],
    [
      "std::iter:1.60",
      "has alias",
      "iter"
    ],
    [
      "std::marker:1.60",
      "has alias",
      "marker"
    ],
    [
      "std::mem:1.60",
      "has alias",
      "mem"
    ],
    [
      "std::net:1.60",
      "has alias",
      "net"
    ],
    [
      "std::num:1.60",
      "has alias",
      "num"
    ],
    [
      "std::ops:1.60",
      "has alias",
      "ops"
    ],
    [
      "std::option:1.60",
      "has alias",
      "option"
    ],
    [
      "std::os:1.60",
      "has alias",
      "os"
    ],
    [
      "std::panic:1.60",
      "has alias",
      "panic"
    ],
    [
      "std::path:1.60",
      "has alias",
      "path"
    ],
    [
      "std::prelude:1.60",
      "has alias",
      "prelude"
    ],
    [
      "std::process:1.60",
      "has alias",
      "process"
    ],
    [
      "std::ptr:1.60",
      "has alias",
      "ptr"
    ],
    [
      "std::rc:1.60",
      "has alias",
      "rc"
    ],
    [
      "std::result:1.60",
      "has alias",
      "result"
    ],
    [
      "std::slice:1.60",
      "has alias",
      "slice"
    ],
    [
      "std::str:1.60",
      "has alias",
      "str"
    ],
    [
      "std::string:1.60",
      "has alias",
      "string"
    ],
    [
      "std::sync:1.60",
      "has alias",
      "sync"
    ],
    [
      "std::thread:1.60",
      "has alias",
      "thread"
    ],
    [
      "std::time:1.60",
      "has alias",
      "time"
    ],
    [
      "std::u16:1.60",
      "has alias",
      "u16"
    ],
    [
      "std::u32:1.60",
      "has alias",
      "u32"
    ],
    [
      "std::u64:1.60",
      "has alias",
      "u64"
    ],
    [
      "std::u8:1.60",
      "has alias",
      "u8"
    ],
    [
      "std::usize:1.60",
      "has alias",
      "usize"
    ],
    [
      "std::vec:1.60",
      "has alias",
      "vec"
    ],
    [
      "std::vec:1.60",
      "has description",
      "A contiguous growable array type with heap-allocated contents, written Vec<T> but pronounced 'vector.'"
    ],
    [
      "std::intrinsics:1.60",
      "has alias",
      "intrinsics"
    ],
    [
      "std::raw:1.60",
      "has alias",
      "raw"
    ],
    [
      "scoped_thread_local!:1.60",
      "has stability",
      "Deprecated:1.60"
    ],
    [
      "scoped_thread_local!:1.60",
      "has stability",
      "Unstable:1.60"
    ],
    [
      ":1.60",
      null,
      "undefined:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "proc_macro:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "std_unicode:1.60"
    ],
    [
      "std:1.60",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-493"
    ],
    [
      "std::process:1.60",
      "has description",
      "A module for working with processes."
    ],
    [
      "i128:1.60",
      "is a",
      "primitive type"
    ],
    [
      "i128:1.60",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "i128:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "u128:1.60",
      "is a",
      "primitive type"
    ],
    [
      "u128:1.60",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "u128:1.60",
      "has attribute",
      "unstable:1.60"
    ],
    [
      "eprint!:1.60",
      "is a",
      "macro"
    ],
    [
      "eprint!:1.60",
      "has description",
      "Macro for printing to the standard error."
    ],
    [
      "eprintln!:1.60",
      "is a",
      "macro"
    ],
    [
      "eprintln!:1.60",
      "has description",
      "Macro for printing to the standard error, with a newline."
    ],
    [
      "assert_ne!:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_ne!:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "debug_assert_ne!:1.60",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne!:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "std::intrinsics:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "std::raw:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "proc_macro:1.60",
      "is a",
      "crate"
    ],
    [
      "proc_macro:1.60",
      "has description",
      "A support library for macro authors when defining new macros."
    ],
    [
      "std_unicode:1.60",
      "is a",
      "crate"
    ],
    [
      "std_unicode:1.60",
      "has description",
      "The Unicode Library"
    ],
    [
      "select!:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "try!:1.60",
      "has description",
      "Helper macro for reducing boilerplate for matching Result together with converting downstream errors."
    ],
    [
      "include!:1.60",
      "has description",
      "Parse a file as an expression or an item according to the context"
    ],
    [
      "println!:1.60",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\r/U+000D)."
    ],
    [
      "write!:1.60",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "writeln!:1.60",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "std::f32:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the f32 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::f64:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the f64 floating point data type. Mathematically significant numbers are provided in the consts sub-module."
    ],
    [
      "std::intrinsics:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "std::raw:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "println!:1.60",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D)."
    ],
    [
      "scoped_thread_local!:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "select!:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "write!:1.60",
      "has description",
      "Write formatted data into a buffer"
    ],
    [
      "std::rc:1.60",
      "has description",
      "Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."
    ],
    [
      "std:1.60",
      "contains",
      "i128:1.60"
    ],
    [
      "i128:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "u128:1.60"
    ],
    [
      "u128:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "eprint!:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "eprintln!:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "compile_error!:1.60"
    ],
    [
      "compile_error!:1.60",
      "is a",
      "macro"
    ],
    [
      "compile_error!:1.60",
      "has description",
      "Unconditionally causes compilation to fail with the given error message."
    ],
    [
      "include!:1.60",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "writeln!:1.60",
      "has description",
      "Write formatted data into a buffer with appended newline."
    ],
    [
      "println!:1.60",
      "has description",
      "Macro for printing to the standard output, with a newline. On all platforms, the newline is the LINE FEED character (\\n/U+000A) alone (no additional CARRIAGE RETURN (\\r/U+000D))."
    ],
    [
      "std:1.60",
      "stable since",
      "1.40.0"
    ],
    [
      "std:1.60",
      "contains",
      "future:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "pin:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "task:1.60"
    ],
    [
      "std::ptr:1.60",
      "has description",
      "Manually manage memory through raw pointers"
    ],
    [
      "std::slice:1.60",
      "has description",
      "A dynamically-sized view into a contiguous sequence, [T]. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors."
    ],
    [
      "future:1.60",
      "is a",
      "module"
    ],
    [
      "future:1.60",
      "has description",
      "Asynchronous values."
    ],
    [
      "pin:1.60",
      "is a",
      "module"
    ],
    [
      "pin:1.60",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "task:1.60",
      "is a",
      "module"
    ],
    [
      "task:1.60",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "std:1.60",
      "has version",
      "1.40.0:1.60"
    ],
    [
      "std:1.60",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#1-571"
    ],
    [
      "array:1.60",
      "is a",
      "module"
    ],
    [
      "array:1.60",
      "has description",
      "Implementations of things like Eq for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "std:1.60",
      "stable since",
      "1.50.0"
    ],
    [
      "std::f32:1.60",
      "has description",
      "A 32-bit floating point type (specifically, the \"binary32\" type defined in IEEE 754-2008)."
    ],
    [
      "std::f64:1.60",
      "has description",
      "A 64-bit floating point type (specifically, the \"binary64\" type defined in IEEE 754-2008)."
    ],
    [
      "std:1.60",
      "contains",
      "backtrace:1.60"
    ],
    [
      "backtrace:1.60",
      "is a",
      "module"
    ],
    [
      "backtrace:1.60",
      "has description",
      "Support for capturing a stack backtrace of an OS thread."
    ],
    [
      "backtrace:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "format_args_nl:1.60",
      "is a",
      "macro"
    ],
    [
      "format_args_nl:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "format_args_nl:1.60",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "std:1.60",
      "has version",
      "1.50.0:1.60"
    ],
    [
      "backtrace:1.60",
      "has description",
      "Support for capturing a stack backtrace of an OS thread"
    ],
    [
      "backtrace:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "unit:1.60",
      "has description",
      "The () type, also called \"unit\"."
    ],
    [
      "format_args_nl!:1.60",
      "is a",
      "macro"
    ],
    [
      "std:1.60",
      "contains",
      "format_args_nl!:1.60"
    ],
    [
      "format_args_nl!:1.60",
      "has description",
      "Same as format_args, but adds a newline in the end."
    ],
    [
      "format_args_nl!:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "unit:1.60",
      "has description",
      "The () type, also called \"unit\""
    ],
    [
      "format_args_nl:1.60",
      "has description",
      "Same as format_args, but adds a newline in the end"
    ],
    [
      "format_args_nl:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "std:1.60",
      "stable since",
      "1.60.0"
    ],
    [
      "std:1.60",
      "contains",
      "async_iter:1.60"
    ],
    [
      "async_iter:1.60",
      "is a",
      "module"
    ],
    [
      "async_iter:1.60",
      "has description",
      "Composable asynchronous iteration."
    ],
    [
      "std:1.60",
      "contains",
      "assert_matches:1.60"
    ],
    [
      "assert_matches:1.60",
      "is a",
      "module"
    ],
    [
      "assert_matches:1.60",
      "has description",
      "Unstable module containing the unstable assert_matches macro."
    ],
    [
      "std:1.60",
      "contains",
      "simd:1.60"
    ],
    [
      "simd:1.60",
      "is a",
      "module"
    ],
    [
      "simd:1.60",
      "has description",
      "Portable SIMD module."
    ],
    [
      "std::ptr:1.60",
      "has description",
      "Manually manage memory through raw pointers."
    ],
    [
      "std:1.60",
      "contains",
      "hint:1.60"
    ],
    [
      "hint:1.60",
      "is a",
      "module"
    ],
    [
      "hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "std::f32:1.60",
      "has description",
      "Constants specific to the f32 single-precision floating point type."
    ],
    [
      "std::f64:1.60",
      "has description",
      "Constants specific to the f64 double-precision floating point type."
    ],
    [
      "std::i8:1.60",
      "has description",
      "Constants for the 8-bit signed integer type."
    ],
    [
      "std::i8:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::i16:1.60",
      "has description",
      "Constants for the 16-bit signed integer type."
    ],
    [
      "std::i16:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::i32:1.60",
      "has description",
      "Constants for the 32-bit signed integer type."
    ],
    [
      "std::i32:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::i64:1.60",
      "has description",
      "Constants for the 64-bit signed integer type."
    ],
    [
      "std::i64:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "i128:1.60",
      "has description",
      "Constants for the 128-bit signed integer type."
    ],
    [
      "i128:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::isize:1.60",
      "has description",
      "Constants for the pointer-sized signed integer type."
    ],
    [
      "std::isize:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::u8:1.60",
      "has description",
      "Constants for the 8-bit unsigned integer type."
    ],
    [
      "std::u8:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::u16:1.60",
      "has description",
      "Constants for the 16-bit unsigned integer type."
    ],
    [
      "std::u16:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::u32:1.60",
      "has description",
      "Constants for the 32-bit unsigned integer type."
    ],
    [
      "std::u32:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::u64:1.60",
      "has description",
      "Constants for the 64-bit unsigned integer type."
    ],
    [
      "std::u64:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "u128:1.60",
      "has description",
      "Constants for the 128-bit unsigned integer type."
    ],
    [
      "u128:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std::usize:1.60",
      "has description",
      "Constants for the pointer-sized unsigned integer type."
    ],
    [
      "std::usize:1.60",
      "has attribute",
      "deprecated:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "concat_bytes!:1.60"
    ],
    [
      "concat_bytes!:1.60",
      "is a",
      "macro"
    ],
    [
      "concat_bytes!:1.60",
      "has description",
      "Concatenates literals into a byte slice."
    ],
    [
      "std:1.60",
      "has version",
      "1.60.0:1.60"
    ],
    [
      "format_args_nl!:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "arch:1.60"
    ],
    [
      "arch:1.60",
      "is a",
      "module"
    ],
    [
      "arch:1.60",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "std:1.60",
      "contains",
      "concat_bytes:1.60"
    ],
    [
      "concat_bytes:1.60",
      "is a",
      "macro"
    ],
    [
      "concat_bytes:1.60",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "std:1.60",
      "contains",
      "const_format_args:1.60"
    ],
    [
      "const_format_args:1.60",
      "is a",
      "macro"
    ],
    [
      "std::f32:1.60",
      "has description",
      "Constants specific to the implementation of the f32 floating point type."
    ],
    [
      "std::f64:1.60",
      "has description",
      "Constants specific to the implementation of the f64 floating point type."
    ],
    [
      "test:1.60",
      "is a",
      "crate"
    ],
    [
      "test:1.60",
      "has description",
      "Support code for rustc's built in unit-test and micro-benchmarking framework."
    ],
    [
      "std:1.60",
      "contains",
      "test:1.60"
    ],
    [
      "unit:1.60",
      "is a",
      "primitive type"
    ],
    [
      "unit:1.60",
      "has description",
      "The () type, sometimes called 'unit' or 'nil'."
    ],
    [
      "std:1.60",
      "contains",
      "unit:1.60"
    ],
    [
      "never:1.60",
      "is a",
      "primitive type"
    ],
    [
      "never:1.60",
      "has description",
      "The ! type, also called 'never'."
    ],
    [
      "never:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "never:1.60"
    ],
    [
      "fn:1.60",
      "is a",
      "primitive type"
    ],
    [
      "fn:1.60",
      "has description",
      "Function pointers, like fn(usize) -> bool."
    ],
    [
      "std:1.60",
      "contains",
      "fn:1.60"
    ],
    [
      "reference:1.60",
      "is a",
      "primitive type"
    ],
    [
      "reference:1.60",
      "has description",
      "References, both shared and mutable."
    ],
    [
      "std:1.60",
      "contains",
      "reference:1.60"
    ],
    [
      "alloc:1.60",
      "is a",
      "module"
    ],
    [
      "alloc:1.60",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "is_x86_feature_detected!:1.60",
      "is a",
      "macro"
    ],
    [
      "is_x86_feature_detected!:1.60",
      "has description",
      "A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."
    ],
    [
      "std:1.60",
      "contains",
      "is_x86_feature_detected!:1.60"
    ],
    [
      "await!:1.60",
      "is a",
      "macro"
    ],
    [
      "await!:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "await!:1.60"
    ],
    [
      "format!:1.60",
      "has description",
      "Creates a String using interpolation of runtime expressions."
    ],
    [
      "std:1.60",
      "has version",
      "1.30.1:1.60"
    ],
    [
      "std:1.60",
      "has source code",
      "../src/std/up/src/libstd/lib.rs.html#11-540"
    ],
    [
      "fn:1.60",
      "has description",
      "Function pointers, like `fn(usize) -> bool`."
    ],
    [
      "unit:1.60",
      "has description",
      "The `()` type, sometimes called 'unit' or 'nil'."
    ],
    [
      "never:1.60",
      "has description",
      "The `!` type, also called 'never'."
    ],
    [
      "future:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "pin:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "pin:1.60",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "task:1.60",
      "has stability",
      "Experimental:1.60"
    ],
    [
      "task:1.60",
      "has description",
      "Types and Traits for working with asynchronous tasks"
    ],
    [
      "backtrace:1.60",
      "has description",
      "Support for capturing OS thread backtraces"
    ],
    [
      "std::intrinsics:1.60",
      "has description",
      "Compiler intrinsics module"
    ],
    [
      "dbg:1.60",
      "is a",
      "macro"
    ],
    [
      "dbg:1.60",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging."
    ],
    [
      "debug_assert:1.60",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "debug_assert_eq:1.60",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "debug_assert_ne:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "global_asm:1.60",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.60",
      "has attribute",
      "Experimental:1.60"
    ],
    [
      "std:1.60",
      "contains",
      "super:1.60"
    ],
    [
      "super:1.60",
      "has description",
      "The parent of the current module"
    ],
    [
      "std:1.60",
      "contains",
      "trait:1.60"
    ],
    [
      "trait:1.60",
      "has description",
      "A common interface for a class of types."
    ],
    [
      "std:1.60",
      "contains",
      "true:1.60"
    ],
    [
      "true:1.60",
      "has description",
      "A value of type bool representing logical true."
    ],
    [
      "std:1.60",
      "contains",
      "type:1.60"
    ],
    [
      "type:1.60",
      "has description",
      "Define an alias for an existing type."
    ],
    [
      "std:1.60",
      "contains",
      "union:1.60"
    ],
    [
      "union:1.60",
      "has description",
      "The Rust equivalent of a C-style union"
    ],
    [
      "std:1.60",
      "contains",
      "unsafe:1.60"
    ],
    [
      "unsafe:1.60",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system."
    ],
    [
      "std:1.60",
      "contains",
      "use:1.60"
    ],
    [
      "use:1.60",
      "has description",
      "Import or rename items from other crates or modules."
    ],
    [
      "std:1.60",
      "contains",
      "where:1.60"
    ],
    [
      "where:1.60",
      "has description",
      "Add constraints that must be upheld to use an item."
    ],
    [
      "std:1.60",
      "contains",
      "while:1.60"
    ],
    [
      "while:1.60",
      "has description",
      "Loop while a condition is upheld."
    ],
    [
      "std::intrinsics:1.60",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "std:1.60",
      "contains",
      "async:1.60"
    ],
    [
      "async:1.60",
      "is a",
      "keyword"
    ],
    [
      "async:1.60",
      "has description",
      "Return a Future instead of blocking the current thread."
    ],
    [
      "std:1.60",
      "contains",
      "await:1.60"
    ],
    [
      "await:1.60",
      "is a",
      "keyword"
    ],
    [
      "await:1.60",
      "has description",
      "Suspend execution until the result of a Future is ready."
    ],
    [
      "super:1.60",
      "is a",
      "keyword"
    ],
    [
      "super:1.60",
      "has description",
      "The parent of the current module."
    ],
    [
      "trait:1.60",
      "is a",
      "keyword"
    ],
    [
      "true:1.60",
      "is a",
      "keyword"
    ],
    [
      "type:1.60",
      "is a",
      "keyword"
    ],
    [
      "union:1.60",
      "is a",
      "keyword"
    ],
    [
      "union:1.60",
      "has description",
      "The Rust equivalent of a C-style union."
    ],
    [
      "unsafe:1.60",
      "is a",
      "keyword"
    ],
    [
      "use:1.60",
      "is a",
      "keyword"
    ],
    [
      "where:1.60",
      "is a",
      "keyword"
    ],
    [
      "while:1.60",
      "is a",
      "keyword"
    ],
    [
      "backtrace:1.60",
      "has description",
      "Support for capturing stack backtraces"
    ],
    [
      "todo:1.60",
      "is a",
      "macro"
    ],
    [
      "todo:1.60",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "asm:1.60",
      "is a",
      "macro"
    ],
    [
      "asm:1.60",
      "has description",
      "Inline assembly."
    ],
    [
      "format_args_nl:1.60",
      "has description",
      "Same as format_args but adds a newline"
    ],
    [
      "assert:1.60",
      "has description",
      "Asserts that a boolean expression is true at runtime."
    ],
    [
      "trait:1.60",
      "has description",
      "A common interface for a class of types"
    ],
    [
      "true:1.60",
      "has description",
      "A value of type bool representing logical true"
    ],
    [
      "type:1.60",
      "has description",
      "Define an alias for an existing type"
    ],
    [
      "unsafe:1.60",
      "has description",
      "Code or interfaces whose memory safety cannot be verified by the type system"
    ],
    [
      "use:1.60",
      "has description",
      "Import or rename items from other crates or modules"
    ],
    [
      "where:1.60",
      "has description",
      "Add constraints that must be upheld to use an item"
    ],
    [
      "while:1.60",
      "has description",
      "Loop while a condition is upheld"
    ],
    [
      "assert_eq:1.60",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "assert_ne:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "cfg:1.60",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "debug_assert_eq:1.60",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "debug_assert_ne:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "const:1.60",
      "has description",
      "Compile-time constants and compile-time evaluable functions."
    ],
    [
      "dyn:1.60",
      "has description",
      "dyn is a prefix of a trait object's type."
    ],
    [
      "static:1.60",
      "has description",
      "A static item is a value which is valid for the entire duration of your program (a 'static' lifetime)."
    ],
    [
      "option_env:1.60",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "assert:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.60",
      "is a",
      "macro"
    ],
    [
      "cfg:1.60",
      "is a",
      "macro"
    ],
    [
      "assert:1.60",
      "has description",
      "Asserts that a boolean expression is true at runtime"
    ],
    [
      "assert_eq:1.60",
      "has description",
      "Asserts that two expressions are equal to each other"
    ],
    [
      "assert_ne:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other"
    ],
    [
      "cfg:1.60",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time"
    ],
    [
      "dbg:1.60",
      "has description",
      "Prints and returns the value of a given expression for quick and dirty debugging"
    ],
    [
      "debug_assert:1.60",
      "has description",
      "Asserts that a boolean expression is true at runtime"
    ],
    [
      "std::env:1.60",
      "has description",
      "Inspects an environment variable at compile time"
    ],
    [
      "eprint:1.60",
      "has description",
      "Prints to the standard error"
    ],
    [
      "eprintln:1.60",
      "has description",
      "Prints to the standard error, with a newline"
    ],
    [
      "file:1.60",
      "has description",
      "Expands to the file name in which it was invoked"
    ],
    [
      "format:1.60",
      "has description",
      "Creates a String using interpolation of runtime expressions"
    ],
    [
      "static:1.60",
      "has description",
      "A static item is a value which is valid for the entire duration of your program"
    ],
    [
      "log_syntax:1.60",
      "is a",
      "macro"
    ],
    [
      "log_syntax:1.60",
      "has description",
      "Prints passed tokens into the standard output"
    ],
    [
      "SelfTy:1.60",
      "is a",
      "keyword"
    ],
    [
      "SelfTy:1.60",
      "has description",
      "The implementing type within a trait or impl block, or the current type within a type definition"
    ],
    [
      "const:1.60",
      "has description",
      "Compile-time constants, compile-time evaluable functions, and raw pointers"
    ],
    [
      "hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime"
    ],
    [
      "trait:1.60",
      "has description",
      "A common interface for a group of types."
    ],
    [
      "const:1.60",
      "has description",
      "Compile-time constants, compile-time evaluable functions, and raw pointers."
    ],
    [
      "log_syntax:1.60",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "SelfTy:1.60",
      "has description",
      "The implementing type within a trait or impl block, or the current type within a type definition."
    ],
    [
      "trace_macros:1.60",
      "has description",
      "Enables or disables tracing functionality used for debugging other macros."
    ],
    [
      "format_args!:1.60",
      "has description",
      "Constructs parameters for the other string-formatting macros."
    ],
    [
      "format_args_nl!:1.60",
      "has description",
      "Same as format_args but adds a newline"
    ],
    [
      "log_syntax!:1.60",
      "is a",
      "macro"
    ],
    [
      "log_syntax!:1.60",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "is_x86_feature_detected!:1.60",
      "has attribute",
      "x86 or x86-64:1.60"
    ],
    [
      "core:1.30",
      "contains",
      "core::alloc:1.30"
    ],
    [
      "core::alloc:1.30",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "core:1.30",
      "contains",
      "core::any:1.30"
    ],
    [
      "core::any:1.30",
      "has description",
      "This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."
    ],
    [
      "core:1.30",
      "contains",
      "core::arch:1.30"
    ],
    [
      "core::arch:1.30",
      "has description",
      "Platform dependent vendor intrinsics."
    ],
    [
      "core:1.30",
      "contains",
      "core::array:1.30"
    ],
    [
      "core::array:1.30",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "core:1.30",
      "contains",
      "core::ascii:1.30"
    ],
    [
      "core::ascii:1.30",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "core:1.30",
      "contains",
      "core::borrow:1.30"
    ],
    [
      "core::borrow:1.30",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "core:1.30",
      "contains",
      "core::cell:1.30"
    ],
    [
      "core::cell:1.30",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "core:1.30",
      "contains",
      "core::char:1.30"
    ],
    [
      "core::char:1.30",
      "has description",
      "A character type."
    ],
    [
      "core:1.30",
      "contains",
      "core::clone:1.30"
    ],
    [
      "core::clone:1.30",
      "has description",
      "The `Clone` trait for types that cannot be 'implicitly copied'."
    ],
    [
      "core:1.30",
      "contains",
      "core::cmp:1.30"
    ],
    [
      "core::cmp:1.30",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "core:1.30",
      "contains",
      "core::convert:1.30"
    ],
    [
      "core::convert:1.30",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "core:1.30",
      "contains",
      "core::default:1.30"
    ],
    [
      "core::default:1.30",
      "has description",
      "The `Default` trait for types which may have meaningful default values."
    ],
    [
      "core:1.30",
      "contains",
      "core::f32:1.30"
    ],
    [
      "core::f32:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "core:1.30",
      "contains",
      "core::f64:1.30"
    ],
    [
      "core::f64:1.30",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "core:1.30",
      "contains",
      "core::ffi:1.30"
    ],
    [
      "core::ffi:1.30",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "core::ffi:1.30",
      "stable since",
      "1.30.0"
    ],
    [
      "core:1.30",
      "contains",
      "core::fmt:1.30"
    ],
    [
      "core::fmt:1.30",
      "has description",
      "Utilities for formatting and printing strings."
    ],
    [
      "core:1.30",
      "contains",
      "core::future:1.30"
    ],
    [
      "core::future:1.30",
      "has description",
      "Asynchronous values."
    ],
    [
      "core:1.30",
      "contains",
      "core::hash:1.30"
    ],
    [
      "core::hash:1.30",
      "has description",
      "Generic hashing support."
    ],
    [
      "core:1.30",
      "contains",
      "core::hint:1.30"
    ],
    [
      "core::hint:1.30",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "core:1.30",
      "contains",
      "core::i128:1.30"
    ],
    [
      "core::i128:1.30",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::i16:1.30"
    ],
    [
      "core::i16:1.30",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::i32:1.30"
    ],
    [
      "core::i32:1.30",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::i64:1.30"
    ],
    [
      "core::i64:1.30",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::i8:1.30"
    ],
    [
      "core::i8:1.30",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::intrinsics:1.30"
    ],
    [
      "core::intrinsics:1.30",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "core:1.30",
      "contains",
      "core::isize:1.30"
    ],
    [
      "core::isize:1.30",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::iter:1.30"
    ],
    [
      "core::iter:1.30",
      "has description",
      "Composable external iteration."
    ],
    [
      "core:1.30",
      "contains",
      "core::marker:1.30"
    ],
    [
      "core::marker:1.30",
      "has description",
      "Primitive traits and types representing basic properties of types."
    ],
    [
      "core:1.30",
      "contains",
      "core::mem:1.30"
    ],
    [
      "core::mem:1.30",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "core:1.30",
      "contains",
      "core::num:1.30"
    ],
    [
      "core::num:1.30",
      "has description",
      "Numeric traits and functions for the built-in numeric types."
    ],
    [
      "core:1.30",
      "contains",
      "core::ops:1.30"
    ],
    [
      "core::ops:1.30",
      "has description",
      "Overloadable operators."
    ],
    [
      "core:1.30",
      "contains",
      "core::option:1.30"
    ],
    [
      "core::option:1.30",
      "has description",
      "Optional values."
    ],
    [
      "core:1.30",
      "contains",
      "core::panic:1.30"
    ],
    [
      "core::panic:1.30",
      "has description",
      "Panic support in the standard library."
    ],
    [
      "core:1.30",
      "contains",
      "core::panicking:1.30"
    ],
    [
      "core::panicking:1.30",
      "has description",
      "Panic support for libcore"
    ],
    [
      "core:1.30",
      "contains",
      "core::pin:1.30"
    ],
    [
      "core::pin:1.30",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "core:1.30",
      "contains",
      "core::prelude:1.30"
    ],
    [
      "core::prelude:1.30",
      "has description",
      "The libcore prelude"
    ],
    [
      "core:1.30",
      "contains",
      "core::ptr:1.30"
    ],
    [
      "core::ptr:1.30",
      "has description",
      "Raw, unsafe pointers, `*const T`, and `*mut T`."
    ],
    [
      "core:1.30",
      "contains",
      "core::raw:1.30"
    ],
    [
      "core::raw:1.30",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "core:1.30",
      "contains",
      "core::result:1.30"
    ],
    [
      "core::result:1.30",
      "has description",
      "Error handling with the `Result` type."
    ],
    [
      "core:1.30",
      "contains",
      "core::slice:1.30"
    ],
    [
      "core::slice:1.30",
      "has description",
      "Slice management and manipulation"
    ],
    [
      "core:1.30",
      "contains",
      "core::str:1.30"
    ],
    [
      "core::str:1.30",
      "has description",
      "String manipulation"
    ],
    [
      "core:1.30",
      "contains",
      "core::sync:1.30"
    ],
    [
      "core::sync:1.30",
      "has description",
      "Synchronization primitives"
    ],
    [
      "core:1.30",
      "contains",
      "core::task:1.30"
    ],
    [
      "core::task:1.30",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "core:1.30",
      "contains",
      "core::time:1.30"
    ],
    [
      "core::time:1.30",
      "has description",
      "Temporal quantification."
    ],
    [
      "core:1.30",
      "contains",
      "core::u128:1.30"
    ],
    [
      "core::u128:1.30",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::u16:1.30"
    ],
    [
      "core::u16:1.30",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::u32:1.30"
    ],
    [
      "core::u32:1.30",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::u64:1.30"
    ],
    [
      "core::u64:1.30",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::u8:1.30"
    ],
    [
      "core::u8:1.30",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "core:1.30",
      "contains",
      "core::unicode:1.30"
    ],
    [
      "core::unicode:1.30",
      "has description",
      ""
    ],
    [
      "core:1.30",
      "contains",
      "core::usize:1.30"
    ],
    [
      "core::usize:1.30",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "core:1.30",
      "contains",
      "assert:1.30"
    ],
    [
      "assert:1.30",
      "is a",
      "macro"
    ],
    [
      "assert:1.30",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.30",
      "contains",
      "assert_eq:1.30"
    ],
    [
      "assert_eq:1.30",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.30",
      "has description",
      "Asserts that two expressions are equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.30",
      "contains",
      "assert_ne:1.30"
    ],
    [
      "assert_ne:1.30",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.30",
      "has description",
      "Asserts that two expressions are not equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.30",
      "contains",
      "cfg:1.30"
    ],
    [
      "cfg:1.30",
      "is a",
      "macro"
    ],
    [
      "cfg:1.30",
      "has description",
      "Boolean evaluation of configuration flags, at compile-time."
    ],
    [
      "core:1.30",
      "contains",
      "column:1.30"
    ],
    [
      "column:1.30",
      "is a",
      "macro"
    ],
    [
      "column:1.30",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "core:1.30",
      "contains",
      "compile_error:1.30"
    ],
    [
      "compile_error:1.30",
      "is a",
      "macro"
    ],
    [
      "compile_error:1.30",
      "has description",
      "Unconditionally causes compilation to fail with the given error message when encountered."
    ],
    [
      "core:1.30",
      "contains",
      "concat:1.30"
    ],
    [
      "concat:1.30",
      "is a",
      "macro"
    ],
    [
      "concat:1.30",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "core:1.30",
      "contains",
      "concat_idents:1.30"
    ],
    [
      "concat_idents:1.30",
      "is a",
      "macro"
    ],
    [
      "concat_idents:1.30",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "core:1.30",
      "contains",
      "debug_assert:1.30"
    ],
    [
      "debug_assert:1.30",
      "is a",
      "macro"
    ],
    [
      "debug_assert:1.30",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.30",
      "contains",
      "debug_assert_eq:1.30"
    ],
    [
      "debug_assert_eq:1.30",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq:1.30",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "core:1.30",
      "contains",
      "debug_assert_ne:1.30"
    ],
    [
      "debug_assert_ne:1.30",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.30",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "core:1.30",
      "contains",
      "env:1.30"
    ],
    [
      "env:1.30",
      "is a",
      "macro"
    ],
    [
      "env:1.30",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "core:1.30",
      "contains",
      "file:1.30"
    ],
    [
      "file:1.30",
      "is a",
      "macro"
    ],
    [
      "file:1.30",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "core:1.30",
      "contains",
      "format_args:1.30"
    ],
    [
      "format_args:1.30",
      "is a",
      "macro"
    ],
    [
      "format_args:1.30",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "core:1.30",
      "contains",
      "include:1.30"
    ],
    [
      "include:1.30",
      "is a",
      "macro"
    ],
    [
      "include:1.30",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "core:1.30",
      "contains",
      "include_bytes:1.30"
    ],
    [
      "include_bytes:1.30",
      "is a",
      "macro"
    ],
    [
      "include_bytes:1.30",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "core:1.30",
      "contains",
      "include_str:1.30"
    ],
    [
      "include_str:1.30",
      "is a",
      "macro"
    ],
    [
      "include_str:1.30",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "core:1.30",
      "contains",
      "line:1.30"
    ],
    [
      "line:1.30",
      "is a",
      "macro"
    ],
    [
      "line:1.30",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "core:1.30",
      "contains",
      "module_path:1.30"
    ],
    [
      "module_path:1.30",
      "is a",
      "macro"
    ],
    [
      "module_path:1.30",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "core:1.30",
      "contains",
      "option_env:1.30"
    ],
    [
      "option_env:1.30",
      "is a",
      "macro"
    ],
    [
      "option_env:1.30",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "core::panic:1.30",
      "is a",
      "macro"
    ],
    [
      "core::panic:1.30",
      "has description",
      "Entry point of thread panic, for details, see std::macros"
    ],
    [
      "core:1.30",
      "contains",
      "stringify:1.30"
    ],
    [
      "stringify:1.30",
      "is a",
      "macro"
    ],
    [
      "stringify:1.30",
      "has description",
      "A macro which stringifies its arguments."
    ],
    [
      "core:1.30",
      "contains",
      "try:1.30"
    ],
    [
      "try:1.30",
      "is a",
      "macro"
    ],
    [
      "try:1.30",
      "has description",
      "Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."
    ],
    [
      "core:1.30",
      "contains",
      "unimplemented:1.30"
    ],
    [
      "unimplemented:1.30",
      "is a",
      "macro"
    ],
    [
      "unimplemented:1.30",
      "has description",
      "A standardized placeholder for marking unfinished code."
    ],
    [
      "core:1.30",
      "contains",
      "unreachable:1.30"
    ],
    [
      "unreachable:1.30",
      "is a",
      "macro"
    ],
    [
      "unreachable:1.30",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "core:1.30",
      "contains",
      "write:1.30"
    ],
    [
      "write:1.30",
      "is a",
      "macro"
    ],
    [
      "write:1.30",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "core:1.30",
      "contains",
      "writeln:1.30"
    ],
    [
      "writeln:1.30",
      "is a",
      "macro"
    ],
    [
      "writeln:1.30",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "core::ffi:1.30",
      "contains",
      "c_void:1.30"
    ],
    [
      "c_void:1.30",
      "is a",
      "enum"
    ],
    [
      "c_void:1.30",
      "has description",
      "Equivalent to C's void type when used as a pointer."
    ],
    [
      "core::alloc:1.30",
      "is a",
      "module"
    ],
    [
      "core::alloc:1.30",
      "has alias",
      "alloc"
    ],
    [
      "core::any:1.30",
      "is a",
      "module"
    ],
    [
      "core::any:1.30",
      "has alias",
      "any"
    ],
    [
      "core::arch:1.30",
      "is a",
      "module"
    ],
    [
      "core::arch:1.30",
      "has alias",
      "arch"
    ],
    [
      "core::array:1.30",
      "is a",
      "module"
    ],
    [
      "core::array:1.30",
      "has alias",
      "array"
    ],
    [
      "core::ascii:1.30",
      "is a",
      "module"
    ],
    [
      "core::ascii:1.30",
      "has alias",
      "ascii"
    ],
    [
      "core::borrow:1.30",
      "is a",
      "module"
    ],
    [
      "core::borrow:1.30",
      "has alias",
      "borrow"
    ],
    [
      "core::cell:1.30",
      "is a",
      "module"
    ],
    [
      "core::cell:1.30",
      "has alias",
      "cell"
    ],
    [
      "core::char:1.30",
      "is a",
      "module"
    ],
    [
      "core::char:1.30",
      "has alias",
      "char"
    ],
    [
      "core::clone:1.30",
      "is a",
      "module"
    ],
    [
      "core::clone:1.30",
      "has alias",
      "clone"
    ],
    [
      "core::cmp:1.30",
      "is a",
      "module"
    ],
    [
      "core::cmp:1.30",
      "has alias",
      "cmp"
    ],
    [
      "core::convert:1.30",
      "is a",
      "module"
    ],
    [
      "core::convert:1.30",
      "has alias",
      "convert"
    ],
    [
      "core::default:1.30",
      "is a",
      "module"
    ],
    [
      "core::default:1.30",
      "has alias",
      "default"
    ],
    [
      "core::f32:1.30",
      "is a",
      "module"
    ],
    [
      "core::f32:1.30",
      "has alias",
      "f32"
    ],
    [
      "core::f64:1.30",
      "is a",
      "module"
    ],
    [
      "core::f64:1.30",
      "has alias",
      "f64"
    ],
    [
      "core::ffi:1.30",
      "is a",
      "module"
    ],
    [
      "core::ffi:1.30",
      "has alias",
      "ffi"
    ],
    [
      "core::fmt:1.30",
      "is a",
      "module"
    ],
    [
      "core::fmt:1.30",
      "has alias",
      "fmt"
    ],
    [
      "core::future:1.30",
      "is a",
      "module"
    ],
    [
      "core::future:1.30",
      "has alias",
      "future"
    ],
    [
      "core::hash:1.30",
      "is a",
      "module"
    ],
    [
      "core::hash:1.30",
      "has alias",
      "hash"
    ],
    [
      "core::hint:1.30",
      "is a",
      "module"
    ],
    [
      "core::hint:1.30",
      "has alias",
      "hint"
    ],
    [
      "core::i128:1.30",
      "is a",
      "module"
    ],
    [
      "core::i128:1.30",
      "has alias",
      "i128"
    ],
    [
      "core::i16:1.30",
      "is a",
      "module"
    ],
    [
      "core::i16:1.30",
      "has alias",
      "i16"
    ],
    [
      "core::i32:1.30",
      "is a",
      "module"
    ],
    [
      "core::i32:1.30",
      "has alias",
      "i32"
    ],
    [
      "core::i64:1.30",
      "is a",
      "module"
    ],
    [
      "core::i64:1.30",
      "has alias",
      "i64"
    ],
    [
      "core::i8:1.30",
      "is a",
      "module"
    ],
    [
      "core::i8:1.30",
      "has alias",
      "i8"
    ],
    [
      "core::intrinsics:1.30",
      "is a",
      "module"
    ],
    [
      "core::intrinsics:1.30",
      "has alias",
      "intrinsics"
    ],
    [
      "core::isize:1.30",
      "is a",
      "module"
    ],
    [
      "core::isize:1.30",
      "has alias",
      "isize"
    ],
    [
      "core::iter:1.30",
      "is a",
      "module"
    ],
    [
      "core::iter:1.30",
      "has alias",
      "iter"
    ],
    [
      "core::marker:1.30",
      "is a",
      "module"
    ],
    [
      "core::marker:1.30",
      "has alias",
      "marker"
    ],
    [
      "core::mem:1.30",
      "is a",
      "module"
    ],
    [
      "core::mem:1.30",
      "has alias",
      "mem"
    ],
    [
      "core::num:1.30",
      "is a",
      "module"
    ],
    [
      "core::num:1.30",
      "has alias",
      "num"
    ],
    [
      "core::ops:1.30",
      "is a",
      "module"
    ],
    [
      "core::ops:1.30",
      "has alias",
      "ops"
    ],
    [
      "core::option:1.30",
      "is a",
      "module"
    ],
    [
      "core::option:1.30",
      "has alias",
      "option"
    ],
    [
      "core::panic:1.30",
      "is a",
      "module"
    ],
    [
      "core::panic:1.30",
      "has alias",
      "panic"
    ],
    [
      "core::panicking:1.30",
      "is a",
      "module"
    ],
    [
      "core::panicking:1.30",
      "has alias",
      "panicking"
    ],
    [
      "core::pin:1.30",
      "is a",
      "module"
    ],
    [
      "core::pin:1.30",
      "has alias",
      "pin"
    ],
    [
      "core::prelude:1.30",
      "is a",
      "module"
    ],
    [
      "core::prelude:1.30",
      "has alias",
      "prelude"
    ],
    [
      "core::ptr:1.30",
      "is a",
      "module"
    ],
    [
      "core::ptr:1.30",
      "has alias",
      "ptr"
    ],
    [
      "core::raw:1.30",
      "is a",
      "module"
    ],
    [
      "core::raw:1.30",
      "has alias",
      "raw"
    ],
    [
      "core::result:1.30",
      "is a",
      "module"
    ],
    [
      "core::result:1.30",
      "has alias",
      "result"
    ],
    [
      "core::slice:1.30",
      "is a",
      "module"
    ],
    [
      "core::slice:1.30",
      "has alias",
      "slice"
    ],
    [
      "core::str:1.30",
      "is a",
      "module"
    ],
    [
      "core::str:1.30",
      "has alias",
      "str"
    ],
    [
      "core::sync:1.30",
      "is a",
      "module"
    ],
    [
      "core::sync:1.30",
      "has alias",
      "sync"
    ],
    [
      "core::task:1.30",
      "is a",
      "module"
    ],
    [
      "core::task:1.30",
      "has alias",
      "task"
    ],
    [
      "core::time:1.30",
      "is a",
      "module"
    ],
    [
      "core::time:1.30",
      "has alias",
      "time"
    ],
    [
      "core::u128:1.30",
      "is a",
      "module"
    ],
    [
      "core::u128:1.30",
      "has alias",
      "u128"
    ],
    [
      "core::u16:1.30",
      "is a",
      "module"
    ],
    [
      "core::u16:1.30",
      "has alias",
      "u16"
    ],
    [
      "core::u32:1.30",
      "is a",
      "module"
    ],
    [
      "core::u32:1.30",
      "has alias",
      "u32"
    ],
    [
      "core::u64:1.30",
      "is a",
      "module"
    ],
    [
      "core::u64:1.30",
      "has alias",
      "u64"
    ],
    [
      "core::u8:1.30",
      "is a",
      "module"
    ],
    [
      "core::u8:1.30",
      "has alias",
      "u8"
    ],
    [
      "core::unicode:1.30",
      "is a",
      "module"
    ],
    [
      "core::unicode:1.30",
      "has alias",
      "unicode"
    ],
    [
      "core::usize:1.30",
      "is a",
      "module"
    ],
    [
      "core::usize:1.30",
      "has alias",
      "usize"
    ],
    [
      "core:1.30",
      "contains",
      "un:1.30"
    ],
    [
      "core:1.70",
      "contains",
      "core::alloc:1.70"
    ],
    [
      "core::alloc:1.70",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "core:1.70",
      "contains",
      "core::any:1.70"
    ],
    [
      "core::any:1.70",
      "has description",
      "This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."
    ],
    [
      "core:1.70",
      "contains",
      "core::arch:1.70"
    ],
    [
      "core::arch:1.70",
      "has description",
      "Platform dependent vendor intrinsics."
    ],
    [
      "core:1.70",
      "contains",
      "core::array:1.70"
    ],
    [
      "core::array:1.70",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "core:1.70",
      "contains",
      "core::ascii:1.70"
    ],
    [
      "core::ascii:1.70",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "core:1.70",
      "contains",
      "core::borrow:1.70"
    ],
    [
      "core::borrow:1.70",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "core:1.70",
      "contains",
      "core::cell:1.70"
    ],
    [
      "core::cell:1.70",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "core:1.70",
      "contains",
      "core::char:1.70"
    ],
    [
      "core::char:1.70",
      "has description",
      "A character type."
    ],
    [
      "core:1.70",
      "contains",
      "core::clone:1.70"
    ],
    [
      "core::clone:1.70",
      "has description",
      "The `Clone` trait for types that cannot be 'implicitly copied'."
    ],
    [
      "core:1.70",
      "contains",
      "core::cmp:1.70"
    ],
    [
      "core::cmp:1.70",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "core:1.70",
      "contains",
      "core::convert:1.70"
    ],
    [
      "core::convert:1.70",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "core:1.70",
      "contains",
      "core::default:1.70"
    ],
    [
      "core::default:1.70",
      "has description",
      "The `Default` trait for types which may have meaningful default values."
    ],
    [
      "core:1.70",
      "contains",
      "core::f32:1.70"
    ],
    [
      "core::f32:1.70",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "core:1.70",
      "contains",
      "core::f64:1.70"
    ],
    [
      "core::f64:1.70",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "core:1.70",
      "contains",
      "core::ffi:1.70"
    ],
    [
      "core::ffi:1.70",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "core::ffi:1.70",
      "stable since",
      "1.30.0"
    ],
    [
      "core:1.70",
      "contains",
      "core::fmt:1.70"
    ],
    [
      "core::fmt:1.70",
      "has description",
      "Utilities for formatting and printing strings."
    ],
    [
      "core:1.70",
      "contains",
      "core::future:1.70"
    ],
    [
      "core::future:1.70",
      "has description",
      "Asynchronous values."
    ],
    [
      "core:1.70",
      "contains",
      "core::hash:1.70"
    ],
    [
      "core::hash:1.70",
      "has description",
      "Generic hashing support."
    ],
    [
      "core:1.70",
      "contains",
      "core::hint:1.70"
    ],
    [
      "core::hint:1.70",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "core:1.70",
      "contains",
      "core::i128:1.70"
    ],
    [
      "core::i128:1.70",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::i16:1.70"
    ],
    [
      "core::i16:1.70",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::i32:1.70"
    ],
    [
      "core::i32:1.70",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::i64:1.70"
    ],
    [
      "core::i64:1.70",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::i8:1.70"
    ],
    [
      "core::i8:1.70",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::intrinsics:1.70"
    ],
    [
      "core::intrinsics:1.70",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "core:1.70",
      "contains",
      "core::isize:1.70"
    ],
    [
      "core::isize:1.70",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::iter:1.70"
    ],
    [
      "core::iter:1.70",
      "has description",
      "Composable external iteration."
    ],
    [
      "core:1.70",
      "contains",
      "core::marker:1.70"
    ],
    [
      "core::marker:1.70",
      "has description",
      "Primitive traits and types representing basic properties of types."
    ],
    [
      "core:1.70",
      "contains",
      "core::mem:1.70"
    ],
    [
      "core::mem:1.70",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "core:1.70",
      "contains",
      "core::num:1.70"
    ],
    [
      "core::num:1.70",
      "has description",
      "Numeric traits and functions for the built-in numeric types."
    ],
    [
      "core:1.70",
      "contains",
      "core::ops:1.70"
    ],
    [
      "core::ops:1.70",
      "has description",
      "Overloadable operators."
    ],
    [
      "core:1.70",
      "contains",
      "core::option:1.70"
    ],
    [
      "core::option:1.70",
      "has description",
      "Optional values."
    ],
    [
      "core:1.70",
      "contains",
      "core::panic:1.70"
    ],
    [
      "core::panic:1.70",
      "has description",
      "Panic support in the standard library."
    ],
    [
      "core:1.70",
      "contains",
      "core::panicking:1.70"
    ],
    [
      "core::panicking:1.70",
      "has description",
      "Panic support for libcore"
    ],
    [
      "core:1.70",
      "contains",
      "core::pin:1.70"
    ],
    [
      "core::pin:1.70",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "core:1.70",
      "contains",
      "core::prelude:1.70"
    ],
    [
      "core::prelude:1.70",
      "has description",
      "The libcore prelude"
    ],
    [
      "core:1.70",
      "contains",
      "core::ptr:1.70"
    ],
    [
      "core::ptr:1.70",
      "has description",
      "Raw, unsafe pointers, `*const T`, and `*mut T`."
    ],
    [
      "core:1.70",
      "contains",
      "core::raw:1.70"
    ],
    [
      "core::raw:1.70",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "core:1.70",
      "contains",
      "core::result:1.70"
    ],
    [
      "core::result:1.70",
      "has description",
      "Error handling with the `Result` type."
    ],
    [
      "core:1.70",
      "contains",
      "core::slice:1.70"
    ],
    [
      "core::slice:1.70",
      "has description",
      "Slice management and manipulation"
    ],
    [
      "core:1.70",
      "contains",
      "core::str:1.70"
    ],
    [
      "core::str:1.70",
      "has description",
      "String manipulation"
    ],
    [
      "core:1.70",
      "contains",
      "core::sync:1.70"
    ],
    [
      "core::sync:1.70",
      "has description",
      "Synchronization primitives"
    ],
    [
      "core:1.70",
      "contains",
      "core::task:1.70"
    ],
    [
      "core::task:1.70",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "core:1.70",
      "contains",
      "core::time:1.70"
    ],
    [
      "core::time:1.70",
      "has description",
      "Temporal quantification."
    ],
    [
      "core:1.70",
      "contains",
      "core::u128:1.70"
    ],
    [
      "core::u128:1.70",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::u16:1.70"
    ],
    [
      "core::u16:1.70",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::u32:1.70"
    ],
    [
      "core::u32:1.70",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::u64:1.70"
    ],
    [
      "core::u64:1.70",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::u8:1.70"
    ],
    [
      "core::u8:1.70",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "core:1.70",
      "contains",
      "core::unicode:1.70"
    ],
    [
      "core::unicode:1.70",
      "has description",
      ""
    ],
    [
      "core:1.70",
      "contains",
      "core::usize:1.70"
    ],
    [
      "core::usize:1.70",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "core:1.70",
      "contains",
      "assert:1.70"
    ],
    [
      "assert:1.70",
      "is a",
      "macro"
    ],
    [
      "assert:1.70",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.70",
      "contains",
      "assert_eq:1.70"
    ],
    [
      "assert_eq:1.70",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.70",
      "has description",
      "Asserts that two expressions are equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.70",
      "contains",
      "assert_ne:1.70"
    ],
    [
      "assert_ne:1.70",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.70",
      "contains",
      "cfg:1.70"
    ],
    [
      "cfg:1.70",
      "is a",
      "macro"
    ],
    [
      "cfg:1.70",
      "has description",
      "Boolean evaluation of configuration flags, at compile-time."
    ],
    [
      "core:1.70",
      "contains",
      "column:1.70"
    ],
    [
      "column:1.70",
      "is a",
      "macro"
    ],
    [
      "column:1.70",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "core:1.70",
      "contains",
      "compile_error:1.70"
    ],
    [
      "compile_error:1.70",
      "is a",
      "macro"
    ],
    [
      "compile_error:1.70",
      "has description",
      "Unconditionally causes compilation to fail with the given error message when encountered."
    ],
    [
      "core:1.70",
      "contains",
      "concat:1.70"
    ],
    [
      "concat:1.70",
      "is a",
      "macro"
    ],
    [
      "concat:1.70",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "core:1.70",
      "contains",
      "concat_idents:1.70"
    ],
    [
      "concat_idents:1.70",
      "is a",
      "macro"
    ],
    [
      "concat_idents:1.70",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "core:1.70",
      "contains",
      "debug_assert:1.70"
    ],
    [
      "debug_assert:1.70",
      "is a",
      "macro"
    ],
    [
      "debug_assert:1.70",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.70",
      "contains",
      "debug_assert_eq:1.70"
    ],
    [
      "debug_assert_eq:1.70",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq:1.70",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "core:1.70",
      "contains",
      "debug_assert_ne:1.70"
    ],
    [
      "debug_assert_ne:1.70",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.70",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "core:1.70",
      "contains",
      "env:1.70"
    ],
    [
      "env:1.70",
      "is a",
      "macro"
    ],
    [
      "env:1.70",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "core:1.70",
      "contains",
      "file:1.70"
    ],
    [
      "file:1.70",
      "is a",
      "macro"
    ],
    [
      "file:1.70",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "core:1.70",
      "contains",
      "format_args:1.70"
    ],
    [
      "format_args:1.70",
      "is a",
      "macro"
    ],
    [
      "format_args:1.70",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "core:1.70",
      "contains",
      "include:1.70"
    ],
    [
      "include:1.70",
      "is a",
      "macro"
    ],
    [
      "include:1.70",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "core:1.70",
      "contains",
      "include_bytes:1.70"
    ],
    [
      "include_bytes:1.70",
      "is a",
      "macro"
    ],
    [
      "include_bytes:1.70",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "core:1.70",
      "contains",
      "include_str:1.70"
    ],
    [
      "include_str:1.70",
      "is a",
      "macro"
    ],
    [
      "include_str:1.70",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "core:1.70",
      "contains",
      "line:1.70"
    ],
    [
      "line:1.70",
      "is a",
      "macro"
    ],
    [
      "line:1.70",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "core:1.70",
      "contains",
      "module_path:1.70"
    ],
    [
      "module_path:1.70",
      "is a",
      "macro"
    ],
    [
      "module_path:1.70",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "core:1.70",
      "contains",
      "option_env:1.70"
    ],
    [
      "option_env:1.70",
      "is a",
      "macro"
    ],
    [
      "option_env:1.70",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "core::panic:1.70",
      "is a",
      "macro"
    ],
    [
      "core::panic:1.70",
      "has description",
      "Entry point of thread panic, for details, see std::macros"
    ],
    [
      "core:1.70",
      "contains",
      "stringify:1.70"
    ],
    [
      "stringify:1.70",
      "is a",
      "macro"
    ],
    [
      "stringify:1.70",
      "has description",
      "A macro which stringifies its arguments."
    ],
    [
      "core:1.70",
      "contains",
      "try:1.70"
    ],
    [
      "try:1.70",
      "is a",
      "macro"
    ],
    [
      "try:1.70",
      "has description",
      "Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."
    ],
    [
      "core:1.70",
      "contains",
      "unimplemented:1.70"
    ],
    [
      "unimplemented:1.70",
      "is a",
      "macro"
    ],
    [
      "unimplemented:1.70",
      "has description",
      "A standardized placeholder for marking unfinished code."
    ],
    [
      "core:1.70",
      "contains",
      "unreachable:1.70"
    ],
    [
      "unreachable:1.70",
      "is a",
      "macro"
    ],
    [
      "unreachable:1.70",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "core:1.70",
      "contains",
      "write:1.70"
    ],
    [
      "write:1.70",
      "is a",
      "macro"
    ],
    [
      "write:1.70",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "core:1.70",
      "contains",
      "writeln:1.70"
    ],
    [
      "writeln:1.70",
      "is a",
      "macro"
    ],
    [
      "writeln:1.70",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "core::ffi:1.70",
      "contains",
      "c_void:1.70"
    ],
    [
      "c_void:1.70",
      "is a",
      "enum"
    ],
    [
      "c_void:1.70",
      "has description",
      "Equivalent to C's void type when used as a pointer."
    ],
    [
      "core::alloc:1.70",
      "is a",
      "module"
    ],
    [
      "core::alloc:1.70",
      "has alias",
      "alloc"
    ],
    [
      "core::any:1.70",
      "is a",
      "module"
    ],
    [
      "core::any:1.70",
      "has alias",
      "any"
    ],
    [
      "core::arch:1.70",
      "is a",
      "module"
    ],
    [
      "core::arch:1.70",
      "has alias",
      "arch"
    ],
    [
      "core::array:1.70",
      "is a",
      "module"
    ],
    [
      "core::array:1.70",
      "has alias",
      "array"
    ],
    [
      "core::ascii:1.70",
      "is a",
      "module"
    ],
    [
      "core::ascii:1.70",
      "has alias",
      "ascii"
    ],
    [
      "core::borrow:1.70",
      "is a",
      "module"
    ],
    [
      "core::borrow:1.70",
      "has alias",
      "borrow"
    ],
    [
      "core::cell:1.70",
      "is a",
      "module"
    ],
    [
      "core::cell:1.70",
      "has alias",
      "cell"
    ],
    [
      "core::char:1.70",
      "is a",
      "module"
    ],
    [
      "core::char:1.70",
      "has alias",
      "char"
    ],
    [
      "core::clone:1.70",
      "is a",
      "module"
    ],
    [
      "core::clone:1.70",
      "has alias",
      "clone"
    ],
    [
      "core::cmp:1.70",
      "is a",
      "module"
    ],
    [
      "core::cmp:1.70",
      "has alias",
      "cmp"
    ],
    [
      "core::convert:1.70",
      "is a",
      "module"
    ],
    [
      "core::convert:1.70",
      "has alias",
      "convert"
    ],
    [
      "core::default:1.70",
      "is a",
      "module"
    ],
    [
      "core::default:1.70",
      "has alias",
      "default"
    ],
    [
      "core::f32:1.70",
      "is a",
      "module"
    ],
    [
      "core::f32:1.70",
      "has alias",
      "f32"
    ],
    [
      "core::f64:1.70",
      "is a",
      "module"
    ],
    [
      "core::f64:1.70",
      "has alias",
      "f64"
    ],
    [
      "core::ffi:1.70",
      "is a",
      "module"
    ],
    [
      "core::ffi:1.70",
      "has alias",
      "ffi"
    ],
    [
      "core::fmt:1.70",
      "is a",
      "module"
    ],
    [
      "core::fmt:1.70",
      "has alias",
      "fmt"
    ],
    [
      "core::future:1.70",
      "is a",
      "module"
    ],
    [
      "core::future:1.70",
      "has alias",
      "future"
    ],
    [
      "core::hash:1.70",
      "is a",
      "module"
    ],
    [
      "core::hash:1.70",
      "has alias",
      "hash"
    ],
    [
      "core::hint:1.70",
      "is a",
      "module"
    ],
    [
      "core::hint:1.70",
      "has alias",
      "hint"
    ],
    [
      "core::i128:1.70",
      "is a",
      "module"
    ],
    [
      "core::i128:1.70",
      "has alias",
      "i128"
    ],
    [
      "core::i16:1.70",
      "is a",
      "module"
    ],
    [
      "core::i16:1.70",
      "has alias",
      "i16"
    ],
    [
      "core::i32:1.70",
      "is a",
      "module"
    ],
    [
      "core::i32:1.70",
      "has alias",
      "i32"
    ],
    [
      "core::i64:1.70",
      "is a",
      "module"
    ],
    [
      "core::i64:1.70",
      "has alias",
      "i64"
    ],
    [
      "core::i8:1.70",
      "is a",
      "module"
    ],
    [
      "core::i8:1.70",
      "has alias",
      "i8"
    ],
    [
      "core::intrinsics:1.70",
      "is a",
      "module"
    ],
    [
      "core::intrinsics:1.70",
      "has alias",
      "intrinsics"
    ],
    [
      "core::isize:1.70",
      "is a",
      "module"
    ],
    [
      "core::isize:1.70",
      "has alias",
      "isize"
    ],
    [
      "core::iter:1.70",
      "is a",
      "module"
    ],
    [
      "core::iter:1.70",
      "has alias",
      "iter"
    ],
    [
      "core::marker:1.70",
      "is a",
      "module"
    ],
    [
      "core::marker:1.70",
      "has alias",
      "marker"
    ],
    [
      "core::mem:1.70",
      "is a",
      "module"
    ],
    [
      "core::mem:1.70",
      "has alias",
      "mem"
    ],
    [
      "core::num:1.70",
      "is a",
      "module"
    ],
    [
      "core::num:1.70",
      "has alias",
      "num"
    ],
    [
      "core::ops:1.70",
      "is a",
      "module"
    ],
    [
      "core::ops:1.70",
      "has alias",
      "ops"
    ],
    [
      "core::option:1.70",
      "is a",
      "module"
    ],
    [
      "core::option:1.70",
      "has alias",
      "option"
    ],
    [
      "core::panic:1.70",
      "is a",
      "module"
    ],
    [
      "core::panic:1.70",
      "has alias",
      "panic"
    ],
    [
      "core::panicking:1.70",
      "is a",
      "module"
    ],
    [
      "core::panicking:1.70",
      "has alias",
      "panicking"
    ],
    [
      "core::pin:1.70",
      "is a",
      "module"
    ],
    [
      "core::pin:1.70",
      "has alias",
      "pin"
    ],
    [
      "core::prelude:1.70",
      "is a",
      "module"
    ],
    [
      "core::prelude:1.70",
      "has alias",
      "prelude"
    ],
    [
      "core::ptr:1.70",
      "is a",
      "module"
    ],
    [
      "core::ptr:1.70",
      "has alias",
      "ptr"
    ],
    [
      "core::raw:1.70",
      "is a",
      "module"
    ],
    [
      "core::raw:1.70",
      "has alias",
      "raw"
    ],
    [
      "core::result:1.70",
      "is a",
      "module"
    ],
    [
      "core::result:1.70",
      "has alias",
      "result"
    ],
    [
      "core::slice:1.70",
      "is a",
      "module"
    ],
    [
      "core::slice:1.70",
      "has alias",
      "slice"
    ],
    [
      "core::str:1.70",
      "is a",
      "module"
    ],
    [
      "core::str:1.70",
      "has alias",
      "str"
    ],
    [
      "core::sync:1.70",
      "is a",
      "module"
    ],
    [
      "core::sync:1.70",
      "has alias",
      "sync"
    ],
    [
      "core::task:1.70",
      "is a",
      "module"
    ],
    [
      "core::task:1.70",
      "has alias",
      "task"
    ],
    [
      "core::time:1.70",
      "is a",
      "module"
    ],
    [
      "core::time:1.70",
      "has alias",
      "time"
    ],
    [
      "core::u128:1.70",
      "is a",
      "module"
    ],
    [
      "core::u128:1.70",
      "has alias",
      "u128"
    ],
    [
      "core::u16:1.70",
      "is a",
      "module"
    ],
    [
      "core::u16:1.70",
      "has alias",
      "u16"
    ],
    [
      "core::u32:1.70",
      "is a",
      "module"
    ],
    [
      "core::u32:1.70",
      "has alias",
      "u32"
    ],
    [
      "core::u64:1.70",
      "is a",
      "module"
    ],
    [
      "core::u64:1.70",
      "has alias",
      "u64"
    ],
    [
      "core::u8:1.70",
      "is a",
      "module"
    ],
    [
      "core::u8:1.70",
      "has alias",
      "u8"
    ],
    [
      "core::unicode:1.70",
      "is a",
      "module"
    ],
    [
      "core::unicode:1.70",
      "has alias",
      "unicode"
    ],
    [
      "core::usize:1.70",
      "is a",
      "module"
    ],
    [
      "core::usize:1.70",
      "has alias",
      "usize"
    ],
    [
      "core:1.70",
      "contains",
      "un:1.70"
    ],
    [
      "core::arch:1.70",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "core::intrinsics:1.70",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "core::ptr:1.70",
      "has description",
      "Manually manage memory through raw pointers."
    ],
    [
      "core::pin:1.70",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "core::slice:1.70",
      "has description",
      "Slice management and manipulation."
    ],
    [
      "core::str:1.70",
      "has description",
      "String manipulation."
    ],
    [
      "assert:1.70",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "cfg:1.70",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "column:1.70",
      "has description",
      "Expands to the column number at which it was invoked."
    ],
    [
      "compile_error:1.70",
      "has description",
      "Causes compilation to fail with the given error message when encountered."
    ],
    [
      "format_args:1.70",
      "has description",
      "Constructs parameters for the other string-formatting macros."
    ],
    [
      "core:1.70",
      "contains",
      "Clone:1.70"
    ],
    [
      "Clone:1.70",
      "is a",
      "macro"
    ],
    [
      "Clone:1.70",
      "has description",
      "Derive macro generating an impl of the trait `Clone`."
    ],
    [
      "core:1.70",
      "contains",
      "Copy:1.70"
    ],
    [
      "Copy:1.70",
      "is a",
      "macro"
    ],
    [
      "Copy:1.70",
      "has description",
      "Derive macro generating an impl of the trait `Copy`."
    ],
    [
      "core:1.70",
      "contains",
      "Debug:1.70"
    ],
    [
      "Debug:1.70",
      "is a",
      "macro"
    ],
    [
      "Debug:1.70",
      "has description",
      "Derive macro generating an impl of the trait `Debug`."
    ],
    [
      "core:1.70",
      "contains",
      "Default:1.70"
    ],
    [
      "Default:1.70",
      "is a",
      "macro"
    ],
    [
      "Default:1.70",
      "has description",
      "Derive macro generating an impl of the trait `Default`."
    ],
    [
      "concat_idents:1.70",
      "has description",
      "Concatenates identifiers into one identifier."
    ],
    [
      "debug_assert:1.70",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "env:1.70",
      "has description",
      "Inspects an environment variable at compile time."
    ],
    [
      "file:1.70",
      "has description",
      "Expands to the file name in which it was invoked."
    ],
    [
      "include:1.70",
      "has description",
      "Parses a file as an expression or an item according to the context."
    ],
    [
      "line:1.70",
      "has description",
      "Expands to the line number on which it was invoked."
    ],
    [
      "option_env:1.70",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "core::panic:1.70",
      "has description",
      "Panics the current thread."
    ],
    [
      "stringify:1.70",
      "has description",
      "Stringifies its arguments."
    ],
    [
      "try:1.70",
      "has description",
      "Unwraps a result or propagates its error."
    ],
    [
      "unimplemented:1.70",
      "has description",
      "Indicates unfinished code by panicking with a message of \"not yet implemented\"."
    ],
    [
      "unreachable:1.70",
      "has description",
      "Indicates unreachable code."
    ],
    [
      "write:1.70",
      "has description",
      "Writes formatted data into a buffer."
    ],
    [
      "core:1.70",
      "contains",
      "Eq:1.70"
    ],
    [
      "Eq:1.70",
      "is a",
      "macro"
    ],
    [
      "Eq:1.70",
      "has description",
      "Derive macro generating an impl of the trait `Eq`."
    ],
    [
      "core:1.70",
      "contains",
      "Hash:1.70"
    ],
    [
      "Hash:1.70",
      "is a",
      "macro"
    ],
    [
      "Hash:1.70",
      "has description",
      "Derive macro generating an impl of the trait `Hash`."
    ],
    [
      "core:1.70",
      "contains",
      "Ord:1.70"
    ],
    [
      "Ord:1.70",
      "is a",
      "macro"
    ],
    [
      "Ord:1.70",
      "has description",
      "Derive macro generating an impl of the trait `Ord`."
    ],
    [
      "core:1.70",
      "contains",
      "PartialEq:1.70"
    ],
    [
      "PartialEq:1.70",
      "is a",
      "macro"
    ],
    [
      "PartialEq:1.70",
      "has description",
      "Derive macro generating an impl of the trait `PartialEq`."
    ],
    [
      "core:1.70",
      "contains",
      "PartialOrd:1.70"
    ],
    [
      "PartialOrd:1.70",
      "is a",
      "macro"
    ],
    [
      "PartialOrd:1.70",
      "has description",
      "Derive macro generating an impl of the trait `PartialOrd`."
    ],
    [
      "core:1.70",
      "contains",
      "RustcDecodable:1.70"
    ],
    [
      "RustcDecodable:1.70",
      "is a",
      "macro"
    ],
    [
      "RustcDecodable:1.70",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.70",
      "contains",
      "RustcEncodable:1.70"
    ],
    [
      "RustcEncodable:1.70",
      "is a",
      "macro"
    ],
    [
      "RustcEncodable:1.70",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.70",
      "contains",
      "asm:1.70"
    ],
    [
      "asm:1.70",
      "is a",
      "macro"
    ],
    [
      "asm:1.70",
      "has description",
      "Inline assembly."
    ],
    [
      "core:1.70",
      "contains",
      "bench:1.70"
    ],
    [
      "bench:1.70",
      "is a",
      "macro"
    ],
    [
      "bench:1.70",
      "has description",
      "Attribute macro applied to a function to turn it into a benchmark test."
    ],
    [
      "core:1.70",
      "contains",
      "global_allocator:1.70"
    ],
    [
      "global_allocator:1.70",
      "is a",
      "macro"
    ],
    [
      "global_allocator:1.70",
      "has description",
      "Attribute macro applied to a static to register it as a global allocator."
    ],
    [
      "core:1.70",
      "contains",
      "global_asm:1.70"
    ],
    [
      "global_asm:1.70",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.70",
      "has description",
      "Module-level inline assembly."
    ],
    [
      "core:1.70",
      "contains",
      "log_syntax:1.70"
    ],
    [
      "log_syntax:1.70",
      "is a",
      "macro"
    ],
    [
      "log_syntax:1.70",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "core:1.70",
      "contains",
      "matches:1.70"
    ],
    [
      "matches:1.70",
      "is a",
      "macro"
    ],
    [
      "matches:1.70",
      "has description",
      "Returns whether the given expression matches any of the given patterns."
    ],
    [
      "core:1.70",
      "contains",
      "test:1.70"
    ],
    [
      "test:1.70",
      "is a",
      "macro"
    ],
    [
      "test:1.70",
      "has description",
      "Attribute macro applied to a function to turn it into a unit test."
    ],
    [
      "core:1.70",
      "contains",
      "test_case:1.70"
    ],
    [
      "test_case:1.70",
      "is a",
      "macro"
    ],
    [
      "test_case:1.70",
      "has description",
      "An implementation detail of the `#[test]` and `#[bench]` macros."
    ],
    [
      "core:1.70",
      "contains",
      "todo:1.70"
    ],
    [
      "todo:1.70",
      "is a",
      "macro"
    ],
    [
      "todo:1.70",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "core:1.70",
      "contains",
      "trace_macros:1.70"
    ],
    [
      "trace_macros:1.70",
      "is a",
      "macro"
    ],
    [
      "trace_macros:1.70",
      "has description",
      "Enables or disables tracing functionality used for debugging other macros."
    ],
    [
      "unimplemented:1.70",
      "has description",
      "Indicates unfinished code by panicking with a message of 'not yet implemented'."
    ],
    [
      "core:1.70",
      "contains",
      "core::lazy:1.70"
    ],
    [
      "core::lazy:1.70",
      "is a",
      "module"
    ],
    [
      "core::lazy:1.70",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "core:1.70",
      "contains",
      "core::primitive:1.70"
    ],
    [
      "core::primitive:1.70",
      "is a",
      "module"
    ],
    [
      "core::primitive:1.70",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "core::ffi:1.70",
      "has description",
      "Utilities related to foreign function interface (FFI) bindings."
    ],
    [
      "core::hint:1.70",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "include_str:1.70",
      "has description",
      "Includes a UTF-8 encoded file as a string."
    ],
    [
      "core::array:1.70",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should be able to generalize to all lengths."
    ],
    [
      "core:1.70",
      "contains",
      "cfg_accessible:1.70"
    ],
    [
      "cfg_accessible:1.70",
      "is a",
      "macro"
    ],
    [
      "cfg_accessible:1.70",
      "has description",
      "Keeps the item it's applied to if the passed path is accessible, and removes it otherwise."
    ],
    [
      "core:1.70",
      "contains",
      "llvm_asm:1.70"
    ],
    [
      "llvm_asm:1.70",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.70",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "core:1.70",
      "contains",
      "raw_const:1.70"
    ],
    [
      "raw_const:1.70",
      "is a",
      "macro"
    ],
    [
      "raw_const:1.70",
      "has description",
      "Create a `const` raw pointer to a place, without creating an intermediate reference."
    ],
    [
      "core:1.70",
      "contains",
      "raw_mut:1.70"
    ],
    [
      "raw_mut:1.70",
      "is a",
      "macro"
    ],
    [
      "raw_mut:1.70",
      "has description",
      "Create a `mut` raw pointer to a place, without creating an intermediate reference."
    ],
    [
      "core:1.70",
      "contains",
      "ready:1.70"
    ],
    [
      "ready:1.70",
      "is a",
      "macro"
    ],
    [
      "ready:1.70",
      "has description",
      "Extracts the successful type of a `Poll<T>`."
    ],
    [
      "unimplemented:1.70",
      "has description",
      "Indicates unimplemented code by panicking with a message of \"not implemented\"."
    ],
    [
      "core::array:1.70",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually, we should be able to generalize to all lengths."
    ],
    [
      "unimplemented:1.70",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'."
    ],
    [
      "core::lazy:1.70",
      "has alias",
      "lazy"
    ],
    [
      "core::primitive:1.70",
      "has alias",
      "primitive"
    ],
    [
      "ready:1.70",
      "has description",
      "Extracts the successful type of a `Poll<T>`.`"
    ],
    [
      "std::alloc::alloc:1.70",
      "has feature",
      "unsafe:1.70"
    ],
    [
      "core::ffi:1.70",
      "has description",
      "Platform-specific types, as defined by C. Code that interacts via FFI will almost certainly be using the base types provided by C, which aren’t nearly as nicely defined as Rust’s primitive types. This module provides types which will match those defined by C, so that code that interacts with C will refer to the correct types."
    ],
    [
      "core::ffi:1.70",
      "contains",
      "VaList:1.70"
    ],
    [
      "VaList:1.70",
      "is a",
      "struct"
    ],
    [
      "VaList:1.70",
      "has description",
      "A wrapper for a va_list"
    ],
    [
      "VaList:1.70",
      "has feature",
      "Experimental:1.70"
    ],
    [
      "core::ffi:1.70",
      "contains",
      "VaListImpl:1.70"
    ],
    [
      "VaListImpl:1.70",
      "is a",
      "struct"
    ],
    [
      "VaListImpl:1.70",
      "has description",
      "Basic implementation of a va_list"
    ],
    [
      "VaListImpl:1.70",
      "has feature",
      "Experimental:1.70"
    ],
    [
      "core::ffi:1.70",
      "contains",
      "CStr:1.70"
    ],
    [
      "CStr:1.70",
      "is a",
      "struct"
    ],
    [
      "CStr:1.70",
      "has description",
      "Representation of a borrowed C string."
    ],
    [
      "core::ffi:1.70",
      "contains",
      "FromBytesUntilNulError:1.70"
    ],
    [
      "FromBytesUntilNulError:1.70",
      "is a",
      "struct"
    ],
    [
      "FromBytesUntilNulError:1.70",
      "has description",
      "An error indicating that no nul byte was present."
    ],
    [
      "core::ffi:1.70",
      "contains",
      "FromBytesWithNulError:1.70"
    ],
    [
      "FromBytesWithNulError:1.70",
      "is a",
      "struct"
    ],
    [
      "FromBytesWithNulError:1.70",
      "has description",
      "An error indicating that a nul byte was not in the expected position."
    ],
    [
      "core::ffi:1.70",
      "contains",
      "NonZero_c_char:1.70"
    ],
    [
      "NonZero_c_char:1.70",
      "is a",
      "type"
    ],
    [
      "NonZero_c_char:1.70",
      "has description",
      "Type alias for NonZero version of c_char"
    ],
    [
      "NonZero_c_char:1.70",
      "has feature",
      "Experimental:1.70"
    ],
    [
      "c_void:1.70",
      "has description",
      "Equivalent to C’s void type when used as a pointer."
    ],
    [
      "core::ffi:1.70",
      "has description",
      "Platform-specific types, as defined by C."
    ],
    [
      "CStr:1.70",
      "has description",
      "Representation of a borrowed C string"
    ],
    [
      "c_void:1.70",
      "has description",
      "Equivalent to C's void type when used as a pointer"
    ],
    [
      "FromBytesUntilNulError:1.70",
      "has description",
      "An error indicating that no nul byte was present"
    ],
    [
      "core:1.40",
      "contains",
      "core::alloc:1.40"
    ],
    [
      "core::alloc:1.40",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "core:1.40",
      "contains",
      "core::any:1.40"
    ],
    [
      "core::any:1.40",
      "has description",
      "This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."
    ],
    [
      "core:1.40",
      "contains",
      "core::arch:1.40"
    ],
    [
      "core::arch:1.40",
      "has description",
      "Platform dependent vendor intrinsics."
    ],
    [
      "core:1.40",
      "contains",
      "core::array:1.40"
    ],
    [
      "core::array:1.40",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "core:1.40",
      "contains",
      "core::ascii:1.40"
    ],
    [
      "core::ascii:1.40",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "core:1.40",
      "contains",
      "core::borrow:1.40"
    ],
    [
      "core::borrow:1.40",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "core:1.40",
      "contains",
      "core::cell:1.40"
    ],
    [
      "core::cell:1.40",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "core:1.40",
      "contains",
      "core::char:1.40"
    ],
    [
      "core::char:1.40",
      "has description",
      "A character type."
    ],
    [
      "core:1.40",
      "contains",
      "core::clone:1.40"
    ],
    [
      "core::clone:1.40",
      "has description",
      "The `Clone` trait for types that cannot be 'implicitly copied'."
    ],
    [
      "core:1.40",
      "contains",
      "core::cmp:1.40"
    ],
    [
      "core::cmp:1.40",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "core:1.40",
      "contains",
      "core::convert:1.40"
    ],
    [
      "core::convert:1.40",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "core:1.40",
      "contains",
      "core::default:1.40"
    ],
    [
      "core::default:1.40",
      "has description",
      "The `Default` trait for types which may have meaningful default values."
    ],
    [
      "core:1.40",
      "contains",
      "core::f32:1.40"
    ],
    [
      "core::f32:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "core:1.40",
      "contains",
      "core::f64:1.40"
    ],
    [
      "core::f64:1.40",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "core:1.40",
      "contains",
      "core::ffi:1.40"
    ],
    [
      "core::ffi:1.40",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "core::ffi:1.40",
      "stable since",
      "1.30.0"
    ],
    [
      "core:1.40",
      "contains",
      "core::fmt:1.40"
    ],
    [
      "core::fmt:1.40",
      "has description",
      "Utilities for formatting and printing strings."
    ],
    [
      "core:1.40",
      "contains",
      "core::future:1.40"
    ],
    [
      "core::future:1.40",
      "has description",
      "Asynchronous values."
    ],
    [
      "core:1.40",
      "contains",
      "core::hash:1.40"
    ],
    [
      "core::hash:1.40",
      "has description",
      "Generic hashing support."
    ],
    [
      "core:1.40",
      "contains",
      "core::hint:1.40"
    ],
    [
      "core::hint:1.40",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "core:1.40",
      "contains",
      "core::i128:1.40"
    ],
    [
      "core::i128:1.40",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::i16:1.40"
    ],
    [
      "core::i16:1.40",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::i32:1.40"
    ],
    [
      "core::i32:1.40",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::i64:1.40"
    ],
    [
      "core::i64:1.40",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::i8:1.40"
    ],
    [
      "core::i8:1.40",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::intrinsics:1.40"
    ],
    [
      "core::intrinsics:1.40",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "core:1.40",
      "contains",
      "core::isize:1.40"
    ],
    [
      "core::isize:1.40",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::iter:1.40"
    ],
    [
      "core::iter:1.40",
      "has description",
      "Composable external iteration."
    ],
    [
      "core:1.40",
      "contains",
      "core::marker:1.40"
    ],
    [
      "core::marker:1.40",
      "has description",
      "Primitive traits and types representing basic properties of types."
    ],
    [
      "core:1.40",
      "contains",
      "core::mem:1.40"
    ],
    [
      "core::mem:1.40",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "core:1.40",
      "contains",
      "core::num:1.40"
    ],
    [
      "core::num:1.40",
      "has description",
      "Numeric traits and functions for the built-in numeric types."
    ],
    [
      "core:1.40",
      "contains",
      "core::ops:1.40"
    ],
    [
      "core::ops:1.40",
      "has description",
      "Overloadable operators."
    ],
    [
      "core:1.40",
      "contains",
      "core::option:1.40"
    ],
    [
      "core::option:1.40",
      "has description",
      "Optional values."
    ],
    [
      "core:1.40",
      "contains",
      "core::panic:1.40"
    ],
    [
      "core::panic:1.40",
      "has description",
      "Panic support in the standard library."
    ],
    [
      "core:1.40",
      "contains",
      "core::panicking:1.40"
    ],
    [
      "core::panicking:1.40",
      "has description",
      "Panic support for libcore"
    ],
    [
      "core:1.40",
      "contains",
      "core::pin:1.40"
    ],
    [
      "core::pin:1.40",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "core:1.40",
      "contains",
      "core::prelude:1.40"
    ],
    [
      "core::prelude:1.40",
      "has description",
      "The libcore prelude"
    ],
    [
      "core:1.40",
      "contains",
      "core::ptr:1.40"
    ],
    [
      "core::ptr:1.40",
      "has description",
      "Raw, unsafe pointers, `*const T`, and `*mut T`."
    ],
    [
      "core:1.40",
      "contains",
      "core::raw:1.40"
    ],
    [
      "core::raw:1.40",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "core:1.40",
      "contains",
      "core::result:1.40"
    ],
    [
      "core::result:1.40",
      "has description",
      "Error handling with the `Result` type."
    ],
    [
      "core:1.40",
      "contains",
      "core::slice:1.40"
    ],
    [
      "core::slice:1.40",
      "has description",
      "Slice management and manipulation"
    ],
    [
      "core:1.40",
      "contains",
      "core::str:1.40"
    ],
    [
      "core::str:1.40",
      "has description",
      "String manipulation"
    ],
    [
      "core:1.40",
      "contains",
      "core::sync:1.40"
    ],
    [
      "core::sync:1.40",
      "has description",
      "Synchronization primitives"
    ],
    [
      "core:1.40",
      "contains",
      "core::task:1.40"
    ],
    [
      "core::task:1.40",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "core:1.40",
      "contains",
      "core::time:1.40"
    ],
    [
      "core::time:1.40",
      "has description",
      "Temporal quantification."
    ],
    [
      "core:1.40",
      "contains",
      "core::u128:1.40"
    ],
    [
      "core::u128:1.40",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::u16:1.40"
    ],
    [
      "core::u16:1.40",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::u32:1.40"
    ],
    [
      "core::u32:1.40",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::u64:1.40"
    ],
    [
      "core::u64:1.40",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::u8:1.40"
    ],
    [
      "core::u8:1.40",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "core:1.40",
      "contains",
      "core::unicode:1.40"
    ],
    [
      "core::unicode:1.40",
      "has description",
      ""
    ],
    [
      "core:1.40",
      "contains",
      "core::usize:1.40"
    ],
    [
      "core::usize:1.40",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "core:1.40",
      "contains",
      "assert:1.40"
    ],
    [
      "assert:1.40",
      "is a",
      "macro"
    ],
    [
      "assert:1.40",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.40",
      "contains",
      "assert_eq:1.40"
    ],
    [
      "assert_eq:1.40",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.40",
      "has description",
      "Asserts that two expressions are equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.40",
      "contains",
      "assert_ne:1.40"
    ],
    [
      "assert_ne:1.40",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.40",
      "has description",
      "Asserts that two expressions are not equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.40",
      "contains",
      "cfg:1.40"
    ],
    [
      "cfg:1.40",
      "is a",
      "macro"
    ],
    [
      "cfg:1.40",
      "has description",
      "Boolean evaluation of configuration flags, at compile-time."
    ],
    [
      "core:1.40",
      "contains",
      "column:1.40"
    ],
    [
      "column:1.40",
      "is a",
      "macro"
    ],
    [
      "column:1.40",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "core:1.40",
      "contains",
      "compile_error:1.40"
    ],
    [
      "compile_error:1.40",
      "is a",
      "macro"
    ],
    [
      "compile_error:1.40",
      "has description",
      "Unconditionally causes compilation to fail with the given error message when encountered."
    ],
    [
      "core:1.40",
      "contains",
      "concat:1.40"
    ],
    [
      "concat:1.40",
      "is a",
      "macro"
    ],
    [
      "concat:1.40",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "core:1.40",
      "contains",
      "concat_idents:1.40"
    ],
    [
      "concat_idents:1.40",
      "is a",
      "macro"
    ],
    [
      "concat_idents:1.40",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "core:1.40",
      "contains",
      "debug_assert:1.40"
    ],
    [
      "debug_assert:1.40",
      "is a",
      "macro"
    ],
    [
      "debug_assert:1.40",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.40",
      "contains",
      "debug_assert_eq:1.40"
    ],
    [
      "debug_assert_eq:1.40",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq:1.40",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "core:1.40",
      "contains",
      "debug_assert_ne:1.40"
    ],
    [
      "debug_assert_ne:1.40",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.40",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "core:1.40",
      "contains",
      "env:1.40"
    ],
    [
      "env:1.40",
      "is a",
      "macro"
    ],
    [
      "env:1.40",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "core:1.40",
      "contains",
      "file:1.40"
    ],
    [
      "file:1.40",
      "is a",
      "macro"
    ],
    [
      "file:1.40",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "core:1.40",
      "contains",
      "format_args:1.40"
    ],
    [
      "format_args:1.40",
      "is a",
      "macro"
    ],
    [
      "format_args:1.40",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "core:1.40",
      "contains",
      "include:1.40"
    ],
    [
      "include:1.40",
      "is a",
      "macro"
    ],
    [
      "include:1.40",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "core:1.40",
      "contains",
      "include_bytes:1.40"
    ],
    [
      "include_bytes:1.40",
      "is a",
      "macro"
    ],
    [
      "include_bytes:1.40",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "core:1.40",
      "contains",
      "include_str:1.40"
    ],
    [
      "include_str:1.40",
      "is a",
      "macro"
    ],
    [
      "include_str:1.40",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "core:1.40",
      "contains",
      "line:1.40"
    ],
    [
      "line:1.40",
      "is a",
      "macro"
    ],
    [
      "line:1.40",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "core:1.40",
      "contains",
      "module_path:1.40"
    ],
    [
      "module_path:1.40",
      "is a",
      "macro"
    ],
    [
      "module_path:1.40",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "core:1.40",
      "contains",
      "option_env:1.40"
    ],
    [
      "option_env:1.40",
      "is a",
      "macro"
    ],
    [
      "option_env:1.40",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "core::panic:1.40",
      "is a",
      "macro"
    ],
    [
      "core::panic:1.40",
      "has description",
      "Entry point of thread panic, for details, see std::macros"
    ],
    [
      "core:1.40",
      "contains",
      "stringify:1.40"
    ],
    [
      "stringify:1.40",
      "is a",
      "macro"
    ],
    [
      "stringify:1.40",
      "has description",
      "A macro which stringifies its arguments."
    ],
    [
      "core:1.40",
      "contains",
      "try:1.40"
    ],
    [
      "try:1.40",
      "is a",
      "macro"
    ],
    [
      "try:1.40",
      "has description",
      "Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."
    ],
    [
      "core:1.40",
      "contains",
      "unimplemented:1.40"
    ],
    [
      "unimplemented:1.40",
      "is a",
      "macro"
    ],
    [
      "unimplemented:1.40",
      "has description",
      "A standardized placeholder for marking unfinished code."
    ],
    [
      "core:1.40",
      "contains",
      "unreachable:1.40"
    ],
    [
      "unreachable:1.40",
      "is a",
      "macro"
    ],
    [
      "unreachable:1.40",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "core:1.40",
      "contains",
      "write:1.40"
    ],
    [
      "write:1.40",
      "is a",
      "macro"
    ],
    [
      "write:1.40",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "core:1.40",
      "contains",
      "writeln:1.40"
    ],
    [
      "writeln:1.40",
      "is a",
      "macro"
    ],
    [
      "writeln:1.40",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "core::ffi:1.40",
      "contains",
      "c_void:1.40"
    ],
    [
      "c_void:1.40",
      "is a",
      "enum"
    ],
    [
      "c_void:1.40",
      "has description",
      "Equivalent to C's void type when used as a pointer."
    ],
    [
      "core::alloc:1.40",
      "is a",
      "module"
    ],
    [
      "core::alloc:1.40",
      "has alias",
      "alloc"
    ],
    [
      "core::any:1.40",
      "is a",
      "module"
    ],
    [
      "core::any:1.40",
      "has alias",
      "any"
    ],
    [
      "core::arch:1.40",
      "is a",
      "module"
    ],
    [
      "core::arch:1.40",
      "has alias",
      "arch"
    ],
    [
      "core::array:1.40",
      "is a",
      "module"
    ],
    [
      "core::array:1.40",
      "has alias",
      "array"
    ],
    [
      "core::ascii:1.40",
      "is a",
      "module"
    ],
    [
      "core::ascii:1.40",
      "has alias",
      "ascii"
    ],
    [
      "core::borrow:1.40",
      "is a",
      "module"
    ],
    [
      "core::borrow:1.40",
      "has alias",
      "borrow"
    ],
    [
      "core::cell:1.40",
      "is a",
      "module"
    ],
    [
      "core::cell:1.40",
      "has alias",
      "cell"
    ],
    [
      "core::char:1.40",
      "is a",
      "module"
    ],
    [
      "core::char:1.40",
      "has alias",
      "char"
    ],
    [
      "core::clone:1.40",
      "is a",
      "module"
    ],
    [
      "core::clone:1.40",
      "has alias",
      "clone"
    ],
    [
      "core::cmp:1.40",
      "is a",
      "module"
    ],
    [
      "core::cmp:1.40",
      "has alias",
      "cmp"
    ],
    [
      "core::convert:1.40",
      "is a",
      "module"
    ],
    [
      "core::convert:1.40",
      "has alias",
      "convert"
    ],
    [
      "core::default:1.40",
      "is a",
      "module"
    ],
    [
      "core::default:1.40",
      "has alias",
      "default"
    ],
    [
      "core::f32:1.40",
      "is a",
      "module"
    ],
    [
      "core::f32:1.40",
      "has alias",
      "f32"
    ],
    [
      "core::f64:1.40",
      "is a",
      "module"
    ],
    [
      "core::f64:1.40",
      "has alias",
      "f64"
    ],
    [
      "core::ffi:1.40",
      "is a",
      "module"
    ],
    [
      "core::ffi:1.40",
      "has alias",
      "ffi"
    ],
    [
      "core::fmt:1.40",
      "is a",
      "module"
    ],
    [
      "core::fmt:1.40",
      "has alias",
      "fmt"
    ],
    [
      "core::future:1.40",
      "is a",
      "module"
    ],
    [
      "core::future:1.40",
      "has alias",
      "future"
    ],
    [
      "core::hash:1.40",
      "is a",
      "module"
    ],
    [
      "core::hash:1.40",
      "has alias",
      "hash"
    ],
    [
      "core::hint:1.40",
      "is a",
      "module"
    ],
    [
      "core::hint:1.40",
      "has alias",
      "hint"
    ],
    [
      "core::i128:1.40",
      "is a",
      "module"
    ],
    [
      "core::i128:1.40",
      "has alias",
      "i128"
    ],
    [
      "core::i16:1.40",
      "is a",
      "module"
    ],
    [
      "core::i16:1.40",
      "has alias",
      "i16"
    ],
    [
      "core::i32:1.40",
      "is a",
      "module"
    ],
    [
      "core::i32:1.40",
      "has alias",
      "i32"
    ],
    [
      "core::i64:1.40",
      "is a",
      "module"
    ],
    [
      "core::i64:1.40",
      "has alias",
      "i64"
    ],
    [
      "core::i8:1.40",
      "is a",
      "module"
    ],
    [
      "core::i8:1.40",
      "has alias",
      "i8"
    ],
    [
      "core::intrinsics:1.40",
      "is a",
      "module"
    ],
    [
      "core::intrinsics:1.40",
      "has alias",
      "intrinsics"
    ],
    [
      "core::isize:1.40",
      "is a",
      "module"
    ],
    [
      "core::isize:1.40",
      "has alias",
      "isize"
    ],
    [
      "core::iter:1.40",
      "is a",
      "module"
    ],
    [
      "core::iter:1.40",
      "has alias",
      "iter"
    ],
    [
      "core::marker:1.40",
      "is a",
      "module"
    ],
    [
      "core::marker:1.40",
      "has alias",
      "marker"
    ],
    [
      "core::mem:1.40",
      "is a",
      "module"
    ],
    [
      "core::mem:1.40",
      "has alias",
      "mem"
    ],
    [
      "core::num:1.40",
      "is a",
      "module"
    ],
    [
      "core::num:1.40",
      "has alias",
      "num"
    ],
    [
      "core::ops:1.40",
      "is a",
      "module"
    ],
    [
      "core::ops:1.40",
      "has alias",
      "ops"
    ],
    [
      "core::option:1.40",
      "is a",
      "module"
    ],
    [
      "core::option:1.40",
      "has alias",
      "option"
    ],
    [
      "core::panic:1.40",
      "is a",
      "module"
    ],
    [
      "core::panic:1.40",
      "has alias",
      "panic"
    ],
    [
      "core::panicking:1.40",
      "is a",
      "module"
    ],
    [
      "core::panicking:1.40",
      "has alias",
      "panicking"
    ],
    [
      "core::pin:1.40",
      "is a",
      "module"
    ],
    [
      "core::pin:1.40",
      "has alias",
      "pin"
    ],
    [
      "core::prelude:1.40",
      "is a",
      "module"
    ],
    [
      "core::prelude:1.40",
      "has alias",
      "prelude"
    ],
    [
      "core::ptr:1.40",
      "is a",
      "module"
    ],
    [
      "core::ptr:1.40",
      "has alias",
      "ptr"
    ],
    [
      "core::raw:1.40",
      "is a",
      "module"
    ],
    [
      "core::raw:1.40",
      "has alias",
      "raw"
    ],
    [
      "core::result:1.40",
      "is a",
      "module"
    ],
    [
      "core::result:1.40",
      "has alias",
      "result"
    ],
    [
      "core::slice:1.40",
      "is a",
      "module"
    ],
    [
      "core::slice:1.40",
      "has alias",
      "slice"
    ],
    [
      "core::str:1.40",
      "is a",
      "module"
    ],
    [
      "core::str:1.40",
      "has alias",
      "str"
    ],
    [
      "core::sync:1.40",
      "is a",
      "module"
    ],
    [
      "core::sync:1.40",
      "has alias",
      "sync"
    ],
    [
      "core::task:1.40",
      "is a",
      "module"
    ],
    [
      "core::task:1.40",
      "has alias",
      "task"
    ],
    [
      "core::time:1.40",
      "is a",
      "module"
    ],
    [
      "core::time:1.40",
      "has alias",
      "time"
    ],
    [
      "core::u128:1.40",
      "is a",
      "module"
    ],
    [
      "core::u128:1.40",
      "has alias",
      "u128"
    ],
    [
      "core::u16:1.40",
      "is a",
      "module"
    ],
    [
      "core::u16:1.40",
      "has alias",
      "u16"
    ],
    [
      "core::u32:1.40",
      "is a",
      "module"
    ],
    [
      "core::u32:1.40",
      "has alias",
      "u32"
    ],
    [
      "core::u64:1.40",
      "is a",
      "module"
    ],
    [
      "core::u64:1.40",
      "has alias",
      "u64"
    ],
    [
      "core::u8:1.40",
      "is a",
      "module"
    ],
    [
      "core::u8:1.40",
      "has alias",
      "u8"
    ],
    [
      "core::unicode:1.40",
      "is a",
      "module"
    ],
    [
      "core::unicode:1.40",
      "has alias",
      "unicode"
    ],
    [
      "core::usize:1.40",
      "is a",
      "module"
    ],
    [
      "core::usize:1.40",
      "has alias",
      "usize"
    ],
    [
      "core:1.40",
      "contains",
      "un:1.40"
    ],
    [
      "core::arch:1.40",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "core::intrinsics:1.40",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "core::ptr:1.40",
      "has description",
      "Manually manage memory through raw pointers."
    ],
    [
      "core::pin:1.40",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "core::slice:1.40",
      "has description",
      "Slice management and manipulation."
    ],
    [
      "core::str:1.40",
      "has description",
      "String manipulation."
    ],
    [
      "assert:1.40",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "cfg:1.40",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "column:1.40",
      "has description",
      "Expands to the column number at which it was invoked."
    ],
    [
      "compile_error:1.40",
      "has description",
      "Causes compilation to fail with the given error message when encountered."
    ],
    [
      "format_args:1.40",
      "has description",
      "Constructs parameters for the other string-formatting macros."
    ],
    [
      "core:1.40",
      "contains",
      "Clone:1.40"
    ],
    [
      "Clone:1.40",
      "is a",
      "macro"
    ],
    [
      "Clone:1.40",
      "has description",
      "Derive macro generating an impl of the trait `Clone`."
    ],
    [
      "core:1.40",
      "contains",
      "Copy:1.40"
    ],
    [
      "Copy:1.40",
      "is a",
      "macro"
    ],
    [
      "Copy:1.40",
      "has description",
      "Derive macro generating an impl of the trait `Copy`."
    ],
    [
      "core:1.40",
      "contains",
      "Debug:1.40"
    ],
    [
      "Debug:1.40",
      "is a",
      "macro"
    ],
    [
      "Debug:1.40",
      "has description",
      "Derive macro generating an impl of the trait `Debug`."
    ],
    [
      "core:1.40",
      "contains",
      "Default:1.40"
    ],
    [
      "Default:1.40",
      "is a",
      "macro"
    ],
    [
      "Default:1.40",
      "has description",
      "Derive macro generating an impl of the trait `Default`."
    ],
    [
      "concat_idents:1.40",
      "has description",
      "Concatenates identifiers into one identifier."
    ],
    [
      "debug_assert:1.40",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "env:1.40",
      "has description",
      "Inspects an environment variable at compile time."
    ],
    [
      "file:1.40",
      "has description",
      "Expands to the file name in which it was invoked."
    ],
    [
      "include:1.40",
      "has description",
      "Parses a file as an expression or an item according to the context."
    ],
    [
      "line:1.40",
      "has description",
      "Expands to the line number on which it was invoked."
    ],
    [
      "option_env:1.40",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "core::panic:1.40",
      "has description",
      "Panics the current thread."
    ],
    [
      "stringify:1.40",
      "has description",
      "Stringifies its arguments."
    ],
    [
      "try:1.40",
      "has description",
      "Unwraps a result or propagates its error."
    ],
    [
      "unimplemented:1.40",
      "has description",
      "Indicates unfinished code by panicking with a message of \"not yet implemented\"."
    ],
    [
      "unreachable:1.40",
      "has description",
      "Indicates unreachable code."
    ],
    [
      "write:1.40",
      "has description",
      "Writes formatted data into a buffer."
    ],
    [
      "core:1.40",
      "contains",
      "Eq:1.40"
    ],
    [
      "Eq:1.40",
      "is a",
      "macro"
    ],
    [
      "Eq:1.40",
      "has description",
      "Derive macro generating an impl of the trait `Eq`."
    ],
    [
      "core:1.40",
      "contains",
      "Hash:1.40"
    ],
    [
      "Hash:1.40",
      "is a",
      "macro"
    ],
    [
      "Hash:1.40",
      "has description",
      "Derive macro generating an impl of the trait `Hash`."
    ],
    [
      "core:1.40",
      "contains",
      "Ord:1.40"
    ],
    [
      "Ord:1.40",
      "is a",
      "macro"
    ],
    [
      "Ord:1.40",
      "has description",
      "Derive macro generating an impl of the trait `Ord`."
    ],
    [
      "core:1.40",
      "contains",
      "PartialEq:1.40"
    ],
    [
      "PartialEq:1.40",
      "is a",
      "macro"
    ],
    [
      "PartialEq:1.40",
      "has description",
      "Derive macro generating an impl of the trait `PartialEq`."
    ],
    [
      "core:1.40",
      "contains",
      "PartialOrd:1.40"
    ],
    [
      "PartialOrd:1.40",
      "is a",
      "macro"
    ],
    [
      "PartialOrd:1.40",
      "has description",
      "Derive macro generating an impl of the trait `PartialOrd`."
    ],
    [
      "core:1.40",
      "contains",
      "RustcDecodable:1.40"
    ],
    [
      "RustcDecodable:1.40",
      "is a",
      "macro"
    ],
    [
      "RustcDecodable:1.40",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.40",
      "contains",
      "RustcEncodable:1.40"
    ],
    [
      "RustcEncodable:1.40",
      "is a",
      "macro"
    ],
    [
      "RustcEncodable:1.40",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.40",
      "contains",
      "asm:1.40"
    ],
    [
      "asm:1.40",
      "is a",
      "macro"
    ],
    [
      "asm:1.40",
      "has description",
      "Inline assembly."
    ],
    [
      "core:1.40",
      "contains",
      "bench:1.40"
    ],
    [
      "bench:1.40",
      "is a",
      "macro"
    ],
    [
      "bench:1.40",
      "has description",
      "Attribute macro applied to a function to turn it into a benchmark test."
    ],
    [
      "core:1.40",
      "contains",
      "global_allocator:1.40"
    ],
    [
      "global_allocator:1.40",
      "is a",
      "macro"
    ],
    [
      "global_allocator:1.40",
      "has description",
      "Attribute macro applied to a static to register it as a global allocator."
    ],
    [
      "core:1.40",
      "contains",
      "global_asm:1.40"
    ],
    [
      "global_asm:1.40",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.40",
      "has description",
      "Module-level inline assembly."
    ],
    [
      "core:1.40",
      "contains",
      "log_syntax:1.40"
    ],
    [
      "log_syntax:1.40",
      "is a",
      "macro"
    ],
    [
      "log_syntax:1.40",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "core:1.40",
      "contains",
      "matches:1.40"
    ],
    [
      "matches:1.40",
      "is a",
      "macro"
    ],
    [
      "matches:1.40",
      "has description",
      "Returns whether the given expression matches any of the given patterns."
    ],
    [
      "core:1.40",
      "contains",
      "test:1.40"
    ],
    [
      "test:1.40",
      "is a",
      "macro"
    ],
    [
      "test:1.40",
      "has description",
      "Attribute macro applied to a function to turn it into a unit test."
    ],
    [
      "core:1.40",
      "contains",
      "test_case:1.40"
    ],
    [
      "test_case:1.40",
      "is a",
      "macro"
    ],
    [
      "test_case:1.40",
      "has description",
      "An implementation detail of the `#[test]` and `#[bench]` macros."
    ],
    [
      "core:1.40",
      "contains",
      "todo:1.40"
    ],
    [
      "todo:1.40",
      "is a",
      "macro"
    ],
    [
      "todo:1.40",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "core:1.40",
      "contains",
      "trace_macros:1.40"
    ],
    [
      "trace_macros:1.40",
      "is a",
      "macro"
    ],
    [
      "trace_macros:1.40",
      "has description",
      "Enables or disables tracing functionality used for debugging other macros."
    ],
    [
      "unimplemented:1.40",
      "has description",
      "Indicates unfinished code by panicking with a message of 'not yet implemented'."
    ],
    [
      "core:1.60",
      "contains",
      "core::alloc:1.60"
    ],
    [
      "core::alloc:1.60",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "core:1.60",
      "contains",
      "core::any:1.60"
    ],
    [
      "core::any:1.60",
      "has description",
      "This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."
    ],
    [
      "core:1.60",
      "contains",
      "core::arch:1.60"
    ],
    [
      "core::arch:1.60",
      "has description",
      "Platform dependent vendor intrinsics."
    ],
    [
      "core:1.60",
      "contains",
      "core::array:1.60"
    ],
    [
      "core::array:1.60",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "core:1.60",
      "contains",
      "core::ascii:1.60"
    ],
    [
      "core::ascii:1.60",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "core:1.60",
      "contains",
      "core::borrow:1.60"
    ],
    [
      "core::borrow:1.60",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "core:1.60",
      "contains",
      "core::cell:1.60"
    ],
    [
      "core::cell:1.60",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "core:1.60",
      "contains",
      "core::char:1.60"
    ],
    [
      "core::char:1.60",
      "has description",
      "A character type."
    ],
    [
      "core:1.60",
      "contains",
      "core::clone:1.60"
    ],
    [
      "core::clone:1.60",
      "has description",
      "The `Clone` trait for types that cannot be 'implicitly copied'."
    ],
    [
      "core:1.60",
      "contains",
      "core::cmp:1.60"
    ],
    [
      "core::cmp:1.60",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "core:1.60",
      "contains",
      "core::convert:1.60"
    ],
    [
      "core::convert:1.60",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "core:1.60",
      "contains",
      "core::default:1.60"
    ],
    [
      "core::default:1.60",
      "has description",
      "The `Default` trait for types which may have meaningful default values."
    ],
    [
      "core:1.60",
      "contains",
      "core::f32:1.60"
    ],
    [
      "core::f32:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "core:1.60",
      "contains",
      "core::f64:1.60"
    ],
    [
      "core::f64:1.60",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "core:1.60",
      "contains",
      "core::ffi:1.60"
    ],
    [
      "core::ffi:1.60",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "core::ffi:1.60",
      "stable since",
      "1.30.0"
    ],
    [
      "core:1.60",
      "contains",
      "core::fmt:1.60"
    ],
    [
      "core::fmt:1.60",
      "has description",
      "Utilities for formatting and printing strings."
    ],
    [
      "core:1.60",
      "contains",
      "core::future:1.60"
    ],
    [
      "core::future:1.60",
      "has description",
      "Asynchronous values."
    ],
    [
      "core:1.60",
      "contains",
      "core::hash:1.60"
    ],
    [
      "core::hash:1.60",
      "has description",
      "Generic hashing support."
    ],
    [
      "core:1.60",
      "contains",
      "core::hint:1.60"
    ],
    [
      "core::hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "core:1.60",
      "contains",
      "core::i128:1.60"
    ],
    [
      "core::i128:1.60",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::i16:1.60"
    ],
    [
      "core::i16:1.60",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::i32:1.60"
    ],
    [
      "core::i32:1.60",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::i64:1.60"
    ],
    [
      "core::i64:1.60",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::i8:1.60"
    ],
    [
      "core::i8:1.60",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::intrinsics:1.60"
    ],
    [
      "core::intrinsics:1.60",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "core:1.60",
      "contains",
      "core::isize:1.60"
    ],
    [
      "core::isize:1.60",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::iter:1.60"
    ],
    [
      "core::iter:1.60",
      "has description",
      "Composable external iteration."
    ],
    [
      "core:1.60",
      "contains",
      "core::marker:1.60"
    ],
    [
      "core::marker:1.60",
      "has description",
      "Primitive traits and types representing basic properties of types."
    ],
    [
      "core:1.60",
      "contains",
      "core::mem:1.60"
    ],
    [
      "core::mem:1.60",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "core:1.60",
      "contains",
      "core::num:1.60"
    ],
    [
      "core::num:1.60",
      "has description",
      "Numeric traits and functions for the built-in numeric types."
    ],
    [
      "core:1.60",
      "contains",
      "core::ops:1.60"
    ],
    [
      "core::ops:1.60",
      "has description",
      "Overloadable operators."
    ],
    [
      "core:1.60",
      "contains",
      "core::option:1.60"
    ],
    [
      "core::option:1.60",
      "has description",
      "Optional values."
    ],
    [
      "core:1.60",
      "contains",
      "core::panic:1.60"
    ],
    [
      "core::panic:1.60",
      "has description",
      "Panic support in the standard library."
    ],
    [
      "core:1.60",
      "contains",
      "core::panicking:1.60"
    ],
    [
      "core::panicking:1.60",
      "has description",
      "Panic support for libcore"
    ],
    [
      "core:1.60",
      "contains",
      "core::pin:1.60"
    ],
    [
      "core::pin:1.60",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "core:1.60",
      "contains",
      "core::prelude:1.60"
    ],
    [
      "core::prelude:1.60",
      "has description",
      "The libcore prelude"
    ],
    [
      "core:1.60",
      "contains",
      "core::ptr:1.60"
    ],
    [
      "core::ptr:1.60",
      "has description",
      "Raw, unsafe pointers, `*const T`, and `*mut T`."
    ],
    [
      "core:1.60",
      "contains",
      "core::raw:1.60"
    ],
    [
      "core::raw:1.60",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "core:1.60",
      "contains",
      "core::result:1.60"
    ],
    [
      "core::result:1.60",
      "has description",
      "Error handling with the `Result` type."
    ],
    [
      "core:1.60",
      "contains",
      "core::slice:1.60"
    ],
    [
      "core::slice:1.60",
      "has description",
      "Slice management and manipulation"
    ],
    [
      "core:1.60",
      "contains",
      "core::str:1.60"
    ],
    [
      "core::str:1.60",
      "has description",
      "String manipulation"
    ],
    [
      "core:1.60",
      "contains",
      "core::sync:1.60"
    ],
    [
      "core::sync:1.60",
      "has description",
      "Synchronization primitives"
    ],
    [
      "core:1.60",
      "contains",
      "core::task:1.60"
    ],
    [
      "core::task:1.60",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "core:1.60",
      "contains",
      "core::time:1.60"
    ],
    [
      "core::time:1.60",
      "has description",
      "Temporal quantification."
    ],
    [
      "core:1.60",
      "contains",
      "core::u128:1.60"
    ],
    [
      "core::u128:1.60",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::u16:1.60"
    ],
    [
      "core::u16:1.60",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::u32:1.60"
    ],
    [
      "core::u32:1.60",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::u64:1.60"
    ],
    [
      "core::u64:1.60",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::u8:1.60"
    ],
    [
      "core::u8:1.60",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "core:1.60",
      "contains",
      "core::unicode:1.60"
    ],
    [
      "core::unicode:1.60",
      "has description",
      ""
    ],
    [
      "core:1.60",
      "contains",
      "core::usize:1.60"
    ],
    [
      "core::usize:1.60",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "core:1.60",
      "contains",
      "assert:1.60"
    ],
    [
      "assert:1.60",
      "is a",
      "macro"
    ],
    [
      "assert:1.60",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.60",
      "contains",
      "assert_eq:1.60"
    ],
    [
      "assert_eq:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.60",
      "has description",
      "Asserts that two expressions are equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.60",
      "contains",
      "assert_ne:1.60"
    ],
    [
      "assert_ne:1.60",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.60",
      "contains",
      "cfg:1.60"
    ],
    [
      "cfg:1.60",
      "is a",
      "macro"
    ],
    [
      "cfg:1.60",
      "has description",
      "Boolean evaluation of configuration flags, at compile-time."
    ],
    [
      "core:1.60",
      "contains",
      "column:1.60"
    ],
    [
      "column:1.60",
      "is a",
      "macro"
    ],
    [
      "column:1.60",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "core:1.60",
      "contains",
      "compile_error:1.60"
    ],
    [
      "compile_error:1.60",
      "is a",
      "macro"
    ],
    [
      "compile_error:1.60",
      "has description",
      "Unconditionally causes compilation to fail with the given error message when encountered."
    ],
    [
      "core:1.60",
      "contains",
      "concat:1.60"
    ],
    [
      "concat:1.60",
      "is a",
      "macro"
    ],
    [
      "concat:1.60",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "core:1.60",
      "contains",
      "concat_idents:1.60"
    ],
    [
      "concat_idents:1.60",
      "is a",
      "macro"
    ],
    [
      "concat_idents:1.60",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "core:1.60",
      "contains",
      "debug_assert:1.60"
    ],
    [
      "debug_assert:1.60",
      "is a",
      "macro"
    ],
    [
      "debug_assert:1.60",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.60",
      "contains",
      "debug_assert_eq:1.60"
    ],
    [
      "debug_assert_eq:1.60",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq:1.60",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "core:1.60",
      "contains",
      "debug_assert_ne:1.60"
    ],
    [
      "debug_assert_ne:1.60",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.60",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "core:1.60",
      "contains",
      "env:1.60"
    ],
    [
      "env:1.60",
      "is a",
      "macro"
    ],
    [
      "env:1.60",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "core:1.60",
      "contains",
      "file:1.60"
    ],
    [
      "file:1.60",
      "is a",
      "macro"
    ],
    [
      "file:1.60",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "core:1.60",
      "contains",
      "format_args:1.60"
    ],
    [
      "format_args:1.60",
      "is a",
      "macro"
    ],
    [
      "format_args:1.60",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "core:1.60",
      "contains",
      "include:1.60"
    ],
    [
      "include:1.60",
      "is a",
      "macro"
    ],
    [
      "include:1.60",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "core:1.60",
      "contains",
      "include_bytes:1.60"
    ],
    [
      "include_bytes:1.60",
      "is a",
      "macro"
    ],
    [
      "include_bytes:1.60",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "core:1.60",
      "contains",
      "include_str:1.60"
    ],
    [
      "include_str:1.60",
      "is a",
      "macro"
    ],
    [
      "include_str:1.60",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "core:1.60",
      "contains",
      "line:1.60"
    ],
    [
      "line:1.60",
      "is a",
      "macro"
    ],
    [
      "line:1.60",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "core:1.60",
      "contains",
      "module_path:1.60"
    ],
    [
      "module_path:1.60",
      "is a",
      "macro"
    ],
    [
      "module_path:1.60",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "core:1.60",
      "contains",
      "option_env:1.60"
    ],
    [
      "option_env:1.60",
      "is a",
      "macro"
    ],
    [
      "option_env:1.60",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "core::panic:1.60",
      "is a",
      "macro"
    ],
    [
      "core::panic:1.60",
      "has description",
      "Entry point of thread panic, for details, see std::macros"
    ],
    [
      "core:1.60",
      "contains",
      "stringify:1.60"
    ],
    [
      "stringify:1.60",
      "is a",
      "macro"
    ],
    [
      "stringify:1.60",
      "has description",
      "A macro which stringifies its arguments."
    ],
    [
      "core:1.60",
      "contains",
      "try:1.60"
    ],
    [
      "try:1.60",
      "is a",
      "macro"
    ],
    [
      "try:1.60",
      "has description",
      "Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."
    ],
    [
      "core:1.60",
      "contains",
      "unimplemented:1.60"
    ],
    [
      "unimplemented:1.60",
      "is a",
      "macro"
    ],
    [
      "unimplemented:1.60",
      "has description",
      "A standardized placeholder for marking unfinished code."
    ],
    [
      "core:1.60",
      "contains",
      "unreachable:1.60"
    ],
    [
      "unreachable:1.60",
      "is a",
      "macro"
    ],
    [
      "unreachable:1.60",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "core:1.60",
      "contains",
      "write:1.60"
    ],
    [
      "write:1.60",
      "is a",
      "macro"
    ],
    [
      "write:1.60",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "core:1.60",
      "contains",
      "writeln:1.60"
    ],
    [
      "writeln:1.60",
      "is a",
      "macro"
    ],
    [
      "writeln:1.60",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "core::ffi:1.60",
      "contains",
      "c_void:1.60"
    ],
    [
      "c_void:1.60",
      "is a",
      "enum"
    ],
    [
      "c_void:1.60",
      "has description",
      "Equivalent to C's void type when used as a pointer."
    ],
    [
      "core::alloc:1.60",
      "is a",
      "module"
    ],
    [
      "core::alloc:1.60",
      "has alias",
      "alloc"
    ],
    [
      "core::any:1.60",
      "is a",
      "module"
    ],
    [
      "core::any:1.60",
      "has alias",
      "any"
    ],
    [
      "core::arch:1.60",
      "is a",
      "module"
    ],
    [
      "core::arch:1.60",
      "has alias",
      "arch"
    ],
    [
      "core::array:1.60",
      "is a",
      "module"
    ],
    [
      "core::array:1.60",
      "has alias",
      "array"
    ],
    [
      "core::ascii:1.60",
      "is a",
      "module"
    ],
    [
      "core::ascii:1.60",
      "has alias",
      "ascii"
    ],
    [
      "core::borrow:1.60",
      "is a",
      "module"
    ],
    [
      "core::borrow:1.60",
      "has alias",
      "borrow"
    ],
    [
      "core::cell:1.60",
      "is a",
      "module"
    ],
    [
      "core::cell:1.60",
      "has alias",
      "cell"
    ],
    [
      "core::char:1.60",
      "is a",
      "module"
    ],
    [
      "core::char:1.60",
      "has alias",
      "char"
    ],
    [
      "core::clone:1.60",
      "is a",
      "module"
    ],
    [
      "core::clone:1.60",
      "has alias",
      "clone"
    ],
    [
      "core::cmp:1.60",
      "is a",
      "module"
    ],
    [
      "core::cmp:1.60",
      "has alias",
      "cmp"
    ],
    [
      "core::convert:1.60",
      "is a",
      "module"
    ],
    [
      "core::convert:1.60",
      "has alias",
      "convert"
    ],
    [
      "core::default:1.60",
      "is a",
      "module"
    ],
    [
      "core::default:1.60",
      "has alias",
      "default"
    ],
    [
      "core::f32:1.60",
      "is a",
      "module"
    ],
    [
      "core::f32:1.60",
      "has alias",
      "f32"
    ],
    [
      "core::f64:1.60",
      "is a",
      "module"
    ],
    [
      "core::f64:1.60",
      "has alias",
      "f64"
    ],
    [
      "core::ffi:1.60",
      "is a",
      "module"
    ],
    [
      "core::ffi:1.60",
      "has alias",
      "ffi"
    ],
    [
      "core::fmt:1.60",
      "is a",
      "module"
    ],
    [
      "core::fmt:1.60",
      "has alias",
      "fmt"
    ],
    [
      "core::future:1.60",
      "is a",
      "module"
    ],
    [
      "core::future:1.60",
      "has alias",
      "future"
    ],
    [
      "core::hash:1.60",
      "is a",
      "module"
    ],
    [
      "core::hash:1.60",
      "has alias",
      "hash"
    ],
    [
      "core::hint:1.60",
      "is a",
      "module"
    ],
    [
      "core::hint:1.60",
      "has alias",
      "hint"
    ],
    [
      "core::i128:1.60",
      "is a",
      "module"
    ],
    [
      "core::i128:1.60",
      "has alias",
      "i128"
    ],
    [
      "core::i16:1.60",
      "is a",
      "module"
    ],
    [
      "core::i16:1.60",
      "has alias",
      "i16"
    ],
    [
      "core::i32:1.60",
      "is a",
      "module"
    ],
    [
      "core::i32:1.60",
      "has alias",
      "i32"
    ],
    [
      "core::i64:1.60",
      "is a",
      "module"
    ],
    [
      "core::i64:1.60",
      "has alias",
      "i64"
    ],
    [
      "core::i8:1.60",
      "is a",
      "module"
    ],
    [
      "core::i8:1.60",
      "has alias",
      "i8"
    ],
    [
      "core::intrinsics:1.60",
      "is a",
      "module"
    ],
    [
      "core::intrinsics:1.60",
      "has alias",
      "intrinsics"
    ],
    [
      "core::isize:1.60",
      "is a",
      "module"
    ],
    [
      "core::isize:1.60",
      "has alias",
      "isize"
    ],
    [
      "core::iter:1.60",
      "is a",
      "module"
    ],
    [
      "core::iter:1.60",
      "has alias",
      "iter"
    ],
    [
      "core::marker:1.60",
      "is a",
      "module"
    ],
    [
      "core::marker:1.60",
      "has alias",
      "marker"
    ],
    [
      "core::mem:1.60",
      "is a",
      "module"
    ],
    [
      "core::mem:1.60",
      "has alias",
      "mem"
    ],
    [
      "core::num:1.60",
      "is a",
      "module"
    ],
    [
      "core::num:1.60",
      "has alias",
      "num"
    ],
    [
      "core::ops:1.60",
      "is a",
      "module"
    ],
    [
      "core::ops:1.60",
      "has alias",
      "ops"
    ],
    [
      "core::option:1.60",
      "is a",
      "module"
    ],
    [
      "core::option:1.60",
      "has alias",
      "option"
    ],
    [
      "core::panic:1.60",
      "is a",
      "module"
    ],
    [
      "core::panic:1.60",
      "has alias",
      "panic"
    ],
    [
      "core::panicking:1.60",
      "is a",
      "module"
    ],
    [
      "core::panicking:1.60",
      "has alias",
      "panicking"
    ],
    [
      "core::pin:1.60",
      "is a",
      "module"
    ],
    [
      "core::pin:1.60",
      "has alias",
      "pin"
    ],
    [
      "core::prelude:1.60",
      "is a",
      "module"
    ],
    [
      "core::prelude:1.60",
      "has alias",
      "prelude"
    ],
    [
      "core::ptr:1.60",
      "is a",
      "module"
    ],
    [
      "core::ptr:1.60",
      "has alias",
      "ptr"
    ],
    [
      "core::raw:1.60",
      "is a",
      "module"
    ],
    [
      "core::raw:1.60",
      "has alias",
      "raw"
    ],
    [
      "core::result:1.60",
      "is a",
      "module"
    ],
    [
      "core::result:1.60",
      "has alias",
      "result"
    ],
    [
      "core::slice:1.60",
      "is a",
      "module"
    ],
    [
      "core::slice:1.60",
      "has alias",
      "slice"
    ],
    [
      "core::str:1.60",
      "is a",
      "module"
    ],
    [
      "core::str:1.60",
      "has alias",
      "str"
    ],
    [
      "core::sync:1.60",
      "is a",
      "module"
    ],
    [
      "core::sync:1.60",
      "has alias",
      "sync"
    ],
    [
      "core::task:1.60",
      "is a",
      "module"
    ],
    [
      "core::task:1.60",
      "has alias",
      "task"
    ],
    [
      "core::time:1.60",
      "is a",
      "module"
    ],
    [
      "core::time:1.60",
      "has alias",
      "time"
    ],
    [
      "core::u128:1.60",
      "is a",
      "module"
    ],
    [
      "core::u128:1.60",
      "has alias",
      "u128"
    ],
    [
      "core::u16:1.60",
      "is a",
      "module"
    ],
    [
      "core::u16:1.60",
      "has alias",
      "u16"
    ],
    [
      "core::u32:1.60",
      "is a",
      "module"
    ],
    [
      "core::u32:1.60",
      "has alias",
      "u32"
    ],
    [
      "core::u64:1.60",
      "is a",
      "module"
    ],
    [
      "core::u64:1.60",
      "has alias",
      "u64"
    ],
    [
      "core::u8:1.60",
      "is a",
      "module"
    ],
    [
      "core::u8:1.60",
      "has alias",
      "u8"
    ],
    [
      "core::unicode:1.60",
      "is a",
      "module"
    ],
    [
      "core::unicode:1.60",
      "has alias",
      "unicode"
    ],
    [
      "core::usize:1.60",
      "is a",
      "module"
    ],
    [
      "core::usize:1.60",
      "has alias",
      "usize"
    ],
    [
      "core:1.60",
      "contains",
      "un:1.60"
    ],
    [
      "core::arch:1.60",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "core::intrinsics:1.60",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "core::ptr:1.60",
      "has description",
      "Manually manage memory through raw pointers."
    ],
    [
      "core::pin:1.60",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "core::slice:1.60",
      "has description",
      "Slice management and manipulation."
    ],
    [
      "core::str:1.60",
      "has description",
      "String manipulation."
    ],
    [
      "assert:1.60",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "cfg:1.60",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "column:1.60",
      "has description",
      "Expands to the column number at which it was invoked."
    ],
    [
      "compile_error:1.60",
      "has description",
      "Causes compilation to fail with the given error message when encountered."
    ],
    [
      "format_args:1.60",
      "has description",
      "Constructs parameters for the other string-formatting macros."
    ],
    [
      "core:1.60",
      "contains",
      "Clone:1.60"
    ],
    [
      "Clone:1.60",
      "is a",
      "macro"
    ],
    [
      "Clone:1.60",
      "has description",
      "Derive macro generating an impl of the trait `Clone`."
    ],
    [
      "core:1.60",
      "contains",
      "Copy:1.60"
    ],
    [
      "Copy:1.60",
      "is a",
      "macro"
    ],
    [
      "Copy:1.60",
      "has description",
      "Derive macro generating an impl of the trait `Copy`."
    ],
    [
      "core:1.60",
      "contains",
      "Debug:1.60"
    ],
    [
      "Debug:1.60",
      "is a",
      "macro"
    ],
    [
      "Debug:1.60",
      "has description",
      "Derive macro generating an impl of the trait `Debug`."
    ],
    [
      "core:1.60",
      "contains",
      "Default:1.60"
    ],
    [
      "Default:1.60",
      "is a",
      "macro"
    ],
    [
      "Default:1.60",
      "has description",
      "Derive macro generating an impl of the trait `Default`."
    ],
    [
      "concat_idents:1.60",
      "has description",
      "Concatenates identifiers into one identifier."
    ],
    [
      "debug_assert:1.60",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "env:1.60",
      "has description",
      "Inspects an environment variable at compile time."
    ],
    [
      "file:1.60",
      "has description",
      "Expands to the file name in which it was invoked."
    ],
    [
      "include:1.60",
      "has description",
      "Parses a file as an expression or an item according to the context."
    ],
    [
      "line:1.60",
      "has description",
      "Expands to the line number on which it was invoked."
    ],
    [
      "option_env:1.60",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "core::panic:1.60",
      "has description",
      "Panics the current thread."
    ],
    [
      "stringify:1.60",
      "has description",
      "Stringifies its arguments."
    ],
    [
      "try:1.60",
      "has description",
      "Unwraps a result or propagates its error."
    ],
    [
      "unimplemented:1.60",
      "has description",
      "Indicates unfinished code by panicking with a message of \"not yet implemented\"."
    ],
    [
      "unreachable:1.60",
      "has description",
      "Indicates unreachable code."
    ],
    [
      "write:1.60",
      "has description",
      "Writes formatted data into a buffer."
    ],
    [
      "core:1.60",
      "contains",
      "Eq:1.60"
    ],
    [
      "Eq:1.60",
      "is a",
      "macro"
    ],
    [
      "Eq:1.60",
      "has description",
      "Derive macro generating an impl of the trait `Eq`."
    ],
    [
      "core:1.60",
      "contains",
      "Hash:1.60"
    ],
    [
      "Hash:1.60",
      "is a",
      "macro"
    ],
    [
      "Hash:1.60",
      "has description",
      "Derive macro generating an impl of the trait `Hash`."
    ],
    [
      "core:1.60",
      "contains",
      "Ord:1.60"
    ],
    [
      "Ord:1.60",
      "is a",
      "macro"
    ],
    [
      "Ord:1.60",
      "has description",
      "Derive macro generating an impl of the trait `Ord`."
    ],
    [
      "core:1.60",
      "contains",
      "PartialEq:1.60"
    ],
    [
      "PartialEq:1.60",
      "is a",
      "macro"
    ],
    [
      "PartialEq:1.60",
      "has description",
      "Derive macro generating an impl of the trait `PartialEq`."
    ],
    [
      "core:1.60",
      "contains",
      "PartialOrd:1.60"
    ],
    [
      "PartialOrd:1.60",
      "is a",
      "macro"
    ],
    [
      "PartialOrd:1.60",
      "has description",
      "Derive macro generating an impl of the trait `PartialOrd`."
    ],
    [
      "core:1.60",
      "contains",
      "RustcDecodable:1.60"
    ],
    [
      "RustcDecodable:1.60",
      "is a",
      "macro"
    ],
    [
      "RustcDecodable:1.60",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.60",
      "contains",
      "RustcEncodable:1.60"
    ],
    [
      "RustcEncodable:1.60",
      "is a",
      "macro"
    ],
    [
      "RustcEncodable:1.60",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.60",
      "contains",
      "asm:1.60"
    ],
    [
      "asm:1.60",
      "is a",
      "macro"
    ],
    [
      "asm:1.60",
      "has description",
      "Inline assembly."
    ],
    [
      "core:1.60",
      "contains",
      "bench:1.60"
    ],
    [
      "bench:1.60",
      "is a",
      "macro"
    ],
    [
      "bench:1.60",
      "has description",
      "Attribute macro applied to a function to turn it into a benchmark test."
    ],
    [
      "core:1.60",
      "contains",
      "global_allocator:1.60"
    ],
    [
      "global_allocator:1.60",
      "is a",
      "macro"
    ],
    [
      "global_allocator:1.60",
      "has description",
      "Attribute macro applied to a static to register it as a global allocator."
    ],
    [
      "core:1.60",
      "contains",
      "global_asm:1.60"
    ],
    [
      "global_asm:1.60",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.60",
      "has description",
      "Module-level inline assembly."
    ],
    [
      "core:1.60",
      "contains",
      "log_syntax:1.60"
    ],
    [
      "log_syntax:1.60",
      "is a",
      "macro"
    ],
    [
      "log_syntax:1.60",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "core:1.60",
      "contains",
      "matches:1.60"
    ],
    [
      "matches:1.60",
      "is a",
      "macro"
    ],
    [
      "matches:1.60",
      "has description",
      "Returns whether the given expression matches any of the given patterns."
    ],
    [
      "core:1.60",
      "contains",
      "test:1.60"
    ],
    [
      "test:1.60",
      "is a",
      "macro"
    ],
    [
      "test:1.60",
      "has description",
      "Attribute macro applied to a function to turn it into a unit test."
    ],
    [
      "core:1.60",
      "contains",
      "test_case:1.60"
    ],
    [
      "test_case:1.60",
      "is a",
      "macro"
    ],
    [
      "test_case:1.60",
      "has description",
      "An implementation detail of the `#[test]` and `#[bench]` macros."
    ],
    [
      "core:1.60",
      "contains",
      "todo:1.60"
    ],
    [
      "todo:1.60",
      "is a",
      "macro"
    ],
    [
      "todo:1.60",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "core:1.60",
      "contains",
      "trace_macros:1.60"
    ],
    [
      "trace_macros:1.60",
      "is a",
      "macro"
    ],
    [
      "trace_macros:1.60",
      "has description",
      "Enables or disables tracing functionality used for debugging other macros."
    ],
    [
      "unimplemented:1.60",
      "has description",
      "Indicates unfinished code by panicking with a message of 'not yet implemented'."
    ],
    [
      "core:1.60",
      "contains",
      "core::lazy:1.60"
    ],
    [
      "core::lazy:1.60",
      "is a",
      "module"
    ],
    [
      "core::lazy:1.60",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "core:1.60",
      "contains",
      "core::primitive:1.60"
    ],
    [
      "core::primitive:1.60",
      "is a",
      "module"
    ],
    [
      "core::primitive:1.60",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "core::ffi:1.60",
      "has description",
      "Utilities related to foreign function interface (FFI) bindings."
    ],
    [
      "core::hint:1.60",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "include_str:1.60",
      "has description",
      "Includes a UTF-8 encoded file as a string."
    ],
    [
      "core::array:1.60",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should be able to generalize to all lengths."
    ],
    [
      "core:1.60",
      "contains",
      "cfg_accessible:1.60"
    ],
    [
      "cfg_accessible:1.60",
      "is a",
      "macro"
    ],
    [
      "cfg_accessible:1.60",
      "has description",
      "Keeps the item it's applied to if the passed path is accessible, and removes it otherwise."
    ],
    [
      "core:1.60",
      "contains",
      "llvm_asm:1.60"
    ],
    [
      "llvm_asm:1.60",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.60",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "core:1.60",
      "contains",
      "raw_const:1.60"
    ],
    [
      "raw_const:1.60",
      "is a",
      "macro"
    ],
    [
      "raw_const:1.60",
      "has description",
      "Create a `const` raw pointer to a place, without creating an intermediate reference."
    ],
    [
      "core:1.60",
      "contains",
      "raw_mut:1.60"
    ],
    [
      "raw_mut:1.60",
      "is a",
      "macro"
    ],
    [
      "raw_mut:1.60",
      "has description",
      "Create a `mut` raw pointer to a place, without creating an intermediate reference."
    ],
    [
      "core:1.60",
      "contains",
      "ready:1.60"
    ],
    [
      "ready:1.60",
      "is a",
      "macro"
    ],
    [
      "ready:1.60",
      "has description",
      "Extracts the successful type of a `Poll<T>`."
    ],
    [
      "unimplemented:1.60",
      "has description",
      "Indicates unimplemented code by panicking with a message of \"not implemented\"."
    ],
    [
      "core::array:1.60",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually, we should be able to generalize to all lengths."
    ],
    [
      "unimplemented:1.60",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'."
    ],
    [
      "core::lazy:1.60",
      "has alias",
      "lazy"
    ],
    [
      "core::primitive:1.60",
      "has alias",
      "primitive"
    ],
    [
      "ready:1.60",
      "has description",
      "Extracts the successful type of a `Poll<T>`.`"
    ],
    [
      "std::alloc::alloc:1.60",
      "has feature",
      "unsafe:1.60"
    ],
    [
      "core:1.80",
      "contains",
      "core::alloc:1.80"
    ],
    [
      "core::alloc:1.80",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "core:1.80",
      "contains",
      "core::any:1.80"
    ],
    [
      "core::any:1.80",
      "has description",
      "This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."
    ],
    [
      "core:1.80",
      "contains",
      "core::arch:1.80"
    ],
    [
      "core::arch:1.80",
      "has description",
      "Platform dependent vendor intrinsics."
    ],
    [
      "core:1.80",
      "contains",
      "core::array:1.80"
    ],
    [
      "core::array:1.80",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "core:1.80",
      "contains",
      "core::ascii:1.80"
    ],
    [
      "core::ascii:1.80",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "core:1.80",
      "contains",
      "core::borrow:1.80"
    ],
    [
      "core::borrow:1.80",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "core:1.80",
      "contains",
      "core::cell:1.80"
    ],
    [
      "core::cell:1.80",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "core:1.80",
      "contains",
      "core::char:1.80"
    ],
    [
      "core::char:1.80",
      "has description",
      "A character type."
    ],
    [
      "core:1.80",
      "contains",
      "core::clone:1.80"
    ],
    [
      "core::clone:1.80",
      "has description",
      "The `Clone` trait for types that cannot be 'implicitly copied'."
    ],
    [
      "core:1.80",
      "contains",
      "core::cmp:1.80"
    ],
    [
      "core::cmp:1.80",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "core:1.80",
      "contains",
      "core::convert:1.80"
    ],
    [
      "core::convert:1.80",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "core:1.80",
      "contains",
      "core::default:1.80"
    ],
    [
      "core::default:1.80",
      "has description",
      "The `Default` trait for types which may have meaningful default values."
    ],
    [
      "core:1.80",
      "contains",
      "core::f32:1.80"
    ],
    [
      "core::f32:1.80",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "core:1.80",
      "contains",
      "core::f64:1.80"
    ],
    [
      "core::f64:1.80",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "core:1.80",
      "contains",
      "core::ffi:1.80"
    ],
    [
      "core::ffi:1.80",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "core::ffi:1.80",
      "stable since",
      "1.30.0"
    ],
    [
      "core:1.80",
      "contains",
      "core::fmt:1.80"
    ],
    [
      "core::fmt:1.80",
      "has description",
      "Utilities for formatting and printing strings."
    ],
    [
      "core:1.80",
      "contains",
      "core::future:1.80"
    ],
    [
      "core::future:1.80",
      "has description",
      "Asynchronous values."
    ],
    [
      "core:1.80",
      "contains",
      "core::hash:1.80"
    ],
    [
      "core::hash:1.80",
      "has description",
      "Generic hashing support."
    ],
    [
      "core:1.80",
      "contains",
      "core::hint:1.80"
    ],
    [
      "core::hint:1.80",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "core:1.80",
      "contains",
      "core::i128:1.80"
    ],
    [
      "core::i128:1.80",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::i16:1.80"
    ],
    [
      "core::i16:1.80",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::i32:1.80"
    ],
    [
      "core::i32:1.80",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::i64:1.80"
    ],
    [
      "core::i64:1.80",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::i8:1.80"
    ],
    [
      "core::i8:1.80",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::intrinsics:1.80"
    ],
    [
      "core::intrinsics:1.80",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "core:1.80",
      "contains",
      "core::isize:1.80"
    ],
    [
      "core::isize:1.80",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::iter:1.80"
    ],
    [
      "core::iter:1.80",
      "has description",
      "Composable external iteration."
    ],
    [
      "core:1.80",
      "contains",
      "core::marker:1.80"
    ],
    [
      "core::marker:1.80",
      "has description",
      "Primitive traits and types representing basic properties of types."
    ],
    [
      "core:1.80",
      "contains",
      "core::mem:1.80"
    ],
    [
      "core::mem:1.80",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "core:1.80",
      "contains",
      "core::num:1.80"
    ],
    [
      "core::num:1.80",
      "has description",
      "Numeric traits and functions for the built-in numeric types."
    ],
    [
      "core:1.80",
      "contains",
      "core::ops:1.80"
    ],
    [
      "core::ops:1.80",
      "has description",
      "Overloadable operators."
    ],
    [
      "core:1.80",
      "contains",
      "core::option:1.80"
    ],
    [
      "core::option:1.80",
      "has description",
      "Optional values."
    ],
    [
      "core:1.80",
      "contains",
      "core::panic:1.80"
    ],
    [
      "core::panic:1.80",
      "has description",
      "Panic support in the standard library."
    ],
    [
      "core:1.80",
      "contains",
      "core::panicking:1.80"
    ],
    [
      "core::panicking:1.80",
      "has description",
      "Panic support for libcore"
    ],
    [
      "core:1.80",
      "contains",
      "core::pin:1.80"
    ],
    [
      "core::pin:1.80",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "core:1.80",
      "contains",
      "core::prelude:1.80"
    ],
    [
      "core::prelude:1.80",
      "has description",
      "The libcore prelude"
    ],
    [
      "core:1.80",
      "contains",
      "core::ptr:1.80"
    ],
    [
      "core::ptr:1.80",
      "has description",
      "Raw, unsafe pointers, `*const T`, and `*mut T`."
    ],
    [
      "core:1.80",
      "contains",
      "core::raw:1.80"
    ],
    [
      "core::raw:1.80",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "core:1.80",
      "contains",
      "core::result:1.80"
    ],
    [
      "core::result:1.80",
      "has description",
      "Error handling with the `Result` type."
    ],
    [
      "core:1.80",
      "contains",
      "core::slice:1.80"
    ],
    [
      "core::slice:1.80",
      "has description",
      "Slice management and manipulation"
    ],
    [
      "core:1.80",
      "contains",
      "core::str:1.80"
    ],
    [
      "core::str:1.80",
      "has description",
      "String manipulation"
    ],
    [
      "core:1.80",
      "contains",
      "core::sync:1.80"
    ],
    [
      "core::sync:1.80",
      "has description",
      "Synchronization primitives"
    ],
    [
      "core:1.80",
      "contains",
      "core::task:1.80"
    ],
    [
      "core::task:1.80",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "core:1.80",
      "contains",
      "core::time:1.80"
    ],
    [
      "core::time:1.80",
      "has description",
      "Temporal quantification."
    ],
    [
      "core:1.80",
      "contains",
      "core::u128:1.80"
    ],
    [
      "core::u128:1.80",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::u16:1.80"
    ],
    [
      "core::u16:1.80",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::u32:1.80"
    ],
    [
      "core::u32:1.80",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::u64:1.80"
    ],
    [
      "core::u64:1.80",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::u8:1.80"
    ],
    [
      "core::u8:1.80",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "core:1.80",
      "contains",
      "core::unicode:1.80"
    ],
    [
      "core::unicode:1.80",
      "has description",
      ""
    ],
    [
      "core:1.80",
      "contains",
      "core::usize:1.80"
    ],
    [
      "core::usize:1.80",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "core:1.80",
      "contains",
      "assert:1.80"
    ],
    [
      "assert:1.80",
      "is a",
      "macro"
    ],
    [
      "assert:1.80",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.80",
      "contains",
      "assert_eq:1.80"
    ],
    [
      "assert_eq:1.80",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.80",
      "has description",
      "Asserts that two expressions are equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.80",
      "contains",
      "assert_ne:1.80"
    ],
    [
      "assert_ne:1.80",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.80",
      "contains",
      "cfg:1.80"
    ],
    [
      "cfg:1.80",
      "is a",
      "macro"
    ],
    [
      "cfg:1.80",
      "has description",
      "Boolean evaluation of configuration flags, at compile-time."
    ],
    [
      "core:1.80",
      "contains",
      "column:1.80"
    ],
    [
      "column:1.80",
      "is a",
      "macro"
    ],
    [
      "column:1.80",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "core:1.80",
      "contains",
      "compile_error:1.80"
    ],
    [
      "compile_error:1.80",
      "is a",
      "macro"
    ],
    [
      "compile_error:1.80",
      "has description",
      "Unconditionally causes compilation to fail with the given error message when encountered."
    ],
    [
      "core:1.80",
      "contains",
      "concat:1.80"
    ],
    [
      "concat:1.80",
      "is a",
      "macro"
    ],
    [
      "concat:1.80",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "core:1.80",
      "contains",
      "concat_idents:1.80"
    ],
    [
      "concat_idents:1.80",
      "is a",
      "macro"
    ],
    [
      "concat_idents:1.80",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "core:1.80",
      "contains",
      "debug_assert:1.80"
    ],
    [
      "debug_assert:1.80",
      "is a",
      "macro"
    ],
    [
      "debug_assert:1.80",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.80",
      "contains",
      "debug_assert_eq:1.80"
    ],
    [
      "debug_assert_eq:1.80",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq:1.80",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "core:1.80",
      "contains",
      "debug_assert_ne:1.80"
    ],
    [
      "debug_assert_ne:1.80",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.80",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "core:1.80",
      "contains",
      "env:1.80"
    ],
    [
      "env:1.80",
      "is a",
      "macro"
    ],
    [
      "env:1.80",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "core:1.80",
      "contains",
      "file:1.80"
    ],
    [
      "file:1.80",
      "is a",
      "macro"
    ],
    [
      "file:1.80",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "core:1.80",
      "contains",
      "format_args:1.80"
    ],
    [
      "format_args:1.80",
      "is a",
      "macro"
    ],
    [
      "format_args:1.80",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "core:1.80",
      "contains",
      "include:1.80"
    ],
    [
      "include:1.80",
      "is a",
      "macro"
    ],
    [
      "include:1.80",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "core:1.80",
      "contains",
      "include_bytes:1.80"
    ],
    [
      "include_bytes:1.80",
      "is a",
      "macro"
    ],
    [
      "include_bytes:1.80",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "core:1.80",
      "contains",
      "include_str:1.80"
    ],
    [
      "include_str:1.80",
      "is a",
      "macro"
    ],
    [
      "include_str:1.80",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "core:1.80",
      "contains",
      "line:1.80"
    ],
    [
      "line:1.80",
      "is a",
      "macro"
    ],
    [
      "line:1.80",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "core:1.80",
      "contains",
      "module_path:1.80"
    ],
    [
      "module_path:1.80",
      "is a",
      "macro"
    ],
    [
      "module_path:1.80",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "core:1.80",
      "contains",
      "option_env:1.80"
    ],
    [
      "option_env:1.80",
      "is a",
      "macro"
    ],
    [
      "option_env:1.80",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "core::panic:1.80",
      "is a",
      "macro"
    ],
    [
      "core::panic:1.80",
      "has description",
      "Entry point of thread panic, for details, see std::macros"
    ],
    [
      "core:1.80",
      "contains",
      "stringify:1.80"
    ],
    [
      "stringify:1.80",
      "is a",
      "macro"
    ],
    [
      "stringify:1.80",
      "has description",
      "A macro which stringifies its arguments."
    ],
    [
      "core:1.80",
      "contains",
      "try:1.80"
    ],
    [
      "try:1.80",
      "is a",
      "macro"
    ],
    [
      "try:1.80",
      "has description",
      "Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."
    ],
    [
      "core:1.80",
      "contains",
      "unimplemented:1.80"
    ],
    [
      "unimplemented:1.80",
      "is a",
      "macro"
    ],
    [
      "unimplemented:1.80",
      "has description",
      "A standardized placeholder for marking unfinished code."
    ],
    [
      "core:1.80",
      "contains",
      "unreachable:1.80"
    ],
    [
      "unreachable:1.80",
      "is a",
      "macro"
    ],
    [
      "unreachable:1.80",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "core:1.80",
      "contains",
      "write:1.80"
    ],
    [
      "write:1.80",
      "is a",
      "macro"
    ],
    [
      "write:1.80",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "core:1.80",
      "contains",
      "writeln:1.80"
    ],
    [
      "writeln:1.80",
      "is a",
      "macro"
    ],
    [
      "writeln:1.80",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "core::ffi:1.80",
      "contains",
      "c_void:1.80"
    ],
    [
      "c_void:1.80",
      "is a",
      "enum"
    ],
    [
      "c_void:1.80",
      "has description",
      "Equivalent to C's void type when used as a pointer."
    ],
    [
      "core::alloc:1.80",
      "is a",
      "module"
    ],
    [
      "core::alloc:1.80",
      "has alias",
      "alloc"
    ],
    [
      "core::any:1.80",
      "is a",
      "module"
    ],
    [
      "core::any:1.80",
      "has alias",
      "any"
    ],
    [
      "core::arch:1.80",
      "is a",
      "module"
    ],
    [
      "core::arch:1.80",
      "has alias",
      "arch"
    ],
    [
      "core::array:1.80",
      "is a",
      "module"
    ],
    [
      "core::array:1.80",
      "has alias",
      "array"
    ],
    [
      "core::ascii:1.80",
      "is a",
      "module"
    ],
    [
      "core::ascii:1.80",
      "has alias",
      "ascii"
    ],
    [
      "core::borrow:1.80",
      "is a",
      "module"
    ],
    [
      "core::borrow:1.80",
      "has alias",
      "borrow"
    ],
    [
      "core::cell:1.80",
      "is a",
      "module"
    ],
    [
      "core::cell:1.80",
      "has alias",
      "cell"
    ],
    [
      "core::char:1.80",
      "is a",
      "module"
    ],
    [
      "core::char:1.80",
      "has alias",
      "char"
    ],
    [
      "core::clone:1.80",
      "is a",
      "module"
    ],
    [
      "core::clone:1.80",
      "has alias",
      "clone"
    ],
    [
      "core::cmp:1.80",
      "is a",
      "module"
    ],
    [
      "core::cmp:1.80",
      "has alias",
      "cmp"
    ],
    [
      "core::convert:1.80",
      "is a",
      "module"
    ],
    [
      "core::convert:1.80",
      "has alias",
      "convert"
    ],
    [
      "core::default:1.80",
      "is a",
      "module"
    ],
    [
      "core::default:1.80",
      "has alias",
      "default"
    ],
    [
      "core::f32:1.80",
      "is a",
      "module"
    ],
    [
      "core::f32:1.80",
      "has alias",
      "f32"
    ],
    [
      "core::f64:1.80",
      "is a",
      "module"
    ],
    [
      "core::f64:1.80",
      "has alias",
      "f64"
    ],
    [
      "core::ffi:1.80",
      "is a",
      "module"
    ],
    [
      "core::ffi:1.80",
      "has alias",
      "ffi"
    ],
    [
      "core::fmt:1.80",
      "is a",
      "module"
    ],
    [
      "core::fmt:1.80",
      "has alias",
      "fmt"
    ],
    [
      "core::future:1.80",
      "is a",
      "module"
    ],
    [
      "core::future:1.80",
      "has alias",
      "future"
    ],
    [
      "core::hash:1.80",
      "is a",
      "module"
    ],
    [
      "core::hash:1.80",
      "has alias",
      "hash"
    ],
    [
      "core::hint:1.80",
      "is a",
      "module"
    ],
    [
      "core::hint:1.80",
      "has alias",
      "hint"
    ],
    [
      "core::i128:1.80",
      "is a",
      "module"
    ],
    [
      "core::i128:1.80",
      "has alias",
      "i128"
    ],
    [
      "core::i16:1.80",
      "is a",
      "module"
    ],
    [
      "core::i16:1.80",
      "has alias",
      "i16"
    ],
    [
      "core::i32:1.80",
      "is a",
      "module"
    ],
    [
      "core::i32:1.80",
      "has alias",
      "i32"
    ],
    [
      "core::i64:1.80",
      "is a",
      "module"
    ],
    [
      "core::i64:1.80",
      "has alias",
      "i64"
    ],
    [
      "core::i8:1.80",
      "is a",
      "module"
    ],
    [
      "core::i8:1.80",
      "has alias",
      "i8"
    ],
    [
      "core::intrinsics:1.80",
      "is a",
      "module"
    ],
    [
      "core::intrinsics:1.80",
      "has alias",
      "intrinsics"
    ],
    [
      "core::isize:1.80",
      "is a",
      "module"
    ],
    [
      "core::isize:1.80",
      "has alias",
      "isize"
    ],
    [
      "core::iter:1.80",
      "is a",
      "module"
    ],
    [
      "core::iter:1.80",
      "has alias",
      "iter"
    ],
    [
      "core::marker:1.80",
      "is a",
      "module"
    ],
    [
      "core::marker:1.80",
      "has alias",
      "marker"
    ],
    [
      "core::mem:1.80",
      "is a",
      "module"
    ],
    [
      "core::mem:1.80",
      "has alias",
      "mem"
    ],
    [
      "core::num:1.80",
      "is a",
      "module"
    ],
    [
      "core::num:1.80",
      "has alias",
      "num"
    ],
    [
      "core::ops:1.80",
      "is a",
      "module"
    ],
    [
      "core::ops:1.80",
      "has alias",
      "ops"
    ],
    [
      "core::option:1.80",
      "is a",
      "module"
    ],
    [
      "core::option:1.80",
      "has alias",
      "option"
    ],
    [
      "core::panic:1.80",
      "is a",
      "module"
    ],
    [
      "core::panic:1.80",
      "has alias",
      "panic"
    ],
    [
      "core::panicking:1.80",
      "is a",
      "module"
    ],
    [
      "core::panicking:1.80",
      "has alias",
      "panicking"
    ],
    [
      "core::pin:1.80",
      "is a",
      "module"
    ],
    [
      "core::pin:1.80",
      "has alias",
      "pin"
    ],
    [
      "core::prelude:1.80",
      "is a",
      "module"
    ],
    [
      "core::prelude:1.80",
      "has alias",
      "prelude"
    ],
    [
      "core::ptr:1.80",
      "is a",
      "module"
    ],
    [
      "core::ptr:1.80",
      "has alias",
      "ptr"
    ],
    [
      "core::raw:1.80",
      "is a",
      "module"
    ],
    [
      "core::raw:1.80",
      "has alias",
      "raw"
    ],
    [
      "core::result:1.80",
      "is a",
      "module"
    ],
    [
      "core::result:1.80",
      "has alias",
      "result"
    ],
    [
      "core::slice:1.80",
      "is a",
      "module"
    ],
    [
      "core::slice:1.80",
      "has alias",
      "slice"
    ],
    [
      "core::str:1.80",
      "is a",
      "module"
    ],
    [
      "core::str:1.80",
      "has alias",
      "str"
    ],
    [
      "core::sync:1.80",
      "is a",
      "module"
    ],
    [
      "core::sync:1.80",
      "has alias",
      "sync"
    ],
    [
      "core::task:1.80",
      "is a",
      "module"
    ],
    [
      "core::task:1.80",
      "has alias",
      "task"
    ],
    [
      "core::time:1.80",
      "is a",
      "module"
    ],
    [
      "core::time:1.80",
      "has alias",
      "time"
    ],
    [
      "core::u128:1.80",
      "is a",
      "module"
    ],
    [
      "core::u128:1.80",
      "has alias",
      "u128"
    ],
    [
      "core::u16:1.80",
      "is a",
      "module"
    ],
    [
      "core::u16:1.80",
      "has alias",
      "u16"
    ],
    [
      "core::u32:1.80",
      "is a",
      "module"
    ],
    [
      "core::u32:1.80",
      "has alias",
      "u32"
    ],
    [
      "core::u64:1.80",
      "is a",
      "module"
    ],
    [
      "core::u64:1.80",
      "has alias",
      "u64"
    ],
    [
      "core::u8:1.80",
      "is a",
      "module"
    ],
    [
      "core::u8:1.80",
      "has alias",
      "u8"
    ],
    [
      "core::unicode:1.80",
      "is a",
      "module"
    ],
    [
      "core::unicode:1.80",
      "has alias",
      "unicode"
    ],
    [
      "core::usize:1.80",
      "is a",
      "module"
    ],
    [
      "core::usize:1.80",
      "has alias",
      "usize"
    ],
    [
      "core:1.80",
      "contains",
      "un:1.80"
    ],
    [
      "core::arch:1.80",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "core::intrinsics:1.80",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "core::ptr:1.80",
      "has description",
      "Manually manage memory through raw pointers."
    ],
    [
      "core::pin:1.80",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "core::slice:1.80",
      "has description",
      "Slice management and manipulation."
    ],
    [
      "core::str:1.80",
      "has description",
      "String manipulation."
    ],
    [
      "assert:1.80",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "cfg:1.80",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "column:1.80",
      "has description",
      "Expands to the column number at which it was invoked."
    ],
    [
      "compile_error:1.80",
      "has description",
      "Causes compilation to fail with the given error message when encountered."
    ],
    [
      "format_args:1.80",
      "has description",
      "Constructs parameters for the other string-formatting macros."
    ],
    [
      "core:1.80",
      "contains",
      "Clone:1.80"
    ],
    [
      "Clone:1.80",
      "is a",
      "macro"
    ],
    [
      "Clone:1.80",
      "has description",
      "Derive macro generating an impl of the trait `Clone`."
    ],
    [
      "core:1.80",
      "contains",
      "Copy:1.80"
    ],
    [
      "Copy:1.80",
      "is a",
      "macro"
    ],
    [
      "Copy:1.80",
      "has description",
      "Derive macro generating an impl of the trait `Copy`."
    ],
    [
      "core:1.80",
      "contains",
      "Debug:1.80"
    ],
    [
      "Debug:1.80",
      "is a",
      "macro"
    ],
    [
      "Debug:1.80",
      "has description",
      "Derive macro generating an impl of the trait `Debug`."
    ],
    [
      "core:1.80",
      "contains",
      "Default:1.80"
    ],
    [
      "Default:1.80",
      "is a",
      "macro"
    ],
    [
      "Default:1.80",
      "has description",
      "Derive macro generating an impl of the trait `Default`."
    ],
    [
      "concat_idents:1.80",
      "has description",
      "Concatenates identifiers into one identifier."
    ],
    [
      "debug_assert:1.80",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "env:1.80",
      "has description",
      "Inspects an environment variable at compile time."
    ],
    [
      "file:1.80",
      "has description",
      "Expands to the file name in which it was invoked."
    ],
    [
      "include:1.80",
      "has description",
      "Parses a file as an expression or an item according to the context."
    ],
    [
      "line:1.80",
      "has description",
      "Expands to the line number on which it was invoked."
    ],
    [
      "option_env:1.80",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "core::panic:1.80",
      "has description",
      "Panics the current thread."
    ],
    [
      "stringify:1.80",
      "has description",
      "Stringifies its arguments."
    ],
    [
      "try:1.80",
      "has description",
      "Unwraps a result or propagates its error."
    ],
    [
      "unimplemented:1.80",
      "has description",
      "Indicates unfinished code by panicking with a message of \"not yet implemented\"."
    ],
    [
      "unreachable:1.80",
      "has description",
      "Indicates unreachable code."
    ],
    [
      "write:1.80",
      "has description",
      "Writes formatted data into a buffer."
    ],
    [
      "core:1.80",
      "contains",
      "Eq:1.80"
    ],
    [
      "Eq:1.80",
      "is a",
      "macro"
    ],
    [
      "Eq:1.80",
      "has description",
      "Derive macro generating an impl of the trait `Eq`."
    ],
    [
      "core:1.80",
      "contains",
      "Hash:1.80"
    ],
    [
      "Hash:1.80",
      "is a",
      "macro"
    ],
    [
      "Hash:1.80",
      "has description",
      "Derive macro generating an impl of the trait `Hash`."
    ],
    [
      "core:1.80",
      "contains",
      "Ord:1.80"
    ],
    [
      "Ord:1.80",
      "is a",
      "macro"
    ],
    [
      "Ord:1.80",
      "has description",
      "Derive macro generating an impl of the trait `Ord`."
    ],
    [
      "core:1.80",
      "contains",
      "PartialEq:1.80"
    ],
    [
      "PartialEq:1.80",
      "is a",
      "macro"
    ],
    [
      "PartialEq:1.80",
      "has description",
      "Derive macro generating an impl of the trait `PartialEq`."
    ],
    [
      "core:1.80",
      "contains",
      "PartialOrd:1.80"
    ],
    [
      "PartialOrd:1.80",
      "is a",
      "macro"
    ],
    [
      "PartialOrd:1.80",
      "has description",
      "Derive macro generating an impl of the trait `PartialOrd`."
    ],
    [
      "core:1.80",
      "contains",
      "RustcDecodable:1.80"
    ],
    [
      "RustcDecodable:1.80",
      "is a",
      "macro"
    ],
    [
      "RustcDecodable:1.80",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.80",
      "contains",
      "RustcEncodable:1.80"
    ],
    [
      "RustcEncodable:1.80",
      "is a",
      "macro"
    ],
    [
      "RustcEncodable:1.80",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.80",
      "contains",
      "asm:1.80"
    ],
    [
      "asm:1.80",
      "is a",
      "macro"
    ],
    [
      "asm:1.80",
      "has description",
      "Inline assembly."
    ],
    [
      "core:1.80",
      "contains",
      "bench:1.80"
    ],
    [
      "bench:1.80",
      "is a",
      "macro"
    ],
    [
      "bench:1.80",
      "has description",
      "Attribute macro applied to a function to turn it into a benchmark test."
    ],
    [
      "core:1.80",
      "contains",
      "global_allocator:1.80"
    ],
    [
      "global_allocator:1.80",
      "is a",
      "macro"
    ],
    [
      "global_allocator:1.80",
      "has description",
      "Attribute macro applied to a static to register it as a global allocator."
    ],
    [
      "core:1.80",
      "contains",
      "global_asm:1.80"
    ],
    [
      "global_asm:1.80",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.80",
      "has description",
      "Module-level inline assembly."
    ],
    [
      "core:1.80",
      "contains",
      "log_syntax:1.80"
    ],
    [
      "log_syntax:1.80",
      "is a",
      "macro"
    ],
    [
      "log_syntax:1.80",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "core:1.80",
      "contains",
      "matches:1.80"
    ],
    [
      "matches:1.80",
      "is a",
      "macro"
    ],
    [
      "matches:1.80",
      "has description",
      "Returns whether the given expression matches any of the given patterns."
    ],
    [
      "core:1.80",
      "contains",
      "test:1.80"
    ],
    [
      "test:1.80",
      "is a",
      "macro"
    ],
    [
      "test:1.80",
      "has description",
      "Attribute macro applied to a function to turn it into a unit test."
    ],
    [
      "core:1.80",
      "contains",
      "test_case:1.80"
    ],
    [
      "test_case:1.80",
      "is a",
      "macro"
    ],
    [
      "test_case:1.80",
      "has description",
      "An implementation detail of the `#[test]` and `#[bench]` macros."
    ],
    [
      "core:1.80",
      "contains",
      "todo:1.80"
    ],
    [
      "todo:1.80",
      "is a",
      "macro"
    ],
    [
      "todo:1.80",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "core:1.80",
      "contains",
      "trace_macros:1.80"
    ],
    [
      "trace_macros:1.80",
      "is a",
      "macro"
    ],
    [
      "trace_macros:1.80",
      "has description",
      "Enables or disables tracing functionality used for debugging other macros."
    ],
    [
      "unimplemented:1.80",
      "has description",
      "Indicates unfinished code by panicking with a message of 'not yet implemented'."
    ],
    [
      "core:1.80",
      "contains",
      "core::lazy:1.80"
    ],
    [
      "core::lazy:1.80",
      "is a",
      "module"
    ],
    [
      "core::lazy:1.80",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "core:1.80",
      "contains",
      "core::primitive:1.80"
    ],
    [
      "core::primitive:1.80",
      "is a",
      "module"
    ],
    [
      "core::primitive:1.80",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "core::ffi:1.80",
      "has description",
      "Utilities related to foreign function interface (FFI) bindings."
    ],
    [
      "core::hint:1.80",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "include_str:1.80",
      "has description",
      "Includes a UTF-8 encoded file as a string."
    ],
    [
      "core::array:1.80",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should be able to generalize to all lengths."
    ],
    [
      "core:1.80",
      "contains",
      "cfg_accessible:1.80"
    ],
    [
      "cfg_accessible:1.80",
      "is a",
      "macro"
    ],
    [
      "cfg_accessible:1.80",
      "has description",
      "Keeps the item it's applied to if the passed path is accessible, and removes it otherwise."
    ],
    [
      "core:1.80",
      "contains",
      "llvm_asm:1.80"
    ],
    [
      "llvm_asm:1.80",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.80",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "core:1.80",
      "contains",
      "raw_const:1.80"
    ],
    [
      "raw_const:1.80",
      "is a",
      "macro"
    ],
    [
      "raw_const:1.80",
      "has description",
      "Create a `const` raw pointer to a place, without creating an intermediate reference."
    ],
    [
      "core:1.80",
      "contains",
      "raw_mut:1.80"
    ],
    [
      "raw_mut:1.80",
      "is a",
      "macro"
    ],
    [
      "raw_mut:1.80",
      "has description",
      "Create a `mut` raw pointer to a place, without creating an intermediate reference."
    ],
    [
      "core:1.80",
      "contains",
      "ready:1.80"
    ],
    [
      "ready:1.80",
      "is a",
      "macro"
    ],
    [
      "ready:1.80",
      "has description",
      "Extracts the successful type of a `Poll<T>`."
    ],
    [
      "unimplemented:1.80",
      "has description",
      "Indicates unimplemented code by panicking with a message of \"not implemented\"."
    ],
    [
      "core::array:1.80",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually, we should be able to generalize to all lengths."
    ],
    [
      "unimplemented:1.80",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'."
    ],
    [
      "core::lazy:1.80",
      "has alias",
      "lazy"
    ],
    [
      "core::primitive:1.80",
      "has alias",
      "primitive"
    ],
    [
      "ready:1.80",
      "has description",
      "Extracts the successful type of a `Poll<T>`.`"
    ],
    [
      "std::alloc::alloc:1.80",
      "has feature",
      "unsafe:1.80"
    ],
    [
      "core::ffi:1.80",
      "has description",
      "Platform-specific types, as defined by C. Code that interacts via FFI will almost certainly be using the base types provided by C, which aren’t nearly as nicely defined as Rust’s primitive types. This module provides types which will match those defined by C, so that code that interacts with C will refer to the correct types."
    ],
    [
      "core::ffi:1.80",
      "contains",
      "VaList:1.80"
    ],
    [
      "VaList:1.80",
      "is a",
      "struct"
    ],
    [
      "VaList:1.80",
      "has description",
      "A wrapper for a va_list"
    ],
    [
      "VaList:1.80",
      "has feature",
      "Experimental:1.80"
    ],
    [
      "core::ffi:1.80",
      "contains",
      "VaListImpl:1.80"
    ],
    [
      "VaListImpl:1.80",
      "is a",
      "struct"
    ],
    [
      "VaListImpl:1.80",
      "has description",
      "Basic implementation of a va_list"
    ],
    [
      "VaListImpl:1.80",
      "has feature",
      "Experimental:1.80"
    ],
    [
      "core::ffi:1.80",
      "contains",
      "CStr:1.80"
    ],
    [
      "CStr:1.80",
      "is a",
      "struct"
    ],
    [
      "CStr:1.80",
      "has description",
      "Representation of a borrowed C string."
    ],
    [
      "core::ffi:1.80",
      "contains",
      "FromBytesUntilNulError:1.80"
    ],
    [
      "FromBytesUntilNulError:1.80",
      "is a",
      "struct"
    ],
    [
      "FromBytesUntilNulError:1.80",
      "has description",
      "An error indicating that no nul byte was present."
    ],
    [
      "core::ffi:1.80",
      "contains",
      "FromBytesWithNulError:1.80"
    ],
    [
      "FromBytesWithNulError:1.80",
      "is a",
      "struct"
    ],
    [
      "FromBytesWithNulError:1.80",
      "has description",
      "An error indicating that a nul byte was not in the expected position."
    ],
    [
      "core::ffi:1.80",
      "contains",
      "NonZero_c_char:1.80"
    ],
    [
      "NonZero_c_char:1.80",
      "is a",
      "type"
    ],
    [
      "NonZero_c_char:1.80",
      "has description",
      "Type alias for NonZero version of c_char"
    ],
    [
      "NonZero_c_char:1.80",
      "has feature",
      "Experimental:1.80"
    ],
    [
      "c_void:1.80",
      "has description",
      "Equivalent to C’s void type when used as a pointer."
    ],
    [
      "core::ffi:1.80",
      "has description",
      "Platform-specific types, as defined by C."
    ],
    [
      "CStr:1.80",
      "has description",
      "Representation of a borrowed C string"
    ],
    [
      "c_void:1.80",
      "has description",
      "Equivalent to C's void type when used as a pointer"
    ],
    [
      "FromBytesUntilNulError:1.80",
      "has description",
      "An error indicating that no nul byte was present"
    ],
    [
      "c_void:1.80",
      "has description",
      "Equivalent to C’s void type when used as a pointer"
    ],
    [
      "core:1.80",
      "has version",
      "1.80.1:1.80"
    ],
    [
      "core:1.50",
      "contains",
      "core::alloc:1.50"
    ],
    [
      "core::alloc:1.50",
      "has description",
      "Memory allocation APIs"
    ],
    [
      "core:1.50",
      "contains",
      "core::any:1.50"
    ],
    [
      "core::any:1.50",
      "has description",
      "This module implements the `Any` trait, which enables dynamic typing of any `'static` type through runtime reflection."
    ],
    [
      "core:1.50",
      "contains",
      "core::arch:1.50"
    ],
    [
      "core::arch:1.50",
      "has description",
      "Platform dependent vendor intrinsics."
    ],
    [
      "core:1.50",
      "contains",
      "core::array:1.50"
    ],
    [
      "core::array:1.50",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should able to generalize to all lengths."
    ],
    [
      "core:1.50",
      "contains",
      "core::ascii:1.50"
    ],
    [
      "core::ascii:1.50",
      "has description",
      "Operations on ASCII strings and characters."
    ],
    [
      "core:1.50",
      "contains",
      "core::borrow:1.50"
    ],
    [
      "core::borrow:1.50",
      "has description",
      "A module for working with borrowed data."
    ],
    [
      "core:1.50",
      "contains",
      "core::cell:1.50"
    ],
    [
      "core::cell:1.50",
      "has description",
      "Shareable mutable containers."
    ],
    [
      "core:1.50",
      "contains",
      "core::char:1.50"
    ],
    [
      "core::char:1.50",
      "has description",
      "A character type."
    ],
    [
      "core:1.50",
      "contains",
      "core::clone:1.50"
    ],
    [
      "core::clone:1.50",
      "has description",
      "The `Clone` trait for types that cannot be 'implicitly copied'."
    ],
    [
      "core:1.50",
      "contains",
      "core::cmp:1.50"
    ],
    [
      "core::cmp:1.50",
      "has description",
      "Functionality for ordering and comparison."
    ],
    [
      "core:1.50",
      "contains",
      "core::convert:1.50"
    ],
    [
      "core::convert:1.50",
      "has description",
      "Traits for conversions between types."
    ],
    [
      "core:1.50",
      "contains",
      "core::default:1.50"
    ],
    [
      "core::default:1.50",
      "has description",
      "The `Default` trait for types which may have meaningful default values."
    ],
    [
      "core:1.50",
      "contains",
      "core::f32:1.50"
    ],
    [
      "core::f32:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f32` floating point data type."
    ],
    [
      "core:1.50",
      "contains",
      "core::f64:1.50"
    ],
    [
      "core::f64:1.50",
      "has description",
      "This module provides constants which are specific to the implementation of the `f64` floating point data type."
    ],
    [
      "core:1.50",
      "contains",
      "core::ffi:1.50"
    ],
    [
      "core::ffi:1.50",
      "has description",
      "Utilities related to FFI bindings."
    ],
    [
      "core::ffi:1.50",
      "stable since",
      "1.30.0"
    ],
    [
      "core:1.50",
      "contains",
      "core::fmt:1.50"
    ],
    [
      "core::fmt:1.50",
      "has description",
      "Utilities for formatting and printing strings."
    ],
    [
      "core:1.50",
      "contains",
      "core::future:1.50"
    ],
    [
      "core::future:1.50",
      "has description",
      "Asynchronous values."
    ],
    [
      "core:1.50",
      "contains",
      "core::hash:1.50"
    ],
    [
      "core::hash:1.50",
      "has description",
      "Generic hashing support."
    ],
    [
      "core:1.50",
      "contains",
      "core::hint:1.50"
    ],
    [
      "core::hint:1.50",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized."
    ],
    [
      "core:1.50",
      "contains",
      "core::i128:1.50"
    ],
    [
      "core::i128:1.50",
      "has description",
      "The 128-bit signed integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::i16:1.50"
    ],
    [
      "core::i16:1.50",
      "has description",
      "The 16-bit signed integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::i32:1.50"
    ],
    [
      "core::i32:1.50",
      "has description",
      "The 32-bit signed integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::i64:1.50"
    ],
    [
      "core::i64:1.50",
      "has description",
      "The 64-bit signed integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::i8:1.50"
    ],
    [
      "core::i8:1.50",
      "has description",
      "The 8-bit signed integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::intrinsics:1.50"
    ],
    [
      "core::intrinsics:1.50",
      "has description",
      "rustc compiler intrinsics."
    ],
    [
      "core:1.50",
      "contains",
      "core::isize:1.50"
    ],
    [
      "core::isize:1.50",
      "has description",
      "The pointer-sized signed integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::iter:1.50"
    ],
    [
      "core::iter:1.50",
      "has description",
      "Composable external iteration."
    ],
    [
      "core:1.50",
      "contains",
      "core::marker:1.50"
    ],
    [
      "core::marker:1.50",
      "has description",
      "Primitive traits and types representing basic properties of types."
    ],
    [
      "core:1.50",
      "contains",
      "core::mem:1.50"
    ],
    [
      "core::mem:1.50",
      "has description",
      "Basic functions for dealing with memory."
    ],
    [
      "core:1.50",
      "contains",
      "core::num:1.50"
    ],
    [
      "core::num:1.50",
      "has description",
      "Numeric traits and functions for the built-in numeric types."
    ],
    [
      "core:1.50",
      "contains",
      "core::ops:1.50"
    ],
    [
      "core::ops:1.50",
      "has description",
      "Overloadable operators."
    ],
    [
      "core:1.50",
      "contains",
      "core::option:1.50"
    ],
    [
      "core::option:1.50",
      "has description",
      "Optional values."
    ],
    [
      "core:1.50",
      "contains",
      "core::panic:1.50"
    ],
    [
      "core::panic:1.50",
      "has description",
      "Panic support in the standard library."
    ],
    [
      "core:1.50",
      "contains",
      "core::panicking:1.50"
    ],
    [
      "core::panicking:1.50",
      "has description",
      "Panic support for libcore"
    ],
    [
      "core:1.50",
      "contains",
      "core::pin:1.50"
    ],
    [
      "core::pin:1.50",
      "has description",
      "Types which pin data to its location in memory"
    ],
    [
      "core:1.50",
      "contains",
      "core::prelude:1.50"
    ],
    [
      "core::prelude:1.50",
      "has description",
      "The libcore prelude"
    ],
    [
      "core:1.50",
      "contains",
      "core::ptr:1.50"
    ],
    [
      "core::ptr:1.50",
      "has description",
      "Raw, unsafe pointers, `*const T`, and `*mut T`."
    ],
    [
      "core:1.50",
      "contains",
      "core::raw:1.50"
    ],
    [
      "core::raw:1.50",
      "has description",
      "Contains struct definitions for the layout of compiler built-in types."
    ],
    [
      "core:1.50",
      "contains",
      "core::result:1.50"
    ],
    [
      "core::result:1.50",
      "has description",
      "Error handling with the `Result` type."
    ],
    [
      "core:1.50",
      "contains",
      "core::slice:1.50"
    ],
    [
      "core::slice:1.50",
      "has description",
      "Slice management and manipulation"
    ],
    [
      "core:1.50",
      "contains",
      "core::str:1.50"
    ],
    [
      "core::str:1.50",
      "has description",
      "String manipulation"
    ],
    [
      "core:1.50",
      "contains",
      "core::sync:1.50"
    ],
    [
      "core::sync:1.50",
      "has description",
      "Synchronization primitives"
    ],
    [
      "core:1.50",
      "contains",
      "core::task:1.50"
    ],
    [
      "core::task:1.50",
      "has description",
      "Types and Traits for working with asynchronous tasks."
    ],
    [
      "core:1.50",
      "contains",
      "core::time:1.50"
    ],
    [
      "core::time:1.50",
      "has description",
      "Temporal quantification."
    ],
    [
      "core:1.50",
      "contains",
      "core::u128:1.50"
    ],
    [
      "core::u128:1.50",
      "has description",
      "The 128-bit unsigned integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::u16:1.50"
    ],
    [
      "core::u16:1.50",
      "has description",
      "The 16-bit unsigned integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::u32:1.50"
    ],
    [
      "core::u32:1.50",
      "has description",
      "The 32-bit unsigned integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::u64:1.50"
    ],
    [
      "core::u64:1.50",
      "has description",
      "The 64-bit unsigned integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::u8:1.50"
    ],
    [
      "core::u8:1.50",
      "has description",
      "The 8-bit unsigned integer type."
    ],
    [
      "core:1.50",
      "contains",
      "core::unicode:1.50"
    ],
    [
      "core::unicode:1.50",
      "has description",
      ""
    ],
    [
      "core:1.50",
      "contains",
      "core::usize:1.50"
    ],
    [
      "core::usize:1.50",
      "has description",
      "The pointer-sized unsigned integer type."
    ],
    [
      "core:1.50",
      "contains",
      "assert:1.50"
    ],
    [
      "assert:1.50",
      "is a",
      "macro"
    ],
    [
      "assert:1.50",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.50",
      "contains",
      "assert_eq:1.50"
    ],
    [
      "assert_eq:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_eq:1.50",
      "has description",
      "Asserts that two expressions are equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.50",
      "contains",
      "assert_ne:1.50"
    ],
    [
      "assert_ne:1.50",
      "is a",
      "macro"
    ],
    [
      "assert_ne:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other (using [`PartialEq`])."
    ],
    [
      "core:1.50",
      "contains",
      "cfg:1.50"
    ],
    [
      "cfg:1.50",
      "is a",
      "macro"
    ],
    [
      "cfg:1.50",
      "has description",
      "Boolean evaluation of configuration flags, at compile-time."
    ],
    [
      "core:1.50",
      "contains",
      "column:1.50"
    ],
    [
      "column:1.50",
      "is a",
      "macro"
    ],
    [
      "column:1.50",
      "has description",
      "A macro which expands to the column number on which it was invoked."
    ],
    [
      "core:1.50",
      "contains",
      "compile_error:1.50"
    ],
    [
      "compile_error:1.50",
      "is a",
      "macro"
    ],
    [
      "compile_error:1.50",
      "has description",
      "Unconditionally causes compilation to fail with the given error message when encountered."
    ],
    [
      "core:1.50",
      "contains",
      "concat:1.50"
    ],
    [
      "concat:1.50",
      "is a",
      "macro"
    ],
    [
      "concat:1.50",
      "has description",
      "Concatenates literals into a static string slice."
    ],
    [
      "core:1.50",
      "contains",
      "concat_idents:1.50"
    ],
    [
      "concat_idents:1.50",
      "is a",
      "macro"
    ],
    [
      "concat_idents:1.50",
      "has description",
      "Concatenate identifiers into one identifier."
    ],
    [
      "core:1.50",
      "contains",
      "debug_assert:1.50"
    ],
    [
      "debug_assert:1.50",
      "is a",
      "macro"
    ],
    [
      "debug_assert:1.50",
      "has description",
      "Ensure that a boolean expression is `true` at runtime."
    ],
    [
      "core:1.50",
      "contains",
      "debug_assert_eq:1.50"
    ],
    [
      "debug_assert_eq:1.50",
      "is a",
      "macro"
    ],
    [
      "debug_assert_eq:1.50",
      "has description",
      "Asserts that two expressions are equal to each other."
    ],
    [
      "core:1.50",
      "contains",
      "debug_assert_ne:1.50"
    ],
    [
      "debug_assert_ne:1.50",
      "is a",
      "macro"
    ],
    [
      "debug_assert_ne:1.50",
      "has description",
      "Asserts that two expressions are not equal to each other."
    ],
    [
      "core:1.50",
      "contains",
      "env:1.50"
    ],
    [
      "env:1.50",
      "is a",
      "macro"
    ],
    [
      "env:1.50",
      "has description",
      "Inspect an environment variable at compile time."
    ],
    [
      "core:1.50",
      "contains",
      "file:1.50"
    ],
    [
      "file:1.50",
      "is a",
      "macro"
    ],
    [
      "file:1.50",
      "has description",
      "A macro which expands to the file name from which it was invoked."
    ],
    [
      "core:1.50",
      "contains",
      "format_args:1.50"
    ],
    [
      "format_args:1.50",
      "is a",
      "macro"
    ],
    [
      "format_args:1.50",
      "has description",
      "The core macro for formatted string creation & output."
    ],
    [
      "core:1.50",
      "contains",
      "include:1.50"
    ],
    [
      "include:1.50",
      "is a",
      "macro"
    ],
    [
      "include:1.50",
      "has description",
      "Parse a file as an expression or an item according to the context."
    ],
    [
      "core:1.50",
      "contains",
      "include_bytes:1.50"
    ],
    [
      "include_bytes:1.50",
      "is a",
      "macro"
    ],
    [
      "include_bytes:1.50",
      "has description",
      "Includes a file as a reference to a byte array."
    ],
    [
      "core:1.50",
      "contains",
      "include_str:1.50"
    ],
    [
      "include_str:1.50",
      "is a",
      "macro"
    ],
    [
      "include_str:1.50",
      "has description",
      "Includes a utf8-encoded file as a string."
    ],
    [
      "core:1.50",
      "contains",
      "line:1.50"
    ],
    [
      "line:1.50",
      "is a",
      "macro"
    ],
    [
      "line:1.50",
      "has description",
      "A macro which expands to the line number on which it was invoked."
    ],
    [
      "core:1.50",
      "contains",
      "module_path:1.50"
    ],
    [
      "module_path:1.50",
      "is a",
      "macro"
    ],
    [
      "module_path:1.50",
      "has description",
      "Expands to a string that represents the current module path."
    ],
    [
      "core:1.50",
      "contains",
      "option_env:1.50"
    ],
    [
      "option_env:1.50",
      "is a",
      "macro"
    ],
    [
      "option_env:1.50",
      "has description",
      "Optionally inspect an environment variable at compile time."
    ],
    [
      "core::panic:1.50",
      "is a",
      "macro"
    ],
    [
      "core::panic:1.50",
      "has description",
      "Entry point of thread panic, for details, see std::macros"
    ],
    [
      "core:1.50",
      "contains",
      "stringify:1.50"
    ],
    [
      "stringify:1.50",
      "is a",
      "macro"
    ],
    [
      "stringify:1.50",
      "has description",
      "A macro which stringifies its arguments."
    ],
    [
      "core:1.50",
      "contains",
      "try:1.50"
    ],
    [
      "try:1.50",
      "is a",
      "macro"
    ],
    [
      "try:1.50",
      "has description",
      "Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."
    ],
    [
      "core:1.50",
      "contains",
      "unimplemented:1.50"
    ],
    [
      "unimplemented:1.50",
      "is a",
      "macro"
    ],
    [
      "unimplemented:1.50",
      "has description",
      "A standardized placeholder for marking unfinished code."
    ],
    [
      "core:1.50",
      "contains",
      "unreachable:1.50"
    ],
    [
      "unreachable:1.50",
      "is a",
      "macro"
    ],
    [
      "unreachable:1.50",
      "has description",
      "A utility macro for indicating unreachable code."
    ],
    [
      "core:1.50",
      "contains",
      "write:1.50"
    ],
    [
      "write:1.50",
      "is a",
      "macro"
    ],
    [
      "write:1.50",
      "has description",
      "Write formatted data into a buffer."
    ],
    [
      "core:1.50",
      "contains",
      "writeln:1.50"
    ],
    [
      "writeln:1.50",
      "is a",
      "macro"
    ],
    [
      "writeln:1.50",
      "has description",
      "Write formatted data into a buffer, with a newline appended."
    ],
    [
      "core::ffi:1.50",
      "contains",
      "c_void:1.50"
    ],
    [
      "c_void:1.50",
      "is a",
      "enum"
    ],
    [
      "c_void:1.50",
      "has description",
      "Equivalent to C's void type when used as a pointer."
    ],
    [
      "core::alloc:1.50",
      "is a",
      "module"
    ],
    [
      "core::alloc:1.50",
      "has alias",
      "alloc"
    ],
    [
      "core::any:1.50",
      "is a",
      "module"
    ],
    [
      "core::any:1.50",
      "has alias",
      "any"
    ],
    [
      "core::arch:1.50",
      "is a",
      "module"
    ],
    [
      "core::arch:1.50",
      "has alias",
      "arch"
    ],
    [
      "core::array:1.50",
      "is a",
      "module"
    ],
    [
      "core::array:1.50",
      "has alias",
      "array"
    ],
    [
      "core::ascii:1.50",
      "is a",
      "module"
    ],
    [
      "core::ascii:1.50",
      "has alias",
      "ascii"
    ],
    [
      "core::borrow:1.50",
      "is a",
      "module"
    ],
    [
      "core::borrow:1.50",
      "has alias",
      "borrow"
    ],
    [
      "core::cell:1.50",
      "is a",
      "module"
    ],
    [
      "core::cell:1.50",
      "has alias",
      "cell"
    ],
    [
      "core::char:1.50",
      "is a",
      "module"
    ],
    [
      "core::char:1.50",
      "has alias",
      "char"
    ],
    [
      "core::clone:1.50",
      "is a",
      "module"
    ],
    [
      "core::clone:1.50",
      "has alias",
      "clone"
    ],
    [
      "core::cmp:1.50",
      "is a",
      "module"
    ],
    [
      "core::cmp:1.50",
      "has alias",
      "cmp"
    ],
    [
      "core::convert:1.50",
      "is a",
      "module"
    ],
    [
      "core::convert:1.50",
      "has alias",
      "convert"
    ],
    [
      "core::default:1.50",
      "is a",
      "module"
    ],
    [
      "core::default:1.50",
      "has alias",
      "default"
    ],
    [
      "core::f32:1.50",
      "is a",
      "module"
    ],
    [
      "core::f32:1.50",
      "has alias",
      "f32"
    ],
    [
      "core::f64:1.50",
      "is a",
      "module"
    ],
    [
      "core::f64:1.50",
      "has alias",
      "f64"
    ],
    [
      "core::ffi:1.50",
      "is a",
      "module"
    ],
    [
      "core::ffi:1.50",
      "has alias",
      "ffi"
    ],
    [
      "core::fmt:1.50",
      "is a",
      "module"
    ],
    [
      "core::fmt:1.50",
      "has alias",
      "fmt"
    ],
    [
      "core::future:1.50",
      "is a",
      "module"
    ],
    [
      "core::future:1.50",
      "has alias",
      "future"
    ],
    [
      "core::hash:1.50",
      "is a",
      "module"
    ],
    [
      "core::hash:1.50",
      "has alias",
      "hash"
    ],
    [
      "core::hint:1.50",
      "is a",
      "module"
    ],
    [
      "core::hint:1.50",
      "has alias",
      "hint"
    ],
    [
      "core::i128:1.50",
      "is a",
      "module"
    ],
    [
      "core::i128:1.50",
      "has alias",
      "i128"
    ],
    [
      "core::i16:1.50",
      "is a",
      "module"
    ],
    [
      "core::i16:1.50",
      "has alias",
      "i16"
    ],
    [
      "core::i32:1.50",
      "is a",
      "module"
    ],
    [
      "core::i32:1.50",
      "has alias",
      "i32"
    ],
    [
      "core::i64:1.50",
      "is a",
      "module"
    ],
    [
      "core::i64:1.50",
      "has alias",
      "i64"
    ],
    [
      "core::i8:1.50",
      "is a",
      "module"
    ],
    [
      "core::i8:1.50",
      "has alias",
      "i8"
    ],
    [
      "core::intrinsics:1.50",
      "is a",
      "module"
    ],
    [
      "core::intrinsics:1.50",
      "has alias",
      "intrinsics"
    ],
    [
      "core::isize:1.50",
      "is a",
      "module"
    ],
    [
      "core::isize:1.50",
      "has alias",
      "isize"
    ],
    [
      "core::iter:1.50",
      "is a",
      "module"
    ],
    [
      "core::iter:1.50",
      "has alias",
      "iter"
    ],
    [
      "core::marker:1.50",
      "is a",
      "module"
    ],
    [
      "core::marker:1.50",
      "has alias",
      "marker"
    ],
    [
      "core::mem:1.50",
      "is a",
      "module"
    ],
    [
      "core::mem:1.50",
      "has alias",
      "mem"
    ],
    [
      "core::num:1.50",
      "is a",
      "module"
    ],
    [
      "core::num:1.50",
      "has alias",
      "num"
    ],
    [
      "core::ops:1.50",
      "is a",
      "module"
    ],
    [
      "core::ops:1.50",
      "has alias",
      "ops"
    ],
    [
      "core::option:1.50",
      "is a",
      "module"
    ],
    [
      "core::option:1.50",
      "has alias",
      "option"
    ],
    [
      "core::panic:1.50",
      "is a",
      "module"
    ],
    [
      "core::panic:1.50",
      "has alias",
      "panic"
    ],
    [
      "core::panicking:1.50",
      "is a",
      "module"
    ],
    [
      "core::panicking:1.50",
      "has alias",
      "panicking"
    ],
    [
      "core::pin:1.50",
      "is a",
      "module"
    ],
    [
      "core::pin:1.50",
      "has alias",
      "pin"
    ],
    [
      "core::prelude:1.50",
      "is a",
      "module"
    ],
    [
      "core::prelude:1.50",
      "has alias",
      "prelude"
    ],
    [
      "core::ptr:1.50",
      "is a",
      "module"
    ],
    [
      "core::ptr:1.50",
      "has alias",
      "ptr"
    ],
    [
      "core::raw:1.50",
      "is a",
      "module"
    ],
    [
      "core::raw:1.50",
      "has alias",
      "raw"
    ],
    [
      "core::result:1.50",
      "is a",
      "module"
    ],
    [
      "core::result:1.50",
      "has alias",
      "result"
    ],
    [
      "core::slice:1.50",
      "is a",
      "module"
    ],
    [
      "core::slice:1.50",
      "has alias",
      "slice"
    ],
    [
      "core::str:1.50",
      "is a",
      "module"
    ],
    [
      "core::str:1.50",
      "has alias",
      "str"
    ],
    [
      "core::sync:1.50",
      "is a",
      "module"
    ],
    [
      "core::sync:1.50",
      "has alias",
      "sync"
    ],
    [
      "core::task:1.50",
      "is a",
      "module"
    ],
    [
      "core::task:1.50",
      "has alias",
      "task"
    ],
    [
      "core::time:1.50",
      "is a",
      "module"
    ],
    [
      "core::time:1.50",
      "has alias",
      "time"
    ],
    [
      "core::u128:1.50",
      "is a",
      "module"
    ],
    [
      "core::u128:1.50",
      "has alias",
      "u128"
    ],
    [
      "core::u16:1.50",
      "is a",
      "module"
    ],
    [
      "core::u16:1.50",
      "has alias",
      "u16"
    ],
    [
      "core::u32:1.50",
      "is a",
      "module"
    ],
    [
      "core::u32:1.50",
      "has alias",
      "u32"
    ],
    [
      "core::u64:1.50",
      "is a",
      "module"
    ],
    [
      "core::u64:1.50",
      "has alias",
      "u64"
    ],
    [
      "core::u8:1.50",
      "is a",
      "module"
    ],
    [
      "core::u8:1.50",
      "has alias",
      "u8"
    ],
    [
      "core::unicode:1.50",
      "is a",
      "module"
    ],
    [
      "core::unicode:1.50",
      "has alias",
      "unicode"
    ],
    [
      "core::usize:1.50",
      "is a",
      "module"
    ],
    [
      "core::usize:1.50",
      "has alias",
      "usize"
    ],
    [
      "core:1.50",
      "contains",
      "un:1.50"
    ],
    [
      "core::arch:1.50",
      "has description",
      "SIMD and vendor intrinsics module."
    ],
    [
      "core::intrinsics:1.50",
      "has description",
      "Compiler intrinsics."
    ],
    [
      "core::ptr:1.50",
      "has description",
      "Manually manage memory through raw pointers."
    ],
    [
      "core::pin:1.50",
      "has description",
      "Types that pin data to its location in memory."
    ],
    [
      "core::slice:1.50",
      "has description",
      "Slice management and manipulation."
    ],
    [
      "core::str:1.50",
      "has description",
      "String manipulation."
    ],
    [
      "assert:1.50",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "cfg:1.50",
      "has description",
      "Evaluates boolean combinations of configuration flags at compile-time."
    ],
    [
      "column:1.50",
      "has description",
      "Expands to the column number at which it was invoked."
    ],
    [
      "compile_error:1.50",
      "has description",
      "Causes compilation to fail with the given error message when encountered."
    ],
    [
      "format_args:1.50",
      "has description",
      "Constructs parameters for the other string-formatting macros."
    ],
    [
      "core:1.50",
      "contains",
      "Clone:1.50"
    ],
    [
      "Clone:1.50",
      "is a",
      "macro"
    ],
    [
      "Clone:1.50",
      "has description",
      "Derive macro generating an impl of the trait `Clone`."
    ],
    [
      "core:1.50",
      "contains",
      "Copy:1.50"
    ],
    [
      "Copy:1.50",
      "is a",
      "macro"
    ],
    [
      "Copy:1.50",
      "has description",
      "Derive macro generating an impl of the trait `Copy`."
    ],
    [
      "core:1.50",
      "contains",
      "Debug:1.50"
    ],
    [
      "Debug:1.50",
      "is a",
      "macro"
    ],
    [
      "Debug:1.50",
      "has description",
      "Derive macro generating an impl of the trait `Debug`."
    ],
    [
      "core:1.50",
      "contains",
      "Default:1.50"
    ],
    [
      "Default:1.50",
      "is a",
      "macro"
    ],
    [
      "Default:1.50",
      "has description",
      "Derive macro generating an impl of the trait `Default`."
    ],
    [
      "concat_idents:1.50",
      "has description",
      "Concatenates identifiers into one identifier."
    ],
    [
      "debug_assert:1.50",
      "has description",
      "Asserts that a boolean expression is `true` at runtime."
    ],
    [
      "env:1.50",
      "has description",
      "Inspects an environment variable at compile time."
    ],
    [
      "file:1.50",
      "has description",
      "Expands to the file name in which it was invoked."
    ],
    [
      "include:1.50",
      "has description",
      "Parses a file as an expression or an item according to the context."
    ],
    [
      "line:1.50",
      "has description",
      "Expands to the line number on which it was invoked."
    ],
    [
      "option_env:1.50",
      "has description",
      "Optionally inspects an environment variable at compile time."
    ],
    [
      "core::panic:1.50",
      "has description",
      "Panics the current thread."
    ],
    [
      "stringify:1.50",
      "has description",
      "Stringifies its arguments."
    ],
    [
      "try:1.50",
      "has description",
      "Unwraps a result or propagates its error."
    ],
    [
      "unimplemented:1.50",
      "has description",
      "Indicates unfinished code by panicking with a message of \"not yet implemented\"."
    ],
    [
      "unreachable:1.50",
      "has description",
      "Indicates unreachable code."
    ],
    [
      "write:1.50",
      "has description",
      "Writes formatted data into a buffer."
    ],
    [
      "core:1.50",
      "contains",
      "Eq:1.50"
    ],
    [
      "Eq:1.50",
      "is a",
      "macro"
    ],
    [
      "Eq:1.50",
      "has description",
      "Derive macro generating an impl of the trait `Eq`."
    ],
    [
      "core:1.50",
      "contains",
      "Hash:1.50"
    ],
    [
      "Hash:1.50",
      "is a",
      "macro"
    ],
    [
      "Hash:1.50",
      "has description",
      "Derive macro generating an impl of the trait `Hash`."
    ],
    [
      "core:1.50",
      "contains",
      "Ord:1.50"
    ],
    [
      "Ord:1.50",
      "is a",
      "macro"
    ],
    [
      "Ord:1.50",
      "has description",
      "Derive macro generating an impl of the trait `Ord`."
    ],
    [
      "core:1.50",
      "contains",
      "PartialEq:1.50"
    ],
    [
      "PartialEq:1.50",
      "is a",
      "macro"
    ],
    [
      "PartialEq:1.50",
      "has description",
      "Derive macro generating an impl of the trait `PartialEq`."
    ],
    [
      "core:1.50",
      "contains",
      "PartialOrd:1.50"
    ],
    [
      "PartialOrd:1.50",
      "is a",
      "macro"
    ],
    [
      "PartialOrd:1.50",
      "has description",
      "Derive macro generating an impl of the trait `PartialOrd`."
    ],
    [
      "core:1.50",
      "contains",
      "RustcDecodable:1.50"
    ],
    [
      "RustcDecodable:1.50",
      "is a",
      "macro"
    ],
    [
      "RustcDecodable:1.50",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.50",
      "contains",
      "RustcEncodable:1.50"
    ],
    [
      "RustcEncodable:1.50",
      "is a",
      "macro"
    ],
    [
      "RustcEncodable:1.50",
      "has description",
      "Unstable implementation detail of the `rustc` compiler, do not use."
    ],
    [
      "core:1.50",
      "contains",
      "asm:1.50"
    ],
    [
      "asm:1.50",
      "is a",
      "macro"
    ],
    [
      "asm:1.50",
      "has description",
      "Inline assembly."
    ],
    [
      "core:1.50",
      "contains",
      "bench:1.50"
    ],
    [
      "bench:1.50",
      "is a",
      "macro"
    ],
    [
      "bench:1.50",
      "has description",
      "Attribute macro applied to a function to turn it into a benchmark test."
    ],
    [
      "core:1.50",
      "contains",
      "global_allocator:1.50"
    ],
    [
      "global_allocator:1.50",
      "is a",
      "macro"
    ],
    [
      "global_allocator:1.50",
      "has description",
      "Attribute macro applied to a static to register it as a global allocator."
    ],
    [
      "core:1.50",
      "contains",
      "global_asm:1.50"
    ],
    [
      "global_asm:1.50",
      "is a",
      "macro"
    ],
    [
      "global_asm:1.50",
      "has description",
      "Module-level inline assembly."
    ],
    [
      "core:1.50",
      "contains",
      "log_syntax:1.50"
    ],
    [
      "log_syntax:1.50",
      "is a",
      "macro"
    ],
    [
      "log_syntax:1.50",
      "has description",
      "Prints passed tokens into the standard output."
    ],
    [
      "core:1.50",
      "contains",
      "matches:1.50"
    ],
    [
      "matches:1.50",
      "is a",
      "macro"
    ],
    [
      "matches:1.50",
      "has description",
      "Returns whether the given expression matches any of the given patterns."
    ],
    [
      "core:1.50",
      "contains",
      "test:1.50"
    ],
    [
      "test:1.50",
      "is a",
      "macro"
    ],
    [
      "test:1.50",
      "has description",
      "Attribute macro applied to a function to turn it into a unit test."
    ],
    [
      "core:1.50",
      "contains",
      "test_case:1.50"
    ],
    [
      "test_case:1.50",
      "is a",
      "macro"
    ],
    [
      "test_case:1.50",
      "has description",
      "An implementation detail of the `#[test]` and `#[bench]` macros."
    ],
    [
      "core:1.50",
      "contains",
      "todo:1.50"
    ],
    [
      "todo:1.50",
      "is a",
      "macro"
    ],
    [
      "todo:1.50",
      "has description",
      "Indicates unfinished code."
    ],
    [
      "core:1.50",
      "contains",
      "trace_macros:1.50"
    ],
    [
      "trace_macros:1.50",
      "is a",
      "macro"
    ],
    [
      "trace_macros:1.50",
      "has description",
      "Enables or disables tracing functionality used for debugging other macros."
    ],
    [
      "unimplemented:1.50",
      "has description",
      "Indicates unfinished code by panicking with a message of 'not yet implemented'."
    ],
    [
      "core:1.50",
      "contains",
      "core::lazy:1.50"
    ],
    [
      "core::lazy:1.50",
      "is a",
      "module"
    ],
    [
      "core::lazy:1.50",
      "has description",
      "Lazy values and one-time initialization of static data."
    ],
    [
      "core:1.50",
      "contains",
      "core::primitive:1.50"
    ],
    [
      "core::primitive:1.50",
      "is a",
      "module"
    ],
    [
      "core::primitive:1.50",
      "has description",
      "This module reexports the primitive types to allow usage that is not possibly shadowed by other declared types."
    ],
    [
      "core::ffi:1.50",
      "has description",
      "Utilities related to foreign function interface (FFI) bindings."
    ],
    [
      "core::hint:1.50",
      "has description",
      "Hints to compiler that affects how code should be emitted or optimized. Hints may be compile time or runtime."
    ],
    [
      "include_str:1.50",
      "has description",
      "Includes a UTF-8 encoded file as a string."
    ],
    [
      "core::array:1.50",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually we should be able to generalize to all lengths."
    ],
    [
      "core:1.50",
      "contains",
      "cfg_accessible:1.50"
    ],
    [
      "cfg_accessible:1.50",
      "is a",
      "macro"
    ],
    [
      "cfg_accessible:1.50",
      "has description",
      "Keeps the item it's applied to if the passed path is accessible, and removes it otherwise."
    ],
    [
      "core:1.50",
      "contains",
      "llvm_asm:1.50"
    ],
    [
      "llvm_asm:1.50",
      "is a",
      "macro"
    ],
    [
      "llvm_asm:1.50",
      "has description",
      "LLVM-style inline assembly."
    ],
    [
      "core:1.50",
      "contains",
      "raw_const:1.50"
    ],
    [
      "raw_const:1.50",
      "is a",
      "macro"
    ],
    [
      "raw_const:1.50",
      "has description",
      "Create a `const` raw pointer to a place, without creating an intermediate reference."
    ],
    [
      "core:1.50",
      "contains",
      "raw_mut:1.50"
    ],
    [
      "raw_mut:1.50",
      "is a",
      "macro"
    ],
    [
      "raw_mut:1.50",
      "has description",
      "Create a `mut` raw pointer to a place, without creating an intermediate reference."
    ],
    [
      "core:1.50",
      "contains",
      "ready:1.50"
    ],
    [
      "ready:1.50",
      "is a",
      "macro"
    ],
    [
      "ready:1.50",
      "has description",
      "Extracts the successful type of a `Poll<T>`."
    ],
    [
      "unimplemented:1.50",
      "has description",
      "Indicates unimplemented code by panicking with a message of \"not implemented\"."
    ],
    [
      "core::array:1.50",
      "has description",
      "Implementations of things like `Eq` for fixed-length arrays up to a certain length. Eventually, we should be able to generalize to all lengths."
    ],
    [
      "unimplemented:1.50",
      "has description",
      "Indicates unimplemented code by panicking with a message of 'not implemented'."
    ],
    [
      "core::lazy:1.50",
      "has alias",
      "lazy"
    ],
    [
      "core::primitive:1.50",
      "has alias",
      "primitive"
    ],
    [
      "ready:1.50",
      "has description",
      "Extracts the successful type of a `Poll<T>`.`"
    ]
  ],
  "mergeFailed": [],
  "mergedNameMap": [
    [
      "std::sync::Arc:1.80",
      "Arc"
    ],
    [
      "std::sync::Barrier:1.80",
      "Barrier"
    ],
    [
      "std::sync::BarrierWaitResult:1.80",
      "BarrierWaitResult"
    ],
    [
      "std::sync::Condvar:1.80",
      "Condvar"
    ],
    [
      "std::sync::Mutex:1.80",
      "Mutex"
    ],
    [
      "std::sync::MutexGuard:1.80",
      "MutexGuard"
    ],
    [
      "std::sync::Once:1.80",
      "Once"
    ],
    [
      "std::sync::PoisonError:1.80",
      "PoisonError"
    ],
    [
      "std::sync::RwLock:1.80",
      "RwLock"
    ],
    [
      "std::sync::RwLockReadGuard:1.80",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.80",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::WaitTimeoutResult:1.80",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::Weak:1.80",
      "Weak"
    ],
    [
      "std::sync::OnceState:1.80",
      "OnceState"
    ],
    [
      "std::sync::StaticCondvar:1.80",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticMutex:1.80",
      "StaticMutex"
    ],
    [
      "std::sync::StaticRwLock:1.80",
      "StaticRwLock"
    ],
    [
      "std::sync::TryLockError:1.80",
      "TryLockError"
    ],
    [
      "std::sync::ONCE_INIT:1.80",
      "ONCE_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.80",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.80",
      "MUTEX_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.80",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::LockResult:1.80",
      "LockResult"
    ],
    [
      "std::sync::TryLockResult:1.80",
      "TryLockResult"
    ],
    [
      "std::sync:1.80",
      "sync"
    ],
    [
      "std::sync::atomic:1.80",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.80",
      "mpsc"
    ],
    [
      "std::heap:1.80",
      "heap"
    ],
    [
      "std::hint:1.80",
      "hint"
    ],
    [
      "std::future:1.80",
      "future"
    ],
    [
      "std::pin:1.80",
      "pin"
    ],
    [
      "std::sync::OnceLock:1.80",
      "OnceLock"
    ],
    [
      "std::sync::Exclusive:1.80",
      "Exclusive"
    ],
    [
      "std::sync::LazyLock:1.80",
      "LazyLock"
    ],
    [
      "Atomically Reference Counted:1.80",
      "Arc"
    ],
    [
      "std::sync:1.60",
      "sync"
    ],
    [
      "std::sync::atomic:1.60",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.60",
      "mpsc"
    ],
    [
      "std::sync::Arc:1.60",
      "Arc"
    ],
    [
      "std::sync::Barrier:1.60",
      "Barrier"
    ],
    [
      "std::sync::BarrierWaitResult:1.60",
      "BarrierWaitResult"
    ],
    [
      "std::sync::Condvar:1.60",
      "Condvar"
    ],
    [
      "std::sync::Mutex:1.60",
      "Mutex"
    ],
    [
      "std::sync::MutexGuard:1.60",
      "MutexGuard"
    ],
    [
      "std::sync::Once:1.60",
      "Once"
    ],
    [
      "std::sync::PoisonError:1.60",
      "PoisonError"
    ],
    [
      "std::sync::RwLock:1.60",
      "RwLock"
    ],
    [
      "std::sync::RwLockReadGuard:1.60",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.60",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::WaitTimeoutResult:1.60",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::Weak:1.60",
      "Weak"
    ],
    [
      "std::sync::OnceState:1.60",
      "OnceState"
    ],
    [
      "std::sync::StaticCondvar:1.60",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticMutex:1.60",
      "StaticMutex"
    ],
    [
      "std::sync::StaticRwLock:1.60",
      "StaticRwLock"
    ],
    [
      "std::sync::TryLockError:1.60",
      "TryLockError"
    ],
    [
      "std::sync::ONCE_INIT:1.60",
      "ONCE_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.60",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.60",
      "MUTEX_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.60",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::LockResult:1.60",
      "LockResult"
    ],
    [
      "std::sync::TryLockResult:1.60",
      "TryLockResult"
    ],
    [
      "std::heap:1.60",
      "heap"
    ],
    [
      "std::hint:1.60",
      "hint"
    ],
    [
      "std::future:1.60",
      "future"
    ],
    [
      "std::pin:1.60",
      "pin"
    ],
    [
      "Atomically Reference Counted:1.60",
      "Arc"
    ],
    [
      "std::sync:1.40",
      "sync"
    ],
    [
      "std::sync::atomic:1.40",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.40",
      "mpsc"
    ],
    [
      "std::sync::Arc:1.40",
      "Arc"
    ],
    [
      "std::sync::Barrier:1.40",
      "Barrier"
    ],
    [
      "std::sync::BarrierWaitResult:1.40",
      "BarrierWaitResult"
    ],
    [
      "std::sync::Condvar:1.40",
      "Condvar"
    ],
    [
      "std::sync::Mutex:1.40",
      "Mutex"
    ],
    [
      "std::sync::MutexGuard:1.40",
      "MutexGuard"
    ],
    [
      "std::sync::Once:1.40",
      "Once"
    ],
    [
      "std::sync::PoisonError:1.40",
      "PoisonError"
    ],
    [
      "std::sync::RwLock:1.40",
      "RwLock"
    ],
    [
      "std::sync::RwLockReadGuard:1.40",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.40",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::WaitTimeoutResult:1.40",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::Weak:1.40",
      "Weak"
    ],
    [
      "std::sync::OnceState:1.40",
      "OnceState"
    ],
    [
      "std::sync::StaticCondvar:1.40",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticMutex:1.40",
      "StaticMutex"
    ],
    [
      "std::sync::StaticRwLock:1.40",
      "StaticRwLock"
    ],
    [
      "std::sync::TryLockError:1.40",
      "TryLockError"
    ],
    [
      "std::sync::ONCE_INIT:1.40",
      "ONCE_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.40",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.40",
      "MUTEX_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.40",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::LockResult:1.40",
      "LockResult"
    ],
    [
      "std::sync::TryLockResult:1.40",
      "TryLockResult"
    ],
    [
      "std::heap:1.40",
      "heap"
    ],
    [
      "std::hint:1.40",
      "hint"
    ],
    [
      "std::future:1.40",
      "future"
    ],
    [
      "std::pin:1.40",
      "pin"
    ],
    [
      "std::sync:1.20",
      "sync"
    ],
    [
      "std::sync::atomic:1.20",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.20",
      "mpsc"
    ],
    [
      "std::sync::Arc:1.20",
      "Arc"
    ],
    [
      "std::sync::Barrier:1.20",
      "Barrier"
    ],
    [
      "std::sync::BarrierWaitResult:1.20",
      "BarrierWaitResult"
    ],
    [
      "std::sync::Condvar:1.20",
      "Condvar"
    ],
    [
      "std::sync::Mutex:1.20",
      "Mutex"
    ],
    [
      "std::sync::MutexGuard:1.20",
      "MutexGuard"
    ],
    [
      "std::sync::Once:1.20",
      "Once"
    ],
    [
      "std::sync::PoisonError:1.20",
      "PoisonError"
    ],
    [
      "std::sync::RwLock:1.20",
      "RwLock"
    ],
    [
      "std::sync::RwLockReadGuard:1.20",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.20",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::WaitTimeoutResult:1.20",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::Weak:1.20",
      "Weak"
    ],
    [
      "std::sync::OnceState:1.20",
      "OnceState"
    ],
    [
      "std::sync::StaticCondvar:1.20",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticMutex:1.20",
      "StaticMutex"
    ],
    [
      "std::sync::StaticRwLock:1.20",
      "StaticRwLock"
    ],
    [
      "std::sync::TryLockError:1.20",
      "TryLockError"
    ],
    [
      "std::sync::ONCE_INIT:1.20",
      "ONCE_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.20",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.20",
      "MUTEX_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.20",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::LockResult:1.20",
      "LockResult"
    ],
    [
      "std::sync::TryLockResult:1.20",
      "TryLockResult"
    ],
    [
      "std::heap:1.20",
      "heap"
    ],
    [
      "std::sync:1.70",
      "sync"
    ],
    [
      "std::sync::atomic:1.70",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.70",
      "mpsc"
    ],
    [
      "std::sync::Arc:1.70",
      "Arc"
    ],
    [
      "std::sync::Barrier:1.70",
      "Barrier"
    ],
    [
      "std::sync::BarrierWaitResult:1.70",
      "BarrierWaitResult"
    ],
    [
      "std::sync::Condvar:1.70",
      "Condvar"
    ],
    [
      "std::sync::Mutex:1.70",
      "Mutex"
    ],
    [
      "std::sync::MutexGuard:1.70",
      "MutexGuard"
    ],
    [
      "std::sync::Once:1.70",
      "Once"
    ],
    [
      "std::sync::PoisonError:1.70",
      "PoisonError"
    ],
    [
      "std::sync::RwLock:1.70",
      "RwLock"
    ],
    [
      "std::sync::RwLockReadGuard:1.70",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.70",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::WaitTimeoutResult:1.70",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::Weak:1.70",
      "Weak"
    ],
    [
      "std::sync::OnceState:1.70",
      "OnceState"
    ],
    [
      "std::sync::StaticCondvar:1.70",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticMutex:1.70",
      "StaticMutex"
    ],
    [
      "std::sync::StaticRwLock:1.70",
      "StaticRwLock"
    ],
    [
      "std::sync::TryLockError:1.70",
      "TryLockError"
    ],
    [
      "std::sync::ONCE_INIT:1.70",
      "ONCE_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.70",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.70",
      "MUTEX_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.70",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::LockResult:1.70",
      "LockResult"
    ],
    [
      "std::sync::TryLockResult:1.70",
      "TryLockResult"
    ],
    [
      "std::heap:1.70",
      "heap"
    ],
    [
      "std::hint:1.70",
      "hint"
    ],
    [
      "std::future:1.70",
      "future"
    ],
    [
      "std::pin:1.70",
      "pin"
    ],
    [
      "std::sync::OnceLock:1.70",
      "OnceLock"
    ],
    [
      "std::sync::Exclusive:1.70",
      "Exclusive"
    ],
    [
      "std::sync::LazyLock:1.70",
      "LazyLock"
    ],
    [
      "Atomically Reference Counted:1.70",
      "Arc"
    ],
    [
      "std::sync:1.50",
      "sync"
    ],
    [
      "std::sync::atomic:1.50",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.50",
      "mpsc"
    ],
    [
      "std::sync::Arc:1.50",
      "Arc"
    ],
    [
      "std::sync::Barrier:1.50",
      "Barrier"
    ],
    [
      "std::sync::BarrierWaitResult:1.50",
      "BarrierWaitResult"
    ],
    [
      "std::sync::Condvar:1.50",
      "Condvar"
    ],
    [
      "std::sync::Mutex:1.50",
      "Mutex"
    ],
    [
      "std::sync::MutexGuard:1.50",
      "MutexGuard"
    ],
    [
      "std::sync::Once:1.50",
      "Once"
    ],
    [
      "std::sync::PoisonError:1.50",
      "PoisonError"
    ],
    [
      "std::sync::RwLock:1.50",
      "RwLock"
    ],
    [
      "std::sync::RwLockReadGuard:1.50",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.50",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::WaitTimeoutResult:1.50",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::Weak:1.50",
      "Weak"
    ],
    [
      "std::sync::OnceState:1.50",
      "OnceState"
    ],
    [
      "std::sync::StaticCondvar:1.50",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticMutex:1.50",
      "StaticMutex"
    ],
    [
      "std::sync::StaticRwLock:1.50",
      "StaticRwLock"
    ],
    [
      "std::sync::TryLockError:1.50",
      "TryLockError"
    ],
    [
      "std::sync::ONCE_INIT:1.50",
      "ONCE_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.50",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.50",
      "MUTEX_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.50",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::LockResult:1.50",
      "LockResult"
    ],
    [
      "std::sync::TryLockResult:1.50",
      "TryLockResult"
    ],
    [
      "std::heap:1.50",
      "heap"
    ],
    [
      "std::hint:1.50",
      "hint"
    ],
    [
      "std::future:1.50",
      "future"
    ],
    [
      "std::pin:1.50",
      "pin"
    ],
    [
      "std::sync:1.30",
      "sync"
    ],
    [
      "std::sync::atomic:1.30",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.30",
      "mpsc"
    ],
    [
      "std::sync::Arc:1.30",
      "Arc"
    ],
    [
      "std::sync::Barrier:1.30",
      "Barrier"
    ],
    [
      "std::sync::BarrierWaitResult:1.30",
      "BarrierWaitResult"
    ],
    [
      "std::sync::Condvar:1.30",
      "Condvar"
    ],
    [
      "std::sync::Mutex:1.30",
      "Mutex"
    ],
    [
      "std::sync::MutexGuard:1.30",
      "MutexGuard"
    ],
    [
      "std::sync::Once:1.30",
      "Once"
    ],
    [
      "std::sync::PoisonError:1.30",
      "PoisonError"
    ],
    [
      "std::sync::RwLock:1.30",
      "RwLock"
    ],
    [
      "std::sync::RwLockReadGuard:1.30",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.30",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::WaitTimeoutResult:1.30",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::Weak:1.30",
      "Weak"
    ],
    [
      "std::sync::OnceState:1.30",
      "OnceState"
    ],
    [
      "std::sync::StaticCondvar:1.30",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticMutex:1.30",
      "StaticMutex"
    ],
    [
      "std::sync::StaticRwLock:1.30",
      "StaticRwLock"
    ],
    [
      "std::sync::TryLockError:1.30",
      "TryLockError"
    ],
    [
      "std::sync::ONCE_INIT:1.30",
      "ONCE_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.30",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.30",
      "MUTEX_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.30",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::LockResult:1.30",
      "LockResult"
    ],
    [
      "std::sync::TryLockResult:1.30",
      "TryLockResult"
    ],
    [
      "std::heap:1.30",
      "heap"
    ],
    [
      "std::hint:1.30",
      "hint"
    ],
    [
      "std::future:1.30",
      "future"
    ],
    [
      "std::pin:1.30",
      "pin"
    ],
    [
      "std::sync:1.10",
      "sync"
    ],
    [
      "std::sync::atomic:1.10",
      "atomic"
    ],
    [
      "std::sync::mpsc:1.10",
      "mpsc"
    ],
    [
      "std::sync::Arc:1.10",
      "Arc"
    ],
    [
      "std::sync::Barrier:1.10",
      "Barrier"
    ],
    [
      "std::sync::BarrierWaitResult:1.10",
      "BarrierWaitResult"
    ],
    [
      "std::sync::Condvar:1.10",
      "Condvar"
    ],
    [
      "std::sync::Mutex:1.10",
      "Mutex"
    ],
    [
      "std::sync::MutexGuard:1.10",
      "MutexGuard"
    ],
    [
      "std::sync::Once:1.10",
      "Once"
    ],
    [
      "std::sync::PoisonError:1.10",
      "PoisonError"
    ],
    [
      "std::sync::RwLock:1.10",
      "RwLock"
    ],
    [
      "std::sync::RwLockReadGuard:1.10",
      "RwLockReadGuard"
    ],
    [
      "std::sync::RwLockWriteGuard:1.10",
      "RwLockWriteGuard"
    ],
    [
      "std::sync::WaitTimeoutResult:1.10",
      "WaitTimeoutResult"
    ],
    [
      "std::sync::Weak:1.10",
      "Weak"
    ],
    [
      "std::sync::OnceState:1.10",
      "OnceState"
    ],
    [
      "std::sync::StaticCondvar:1.10",
      "StaticCondvar"
    ],
    [
      "std::sync::StaticMutex:1.10",
      "StaticMutex"
    ],
    [
      "std::sync::StaticRwLock:1.10",
      "StaticRwLock"
    ],
    [
      "std::sync::TryLockError:1.10",
      "TryLockError"
    ],
    [
      "std::sync::ONCE_INIT:1.10",
      "ONCE_INIT"
    ],
    [
      "std::sync::CONDVAR_INIT:1.10",
      "CONDVAR_INIT"
    ],
    [
      "std::sync::MUTEX_INIT:1.10",
      "MUTEX_INIT"
    ],
    [
      "std::sync::RW_LOCK_INIT:1.10",
      "RW_LOCK_INIT"
    ],
    [
      "std::sync::LockResult:1.10",
      "LockResult"
    ],
    [
      "std::sync::TryLockResult:1.10",
      "TryLockResult"
    ],
    [
      "std::rc::Weak:1.60",
      "Weak"
    ],
    [
      "std::rc::Rc:1.60",
      "Rc"
    ],
    [
      "std::rc::Weak::new:1.60",
      "new"
    ],
    [
      "std::rc::Weak::upgrade:1.60",
      "upgrade"
    ],
    [
      "std::rc::Weak:1.40",
      "Weak"
    ],
    [
      "std::rc::Rc:1.40",
      "Rc"
    ],
    [
      "std::rc::Weak::new:1.40",
      "new"
    ],
    [
      "std::rc::Weak::upgrade:1.40",
      "upgrade"
    ],
    [
      "std::rc::Weak:1.30",
      "Weak"
    ],
    [
      "std::rc::Rc:1.30",
      "Rc"
    ],
    [
      "std::rc::Weak::new:1.30",
      "new"
    ],
    [
      "std::rc::Weak::upgrade:1.30",
      "upgrade"
    ],
    [
      "std::rc::Weak:1.20",
      "Weak"
    ],
    [
      "std::rc::Rc:1.20",
      "Rc"
    ],
    [
      "std::rc::Weak::new:1.20",
      "new"
    ],
    [
      "std::rc::Weak::upgrade:1.20",
      "upgrade"
    ],
    [
      "std::rc::Weak:1.50",
      "Weak"
    ],
    [
      "std::rc::Rc:1.50",
      "Rc"
    ],
    [
      "std::rc::Weak::new:1.50",
      "new"
    ],
    [
      "std::rc::Weak::upgrade:1.50",
      "upgrade"
    ],
    [
      "std::rc::Weak:1.10",
      "Weak"
    ],
    [
      "std::rc::Rc:1.10",
      "Rc"
    ],
    [
      "std::rc::Weak::new:1.10",
      "new"
    ],
    [
      "std::rc::Weak::upgrade:1.10",
      "upgrade"
    ],
    [
      "std::rc::Rc::new:1.10",
      "Rc::new"
    ],
    [
      "std::rc::Rc::try_unwrap:1.10",
      "try_unwrap"
    ],
    [
      "std::rc::Rc::downgrade:1.10",
      "downgrade"
    ],
    [
      "std::fmt::Display::fmt:1.10",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.10",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.10",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::convert::From::from:1.10",
      "from"
    ],
    [
      "std::borrow::Borrow::borrow:1.10",
      "borrow"
    ],
    [
      "std::convert::AsRef::as_ref:1.10",
      "as_ref"
    ],
    [
      "std::fmt::Formatter:1.10",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.10",
      "Error"
    ],
    [
      "std::result::Result:1.10",
      "Result"
    ],
    [
      "std::rc::Rc::new:1.30",
      "Rc::new"
    ],
    [
      "std::rc::Rc::try_unwrap:1.30",
      "try_unwrap"
    ],
    [
      "std::rc::Rc::downgrade:1.30",
      "downgrade"
    ],
    [
      "std::rc::Rc::into_raw:1.30",
      "into_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.30",
      "from_raw"
    ],
    [
      "std::rc::Rc::ptr_eq:1.30",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::as_ref:1.30",
      "as_ref"
    ],
    [
      "std::borrow::Borrow::borrow:1.30",
      "borrow"
    ],
    [
      "std::fmt::Display::fmt:1.30",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.30",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.30",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::convert::From::from:1.30",
      "from"
    ],
    [
      "std::convert::AsRef::as_ref:1.30",
      "as_ref"
    ],
    [
      "std::fmt::Formatter:1.30",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.30",
      "Error"
    ],
    [
      "std::result::Result:1.30",
      "Result"
    ],
    [
      "std::rc::Rc::new:1.40",
      "Rc::new"
    ],
    [
      "std::rc::Rc::try_unwrap:1.40",
      "try_unwrap"
    ],
    [
      "std::rc::Rc::downgrade:1.40",
      "downgrade"
    ],
    [
      "std::rc::Rc::into_raw:1.40",
      "into_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.40",
      "from_raw"
    ],
    [
      "std::rc::Rc::ptr_eq:1.40",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::as_ref:1.40",
      "as_ref"
    ],
    [
      "std::borrow::Borrow::borrow:1.40",
      "borrow"
    ],
    [
      "std::rc::Rc::new_uninit:1.40",
      "new_uninit"
    ],
    [
      "std::rc::Rc::pin:1.40",
      "pin"
    ],
    [
      "std::rc::Rc::assume_init:1.40",
      "assume_init"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.40",
      "get_mut_unchecked"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.40",
      "into_raw_non_null"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.40",
      "new_uninit_slice"
    ],
    [
      "std::fmt::Display::fmt:1.40",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.40",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.40",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::convert::From::from:1.40",
      "from"
    ],
    [
      "std::convert::AsRef::as_ref:1.40",
      "as_ref"
    ],
    [
      "std::fmt::Formatter:1.40",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.40",
      "Error"
    ],
    [
      "std::result::Result:1.40",
      "Result"
    ],
    [
      "std::rc::Rc::new:1.50",
      "Rc::new"
    ],
    [
      "std::rc::Rc::try_unwrap:1.50",
      "try_unwrap"
    ],
    [
      "std::rc::Rc::downgrade:1.50",
      "downgrade"
    ],
    [
      "std::rc::Rc::clone:1.50",
      "clone"
    ],
    [
      "std::rc::Rc::into_raw:1.50",
      "into_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.50",
      "from_raw"
    ],
    [
      "std::rc::Rc::ptr_eq:1.50",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::as_ref:1.50",
      "as_ref"
    ],
    [
      "std::rc::Rc::partial_cmp:1.50",
      "partial_cmp"
    ],
    [
      "std::rc::Rc::lt:1.50",
      "lt"
    ],
    [
      "std::rc::Rc::le:1.50",
      "le"
    ],
    [
      "std::rc::Rc::gt:1.50",
      "gt"
    ],
    [
      "std::rc::Rc::ge:1.50",
      "ge"
    ],
    [
      "std::borrow::Borrow::borrow:1.50",
      "borrow"
    ],
    [
      "std::rc::Rc::new_uninit:1.50",
      "new_uninit"
    ],
    [
      "std::rc::Rc::pin:1.50",
      "pin"
    ],
    [
      "std::rc::Rc::assume_init:1.50",
      "assume_init"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.50",
      "get_mut_unchecked"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.50",
      "into_raw_non_null"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.50",
      "new_uninit_slice"
    ],
    [
      "std::rc::Rc::new_cyclic:1.50",
      "new_cyclic"
    ],
    [
      "std::rc::Rc::new_zeroed:1.50",
      "new_zeroed"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.50",
      "new_zeroed_slice"
    ],
    [
      "std::rc::Rc::as_ptr:1.50",
      "as_ptr"
    ],
    [
      "std::fmt::Display::fmt:1.50",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.50",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.50",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::convert::From::from:1.50",
      "from"
    ],
    [
      "std::convert::AsRef::as_ref:1.50",
      "as_ref"
    ],
    [
      "std::rc::Rc::fmt:1.50",
      "fmt"
    ],
    [
      "std::fmt::Formatter:1.50",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.50",
      "Error"
    ],
    [
      "std::result::Result:1.50",
      "Result"
    ],
    [
      "std::rc::Rc::cmp:1.50",
      "cmp"
    ],
    [
      "std::rc::Rc::eq:1.50",
      "eq"
    ],
    [
      "std::rc::Rc::hash:1.50",
      "hash"
    ],
    [
      "std::rc::Rc::new:1.60",
      "Rc::new"
    ],
    [
      "std::rc::Rc::try_unwrap:1.60",
      "try_unwrap"
    ],
    [
      "std::rc::Rc::downgrade:1.60",
      "downgrade"
    ],
    [
      "std::rc::Rc::clone:1.60",
      "clone"
    ],
    [
      "std::rc::Rc::into_raw:1.60",
      "into_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.60",
      "from_raw"
    ],
    [
      "std::rc::Rc::ptr_eq:1.60",
      "ptr_eq"
    ],
    [
      "std::rc::Rc::as_ref:1.60",
      "as_ref"
    ],
    [
      "std::rc::Rc::partial_cmp:1.60",
      "partial_cmp"
    ],
    [
      "std::rc::Rc::lt:1.60",
      "lt"
    ],
    [
      "std::rc::Rc::le:1.60",
      "le"
    ],
    [
      "std::rc::Rc::gt:1.60",
      "gt"
    ],
    [
      "std::rc::Rc::ge:1.60",
      "ge"
    ],
    [
      "std::borrow::Borrow::borrow:1.60",
      "borrow"
    ],
    [
      "std::rc::Rc::new_uninit:1.60",
      "new_uninit"
    ],
    [
      "std::rc::Rc::pin:1.60",
      "pin"
    ],
    [
      "std::rc::Rc::assume_init:1.60",
      "assume_init"
    ],
    [
      "std::rc::Rc::get_mut_unchecked:1.60",
      "get_mut_unchecked"
    ],
    [
      "std::rc::Rc::into_raw_non_null:1.60",
      "into_raw_non_null"
    ],
    [
      "std::rc::Rc::new_uninit_slice:1.60",
      "new_uninit_slice"
    ],
    [
      "std::rc::Rc::new_cyclic:1.60",
      "new_cyclic"
    ],
    [
      "std::rc::Rc::new_zeroed:1.60",
      "new_zeroed"
    ],
    [
      "std::rc::Rc::new_zeroed_slice:1.60",
      "new_zeroed_slice"
    ],
    [
      "std::rc::Rc::as_ptr:1.60",
      "as_ptr"
    ],
    [
      "std::rc::Rc::unwrap_or_clone:1.60",
      "Rc::unwrap_or_clone"
    ],
    [
      "std::fmt::Display::fmt:1.60",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.60",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.60",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::convert::From::from:1.60",
      "from"
    ],
    [
      "std::convert::AsRef::as_ref:1.60",
      "as_ref"
    ],
    [
      "std::rc::Rc::fmt:1.60",
      "fmt"
    ],
    [
      "std::fmt::Formatter:1.60",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.60",
      "Error"
    ],
    [
      "std::result::Result:1.60",
      "Result"
    ],
    [
      "std::rc::Rc::cmp:1.60",
      "cmp"
    ],
    [
      "std::rc::Rc::eq:1.60",
      "eq"
    ],
    [
      "std::rc::Rc::hash:1.60",
      "hash"
    ],
    [
      "std::rc::Rc::new:1.20",
      "Rc::new"
    ],
    [
      "std::rc::Rc::try_unwrap:1.20",
      "try_unwrap"
    ],
    [
      "std::rc::Rc::downgrade:1.20",
      "downgrade"
    ],
    [
      "std::rc::Rc::into_raw:1.20",
      "into_raw"
    ],
    [
      "std::rc::Rc::from_raw:1.20",
      "from_raw"
    ],
    [
      "std::rc::Rc::ptr_eq:1.20",
      "ptr_eq"
    ],
    [
      "std::fmt::Display::fmt:1.20",
      "std::fmt::Display::fmt"
    ],
    [
      "std::fmt::Debug::fmt:1.20",
      "std::fmt::Debug::fmt"
    ],
    [
      "std::fmt::Pointer::fmt:1.20",
      "std::fmt::Pointer::fmt"
    ],
    [
      "std::convert::From::from:1.20",
      "from"
    ],
    [
      "std::borrow::Borrow::borrow:1.20",
      "borrow"
    ],
    [
      "std::convert::AsRef::as_ref:1.20",
      "as_ref"
    ],
    [
      "std::fmt::Formatter:1.20",
      "Formatter"
    ],
    [
      "std::fmt::Error:1.20",
      "Error"
    ],
    [
      "std::result::Result:1.20",
      "Result"
    ],
    [
      "std::option::IntoIter:1.10",
      "IntoIter"
    ],
    [
      "std::option::Iter:1.10",
      "Iter"
    ],
    [
      "std::option::IterMut:1.10",
      "IterMut"
    ],
    [
      "std::option::Option:1.10",
      "Option"
    ],
    [
      "std::option::Option::is_some:1.10",
      "is_some"
    ],
    [
      "std::option::Option::is_none:1.10",
      "is_none"
    ],
    [
      "std::option::Option::as_ref:1.10",
      "as_ref"
    ],
    [
      "std::option::Option::as_mut:1.10",
      "as_mut"
    ],
    [
      "std::option::Option::expect:1.10",
      "expect"
    ],
    [
      "std::option::Option::unwrap:1.10",
      "unwrap"
    ],
    [
      "std::option::Option::unwrap_or:1.10",
      "unwrap_or"
    ],
    [
      "std::option::Option::map:1.10",
      "map"
    ],
    [
      "std::option::Option::or:1.10",
      "or"
    ],
    [
      "std::option::Option::or_else:1.10",
      "or_else"
    ],
    [
      "std::option::Option::take:1.10",
      "take"
    ],
    [
      "std::option::Option<&T>::cloned:1.10",
      "cloned"
    ],
    [
      "std::option::Option::unwrap_or_default:1.10",
      "unwrap_or_default"
    ],
    [
      "std::option::IntoIter<T>:1.10",
      "IntoIter<T>"
    ],
    [
      "std::option::Option::into_iter:1.10",
      "into_iter"
    ],
    [
      "std::option::Option::from_iter:1.10",
      "from_iter"
    ],
    [
      "std::option::Option::replace:1.60",
      "replace"
    ],
    [
      "std::option::Option::deref:1.60",
      "deref"
    ],
    [
      "std::option::Option::transpose:1.60",
      "transpose"
    ],
    [
      "std::option::Option::replace:1.50",
      "replace"
    ],
    [
      "std::option::Option::deref:1.50",
      "deref"
    ],
    [
      "std::option::Option::transpose:1.50",
      "transpose"
    ],
    [
      "std::option::Option::replace:1.30",
      "replace"
    ],
    [
      "std::option::Option::deref:1.30",
      "deref"
    ],
    [
      "std::option::Option::transpose:1.30",
      "transpose"
    ],
    [
      "std::option::Option::replace:1.40",
      "replace"
    ],
    [
      "std::option::Option::deref:1.40",
      "deref"
    ],
    [
      "std::option::Option::transpose:1.40",
      "transpose"
    ],
    [
      "std::option::Option::get_or_insert:1.20",
      "get_or_insert"
    ],
    [
      "std::option::Option::get_or_insert_with:1.20",
      "get_or_insert_with"
    ],
    [
      "std::option::Option::cloned:1.20",
      "cloned"
    ],
    [
      "std::option::Option::unwrap_or_default:1.20",
      "unwrap_or_default"
    ],
    [
      "std::option::Option::max:1.20",
      "max"
    ],
    [
      "std::option::Option::min:1.20",
      "min"
    ],
    [
      "std::option::Option::into_iter:1.20",
      "into_iter"
    ],
    [
      "std::cmp::Ord::max:1.20",
      "max"
    ],
    [
      "std::cmp::Ord::min:1.20",
      "min"
    ],
    [
      "std::iter:1.10",
      "iter"
    ],
    [
      "std::iter::Chain:1.10",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.10",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.10",
      "Cycle"
    ],
    [
      "std::iter::DoubleEndedIterator:1.10",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::empty:1.10",
      "empty"
    ],
    [
      "std::iter::Iterator:1.10",
      "Iterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.10",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.10",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.10",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.10",
      "IntoIterator"
    ],
    [
      "std::iter::once:1.10",
      "once"
    ],
    [
      "std::iter::Empty:1.10",
      "Empty"
    ],
    [
      "std::iter::Enumerate:1.10",
      "Enumerate"
    ],
    [
      "std::iter::Filter:1.10",
      "Filter"
    ],
    [
      "std::iter::FilterMap:1.10",
      "FilterMap"
    ],
    [
      "std::iter::FlatMap:1.10",
      "FlatMap"
    ],
    [
      "std::iter::Fuse:1.10",
      "Fuse"
    ],
    [
      "std::iter::Inspect:1.10",
      "Inspect"
    ],
    [
      "std::iter::Map:1.10",
      "Map"
    ],
    [
      "std::iter::Once:1.10",
      "Once"
    ],
    [
      "std::iter::Peekable:1.10",
      "Peekable"
    ],
    [
      "std::iter::Repeat:1.10",
      "Repeat"
    ],
    [
      "std::iter::Rev:1.10",
      "Rev"
    ],
    [
      "std::iter::Scan:1.10",
      "Scan"
    ],
    [
      "std::iter::Skip:1.10",
      "Skip"
    ],
    [
      "std::iter::SkipWhile:1.10",
      "SkipWhile"
    ],
    [
      "std::iter::Take:1.10",
      "Take"
    ],
    [
      "std::iter::TakeWhile:1.10",
      "TakeWhile"
    ],
    [
      "std::iter::Zip:1.10",
      "Zip"
    ],
    [
      "std::iter::StepBy:1.10",
      "StepBy"
    ],
    [
      "std::iter::repeat:1.10",
      "repeat"
    ],
    [
      "std::iter:1.20",
      "iter"
    ],
    [
      "std::iter::Chain:1.20",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.20",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.20",
      "Cycle"
    ],
    [
      "std::iter::DoubleEndedIterator:1.20",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::empty:1.20",
      "empty"
    ],
    [
      "std::iter::Iterator:1.20",
      "Iterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.20",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.20",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.20",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.20",
      "IntoIterator"
    ],
    [
      "std::iter::once:1.20",
      "once"
    ],
    [
      "std::iter::Empty:1.20",
      "Empty"
    ],
    [
      "std::iter::Enumerate:1.20",
      "Enumerate"
    ],
    [
      "std::iter::Filter:1.20",
      "Filter"
    ],
    [
      "std::iter::FilterMap:1.20",
      "FilterMap"
    ],
    [
      "std::iter::FlatMap:1.20",
      "FlatMap"
    ],
    [
      "std::iter::Fuse:1.20",
      "Fuse"
    ],
    [
      "std::iter::Inspect:1.20",
      "Inspect"
    ],
    [
      "std::iter::Map:1.20",
      "Map"
    ],
    [
      "std::iter::Once:1.20",
      "Once"
    ],
    [
      "std::iter::Peekable:1.20",
      "Peekable"
    ],
    [
      "std::iter::Repeat:1.20",
      "Repeat"
    ],
    [
      "std::iter::Rev:1.20",
      "Rev"
    ],
    [
      "std::iter::Scan:1.20",
      "Scan"
    ],
    [
      "std::iter::Skip:1.20",
      "Skip"
    ],
    [
      "std::iter::SkipWhile:1.20",
      "SkipWhile"
    ],
    [
      "std::iter::Take:1.20",
      "Take"
    ],
    [
      "std::iter::TakeWhile:1.20",
      "TakeWhile"
    ],
    [
      "std::iter::Zip:1.20",
      "Zip"
    ],
    [
      "std::iter::StepBy:1.20",
      "StepBy"
    ],
    [
      "std::iter::repeat:1.20",
      "repeat"
    ],
    [
      "std::iter::Product:1.20",
      "Product"
    ],
    [
      "std::iter::Sum:1.20",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.20",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.20",
      "TrustedLen"
    ],
    [
      "std::iter:1.60",
      "iter"
    ],
    [
      "std::iter::Chain:1.60",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.60",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.60",
      "Cycle"
    ],
    [
      "std::iter::DoubleEndedIterator:1.60",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::empty:1.60",
      "empty"
    ],
    [
      "std::iter::Iterator:1.60",
      "Iterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.60",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.60",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.60",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.60",
      "IntoIterator"
    ],
    [
      "std::iter::once:1.60",
      "once"
    ],
    [
      "std::iter::Empty:1.60",
      "Empty"
    ],
    [
      "std::iter::Enumerate:1.60",
      "Enumerate"
    ],
    [
      "std::iter::Filter:1.60",
      "Filter"
    ],
    [
      "std::iter::FilterMap:1.60",
      "FilterMap"
    ],
    [
      "std::iter::FlatMap:1.60",
      "FlatMap"
    ],
    [
      "std::iter::Fuse:1.60",
      "Fuse"
    ],
    [
      "std::iter::Inspect:1.60",
      "Inspect"
    ],
    [
      "std::iter::Map:1.60",
      "Map"
    ],
    [
      "std::iter::Once:1.60",
      "Once"
    ],
    [
      "std::iter::Peekable:1.60",
      "Peekable"
    ],
    [
      "std::iter::Repeat:1.60",
      "Repeat"
    ],
    [
      "std::iter::Rev:1.60",
      "Rev"
    ],
    [
      "std::iter::Scan:1.60",
      "Scan"
    ],
    [
      "std::iter::Skip:1.60",
      "Skip"
    ],
    [
      "std::iter::SkipWhile:1.60",
      "SkipWhile"
    ],
    [
      "std::iter::Take:1.60",
      "Take"
    ],
    [
      "std::iter::TakeWhile:1.60",
      "TakeWhile"
    ],
    [
      "std::iter::Zip:1.60",
      "Zip"
    ],
    [
      "std::iter::StepBy:1.60",
      "StepBy"
    ],
    [
      "std::iter::repeat:1.60",
      "repeat"
    ],
    [
      "std::iter::Product:1.60",
      "Product"
    ],
    [
      "std::iter::Sum:1.60",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.60",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.60",
      "TrustedLen"
    ],
    [
      "std::iter::Flatten:1.60",
      "std::iter::Flatten"
    ],
    [
      "std::iter::RepeatWith:1.60",
      "std::iter::RepeatWith"
    ],
    [
      "std::iter::repeat_with:1.60",
      "std::iter::repeat_with"
    ],
    [
      "std::iter::Copied:1.60",
      "std::iter::Copied"
    ],
    [
      "std::iter::FromFn:1.60",
      "std::iter::FromFn"
    ],
    [
      "std::iter::Successors:1.60",
      "std::iter::Successors"
    ],
    [
      "std::iter::from_fn:1.60",
      "std::iter::from_fn"
    ],
    [
      "std::iter::successors:1.60",
      "std::iter::successors"
    ],
    [
      "std::iter:1.50",
      "iter"
    ],
    [
      "std::iter::Chain:1.50",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.50",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.50",
      "Cycle"
    ],
    [
      "std::iter::DoubleEndedIterator:1.50",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::empty:1.50",
      "empty"
    ],
    [
      "std::iter::Iterator:1.50",
      "Iterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.50",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.50",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.50",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.50",
      "IntoIterator"
    ],
    [
      "std::iter::once:1.50",
      "once"
    ],
    [
      "std::iter::Empty:1.50",
      "Empty"
    ],
    [
      "std::iter::Enumerate:1.50",
      "Enumerate"
    ],
    [
      "std::iter::Filter:1.50",
      "Filter"
    ],
    [
      "std::iter::FilterMap:1.50",
      "FilterMap"
    ],
    [
      "std::iter::FlatMap:1.50",
      "FlatMap"
    ],
    [
      "std::iter::Fuse:1.50",
      "Fuse"
    ],
    [
      "std::iter::Inspect:1.50",
      "Inspect"
    ],
    [
      "std::iter::Map:1.50",
      "Map"
    ],
    [
      "std::iter::Once:1.50",
      "Once"
    ],
    [
      "std::iter::Peekable:1.50",
      "Peekable"
    ],
    [
      "std::iter::Repeat:1.50",
      "Repeat"
    ],
    [
      "std::iter::Rev:1.50",
      "Rev"
    ],
    [
      "std::iter::Scan:1.50",
      "Scan"
    ],
    [
      "std::iter::Skip:1.50",
      "Skip"
    ],
    [
      "std::iter::SkipWhile:1.50",
      "SkipWhile"
    ],
    [
      "std::iter::Take:1.50",
      "Take"
    ],
    [
      "std::iter::TakeWhile:1.50",
      "TakeWhile"
    ],
    [
      "std::iter::Zip:1.50",
      "Zip"
    ],
    [
      "std::iter::StepBy:1.50",
      "StepBy"
    ],
    [
      "std::iter::repeat:1.50",
      "repeat"
    ],
    [
      "std::iter::Product:1.50",
      "Product"
    ],
    [
      "std::iter::Sum:1.50",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.50",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.50",
      "TrustedLen"
    ],
    [
      "std::iter::Flatten:1.50",
      "std::iter::Flatten"
    ],
    [
      "std::iter::RepeatWith:1.50",
      "std::iter::RepeatWith"
    ],
    [
      "std::iter::repeat_with:1.50",
      "std::iter::repeat_with"
    ],
    [
      "std::iter::Copied:1.50",
      "std::iter::Copied"
    ],
    [
      "std::iter::FromFn:1.50",
      "std::iter::FromFn"
    ],
    [
      "std::iter::Successors:1.50",
      "std::iter::Successors"
    ],
    [
      "std::iter::from_fn:1.50",
      "std::iter::from_fn"
    ],
    [
      "std::iter::successors:1.50",
      "std::iter::successors"
    ],
    [
      "std::iter:1.40",
      "iter"
    ],
    [
      "std::iter::Chain:1.40",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.40",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.40",
      "Cycle"
    ],
    [
      "std::iter::DoubleEndedIterator:1.40",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::empty:1.40",
      "empty"
    ],
    [
      "std::iter::Iterator:1.40",
      "Iterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.40",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.40",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.40",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.40",
      "IntoIterator"
    ],
    [
      "std::iter::once:1.40",
      "once"
    ],
    [
      "std::iter::Empty:1.40",
      "Empty"
    ],
    [
      "std::iter::Enumerate:1.40",
      "Enumerate"
    ],
    [
      "std::iter::Filter:1.40",
      "Filter"
    ],
    [
      "std::iter::FilterMap:1.40",
      "FilterMap"
    ],
    [
      "std::iter::FlatMap:1.40",
      "FlatMap"
    ],
    [
      "std::iter::Fuse:1.40",
      "Fuse"
    ],
    [
      "std::iter::Inspect:1.40",
      "Inspect"
    ],
    [
      "std::iter::Map:1.40",
      "Map"
    ],
    [
      "std::iter::Once:1.40",
      "Once"
    ],
    [
      "std::iter::Peekable:1.40",
      "Peekable"
    ],
    [
      "std::iter::Repeat:1.40",
      "Repeat"
    ],
    [
      "std::iter::Rev:1.40",
      "Rev"
    ],
    [
      "std::iter::Scan:1.40",
      "Scan"
    ],
    [
      "std::iter::Skip:1.40",
      "Skip"
    ],
    [
      "std::iter::SkipWhile:1.40",
      "SkipWhile"
    ],
    [
      "std::iter::Take:1.40",
      "Take"
    ],
    [
      "std::iter::TakeWhile:1.40",
      "TakeWhile"
    ],
    [
      "std::iter::Zip:1.40",
      "Zip"
    ],
    [
      "std::iter::StepBy:1.40",
      "StepBy"
    ],
    [
      "std::iter::repeat:1.40",
      "repeat"
    ],
    [
      "std::iter::Product:1.40",
      "Product"
    ],
    [
      "std::iter::Sum:1.40",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.40",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.40",
      "TrustedLen"
    ],
    [
      "std::iter::Flatten:1.40",
      "std::iter::Flatten"
    ],
    [
      "std::iter::RepeatWith:1.40",
      "std::iter::RepeatWith"
    ],
    [
      "std::iter::repeat_with:1.40",
      "std::iter::repeat_with"
    ],
    [
      "std::iter::Copied:1.40",
      "std::iter::Copied"
    ],
    [
      "std::iter::FromFn:1.40",
      "std::iter::FromFn"
    ],
    [
      "std::iter::Successors:1.40",
      "std::iter::Successors"
    ],
    [
      "std::iter::from_fn:1.40",
      "std::iter::from_fn"
    ],
    [
      "std::iter::successors:1.40",
      "std::iter::successors"
    ],
    [
      "std::iter:1.30",
      "iter"
    ],
    [
      "std::iter::Chain:1.30",
      "Chain"
    ],
    [
      "std::iter::Cloned:1.30",
      "Cloned"
    ],
    [
      "std::iter::Cycle:1.30",
      "Cycle"
    ],
    [
      "std::iter::DoubleEndedIterator:1.30",
      "DoubleEndedIterator"
    ],
    [
      "std::iter::empty:1.30",
      "empty"
    ],
    [
      "std::iter::Iterator:1.30",
      "Iterator"
    ],
    [
      "std::iter::ExactSizeIterator:1.30",
      "ExactSizeIterator"
    ],
    [
      "std::iter::Extend:1.30",
      "Extend"
    ],
    [
      "std::iter::FromIterator:1.30",
      "FromIterator"
    ],
    [
      "std::iter::IntoIterator:1.30",
      "IntoIterator"
    ],
    [
      "std::iter::once:1.30",
      "once"
    ],
    [
      "std::iter::Empty:1.30",
      "Empty"
    ],
    [
      "std::iter::Enumerate:1.30",
      "Enumerate"
    ],
    [
      "std::iter::Filter:1.30",
      "Filter"
    ],
    [
      "std::iter::FilterMap:1.30",
      "FilterMap"
    ],
    [
      "std::iter::FlatMap:1.30",
      "FlatMap"
    ],
    [
      "std::iter::Fuse:1.30",
      "Fuse"
    ],
    [
      "std::iter::Inspect:1.30",
      "Inspect"
    ],
    [
      "std::iter::Map:1.30",
      "Map"
    ],
    [
      "std::iter::Once:1.30",
      "Once"
    ],
    [
      "std::iter::Peekable:1.30",
      "Peekable"
    ],
    [
      "std::iter::Repeat:1.30",
      "Repeat"
    ],
    [
      "std::iter::Rev:1.30",
      "Rev"
    ],
    [
      "std::iter::Scan:1.30",
      "Scan"
    ],
    [
      "std::iter::Skip:1.30",
      "Skip"
    ],
    [
      "std::iter::SkipWhile:1.30",
      "SkipWhile"
    ],
    [
      "std::iter::Take:1.30",
      "Take"
    ],
    [
      "std::iter::TakeWhile:1.30",
      "TakeWhile"
    ],
    [
      "std::iter::Zip:1.30",
      "Zip"
    ],
    [
      "std::iter::StepBy:1.30",
      "StepBy"
    ],
    [
      "std::iter::repeat:1.30",
      "repeat"
    ],
    [
      "std::iter::Product:1.30",
      "Product"
    ],
    [
      "std::iter::Sum:1.30",
      "Sum"
    ],
    [
      "std::iter::FusedIterator:1.30",
      "FusedIterator"
    ],
    [
      "std::iter::TrustedLen:1.30",
      "TrustedLen"
    ],
    [
      "std::iter::Flatten:1.30",
      "std::iter::Flatten"
    ],
    [
      "std::iter::RepeatWith:1.30",
      "std::iter::RepeatWith"
    ],
    [
      "std::iter::repeat_with:1.30",
      "std::iter::repeat_with"
    ],
    [
      "std::io::ErrorKind:1.60",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.80",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.70",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.20",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.40",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.30",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.10",
      "ErrorKind"
    ],
    [
      "std::io::ErrorKind:1.50",
      "ErrorKind"
    ],
    [
      "std::any:1.30",
      "any"
    ],
    [
      "std::ascii:1.30",
      "ascii"
    ],
    [
      "std::borrow:1.30",
      "borrow"
    ],
    [
      "std::boxed:1.30",
      "boxed"
    ],
    [
      "std::cell:1.30",
      "cell"
    ],
    [
      "std::char:1.30",
      "char"
    ],
    [
      "std::collections:1.30",
      "collections"
    ],
    [
      "std::env:1.30",
      "env"
    ],
    [
      "std::fs:1.30",
      "fs"
    ],
    [
      "std::net:1.30",
      "net"
    ],
    [
      "std::thread:1.30",
      "thread"
    ],
    [
      "std::str:1.30",
      "str"
    ],
    [
      "std::intrinsics:1.30",
      "intrinsics"
    ],
    [
      "std::raw:1.30",
      "raw"
    ],
    [
      "std::clone:1.30",
      "clone"
    ],
    [
      "std::cmp:1.30",
      "cmp"
    ],
    [
      "std::convert:1.30",
      "convert"
    ],
    [
      "std::default:1.30",
      "default"
    ],
    [
      "std::error:1.30",
      "error"
    ],
    [
      "std::f32:1.30",
      "f32"
    ],
    [
      "std::f64:1.30",
      "f64"
    ],
    [
      "std::ffi:1.30",
      "ffi"
    ],
    [
      "std::fmt:1.30",
      "fmt"
    ],
    [
      "std::hash:1.30",
      "hash"
    ],
    [
      "std::i16:1.30",
      "i16"
    ],
    [
      "std::i32:1.30",
      "i32"
    ],
    [
      "std::i64:1.30",
      "i64"
    ],
    [
      "std::i8:1.30",
      "i8"
    ],
    [
      "std::io:1.30",
      "io"
    ],
    [
      "std::isize:1.30",
      "isize"
    ],
    [
      "std::marker:1.30",
      "marker"
    ],
    [
      "std::mem:1.30",
      "mem"
    ],
    [
      "std::num:1.30",
      "num"
    ],
    [
      "std::ops:1.30",
      "ops"
    ],
    [
      "std::option:1.30",
      "option"
    ],
    [
      "std::os:1.30",
      "os"
    ],
    [
      "std::panic:1.30",
      "panic"
    ],
    [
      "std::path:1.30",
      "path"
    ],
    [
      "std::prelude:1.30",
      "prelude"
    ],
    [
      "std::process:1.30",
      "process"
    ],
    [
      "std::ptr:1.30",
      "ptr"
    ],
    [
      "std::rc:1.30",
      "rc"
    ],
    [
      "std::result:1.30",
      "result"
    ],
    [
      "std::slice:1.30",
      "slice"
    ],
    [
      "std::string:1.30",
      "string"
    ],
    [
      "std::time:1.30",
      "time"
    ],
    [
      "std::u16:1.30",
      "u16"
    ],
    [
      "std::u32:1.30",
      "u32"
    ],
    [
      "std::u64:1.30",
      "u64"
    ],
    [
      "std::u8:1.30",
      "u8"
    ],
    [
      "std::usize:1.30",
      "usize"
    ],
    [
      "std::vec:1.30",
      "vec"
    ],
    [
      "std::any:1.70",
      "any"
    ],
    [
      "std::ascii:1.70",
      "ascii"
    ],
    [
      "std::borrow:1.70",
      "borrow"
    ],
    [
      "std::boxed:1.70",
      "boxed"
    ],
    [
      "std::cell:1.70",
      "cell"
    ],
    [
      "std::char:1.70",
      "char"
    ],
    [
      "std::collections:1.70",
      "collections"
    ],
    [
      "std::env:1.70",
      "env"
    ],
    [
      "std::fs:1.70",
      "fs"
    ],
    [
      "std::net:1.70",
      "net"
    ],
    [
      "std::thread:1.70",
      "thread"
    ],
    [
      "std::str:1.70",
      "str"
    ],
    [
      "std::intrinsics:1.70",
      "intrinsics"
    ],
    [
      "std::raw:1.70",
      "raw"
    ],
    [
      "std::clone:1.70",
      "clone"
    ],
    [
      "std::cmp:1.70",
      "cmp"
    ],
    [
      "std::convert:1.70",
      "convert"
    ],
    [
      "std::default:1.70",
      "default"
    ],
    [
      "std::error:1.70",
      "error"
    ],
    [
      "std::f32:1.70",
      "f32"
    ],
    [
      "std::f64:1.70",
      "f64"
    ],
    [
      "std::ffi:1.70",
      "ffi"
    ],
    [
      "std::fmt:1.70",
      "fmt"
    ],
    [
      "std::hash:1.70",
      "hash"
    ],
    [
      "std::i16:1.70",
      "i16"
    ],
    [
      "std::i32:1.70",
      "i32"
    ],
    [
      "std::i64:1.70",
      "i64"
    ],
    [
      "std::i8:1.70",
      "i8"
    ],
    [
      "std::io:1.70",
      "io"
    ],
    [
      "std::isize:1.70",
      "isize"
    ],
    [
      "std::iter:1.70",
      "iter"
    ],
    [
      "std::marker:1.70",
      "marker"
    ],
    [
      "std::mem:1.70",
      "mem"
    ],
    [
      "std::num:1.70",
      "num"
    ],
    [
      "std::ops:1.70",
      "ops"
    ],
    [
      "std::option:1.70",
      "option"
    ],
    [
      "std::os:1.70",
      "os"
    ],
    [
      "std::panic:1.70",
      "panic"
    ],
    [
      "std::path:1.70",
      "path"
    ],
    [
      "std::prelude:1.70",
      "prelude"
    ],
    [
      "std::process:1.70",
      "process"
    ],
    [
      "std::ptr:1.70",
      "ptr"
    ],
    [
      "std::rc:1.70",
      "rc"
    ],
    [
      "std::result:1.70",
      "result"
    ],
    [
      "std::slice:1.70",
      "slice"
    ],
    [
      "std::string:1.70",
      "string"
    ],
    [
      "std::time:1.70",
      "time"
    ],
    [
      "std::u16:1.70",
      "u16"
    ],
    [
      "std::u32:1.70",
      "u32"
    ],
    [
      "std::u64:1.70",
      "u64"
    ],
    [
      "std::u8:1.70",
      "u8"
    ],
    [
      "std::usize:1.70",
      "usize"
    ],
    [
      "std::vec:1.70",
      "vec"
    ],
    [
      "std::any:1.20",
      "any"
    ],
    [
      "std::ascii:1.20",
      "ascii"
    ],
    [
      "std::borrow:1.20",
      "borrow"
    ],
    [
      "std::boxed:1.20",
      "boxed"
    ],
    [
      "std::cell:1.20",
      "cell"
    ],
    [
      "std::char:1.20",
      "char"
    ],
    [
      "std::collections:1.20",
      "collections"
    ],
    [
      "std::env:1.20",
      "env"
    ],
    [
      "std::fs:1.20",
      "fs"
    ],
    [
      "std::net:1.20",
      "net"
    ],
    [
      "std::thread:1.20",
      "thread"
    ],
    [
      "std::str:1.20",
      "str"
    ],
    [
      "std::intrinsics:1.20",
      "intrinsics"
    ],
    [
      "std::raw:1.20",
      "raw"
    ],
    [
      "std::clone:1.20",
      "clone"
    ],
    [
      "std::cmp:1.20",
      "cmp"
    ],
    [
      "std::convert:1.20",
      "convert"
    ],
    [
      "std::default:1.20",
      "default"
    ],
    [
      "std::error:1.20",
      "error"
    ],
    [
      "std::f32:1.20",
      "f32"
    ],
    [
      "std::f64:1.20",
      "f64"
    ],
    [
      "std::ffi:1.20",
      "ffi"
    ],
    [
      "std::fmt:1.20",
      "fmt"
    ],
    [
      "std::hash:1.20",
      "hash"
    ],
    [
      "std::i16:1.20",
      "i16"
    ],
    [
      "std::i32:1.20",
      "i32"
    ],
    [
      "std::i64:1.20",
      "i64"
    ],
    [
      "std::i8:1.20",
      "i8"
    ],
    [
      "std::io:1.20",
      "io"
    ],
    [
      "std::isize:1.20",
      "isize"
    ],
    [
      "std::marker:1.20",
      "marker"
    ],
    [
      "std::mem:1.20",
      "mem"
    ],
    [
      "std::num:1.20",
      "num"
    ],
    [
      "std::ops:1.20",
      "ops"
    ],
    [
      "std::option:1.20",
      "option"
    ],
    [
      "std::os:1.20",
      "os"
    ],
    [
      "std::panic:1.20",
      "panic"
    ],
    [
      "std::path:1.20",
      "path"
    ],
    [
      "std::prelude:1.20",
      "prelude"
    ],
    [
      "std::process:1.20",
      "process"
    ],
    [
      "std::ptr:1.20",
      "ptr"
    ],
    [
      "std::rc:1.20",
      "rc"
    ],
    [
      "std::result:1.20",
      "result"
    ],
    [
      "std::slice:1.20",
      "slice"
    ],
    [
      "std::string:1.20",
      "string"
    ],
    [
      "std::time:1.20",
      "time"
    ],
    [
      "std::u16:1.20",
      "u16"
    ],
    [
      "std::u32:1.20",
      "u32"
    ],
    [
      "std::u64:1.20",
      "u64"
    ],
    [
      "std::u8:1.20",
      "u8"
    ],
    [
      "std::usize:1.20",
      "usize"
    ],
    [
      "std::vec:1.20",
      "vec"
    ],
    [
      "std::any:1.10",
      "any"
    ],
    [
      "std::ascii:1.10",
      "ascii"
    ],
    [
      "std::borrow:1.10",
      "borrow"
    ],
    [
      "std::boxed:1.10",
      "boxed"
    ],
    [
      "std::cell:1.10",
      "cell"
    ],
    [
      "std::char:1.10",
      "char"
    ],
    [
      "std::collections:1.10",
      "collections"
    ],
    [
      "std::env:1.10",
      "env"
    ],
    [
      "std::fs:1.10",
      "fs"
    ],
    [
      "std::net:1.10",
      "net"
    ],
    [
      "std::thread:1.10",
      "thread"
    ],
    [
      "std::str:1.10",
      "str"
    ],
    [
      "std::intrinsics:1.10",
      "intrinsics"
    ],
    [
      "std::raw:1.10",
      "raw"
    ],
    [
      "std::clone:1.10",
      "clone"
    ],
    [
      "std::cmp:1.10",
      "cmp"
    ],
    [
      "std::convert:1.10",
      "convert"
    ],
    [
      "std::default:1.10",
      "default"
    ],
    [
      "std::error:1.10",
      "error"
    ],
    [
      "std::f32:1.10",
      "f32"
    ],
    [
      "std::f64:1.10",
      "f64"
    ],
    [
      "std::ffi:1.10",
      "ffi"
    ],
    [
      "std::fmt:1.10",
      "fmt"
    ],
    [
      "std::hash:1.10",
      "hash"
    ],
    [
      "std::i16:1.10",
      "i16"
    ],
    [
      "std::i32:1.10",
      "i32"
    ],
    [
      "std::i64:1.10",
      "i64"
    ],
    [
      "std::i8:1.10",
      "i8"
    ],
    [
      "std::io:1.10",
      "io"
    ],
    [
      "std::isize:1.10",
      "isize"
    ],
    [
      "std::marker:1.10",
      "marker"
    ],
    [
      "std::mem:1.10",
      "mem"
    ],
    [
      "std::num:1.10",
      "num"
    ],
    [
      "std::ops:1.10",
      "ops"
    ],
    [
      "std::option:1.10",
      "option"
    ],
    [
      "std::os:1.10",
      "os"
    ],
    [
      "std::panic:1.10",
      "panic"
    ],
    [
      "std::path:1.10",
      "path"
    ],
    [
      "std::prelude:1.10",
      "prelude"
    ],
    [
      "std::process:1.10",
      "process"
    ],
    [
      "std::ptr:1.10",
      "ptr"
    ],
    [
      "std::rc:1.10",
      "rc"
    ],
    [
      "std::result:1.10",
      "result"
    ],
    [
      "std::slice:1.10",
      "slice"
    ],
    [
      "std::string:1.10",
      "string"
    ],
    [
      "std::time:1.10",
      "time"
    ],
    [
      "std::u16:1.10",
      "u16"
    ],
    [
      "std::u32:1.10",
      "u32"
    ],
    [
      "std::u64:1.10",
      "u64"
    ],
    [
      "std::u8:1.10",
      "u8"
    ],
    [
      "std::usize:1.10",
      "usize"
    ],
    [
      "std::vec:1.10",
      "vec"
    ],
    [
      "std::any:1.40",
      "any"
    ],
    [
      "std::ascii:1.40",
      "ascii"
    ],
    [
      "std::borrow:1.40",
      "borrow"
    ],
    [
      "std::boxed:1.40",
      "boxed"
    ],
    [
      "std::cell:1.40",
      "cell"
    ],
    [
      "std::char:1.40",
      "char"
    ],
    [
      "std::collections:1.40",
      "collections"
    ],
    [
      "std::env:1.40",
      "env"
    ],
    [
      "std::fs:1.40",
      "fs"
    ],
    [
      "std::net:1.40",
      "net"
    ],
    [
      "std::thread:1.40",
      "thread"
    ],
    [
      "std::str:1.40",
      "str"
    ],
    [
      "std::intrinsics:1.40",
      "intrinsics"
    ],
    [
      "std::raw:1.40",
      "raw"
    ],
    [
      "std::clone:1.40",
      "clone"
    ],
    [
      "std::cmp:1.40",
      "cmp"
    ],
    [
      "std::convert:1.40",
      "convert"
    ],
    [
      "std::default:1.40",
      "default"
    ],
    [
      "std::error:1.40",
      "error"
    ],
    [
      "std::f32:1.40",
      "f32"
    ],
    [
      "std::f64:1.40",
      "f64"
    ],
    [
      "std::ffi:1.40",
      "ffi"
    ],
    [
      "std::fmt:1.40",
      "fmt"
    ],
    [
      "std::hash:1.40",
      "hash"
    ],
    [
      "std::i16:1.40",
      "i16"
    ],
    [
      "std::i32:1.40",
      "i32"
    ],
    [
      "std::i64:1.40",
      "i64"
    ],
    [
      "std::i8:1.40",
      "i8"
    ],
    [
      "std::io:1.40",
      "io"
    ],
    [
      "std::isize:1.40",
      "isize"
    ],
    [
      "std::marker:1.40",
      "marker"
    ],
    [
      "std::mem:1.40",
      "mem"
    ],
    [
      "std::num:1.40",
      "num"
    ],
    [
      "std::ops:1.40",
      "ops"
    ],
    [
      "std::option:1.40",
      "option"
    ],
    [
      "std::os:1.40",
      "os"
    ],
    [
      "std::panic:1.40",
      "panic"
    ],
    [
      "std::path:1.40",
      "path"
    ],
    [
      "std::prelude:1.40",
      "prelude"
    ],
    [
      "std::process:1.40",
      "process"
    ],
    [
      "std::ptr:1.40",
      "ptr"
    ],
    [
      "std::rc:1.40",
      "rc"
    ],
    [
      "std::result:1.40",
      "result"
    ],
    [
      "std::slice:1.40",
      "slice"
    ],
    [
      "std::string:1.40",
      "string"
    ],
    [
      "std::time:1.40",
      "time"
    ],
    [
      "std::u16:1.40",
      "u16"
    ],
    [
      "std::u32:1.40",
      "u32"
    ],
    [
      "std::u64:1.40",
      "u64"
    ],
    [
      "std::u8:1.40",
      "u8"
    ],
    [
      "std::usize:1.40",
      "usize"
    ],
    [
      "std::vec:1.40",
      "vec"
    ],
    [
      "std::any:1.80",
      "any"
    ],
    [
      "std::ascii:1.80",
      "ascii"
    ],
    [
      "std::borrow:1.80",
      "borrow"
    ],
    [
      "std::boxed:1.80",
      "boxed"
    ],
    [
      "std::cell:1.80",
      "cell"
    ],
    [
      "std::char:1.80",
      "char"
    ],
    [
      "std::collections:1.80",
      "collections"
    ],
    [
      "std::env:1.80",
      "env"
    ],
    [
      "std::fs:1.80",
      "fs"
    ],
    [
      "std::net:1.80",
      "net"
    ],
    [
      "std::thread:1.80",
      "thread"
    ],
    [
      "std::str:1.80",
      "str"
    ],
    [
      "std::intrinsics:1.80",
      "intrinsics"
    ],
    [
      "std::raw:1.80",
      "raw"
    ],
    [
      "std::clone:1.80",
      "clone"
    ],
    [
      "std::cmp:1.80",
      "cmp"
    ],
    [
      "std::convert:1.80",
      "convert"
    ],
    [
      "std::default:1.80",
      "default"
    ],
    [
      "std::error:1.80",
      "error"
    ],
    [
      "std::f32:1.80",
      "f32"
    ],
    [
      "std::f64:1.80",
      "f64"
    ],
    [
      "std::ffi:1.80",
      "ffi"
    ],
    [
      "std::fmt:1.80",
      "fmt"
    ],
    [
      "std::hash:1.80",
      "hash"
    ],
    [
      "std::i16:1.80",
      "i16"
    ],
    [
      "std::i32:1.80",
      "i32"
    ],
    [
      "std::i64:1.80",
      "i64"
    ],
    [
      "std::i8:1.80",
      "i8"
    ],
    [
      "std::io:1.80",
      "io"
    ],
    [
      "std::isize:1.80",
      "isize"
    ],
    [
      "std::iter:1.80",
      "iter"
    ],
    [
      "std::marker:1.80",
      "marker"
    ],
    [
      "std::mem:1.80",
      "mem"
    ],
    [
      "std::num:1.80",
      "num"
    ],
    [
      "std::ops:1.80",
      "ops"
    ],
    [
      "std::option:1.80",
      "option"
    ],
    [
      "std::os:1.80",
      "os"
    ],
    [
      "std::panic:1.80",
      "panic"
    ],
    [
      "std::path:1.80",
      "path"
    ],
    [
      "std::prelude:1.80",
      "prelude"
    ],
    [
      "std::process:1.80",
      "process"
    ],
    [
      "std::ptr:1.80",
      "ptr"
    ],
    [
      "std::rc:1.80",
      "rc"
    ],
    [
      "std::result:1.80",
      "result"
    ],
    [
      "std::slice:1.80",
      "slice"
    ],
    [
      "std::string:1.80",
      "string"
    ],
    [
      "std::time:1.80",
      "time"
    ],
    [
      "std::u16:1.80",
      "u16"
    ],
    [
      "std::u32:1.80",
      "u32"
    ],
    [
      "std::u64:1.80",
      "u64"
    ],
    [
      "std::u8:1.80",
      "u8"
    ],
    [
      "std::usize:1.80",
      "usize"
    ],
    [
      "std::vec:1.80",
      "vec"
    ],
    [
      "std::any:1.50",
      "any"
    ],
    [
      "std::ascii:1.50",
      "ascii"
    ],
    [
      "std::borrow:1.50",
      "borrow"
    ],
    [
      "std::boxed:1.50",
      "boxed"
    ],
    [
      "std::cell:1.50",
      "cell"
    ],
    [
      "std::char:1.50",
      "char"
    ],
    [
      "std::collections:1.50",
      "collections"
    ],
    [
      "std::env:1.50",
      "env"
    ],
    [
      "std::fs:1.50",
      "fs"
    ],
    [
      "std::net:1.50",
      "net"
    ],
    [
      "std::thread:1.50",
      "thread"
    ],
    [
      "std::str:1.50",
      "str"
    ],
    [
      "std::intrinsics:1.50",
      "intrinsics"
    ],
    [
      "std::raw:1.50",
      "raw"
    ],
    [
      "std::clone:1.50",
      "clone"
    ],
    [
      "std::cmp:1.50",
      "cmp"
    ],
    [
      "std::convert:1.50",
      "convert"
    ],
    [
      "std::default:1.50",
      "default"
    ],
    [
      "std::error:1.50",
      "error"
    ],
    [
      "std::f32:1.50",
      "f32"
    ],
    [
      "std::f64:1.50",
      "f64"
    ],
    [
      "std::ffi:1.50",
      "ffi"
    ],
    [
      "std::fmt:1.50",
      "fmt"
    ],
    [
      "std::hash:1.50",
      "hash"
    ],
    [
      "std::i16:1.50",
      "i16"
    ],
    [
      "std::i32:1.50",
      "i32"
    ],
    [
      "std::i64:1.50",
      "i64"
    ],
    [
      "std::i8:1.50",
      "i8"
    ],
    [
      "std::io:1.50",
      "io"
    ],
    [
      "std::isize:1.50",
      "isize"
    ],
    [
      "std::marker:1.50",
      "marker"
    ],
    [
      "std::mem:1.50",
      "mem"
    ],
    [
      "std::num:1.50",
      "num"
    ],
    [
      "std::ops:1.50",
      "ops"
    ],
    [
      "std::option:1.50",
      "option"
    ],
    [
      "std::os:1.50",
      "os"
    ],
    [
      "std::panic:1.50",
      "panic"
    ],
    [
      "std::path:1.50",
      "path"
    ],
    [
      "std::prelude:1.50",
      "prelude"
    ],
    [
      "std::process:1.50",
      "process"
    ],
    [
      "std::ptr:1.50",
      "ptr"
    ],
    [
      "std::rc:1.50",
      "rc"
    ],
    [
      "std::result:1.50",
      "result"
    ],
    [
      "std::slice:1.50",
      "slice"
    ],
    [
      "std::string:1.50",
      "string"
    ],
    [
      "std::time:1.50",
      "time"
    ],
    [
      "std::u16:1.50",
      "u16"
    ],
    [
      "std::u32:1.50",
      "u32"
    ],
    [
      "std::u64:1.50",
      "u64"
    ],
    [
      "std::u8:1.50",
      "u8"
    ],
    [
      "std::usize:1.50",
      "usize"
    ],
    [
      "std::vec:1.50",
      "vec"
    ],
    [
      "std::any:1.60",
      "any"
    ],
    [
      "std::ascii:1.60",
      "ascii"
    ],
    [
      "std::borrow:1.60",
      "borrow"
    ],
    [
      "std::boxed:1.60",
      "boxed"
    ],
    [
      "std::cell:1.60",
      "cell"
    ],
    [
      "std::char:1.60",
      "char"
    ],
    [
      "std::collections:1.60",
      "collections"
    ],
    [
      "std::env:1.60",
      "env"
    ],
    [
      "std::fs:1.60",
      "fs"
    ],
    [
      "std::net:1.60",
      "net"
    ],
    [
      "std::thread:1.60",
      "thread"
    ],
    [
      "std::str:1.60",
      "str"
    ],
    [
      "std::intrinsics:1.60",
      "intrinsics"
    ],
    [
      "std::raw:1.60",
      "raw"
    ],
    [
      "std::clone:1.60",
      "clone"
    ],
    [
      "std::cmp:1.60",
      "cmp"
    ],
    [
      "std::convert:1.60",
      "convert"
    ],
    [
      "std::default:1.60",
      "default"
    ],
    [
      "std::error:1.60",
      "error"
    ],
    [
      "std::f32:1.60",
      "f32"
    ],
    [
      "std::f64:1.60",
      "f64"
    ],
    [
      "std::ffi:1.60",
      "ffi"
    ],
    [
      "std::fmt:1.60",
      "fmt"
    ],
    [
      "std::hash:1.60",
      "hash"
    ],
    [
      "std::i16:1.60",
      "i16"
    ],
    [
      "std::i32:1.60",
      "i32"
    ],
    [
      "std::i64:1.60",
      "i64"
    ],
    [
      "std::i8:1.60",
      "i8"
    ],
    [
      "std::io:1.60",
      "io"
    ],
    [
      "std::isize:1.60",
      "isize"
    ],
    [
      "std::marker:1.60",
      "marker"
    ],
    [
      "std::mem:1.60",
      "mem"
    ],
    [
      "std::num:1.60",
      "num"
    ],
    [
      "std::ops:1.60",
      "ops"
    ],
    [
      "std::option:1.60",
      "option"
    ],
    [
      "std::os:1.60",
      "os"
    ],
    [
      "std::panic:1.60",
      "panic"
    ],
    [
      "std::path:1.60",
      "path"
    ],
    [
      "std::prelude:1.60",
      "prelude"
    ],
    [
      "std::process:1.60",
      "process"
    ],
    [
      "std::ptr:1.60",
      "ptr"
    ],
    [
      "std::rc:1.60",
      "rc"
    ],
    [
      "std::result:1.60",
      "result"
    ],
    [
      "std::slice:1.60",
      "slice"
    ],
    [
      "std::string:1.60",
      "string"
    ],
    [
      "std::time:1.60",
      "time"
    ],
    [
      "std::u16:1.60",
      "u16"
    ],
    [
      "std::u32:1.60",
      "u32"
    ],
    [
      "std::u64:1.60",
      "u64"
    ],
    [
      "std::u8:1.60",
      "u8"
    ],
    [
      "std::usize:1.60",
      "usize"
    ],
    [
      "std::vec:1.60",
      "vec"
    ],
    [
      "core::alloc:1.30",
      "alloc"
    ],
    [
      "core::any:1.30",
      "any"
    ],
    [
      "core::arch:1.30",
      "arch"
    ],
    [
      "core::array:1.30",
      "array"
    ],
    [
      "core::ascii:1.30",
      "ascii"
    ],
    [
      "core::borrow:1.30",
      "borrow"
    ],
    [
      "core::cell:1.30",
      "cell"
    ],
    [
      "core::char:1.30",
      "char"
    ],
    [
      "core::clone:1.30",
      "clone"
    ],
    [
      "core::cmp:1.30",
      "cmp"
    ],
    [
      "core::convert:1.30",
      "convert"
    ],
    [
      "core::default:1.30",
      "default"
    ],
    [
      "core::f32:1.30",
      "f32"
    ],
    [
      "core::f64:1.30",
      "f64"
    ],
    [
      "core::ffi:1.30",
      "ffi"
    ],
    [
      "core::fmt:1.30",
      "fmt"
    ],
    [
      "core::future:1.30",
      "future"
    ],
    [
      "core::hash:1.30",
      "hash"
    ],
    [
      "core::hint:1.30",
      "hint"
    ],
    [
      "core::i128:1.30",
      "i128"
    ],
    [
      "core::i16:1.30",
      "i16"
    ],
    [
      "core::i32:1.30",
      "i32"
    ],
    [
      "core::i64:1.30",
      "i64"
    ],
    [
      "core::i8:1.30",
      "i8"
    ],
    [
      "core::intrinsics:1.30",
      "intrinsics"
    ],
    [
      "core::isize:1.30",
      "isize"
    ],
    [
      "core::iter:1.30",
      "iter"
    ],
    [
      "core::marker:1.30",
      "marker"
    ],
    [
      "core::mem:1.30",
      "mem"
    ],
    [
      "core::num:1.30",
      "num"
    ],
    [
      "core::ops:1.30",
      "ops"
    ],
    [
      "core::option:1.30",
      "option"
    ],
    [
      "core::panic:1.30",
      "panic"
    ],
    [
      "core::panicking:1.30",
      "panicking"
    ],
    [
      "core::pin:1.30",
      "pin"
    ],
    [
      "core::prelude:1.30",
      "prelude"
    ],
    [
      "core::ptr:1.30",
      "ptr"
    ],
    [
      "core::raw:1.30",
      "raw"
    ],
    [
      "core::result:1.30",
      "result"
    ],
    [
      "core::slice:1.30",
      "slice"
    ],
    [
      "core::str:1.30",
      "str"
    ],
    [
      "core::sync:1.30",
      "sync"
    ],
    [
      "core::task:1.30",
      "task"
    ],
    [
      "core::time:1.30",
      "time"
    ],
    [
      "core::u128:1.30",
      "u128"
    ],
    [
      "core::u16:1.30",
      "u16"
    ],
    [
      "core::u32:1.30",
      "u32"
    ],
    [
      "core::u64:1.30",
      "u64"
    ],
    [
      "core::u8:1.30",
      "u8"
    ],
    [
      "core::unicode:1.30",
      "unicode"
    ],
    [
      "core::usize:1.30",
      "usize"
    ],
    [
      "core::alloc:1.70",
      "alloc"
    ],
    [
      "core::any:1.70",
      "any"
    ],
    [
      "core::arch:1.70",
      "arch"
    ],
    [
      "core::array:1.70",
      "array"
    ],
    [
      "core::ascii:1.70",
      "ascii"
    ],
    [
      "core::borrow:1.70",
      "borrow"
    ],
    [
      "core::cell:1.70",
      "cell"
    ],
    [
      "core::char:1.70",
      "char"
    ],
    [
      "core::clone:1.70",
      "clone"
    ],
    [
      "core::cmp:1.70",
      "cmp"
    ],
    [
      "core::convert:1.70",
      "convert"
    ],
    [
      "core::default:1.70",
      "default"
    ],
    [
      "core::f32:1.70",
      "f32"
    ],
    [
      "core::f64:1.70",
      "f64"
    ],
    [
      "core::ffi:1.70",
      "ffi"
    ],
    [
      "core::fmt:1.70",
      "fmt"
    ],
    [
      "core::future:1.70",
      "future"
    ],
    [
      "core::hash:1.70",
      "hash"
    ],
    [
      "core::hint:1.70",
      "hint"
    ],
    [
      "core::i128:1.70",
      "i128"
    ],
    [
      "core::i16:1.70",
      "i16"
    ],
    [
      "core::i32:1.70",
      "i32"
    ],
    [
      "core::i64:1.70",
      "i64"
    ],
    [
      "core::i8:1.70",
      "i8"
    ],
    [
      "core::intrinsics:1.70",
      "intrinsics"
    ],
    [
      "core::isize:1.70",
      "isize"
    ],
    [
      "core::iter:1.70",
      "iter"
    ],
    [
      "core::marker:1.70",
      "marker"
    ],
    [
      "core::mem:1.70",
      "mem"
    ],
    [
      "core::num:1.70",
      "num"
    ],
    [
      "core::ops:1.70",
      "ops"
    ],
    [
      "core::option:1.70",
      "option"
    ],
    [
      "core::panic:1.70",
      "panic"
    ],
    [
      "core::panicking:1.70",
      "panicking"
    ],
    [
      "core::pin:1.70",
      "pin"
    ],
    [
      "core::prelude:1.70",
      "prelude"
    ],
    [
      "core::ptr:1.70",
      "ptr"
    ],
    [
      "core::raw:1.70",
      "raw"
    ],
    [
      "core::result:1.70",
      "result"
    ],
    [
      "core::slice:1.70",
      "slice"
    ],
    [
      "core::str:1.70",
      "str"
    ],
    [
      "core::sync:1.70",
      "sync"
    ],
    [
      "core::task:1.70",
      "task"
    ],
    [
      "core::time:1.70",
      "time"
    ],
    [
      "core::u128:1.70",
      "u128"
    ],
    [
      "core::u16:1.70",
      "u16"
    ],
    [
      "core::u32:1.70",
      "u32"
    ],
    [
      "core::u64:1.70",
      "u64"
    ],
    [
      "core::u8:1.70",
      "u8"
    ],
    [
      "core::unicode:1.70",
      "unicode"
    ],
    [
      "core::usize:1.70",
      "usize"
    ],
    [
      "core::lazy:1.70",
      "lazy"
    ],
    [
      "core::primitive:1.70",
      "primitive"
    ],
    [
      "core::alloc:1.40",
      "alloc"
    ],
    [
      "core::any:1.40",
      "any"
    ],
    [
      "core::arch:1.40",
      "arch"
    ],
    [
      "core::array:1.40",
      "array"
    ],
    [
      "core::ascii:1.40",
      "ascii"
    ],
    [
      "core::borrow:1.40",
      "borrow"
    ],
    [
      "core::cell:1.40",
      "cell"
    ],
    [
      "core::char:1.40",
      "char"
    ],
    [
      "core::clone:1.40",
      "clone"
    ],
    [
      "core::cmp:1.40",
      "cmp"
    ],
    [
      "core::convert:1.40",
      "convert"
    ],
    [
      "core::default:1.40",
      "default"
    ],
    [
      "core::f32:1.40",
      "f32"
    ],
    [
      "core::f64:1.40",
      "f64"
    ],
    [
      "core::ffi:1.40",
      "ffi"
    ],
    [
      "core::fmt:1.40",
      "fmt"
    ],
    [
      "core::future:1.40",
      "future"
    ],
    [
      "core::hash:1.40",
      "hash"
    ],
    [
      "core::hint:1.40",
      "hint"
    ],
    [
      "core::i128:1.40",
      "i128"
    ],
    [
      "core::i16:1.40",
      "i16"
    ],
    [
      "core::i32:1.40",
      "i32"
    ],
    [
      "core::i64:1.40",
      "i64"
    ],
    [
      "core::i8:1.40",
      "i8"
    ],
    [
      "core::intrinsics:1.40",
      "intrinsics"
    ],
    [
      "core::isize:1.40",
      "isize"
    ],
    [
      "core::iter:1.40",
      "iter"
    ],
    [
      "core::marker:1.40",
      "marker"
    ],
    [
      "core::mem:1.40",
      "mem"
    ],
    [
      "core::num:1.40",
      "num"
    ],
    [
      "core::ops:1.40",
      "ops"
    ],
    [
      "core::option:1.40",
      "option"
    ],
    [
      "core::panic:1.40",
      "panic"
    ],
    [
      "core::panicking:1.40",
      "panicking"
    ],
    [
      "core::pin:1.40",
      "pin"
    ],
    [
      "core::prelude:1.40",
      "prelude"
    ],
    [
      "core::ptr:1.40",
      "ptr"
    ],
    [
      "core::raw:1.40",
      "raw"
    ],
    [
      "core::result:1.40",
      "result"
    ],
    [
      "core::slice:1.40",
      "slice"
    ],
    [
      "core::str:1.40",
      "str"
    ],
    [
      "core::sync:1.40",
      "sync"
    ],
    [
      "core::task:1.40",
      "task"
    ],
    [
      "core::time:1.40",
      "time"
    ],
    [
      "core::u128:1.40",
      "u128"
    ],
    [
      "core::u16:1.40",
      "u16"
    ],
    [
      "core::u32:1.40",
      "u32"
    ],
    [
      "core::u64:1.40",
      "u64"
    ],
    [
      "core::u8:1.40",
      "u8"
    ],
    [
      "core::unicode:1.40",
      "unicode"
    ],
    [
      "core::usize:1.40",
      "usize"
    ],
    [
      "core::alloc:1.60",
      "alloc"
    ],
    [
      "core::any:1.60",
      "any"
    ],
    [
      "core::arch:1.60",
      "arch"
    ],
    [
      "core::array:1.60",
      "array"
    ],
    [
      "core::ascii:1.60",
      "ascii"
    ],
    [
      "core::borrow:1.60",
      "borrow"
    ],
    [
      "core::cell:1.60",
      "cell"
    ],
    [
      "core::char:1.60",
      "char"
    ],
    [
      "core::clone:1.60",
      "clone"
    ],
    [
      "core::cmp:1.60",
      "cmp"
    ],
    [
      "core::convert:1.60",
      "convert"
    ],
    [
      "core::default:1.60",
      "default"
    ],
    [
      "core::f32:1.60",
      "f32"
    ],
    [
      "core::f64:1.60",
      "f64"
    ],
    [
      "core::ffi:1.60",
      "ffi"
    ],
    [
      "core::fmt:1.60",
      "fmt"
    ],
    [
      "core::future:1.60",
      "future"
    ],
    [
      "core::hash:1.60",
      "hash"
    ],
    [
      "core::hint:1.60",
      "hint"
    ],
    [
      "core::i128:1.60",
      "i128"
    ],
    [
      "core::i16:1.60",
      "i16"
    ],
    [
      "core::i32:1.60",
      "i32"
    ],
    [
      "core::i64:1.60",
      "i64"
    ],
    [
      "core::i8:1.60",
      "i8"
    ],
    [
      "core::intrinsics:1.60",
      "intrinsics"
    ],
    [
      "core::isize:1.60",
      "isize"
    ],
    [
      "core::iter:1.60",
      "iter"
    ],
    [
      "core::marker:1.60",
      "marker"
    ],
    [
      "core::mem:1.60",
      "mem"
    ],
    [
      "core::num:1.60",
      "num"
    ],
    [
      "core::ops:1.60",
      "ops"
    ],
    [
      "core::option:1.60",
      "option"
    ],
    [
      "core::panic:1.60",
      "panic"
    ],
    [
      "core::panicking:1.60",
      "panicking"
    ],
    [
      "core::pin:1.60",
      "pin"
    ],
    [
      "core::prelude:1.60",
      "prelude"
    ],
    [
      "core::ptr:1.60",
      "ptr"
    ],
    [
      "core::raw:1.60",
      "raw"
    ],
    [
      "core::result:1.60",
      "result"
    ],
    [
      "core::slice:1.60",
      "slice"
    ],
    [
      "core::str:1.60",
      "str"
    ],
    [
      "core::sync:1.60",
      "sync"
    ],
    [
      "core::task:1.60",
      "task"
    ],
    [
      "core::time:1.60",
      "time"
    ],
    [
      "core::u128:1.60",
      "u128"
    ],
    [
      "core::u16:1.60",
      "u16"
    ],
    [
      "core::u32:1.60",
      "u32"
    ],
    [
      "core::u64:1.60",
      "u64"
    ],
    [
      "core::u8:1.60",
      "u8"
    ],
    [
      "core::unicode:1.60",
      "unicode"
    ],
    [
      "core::usize:1.60",
      "usize"
    ],
    [
      "core::lazy:1.60",
      "lazy"
    ],
    [
      "core::primitive:1.60",
      "primitive"
    ],
    [
      "core::alloc:1.80",
      "alloc"
    ],
    [
      "core::any:1.80",
      "any"
    ],
    [
      "core::arch:1.80",
      "arch"
    ],
    [
      "core::array:1.80",
      "array"
    ],
    [
      "core::ascii:1.80",
      "ascii"
    ],
    [
      "core::borrow:1.80",
      "borrow"
    ],
    [
      "core::cell:1.80",
      "cell"
    ],
    [
      "core::char:1.80",
      "char"
    ],
    [
      "core::clone:1.80",
      "clone"
    ],
    [
      "core::cmp:1.80",
      "cmp"
    ],
    [
      "core::convert:1.80",
      "convert"
    ],
    [
      "core::default:1.80",
      "default"
    ],
    [
      "core::f32:1.80",
      "f32"
    ],
    [
      "core::f64:1.80",
      "f64"
    ],
    [
      "core::ffi:1.80",
      "ffi"
    ],
    [
      "core::fmt:1.80",
      "fmt"
    ],
    [
      "core::future:1.80",
      "future"
    ],
    [
      "core::hash:1.80",
      "hash"
    ],
    [
      "core::hint:1.80",
      "hint"
    ],
    [
      "core::i128:1.80",
      "i128"
    ],
    [
      "core::i16:1.80",
      "i16"
    ],
    [
      "core::i32:1.80",
      "i32"
    ],
    [
      "core::i64:1.80",
      "i64"
    ],
    [
      "core::i8:1.80",
      "i8"
    ],
    [
      "core::intrinsics:1.80",
      "intrinsics"
    ],
    [
      "core::isize:1.80",
      "isize"
    ],
    [
      "core::iter:1.80",
      "iter"
    ],
    [
      "core::marker:1.80",
      "marker"
    ],
    [
      "core::mem:1.80",
      "mem"
    ],
    [
      "core::num:1.80",
      "num"
    ],
    [
      "core::ops:1.80",
      "ops"
    ],
    [
      "core::option:1.80",
      "option"
    ],
    [
      "core::panic:1.80",
      "panic"
    ],
    [
      "core::panicking:1.80",
      "panicking"
    ],
    [
      "core::pin:1.80",
      "pin"
    ],
    [
      "core::prelude:1.80",
      "prelude"
    ],
    [
      "core::ptr:1.80",
      "ptr"
    ],
    [
      "core::raw:1.80",
      "raw"
    ],
    [
      "core::result:1.80",
      "result"
    ],
    [
      "core::slice:1.80",
      "slice"
    ],
    [
      "core::str:1.80",
      "str"
    ],
    [
      "core::sync:1.80",
      "sync"
    ],
    [
      "core::task:1.80",
      "task"
    ],
    [
      "core::time:1.80",
      "time"
    ],
    [
      "core::u128:1.80",
      "u128"
    ],
    [
      "core::u16:1.80",
      "u16"
    ],
    [
      "core::u32:1.80",
      "u32"
    ],
    [
      "core::u64:1.80",
      "u64"
    ],
    [
      "core::u8:1.80",
      "u8"
    ],
    [
      "core::unicode:1.80",
      "unicode"
    ],
    [
      "core::usize:1.80",
      "usize"
    ],
    [
      "core::lazy:1.80",
      "lazy"
    ],
    [
      "core::primitive:1.80",
      "primitive"
    ],
    [
      "core::alloc:1.50",
      "alloc"
    ],
    [
      "core::any:1.50",
      "any"
    ],
    [
      "core::arch:1.50",
      "arch"
    ],
    [
      "core::array:1.50",
      "array"
    ],
    [
      "core::ascii:1.50",
      "ascii"
    ],
    [
      "core::borrow:1.50",
      "borrow"
    ],
    [
      "core::cell:1.50",
      "cell"
    ],
    [
      "core::char:1.50",
      "char"
    ],
    [
      "core::clone:1.50",
      "clone"
    ],
    [
      "core::cmp:1.50",
      "cmp"
    ],
    [
      "core::convert:1.50",
      "convert"
    ],
    [
      "core::default:1.50",
      "default"
    ],
    [
      "core::f32:1.50",
      "f32"
    ],
    [
      "core::f64:1.50",
      "f64"
    ],
    [
      "core::ffi:1.50",
      "ffi"
    ],
    [
      "core::fmt:1.50",
      "fmt"
    ],
    [
      "core::future:1.50",
      "future"
    ],
    [
      "core::hash:1.50",
      "hash"
    ],
    [
      "core::hint:1.50",
      "hint"
    ],
    [
      "core::i128:1.50",
      "i128"
    ],
    [
      "core::i16:1.50",
      "i16"
    ],
    [
      "core::i32:1.50",
      "i32"
    ],
    [
      "core::i64:1.50",
      "i64"
    ],
    [
      "core::i8:1.50",
      "i8"
    ],
    [
      "core::intrinsics:1.50",
      "intrinsics"
    ],
    [
      "core::isize:1.50",
      "isize"
    ],
    [
      "core::iter:1.50",
      "iter"
    ],
    [
      "core::marker:1.50",
      "marker"
    ],
    [
      "core::mem:1.50",
      "mem"
    ],
    [
      "core::num:1.50",
      "num"
    ],
    [
      "core::ops:1.50",
      "ops"
    ],
    [
      "core::option:1.50",
      "option"
    ],
    [
      "core::panic:1.50",
      "panic"
    ],
    [
      "core::panicking:1.50",
      "panicking"
    ],
    [
      "core::pin:1.50",
      "pin"
    ],
    [
      "core::prelude:1.50",
      "prelude"
    ],
    [
      "core::ptr:1.50",
      "ptr"
    ],
    [
      "core::raw:1.50",
      "raw"
    ],
    [
      "core::result:1.50",
      "result"
    ],
    [
      "core::slice:1.50",
      "slice"
    ],
    [
      "core::str:1.50",
      "str"
    ],
    [
      "core::sync:1.50",
      "sync"
    ],
    [
      "core::task:1.50",
      "task"
    ],
    [
      "core::time:1.50",
      "time"
    ],
    [
      "core::u128:1.50",
      "u128"
    ],
    [
      "core::u16:1.50",
      "u16"
    ],
    [
      "core::u32:1.50",
      "u32"
    ],
    [
      "core::u64:1.50",
      "u64"
    ],
    [
      "core::u8:1.50",
      "u8"
    ],
    [
      "core::unicode:1.50",
      "unicode"
    ],
    [
      "core::usize:1.50",
      "usize"
    ],
    [
      "core::lazy:1.50",
      "lazy"
    ],
    [
      "core::primitive:1.50",
      "primitive"
    ]
  ]
}