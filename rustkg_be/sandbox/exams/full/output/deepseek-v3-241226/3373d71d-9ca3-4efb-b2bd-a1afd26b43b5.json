{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","has description","has method","has argument","has return type","implements","has attribute"],"relation_triples":[["AtomicIsize","is a","struct"],["AtomicIsize","has full name","core::sync::atomic::AtomicIsize"],["AtomicIsize","stable since","1.0.0"],["AtomicIsize","has declaration","pub struct AtomicIsize { /* fields omitted */ }"],["AtomicIsize","has description","An integer type which can be safely shared between threads."],["AtomicIsize","has stability","This is supported on Windows only."],["new","is a","function"],["new","has full name","core::sync::atomic::AtomicIsize::new"],["new","has argument","v: isize"],["new","has return type","Self"],["new","has description","Creates a new atomic integer."],["AtomicIsize","has method","new"],["get_mut","is a","function"],["get_mut","has full name","core::sync::atomic::AtomicIsize::get_mut"],["get_mut","has return type","&mut isize"],["get_mut","has description","Returns a mutable reference to the underlying integer."],["get_mut","stable since","1.15.0"],["AtomicIsize","has method","get_mut"],["into_inner","is a","function"],["into_inner","has full name","core::sync::atomic::AtomicIsize::into_inner"],["into_inner","has return type","isize"],["into_inner","has description","Consumes the atomic and returns the contained value."],["into_inner","stable since","1.15.0"],["AtomicIsize","has method","into_inner"],["load","is a","function"],["load","has argument","order: Ordering"],["load","has return type","isize"],["load","has description","Loads a value from the atomic integer."],["AtomicIsize","has method","load"],["store","is a","function"],["store","has argument","val: isize"],["store","has argument","order: Ordering"],["store","has description","Stores a value into the atomic integer."],["AtomicIsize","has method","store"],["swap","is a","function"],["swap","has argument","val: isize"],["swap","has argument","order: Ordering"],["swap","has return type","isize"],["swap","has description","Stores a value into the atomic integer, returning the previous value."],["AtomicIsize","has method","swap"],["compare_and_swap","is a","function"],["compare_and_swap","has argument","current: isize"],["compare_and_swap","has argument","new: isize"],["compare_and_swap","has argument","order: Ordering"],["compare_and_swap","has return type","isize"],["compare_and_swap","has description","Stores a value into the atomic integer if the current value is the same as the current value."],["AtomicIsize","has method","compare_and_swap"],["fetch_add","is a","function"],["fetch_add","has argument","val: isize"],["fetch_add","has argument","order: Ordering"],["fetch_add","has return type","isize"],["fetch_add","has description","Adds to the current value, returning the previous value."],["AtomicIsize","has method","fetch_add"],["AtomicIsize","implements","Sync"],["AtomicIsize","implements","Default"],["AtomicIsize","implements","From<isize>"],["AtomicIsize","implements","Debug"],["From<isize>","stable since","1.23.0"],["Debug","stable since","1.3.0"],["fetch_update","has attribute","nightly-only experimental"],["fetch_max","has attribute","nightly-only experimental"],["fetch_min","has attribute","nightly-only experimental"]],"links":["../../../core/index.html","../../../primitive.u32.html","../../../../std/process/struct.Command.html","../../index.html","../index.html","index.html","struct.AtomicBool.html","struct.AtomicI16.html","struct.AtomicI32.html","struct.AtomicI64.html","struct.AtomicI8.html","struct.AtomicIsize.html","struct.AtomicPtr.html","struct.AtomicU16.html","struct.AtomicU32.html","struct.AtomicU64.html","struct.AtomicU8.html","struct.AtomicUsize.html","enum.Ordering.html","constant.ATOMIC_BOOL_INIT.html","constant.ATOMIC_I16_INIT.html","constant.ATOMIC_I32_INIT.html","constant.ATOMIC_I64_INIT.html","constant.ATOMIC_I8_INIT.html","constant.ATOMIC_ISIZE_INIT.html","constant.ATOMIC_U16_INIT.html","constant.ATOMIC_U32_INIT.html","constant.ATOMIC_U64_INIT.html","constant.ATOMIC_U8_INIT.html","constant.ATOMIC_USIZE_INIT.html","fn.compiler_fence.html","fn.fence.html","fn.spin_loop_hint.html","../../../src/core/sync/atomic.rs.html"],"create_time":"2025-03-13T18:44:52.603Z","id":"3373d71d-9ca3-4efb-b2bd-a1afd26b43b5","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/core/sync/atomic/struct.AtomicIsize.html","metrics":{"escapeCount":0,"costTime":274928,"totalUsage":{"prompt_tokens":33386,"completion_tokens":9308,"cached_tokens":0,"reasoning_tokens":7879},"length":91529},"extraInfo":{"startTime":"2025-03-13T18:40:17.385Z","examGroup":"full","sourceId":"0e3252a6-fe43-43bd-ad68-ee4ab128985d"}}