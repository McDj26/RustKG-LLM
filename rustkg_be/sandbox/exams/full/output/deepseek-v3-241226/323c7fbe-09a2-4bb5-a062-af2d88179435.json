{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has description","has attribute","has method","has argument","has type","has return type","implements","requires method","has declaration","has stability"],"relation_triples":[["NonZeroU64","is a","struct"],["NonZeroU64","has full name","std::num::NonZeroU64"],["NonZeroU64","stable since","1.28.0"],["NonZeroU64","has description","An integer that is known not to equal zero."],["NonZeroU64","has attribute","repr(transparent)"],["NonZeroU64","has method","new_unchecked"],["new_unchecked","is a","function"],["new_unchecked","has argument","n"],["n","has type","u64"],["new_unchecked","has return type","NonZeroU64"],["new_unchecked","has attribute","unsafe"],["new_unchecked","has description","Create a non-zero without checking the value. The value must not be zero."],["NonZeroU64","has method","new"],["new","is a","function"],["new","has argument","n"],["new","has return type","Option<NonZeroU64>"],["new","has description","Create a non-zero if the given value is not zero."],["NonZeroU64","has method","get"],["get","is a","function"],["get","has return type","u64"],["get","has description","Returns the value as a primitive type."],["NonZeroU64","implements","From<NonZeroU64>"],["From<NonZeroU64>","stable since","1.31.0"],["From<NonZeroU64>","requires method","from"],["from","has argument","nonzero"],["nonzero","has type","NonZeroU64"],["from","has return type","u64"],["NonZeroU64","implements","UpperHex"],["UpperHex","requires method","fmt"],["NonZeroU64","implements","Octal"],["Octal","requires method","fmt"],["NonZeroU64","implements","Copy"],["NonZeroU64","implements","LowerHex"],["LowerHex","requires method","fmt"],["NonZeroU64","implements","Display"],["Display","requires method","fmt"],["NonZeroU64","implements","Hash"],["Hash","requires method","hash"],["NonZeroU64","implements","Clone"],["Clone","requires method","clone"],["NonZeroU64","implements","PartialOrd<NonZeroU64>"],["PartialOrd<NonZeroU64>","requires method","partial_cmp"],["NonZeroU64","implements","Ord"],["Ord","requires method","cmp"],["NonZeroU64","implements","Binary"],["Binary","requires method","fmt"],["NonZeroU64","implements","Debug"],["Debug","requires method","fmt"],["NonZeroU64","implements","Eq"],["NonZeroU64","implements","PartialEq<NonZeroU64>"],["PartialEq<NonZeroU64>","requires method","eq"],["NonZeroU64","implements","Send"],["NonZeroU64","implements","Sync"],["NonZeroU64","implements","TryFrom"],["NonZeroU64","implements","From"],["NonZeroU64","implements","TryInto"],["NonZeroU64","implements","Into"],["NonZeroU64","implements","Borrow"],["NonZeroU64","implements","BorrowMut"],["NonZeroU64","implements","Any"],["NonZeroU64","implements","ToOwned"],["NonZeroU64","implements","ToString"]],"links":["../../std/index.html","index.html","struct.NonZeroU128.html","struct.NonZeroU16.html","struct.NonZeroU32.html","struct.NonZeroU8.html","struct.NonZeroUsize.html","struct.ParseFloatError.html","struct.ParseIntError.html","struct.TryFromIntError.html","struct.Wrapping.html","enum.FpCategory.html","../../src/core/num/mod.rs.html","../../std/convert/trait.From.html","../../std/fmt/trait.UpperHex.html","../../std/fmt/trait.Octal.html","../../std/marker/trait.Copy.html","../../std/fmt/trait.LowerHex.html","../../std/fmt/trait.Display.html","../../std/hash/trait.Hash.html","../../std/clone/trait.Clone.html","../../std/cmp/trait.PartialOrd.html","../../std/cmp/trait.Ord.html","../../std/fmt/trait.Binary.html","../../std/fmt/trait.Debug.html","../../std/cmp/trait.Eq.html","../../std/cmp/trait.PartialEq.html","../../std/marker/trait.Send.html","../../std/marker/trait.Sync.html","../../std/convert/trait.TryFrom.html","../../std/convert/trait.Into.html","../../std/borrow/trait.Borrow.html","../../std/borrow/trait.BorrowMut.html","../../std/any/trait.Any.html","../../std/borrow/trait.ToOwned.html","../../std/string/trait.ToString.html","../primitive.u64.html","../primitive.unit.html","../primitive.slice.html","../primitive.reference.html","../primitive.bool.html","../primitive.never.html","../../std/result/enum.Result.html","../../std/option/enum.Option.html","../../std/fmt/struct.Formatter.html","../../std/fmt/struct.Error.html","../../std/cmp/enum.Ordering.html","../../std/any/struct.TypeId.html","../../std/string/struct.String.html","../../src/core/convert.rs.html","../../src/core/borrow.rs.html","../../src/core/any.rs.html","../../src/alloc/borrow.rs.html","../../src/alloc/string.rs.html","https://github.com/rust-lang/rust/issues/33417","https://github.com/rust-lang/rust/issues/27745","https://github.com/rust-lang/rust/issues/41263"],"create_time":"2025-03-13T01:51:51.498Z","id":"323c7fbe-09a2-4bb5-a062-af2d88179435","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/std/num/struct.NonZeroU64.html","extraInfo":{"startTime":"2025-03-13T01:48:19.776Z","examGroup":"full","sourceId":"7c6faca8-74a2-4d34-a56e-3ac3bfeb2137"}}