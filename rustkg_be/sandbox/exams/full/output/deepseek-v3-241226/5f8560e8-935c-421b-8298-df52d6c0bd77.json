{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has attribute","has source","has module","has function","has method","has type","has return type","has argument","has description","has error","has trait","has implementation","has stability","has comment"],"relation_triples":[["std","has module","core"],["std","has module","fmt"],["std","has module","str"],["std","has module","num"],["std","has module","rawfp"],["std","has module","parse"],["std","has module","algorithm"],["std","has module","table"],["std","has function","dec2flt"],["std","has function","extract_sign"],["std","has function","simplify"],["std","has function","bound_intermediate_digits"],["std","has function","trivial_cases"],["std","has function","convert"],["std","has function","pfe_empty"],["std","has function","pfe_invalid"],["std","has type","ParseFloatError"],["std","has type","FloatErrorKind"],["std","has type","Sign"],["std","has type","ParseResult"],["std","has type","Decimal"],["std","has type","RawFloat"],["std","has trait","FromStr"],["std","has implementation","FromStr for f32"],["std","has implementation","FromStr for f64"],["std","has error","ParseFloatError"],["std","has method","from_str"],["std","has method","__description"],["std","has method","fmt"],["std","has argument","extract_sign::s"],["std","has argument","dec2flt::s"],["std","has argument","convert::decimal"],["std","has argument","simplify::decimal"],["std","has argument","bound_intermediate_digits::decimal"],["std","has argument","bound_intermediate_digits::e"],["std","has argument","trivial_cases::decimal"],["std","has return type","extract_sign::Sign"],["std","has return type","dec2flt::Result<T, ParseFloatError>"],["std","has return type","convert::Result<T, ParseFloatError>"],["std","has return type","simplify::()"],["std","has return type","bound_intermediate_digits::u64"],["std","has return type","trivial_cases::Option<T>"],["std","has description","dec2flt::Converts a decimal string into a floating point number."],["std","has description","extract_sign::Split decimal string into sign and the rest, without inspecting or validating the rest."],["std","has description","simplify::Strip zeros where possible, even when this requires changing the exponent"],["std","has description","bound_intermediate_digits::Quick and dirty upper bound on the size (log10) of the largest value that Algorithm R and Algorithm M will compute while working on the given decimal."],["std","has description","trivial_cases::Detect obvious overflows and underflows without even looking at the decimal digits."],["std","has comment","Copyright 2015 The Rust Project Developers. See the COPYRIGHT file at the top-level directory of this distribution and at http://rust-lang.org/COPYRIGHT."],["std","has comment","Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or http://www.apache.org/licenses/LICENSE-2.0> or the MIT license <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your option. This file may not be copied, modified, or distributed except according to those terms."],["std","has comment","Converting decimal strings into IEEE 754 binary floating point numbers."],["std","has comment","Problem statement"],["std","has comment","Implementation"],["std","has comment","Other"],["std","has comment","A note on integer overflow"],["std","has comment","FIXME Although some code duplication is necessary, perhaps parts of the code could be shuffled around such that less code is duplicated. Large parts of the algorithms are independent of the float type to output, or only needs access to a few constants, which could be passed in as parameters."],["std","has comment","The conversion should *never* panic. There are assertions and explicit panics in the code, but they should never be triggered and only serve as internal sanity checks. Any panics should be considered a bug."],["std","has comment","There are unit tests but they are woefully inadequate at ensuring correctness, they only cover a small percentage of possible errors. Far more extensive tests are located in the directory `src/etc/test-float-parse` as a Python script."],["std","has comment","A note on integer overflow: Many parts of this file perform arithmetic with the decimal exponent `e`. Primarily, we shift the decimal point around: Before the first decimal digit, after the last decimal digit, and so on. This could overflow if done carelessly. We rely on the parsing submodule to only hand out sufficiently small exponents, where 'sufficient' means 'such that the exponent +/- the number of decimal digits fits into a 64 bit integer'. Larger exponents are accepted, but we don't do arithmetic with them, they are immediately turned into {positive,negative} {zero,infinity}."],["std","has comment","As written, this optimizes badly (see #27130, though it refers to an old version of the code). `inline(always)` is a workaround for that. There are only two call sites overall and it doesn't make code size worse."],["std","has comment","Strip zeros where possible, even when this requires changing the exponent"],["std","has comment","Quick and dirty upper bound on the size (log10) of the largest value that Algorithm R and Algorithm M will compute while working on the given decimal."],["std","has comment","Detect obvious overflows and underflows without even looking at the decimal digits."]],"links":["../../../../core/index.html","../../../../settings.html","http://rust-lang.org/COPYRIGHT","http://www.apache.org/licenses/LICENSE-2.0","http://opensource.org/licenses/MIT","http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.45.4152","https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx"],"create_time":"2025-03-14T19:11:56.003Z","id":"5f8560e8-935c-421b-8298-df52d6c0bd77","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/src/core/num/dec2flt/mod.rs.html","metrics":{"escapeCount":0,"costTime":55428,"totalUsage":{"prompt_tokens":17740,"completion_tokens":1612,"cached_tokens":0,"reasoning_tokens":0},"length":46825},"extraInfo":{"startTime":"2025-03-14T19:10:54.600Z","examGroup":"full","sourceId":"ffd079b6-5ec9-4d1e-bc34-a138d1c75afd"}}