{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","requires method","has description","has argument","has type","has return type","implements","provides method","has attribute","returns"],"relation_triples":[["Alloc","is a","Trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has declaration","pub unsafe trait Alloc { unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr>; unsafe fn dealloc(&mut self, ptr: NonNull<u8>, layout: Layout); ... }"],["Alloc","has stability","nightly-only experimental API (allocator_api #32838)"],["Alloc","has description","An implementation of Alloc can allocate, reallocate, and deallocate arbitrary blocks of data described via Layout."],["Alloc","requires method","alloc"],["alloc","is a","function"],["alloc","has full name","alloc::alloc::Alloc::alloc"],["alloc","has attribute","unsafe"],["alloc","has return type","Result<NonNull<u8>, AllocErr>"],["alloc","has argument","layout"],["layout","has type","Layout"],["alloc","has description","Returns a pointer meeting the size and alignment guarantees of layout."],["Alloc","requires method","dealloc"],["dealloc","is a","function"],["dealloc","has full name","alloc::alloc::Alloc::dealloc"],["dealloc","has attribute","unsafe"],["dealloc","has argument","ptr"],["ptr","has type","NonNull<u8>"],["dealloc","has argument","layout"],["dealloc","has description","Deallocate the memory referenced by ptr."],["Alloc","provides method","usable_size"],["usable_size","is a","function"],["usable_size","has return type","(usize, usize)"],["usable_size","has argument","layout"],["usable_size","has description","Returns bounds on the guaranteed usable size of a successful allocation created with the specified layout."],["Global","implements","Alloc"],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["AllocErr","has description","The AllocErr error indicates an allocation failure that may be due to resource exhaustion or to something wrong when combining the given input arguments with this allocator."],["Layout","is a","struct"],["Layout","has full name","alloc::alloc::Layout"],["Layout","has description","Layout of a block of memory."],["alloc::alloc::alloc","is a","function"],["alloc::alloc::alloc","has description","Allocate memory with the global allocator."],["alloc::alloc::dealloc","is a","function"],["alloc::alloc::dealloc","has description","Deallocate memory with the global allocator."]],"links":["struct.AllocErr.html","struct.Global.html","struct.Layout.html","fn.alloc.html","fn.dealloc.html","fn.handle_alloc_error.html","../../src/core/alloc.rs.html","../../alloc/alloc/struct.Layout.html","../../core/result/enum.Result.html","../../core/ptr/struct.NonNull.html","https://github.com/rust-lang/rust/issues/32838"],"create_time":"2025-03-13T18:41:22.097Z","id":"57fede44-3ae5-4327-b2a5-84483ce5501f","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","metrics":{"escapeCount":0,"costTime":126660,"totalUsage":{"prompt_tokens":23864,"completion_tokens":4219,"cached_tokens":0,"reasoning_tokens":3302},"length":69595},"extraInfo":{"startTime":"2025-03-13T18:39:15.171Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}