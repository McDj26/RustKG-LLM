{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","requires method","provides method","has argument","has return type","implements","has description","has docblock","has required methods","has provided methods"],"relation_triples":[["Alloc","is a","Trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has declaration","pub unsafe trait Alloc { unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr>; unsafe fn dealloc(&mut self, ptr: NonNull<u8>, layout: Layout); ... }"],["Alloc","has stability","This is a nightly-only experimental API. (allocator_api #32838)"],["Alloc","has description","An implementation of `Alloc` can allocate, reallocate, and deallocate arbitrary blocks of data described via `Layout`."],["alloc","is a","function"],["alloc","has full name","alloc::alloc::Alloc::alloc"],["alloc","has argument","layout: Layout"],["alloc","has return type","Result<NonNull<u8>, AllocErr>"],["Alloc","requires method","alloc"],["dealloc","is a","function"],["dealloc","has full name","alloc::alloc::Alloc::dealloc"],["dealloc","has argument","ptr: NonNull<u8>"],["dealloc","has argument","layout: Layout"],["Alloc","requires method","dealloc"],["usable_size","is a","function"],["usable_size","has full name","alloc::alloc::Alloc::usable_size"],["usable_size","has argument","layout: &Layout"],["usable_size","has return type","(usize, usize)"],["Alloc","provides method","usable_size"],["realloc","is a","function"],["realloc","has full name","alloc::alloc::Alloc::realloc"],["realloc","has argument","ptr: NonNull<u8>"],["realloc","has argument","layout: Layout"],["realloc","has argument","new_size: usize"],["realloc","has return type","Result<NonNull<u8>, AllocErr>"],["Alloc","provides method","realloc"],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["Global","implements","Alloc"],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["Excess","is a","struct"],["Excess","has full name","alloc::alloc::Excess"],["Layout","is a","struct"],["Layout","has full name","alloc::alloc::Layout"]],"links":["../../alloc/alloc/struct.Layout.html","../../core/result/enum.Result.html","../../core/ptr/struct.NonNull.html","../../alloc/alloc/struct.AllocErr.html","../../alloc/alloc/struct.Excess.html","../../alloc/alloc/struct.Global.html","../../alloc/alloc/fn.handle_alloc_error.html","../../src/alloc/alloc.rs.html","../../src/core/alloc.rs.html","struct.AllocErr.html","struct.Excess.html","struct.Global.html","struct.Layout.html","struct.CannotReallocInPlace.html","trait.Alloc.html"],"create_time":"2025-03-13T18:44:32.459Z","id":"04e6172c-31fb-4964-a05d-c4ea9e675686","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","metrics":{"escapeCount":0,"costTime":58122,"totalUsage":{"prompt_tokens":23864,"completion_tokens":1887,"cached_tokens":0,"reasoning_tokens":1001},"length":69595},"extraInfo":{"startTime":"2025-03-13T18:43:34.134Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}