{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","requires method","has description","has argument","has type","has return type","implements","created by","has method"],"relation_triples":[["ChunksMut","is a","struct"],["ChunksMut","has full name","std::slice::ChunksMut"],["ChunksMut","stable since","1.0.0"],["ChunksMut","has declaration","pub struct ChunksMut<'a, T> where T: 'a, { /* fields omitted */ }"],["ChunksMut","has description","An iterator over a slice in (non-overlapping) mutable chunks (chunk_size elements at a time), starting at the beginning of the slice. When the slice len is not evenly divided by the chunk size, the last slice of the iteration will be the remainder. This struct is created by the chunks_mut method on slices."],["ChunksMut","created by","std::primitive.slice::chunks_mut"],["ChunksMut","implements","ExactSizeIterator"],["ChunksMut","implements","FusedIterator"],["ChunksMut","implements","DoubleEndedIterator"],["ChunksMut","implements","Iterator"],["ChunksMut","implements","TrustedLen"],["ChunksMut","implements","Debug"],["ExactSizeIterator","requires method","len"],["len","is a","function"],["len","has full name","std::slice::ChunksMut::len"],["len","has return type","usize"],["len","has description","Returns the exact number of times the iterator will iterate."],["len","has argument","len::self"],["len::self","has type","&self"],["ChunksMut","has method","len"],["is_empty","is a","function"],["is_empty","has full name","std::slice::ChunksMut::is_empty"],["is_empty","has return type","bool"],["is_empty","has description","Returns whether the iterator is empty."],["is_empty","has stability","This is a nightly-only experimental API. (exact_size_is_empty #35428)"],["is_empty","has argument","is_empty::self"],["is_empty::self","has type","&self"],["ChunksMut","has method","is_empty"],["next_back","is a","function"],["next_back","has full name","std::slice::ChunksMut::next_back"],["next_back","has return type","Option<&'a mut [T]>"],["next_back","has description","Removes and returns an element from the end of the iterator."],["next_back","has argument","next_back::self"],["next_back::self","has type","&mut self"],["DoubleEndedIterator","requires method","next_back"],["ChunksMut","has method","next_back"],["next","is a","function"],["next","has full name","std::slice::ChunksMut::next"],["next","has return type","Option<&'a mut [T]>"],["next","has description","Advances the iterator and returns the next value."],["next","has argument","next::self"],["next::self","has type","&mut self"],["Iterator","requires method","next"],["ChunksMut","has method","next"],["size_hint","is a","function"],["size_hint","has full name","std::slice::ChunksMut::size_hint"],["size_hint","has return type","(usize, Option<usize>)"],["size_hint","has description","Returns the bounds on the remaining length of the iterator."],["size_hint","has argument","size_hint::self"],["size_hint::self","has type","&self"],["Iterator","requires method","size_hint"],["ChunksMut","has method","size_hint"],["count","is a","function"],["count","has full name","std::slice::ChunksMut::count"],["count","has return type","usize"],["count","has description","Consumes the iterator, counting the number of iterations and returning it."],["count","has argument","count::self"],["count::self","has type","self"],["Iterator","requires method","count"],["ChunksMut","has method","count"],["nth","is a","function"],["nth","has full name","std::slice::ChunksMut::nth"],["nth","has return type","Option<&'a mut [T]>"],["nth","has description","Returns the nth element of the iterator."],["nth","has argument","nth::self"],["nth::self","has type","&mut self"],["nth","has argument","nth::n"],["nth::n","has type","usize"],["Iterator","requires method","nth"],["ChunksMut","has method","nth"],["last","is a","function"],["last","has full name","std::slice::ChunksMut::last"],["last","has return type","Option<Self::Item>"],["last","has description","Consumes the iterator, returning the last element."],["last","has argument","last::self"],["last::self","has type","self"],["Iterator","requires method","last"],["ChunksMut","has method","last"],["fmt","is a","function"],["fmt","has full name","std::slice::ChunksMut::fmt"],["fmt","has return type","Result<(), Error>"],["fmt","has description","Formats the value using the given formatter."],["fmt","has argument","fmt::self"],["fmt::self","has type","&self"],["fmt","has argument","fmt::f"],["fmt::f","has type","&mut Formatter"],["Debug","requires method","fmt"],["ChunksMut","has method","fmt"]],"links":["struct.Chunks.html","struct.ChunksExact.html","struct.ChunksExactMut.html","struct.ChunksMut.html","struct.Iter.html","struct.IterMut.html","struct.RChunks.html","struct.RChunksExact.html","struct.RChunksExactMut.html","struct.RChunksMut.html","struct.RSplit.html","struct.RSplitMut.html","struct.RSplitN.html","struct.RSplitNMut.html","struct.Split.html","struct.SplitMut.html","struct.SplitN.html","struct.SplitNMut.html","struct.Windows.html","trait.SliceConcatExt.html","trait.SliceIndex.html","fn.from_mut.html","fn.from_raw_parts.html","fn.from_raw_parts_mut.html","fn.from_ref.html","../../src/core/slice/mod.rs.html","../../src/core/iter/traits.rs.html","trait.ExactSizeIterator.html","trait.FusedIterator.html","trait.DoubleEndedIterator.html","trait.Iterator.html","trait.TrustedLen.html","trait.Debug.html","trait.Send.html","trait.Sync.html","trait.IntoIterator.html","trait.TryFrom.html","trait.From.html","trait.TryInto.html","trait.Into.html","trait.Borrow.html","trait.BorrowMut.html","trait.Any.html"],"create_time":"2025-03-13T18:44:14.011Z","id":"30746b07-1b18-4dd6-b167-b40eccf42ad2","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/std/slice/struct.ChunksMut.html","metrics":{"escapeCount":0,"costTime":342838,"totalUsage":{"prompt_tokens":51163,"completion_tokens":10979,"cached_tokens":0,"reasoning_tokens":9047},"length":150404},"extraInfo":{"startTime":"2025-03-13T18:38:27.557Z","examGroup":"full","sourceId":"0c9c4f92-3386-4e7c-a393-6932b6382dc0"}}