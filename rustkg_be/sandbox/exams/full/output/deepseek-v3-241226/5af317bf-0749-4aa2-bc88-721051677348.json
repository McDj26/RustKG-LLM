{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has description","implements","has method","has attribute","has argument","has return type","has type","has stability","requires method"],"relation_triples":[["System","is a","struct"],["System","has full name","std::alloc::System"],["System","stable since","1.28.0"],["System","has declaration","pub struct System;"],["System","has description","The default memory allocator provided by the operating system."],["System","implements","GlobalAlloc"],["System","implements","Alloc"],["System","implements","Send"],["System","implements","Sync"],["GlobalAlloc","is a","trait"],["Alloc","is a","trait"],["Send","is a","trait"],["Sync","is a","trait"],["GlobalAlloc::alloc","is a","function"],["GlobalAlloc::alloc","has attribute","unsafe"],["GlobalAlloc::alloc","has argument","layout"],["GlobalAlloc::alloc","has return type","*mut u8"],["GlobalAlloc::alloc_zeroed","is a","function"],["GlobalAlloc::alloc_zeroed","has attribute","unsafe"],["GlobalAlloc::alloc_zeroed","has argument","layout"],["GlobalAlloc::alloc_zeroed","has return type","*mut u8"],["GlobalAlloc::dealloc","is a","function"],["GlobalAlloc::dealloc","has attribute","unsafe"],["GlobalAlloc::dealloc","has argument","ptr"],["GlobalAlloc::dealloc","has argument","layout"],["GlobalAlloc::realloc","is a","function"],["GlobalAlloc::realloc","has attribute","unsafe"],["GlobalAlloc::realloc","has argument","ptr"],["GlobalAlloc::realloc","has argument","layout"],["GlobalAlloc::realloc","has argument","new_size"],["GlobalAlloc::realloc","has return type","*mut u8"],["Alloc::alloc","is a","function"],["Alloc::alloc","has attribute","unsafe"],["Alloc::alloc","has argument","layout"],["Alloc::alloc","has return type","Result<NonNull<u8>, AllocErr>"],["Alloc::alloc_zeroed","is a","function"],["Alloc::alloc_zeroed","has attribute","unsafe"],["Alloc::alloc_zeroed","has argument","layout"],["Alloc::alloc_zeroed","has return type","Result<NonNull<u8>, AllocErr>"],["Alloc::dealloc","is a","function"],["Alloc::dealloc","has attribute","unsafe"],["Alloc::dealloc","has argument","ptr"],["Alloc::dealloc","has argument","layout"],["Alloc::realloc","is a","function"],["Alloc::realloc","has attribute","unsafe"],["Alloc::realloc","has argument","ptr"],["Alloc::realloc","has argument","layout"],["Alloc::realloc","has argument","new_size"],["Alloc::realloc","has return type","Result<NonNull<u8>, AllocErr>"],["Alloc::usable_size","is a","function"],["Alloc::usable_size","has argument","layout"],["Alloc::usable_size","has return type","(usize, usize)"],["Alloc::alloc_excess","is a","function"],["Alloc::alloc_excess","has attribute","unsafe"],["Alloc::alloc_excess","has argument","layout"],["Alloc::alloc_excess","has return type","Result<Excess, AllocErr>"],["Alloc::realloc_excess","is a","function"],["Alloc::realloc_excess","has attribute","unsafe"],["All极::realloc_excess","has argument","ptr"],["Alloc::realloc_excess","has argument","layout"],["Alloc::realloc_excess","has argument","new_size"],["Alloc::realloc_excess","has return type","Result<Excess, AllocErr>"],["Alloc::grow_in_place","is a","function"],["Alloc::grow_in_place","has attribute","unsafe"],["Alloc::grow_in_place","has argument","ptr"],["Alloc::g极_in_place","has argument","layout"],["Alloc::grow_in_place","has argument","new_size"],["Alloc::grow_in_place","has return type","Result<(), CannotReallocInPlace>"],["Alloc::shrink_in_place","is a","function"],["Alloc::shrink_in_place","has attribute","unsafe"],["Alloc::shrink_in_place","has argument","ptr"],["Alloc::shrink_in_place","has argument","layout"],["Alloc::shrink_in_place","has argument","new_size"],["Alloc::shrink_in_place","has return type","Result<(), CannotReallocInPlace>"],["Alloc::alloc_one","is a","function"],["Alloc::alloc_one","has argument","T"],["Alloc::alloc_one","has return type","Result<NonNull<T>, AllocErr>"],["Alloc::dealloc_one","is a","function"],["Alloc::dealloc_one","has attribute","unsafe"],["Alloc::dealloc_one","has argument","ptr"],["Alloc::dealloc_one","has argument","T"],["Alloc::alloc_array","is a","function"],["Alloc::alloc_array","has argument","T"],["Alloc::alloc_array","has argument","n"],["Alloc::alloc_array","has return type","Result<NonNull<T>, AllocErr>"],["Alloc::realloc_array","is a","function"],["Alloc::realloc_array","has attribute","unsafe"],["Alloc::realloc_array","has argument","ptr"],["Alloc::realloc_array","has argument","n_old"],["Alloc::realloc_array","has argument","n_new"],["Alloc::realloc_array","has return type","Result<NonNull<T>, AllocErr>"],["Alloc::dealloc_array","is a","function"],["Alloc::dealloc_array","has attribute","unsafe"],["Alloc::dealloc_array","极rgument","ptr"],["Alloc::dealloc_array","has argument","n"],["Alloc::dealloc_array","has return type","Result<(), AllocErr>"]],"links":["../../std/index.html","../index.html","index.html","struct.AllocErr.html","struct.CannotReallocInPlace.html","struct.Excess.html","struct.Global.html","struct.Layout.html","struct.LayoutErr.html","struct.System.html","trait.Alloc.html","trait.GlobalAlloc.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","fn.set_alloc_error_hook.html","fn.take_alloc_error_hook.html","../../std/alloc/trait.GlobalAlloc.html","../../std/alloc/trait.Alloc.html","../../std/marker/trait.Send.html","../../std/marker/trait.Sync.html"],"create_time":"2025-03-15T04:46:51.138Z","id":"5af317bf-0749-4aa2-bc88-721051677348","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/std/alloc/struct.System.html","metrics":{"escapeCount":0,"costTime":80836,"totalUsage":{"prompt_tokens":19955,"completion_tokens":1932,"cached_tokens":0,"reasoning_tokens":0},"length":54226},"extraInfo":{"startTime":"2025-03-15T04:45:26.744Z","examGroup":"full","sourceId":"d4a6aaf1-8956-4941-8772-6eadfb6040e8"}}