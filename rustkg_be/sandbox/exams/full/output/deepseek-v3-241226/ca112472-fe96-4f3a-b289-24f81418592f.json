{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has attribute","requires method","has description","has argument","has type","has return type","implements","provides method","returns"],"relation_triples":[["Alloc","is a","Trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has attribute","unsafe"],["Alloc","has description","An implementation of Alloc can allocate, reallocate, and deallocate arbitrary blocks of data described via Layout."],["alloc","is a","function"],["Alloc","requires method","alloc"],["alloc","has full name","alloc::alloc::Alloc::alloc"],["alloc","has argument","layout"],["layout","has type","Layout"],["alloc","has return type","Result<NonNull<u8>, AllocErr>"],["alloc","has attribute","unsafe"],["alloc","has description","Returns a pointer meeting the size and alignment guarantees of layout."],["dealloc","is a","function"],["Alloc","requires method","dealloc"],["dealloc","has full name","alloc::alloc::Alloc::dealloc"],["dealloc","has argument","ptr"],["ptr","has type","NonNull<u8>"],["dealloc","has argument","layout"],["dealloc","has attribute","unsafe"],["dealloc","has description","Deallocate the memory referenced by ptr."],["usable_size","is a","function"],["Alloc","provides method","usable_size"],["usable_size","has full name","alloc::alloc::Alloc::usable_size"],["usable_size","has argument","layout"],["layout","has type","&Layout"],["usable_size","has return type","(usize, usize)"],["usable_size","has description","Returns bounds on the guaranteed usable size of a successful allocation created with the specified layout."],["Global","implements","Alloc"],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["Global","has description","The global memory allocator."],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["AllocErr","has description","The AllocErr error indicates an allocation failure that may be due to resource exhaustion or to something wrong when combining the given input arguments with this allocator."],["CannotReallocInPlace","is a","struct"],["CannotReallocInPlace","has full name","alloc::alloc::CannotReallocInPlace"],["CannotReallocInPlace","has description","The CannotReallocInPlace error is used when grow_in_place or shrink_in_place were unable to reuse the given memory block for a requested layout."],["shrink_in_place","has return type","Result<(), CannotReallocInPlace>"]],"links":["struct.AllocErr.html","struct.CannotReallocInPlace.html","struct.Excess.html","struct.Global.html","struct.Layout.html","struct.LayoutErr.html","trait.GlobalAlloc.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","../../src/core/alloc.rs.html","../../src/alloc/alloc.rs.html"],"create_time":"2025-03-13T01:52:57.155Z","id":"ca112472-fe96-4f3a-b289-24f81418592f","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","extraInfo":{"startTime":"2025-03-13T01:50:23.794Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}