{"relations":["is a","has full name","stable since","is successor of","is predecessor of","requires method","provides method","has argument","has return type","has description","has stability","implements","has attribute","has type"],"relation_triples":[["Alloc","is a","Trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","requires method","alloc"],["Alloc","requires method","dealloc"],["Alloc","provides method","usable_size"],["Alloc","provides method","realloc"],["Alloc","provides method","alloc_zeroed"],["Alloc","provides method","alloc_excess"],["Alloc","provides method","realloc_excess"],["Alloc","provides method","grow_in_place"],["Alloc","provides method","shrink_in_place"],["Alloc","provides method","alloc_one"],["Alloc","provides method","dealloc_one"],["Alloc","provides method","alloc_array"],["Alloc","provides method","realloc_array"],["Alloc","provides method","dealloc_array"],["Alloc","has description","An implementation of `Alloc` can allocate, reallocate, and deallocate arbitrary blocks of data described via `Layout`."],["Alloc","has attribute","unsafe"],["alloc","has argument","layout"],["alloc","has return type","Result<NonNull<u8>, AllocErr>"],["alloc","has description","Returns a pointer meeting the size and alignment guarantees of layout."],["alloc","has stability","nightly-only experimental API (#32838)"],["dealloc","has argument","ptr"],["dealloc","has argument","layout"],["dealloc","has description","Deallocate the memory referenced by ptr."],["dealloc","has stability","nightly-only experimental API (#32838)"],["usable_size","has argument","layout"],["usable_size","has return type","(usize, usize)"],["usable_size","has description","Returns bounds on the guaranteed usable size of a successful allocation"],["realloc","has argument","ptr"],["realloc","has argument","layout"],["realloc","has argument","new_size"],["realloc","has return type","Result<NonNull<u8>, AllocErr>"],["realloc","has description","Returns a pointer suitable for holding data described by a new layout"],["Global","implements","Alloc"],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["AllocErr","has description","The `AllocErr` error indicates an allocation failure"],["Layout","is a","struct"],["Layout","has full name","alloc::alloc::Layout"],["layout","has type","Layout"],["ptr","has type","NonNull<u8>"]],"links":["struct.AllocErr.html","struct.CannotReallocInPlace.html","struct.Excess.html","struct.Global.html","struct.Layout.html","struct.LayoutErr.html","trait.Alloc.html","trait.GlobalAlloc.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","../../src/core/alloc.rs.html","../../alloc/alloc/struct.Layout.html","../../core/result/enum.Result.html","../../core/ptr/struct.NonNull.html","https://github.com/rust-lang/rust/issues/32838"],"create_time":"2025-03-13T01:49:34.704Z","id":"f288f915-c8c0-4b90-858f-d2f69e3942da","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","extraInfo":{"startTime":"2025-03-13T01:48:05.196Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}