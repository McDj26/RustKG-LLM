{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","requires method","provides method","has argument","has type","has return type","has description","implements","contains","has attribute"],"relation_triples":[["Alloc","is a","Trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has declaration","pub unsafe trait Alloc { unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr>; unsafe fn dealloc(&mut self, ptr: NonNull<u8>, layout: Layout); ... }"],["Alloc","has stability","nightly-only experimental API (allocator_api #32838)"],["Alloc","has description","An implementation of `Alloc` can allocate, reallocate, and deallocate arbitrary blocks of data described via `Layout`."],["Alloc","requires method","alloc"],["Alloc","requires method","dealloc"],["alloc","is a","function"],["alloc","has full name","alloc::alloc::Alloc::alloc"],["alloc","has argument","layout"],["layout","has type","Layout"],["alloc","has return type","Result<NonNull<u8>, AllocErr>"],["alloc","has description","Returns a pointer meeting the size and alignment guarantees of `layout`."],["alloc","has attribute","unsafe"],["dealloc","is a","function"],["dealloc","has full name","alloc::alloc::Alloc::dealloc"],["dealloc","has argument","ptr"],["ptr","has type","NonNull<u8>"],["dealloc","has argument","layout"],["dealloc","has attribute","unsafe"],["usable_size","is a","function"],["usable_size","provides method","Alloc"],["usable_size","has argument","layout"],["usable_size","has return type","(usize, usize)"],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["Global","implements","Alloc"],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["CannotReallocInPlace","is a","struct"],["CannotReallocInPlace","has full name","alloc::alloc::CannotReallocInPlace"],["Excess","is a","struct"],["Excess","has full name","alloc::alloc::Excess"],["Layout","is a","struct"],["Layout","has full name","alloc::alloc::Layout"],["LayoutErr","is a","struct"],["LayoutErr","has full name","alloc::alloc::LayoutErr"],["GlobalAlloc","is a","Trait"],["GlobalAlloc","has full name","alloc::alloc::GlobalAlloc"],["alloc::alloc","contains","Alloc"],["alloc::alloc","contains","AllocErr"],["alloc::alloc","contains","Global"],["alloc::alloc","contains","Layout"]],"links":["struct.AllocErr.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","struct.Global.html","struct.Layout.html","struct.LayoutErr.html","struct.Excess.html","struct.CannotReallocInPlace.html","trait.GlobalAlloc.html","../../src/core/alloc.rs.html","../index.html","index.html","../../alloc/index.html"],"create_time":"2025-03-13T18:40:17.372Z","id":"aab3c249-dd34-42f7-b86f-c95ae3d78b6b","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","metrics":{"escapeCount":0,"costTime":105484,"totalUsage":{"prompt_tokens":23864,"completion_tokens":3296,"cached_tokens":0,"reasoning_tokens":2363},"length":69595},"extraInfo":{"startTime":"2025-03-13T18:38:28.049Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}