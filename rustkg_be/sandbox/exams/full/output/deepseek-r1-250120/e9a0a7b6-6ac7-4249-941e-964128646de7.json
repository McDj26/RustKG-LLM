{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has method","has argument","has type","has return type","has description","implements","has stability"],"relation_triples":[["AtomicIsize","is a","Struct"],["AtomicIsize","has full name","core::sync::atomic::AtomicIsize"],["AtomicIsize","stable since","1.0.0"],["AtomicIsize","has description","An integer type which can be safely shared between threads."],["AtomicIsize","implements","Sync"],["AtomicIsize","implements","Default"],["AtomicIsize","implements","From<isize>"],["AtomicIsize","implements","Debug"],["AtomicIsize","implements","Send"],["new","is a","function"],["new","has full name","core::sync::atomic::AtomicIsize::new"],["new","has argument","new::v"],["new::v","has type","isize"],["new","has return type","AtomicIsize"],["new","has description","Creates a new atomic integer."],["get_mut","is a","function"],["get_mut","has full name","core::sync::atomic::AtomicIsize::get_mut"],["get_mut","has argument","get_mut::self"],["get_mut::self","has type","&mut AtomicIsize"],["get_mut","has return type","&mut isize"],["get_mut","has description","Returns a mutable reference to the underlying integer."],["get_mut","stable since","1.15.0"],["into_inner","is a","function"],["into_inner","has full name","core::sync::atomic::AtomicIsize::into_inner"],["into_inner","has return type","isize"],["into_inner","has description","Consumes the atomic and returns the contained value."],["into_inner","stable since","1.15.0"],["load","is a","function"],["load","has argument","load::order"],["load::order","has type","Ordering"],["load","has return type","isize"],["load","has description","Loads a value from the atomic integer."],["store","is a","function"],["store","has argument","store::val"],["store::val","has type","isize"],["store","has argument","store::order"],["store::order","has type","Ordering"],["store","has description","Stores a value into the atomic integer."],["swap","is a","function"],["swap","has argument","swap::val"],["swap::val","has type","isize"],["swap","has argument","swap::order"],["swap::order","has type","Ordering"],["swap","has return type","isize"],["swap","has description","Stores a value into the atomic integer, returning the previous value."],["compare_and_swap","is a","function"],["compare_and_swap","has argument","compare_and_swap::current"],["compare_and_swap::current","has type","isize"],["compare_and_swap","has argument","compare_and_swap::new"],["compare_and_swap::new","has type","isize"],["compare_and_swap","has argument","compare_and_swap::order"],["compare_and_swap::order","has type","Ordering"],["compare_and_swap","has return type","isize"],["compare_and_swap","has description","Stores a value into the atomic integer if the current value is the same as the current value."],["compare_exchange","is a","function"],["compare_exchange","has argument","compare_exchange::current"],["compare_exchange::current","has type","isize"],["compare_exchange","has argument","compare_exchange::new"],["compare_exchange::new","has type","isize"],["compare_exchange","has argument","compare_exchange::success"],["compare_exchange::success","has type","Ordering"],["compare_exchange","has argument","compare_exchange::failure"],["compare_exchange::failure","has type","Ordering"],["compare_exchange","has return type","Result<isize, isize>"],["compare_exchange","has description","Stores a value into the atomic integer if the current value is the same as the current value."],["compare_exchange","stable since","1.10.0"],["fetch_add","is a","function"],["fetch_add","has argument","fetch_add::val"],["fetch_add::val","has type","isize"],["fetch_add","has argument","fetch_add::order"],["fetch_add::order","has type","Ordering"],["fetch_add","has return type","isize"],["fetch_add","has description","Adds to the current value, returning the previous value."],["fetch_sub","is a","function"],["fetch_sub","has argument","fetch_sub::val"],["fetch_sub::val","has type","isize"],["fetch_sub","has argument","fetch_sub::order"],["fetch_sub::order","has type","Ordering"],["fetch_sub","has return type","isize"],["fetch_sub","has description","Subtracts from the current value, returning the previous value."],["fetch_max","is a","function"],["fetch_max","has argument","fetch_max::val"],["fetch_max::val","has type","isize"],["fetch_max","has argument","fetch_max::order"],["fetch_max::order","has type","Ordering"],["fetch_max","has return type","isize"],["fetch_max","has description","Maximum with the current value."],["fetch_min","is a","function"],["fetch_min","has argument","fetch_min::val"],["fetch_min::val","has type","isize"],["fetch_min","has argument","fetch_min::order"],["fetch_min::order","has type","Ordering"],["fetch_min","has return type","isize"],["fetch_min","has description","Minimum with the current value."]],"links":["../../../src/core/sync/atomic.rs.html","../../../core/sync/atomic/enum.Ordering.html","../../../core/result/enum.Result.html","../../../core/primitive.isize.html","../../../core/marker/trait.Sync.html","../../../core/default/trait.Default.html","../../../core/convert/trait.From.html","../../../core/fmt/trait.Debug.html","../../../core/marker/trait.Send.html","../../../core/any/trait.Any.html"],"create_time":"2025-03-12T15:25:22.873Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/core/sync/atomic/struct.AtomicIsize.html","id":"e9a0a7b6-6ac7-4249-941e-964128646de7","model":"deepseek-r1-250120","metrics":{"escapeCount":0,"costTime":187363,"totalUsage":{"prompt_tokens":21737,"completion_tokens":6112,"cached_tokens":0,"reasoning_tokens":4396},"length":61697},"extraInfo":{"startTime":"2025-03-12T15:22:15.245Z","examGroup":"full","sourceId":"0e3252a6-fe43-43bd-ad68-ee4ab128985d"}}