{"relations":["is a","has full name","stable since","contains","has description","has stability"],"relation_triples":[["boxed","is a","Module"],["boxed","has full name","alloc::boxed"],["boxed","stable since","1.0.0"],["boxed","has description","A pointer type for heap allocation."],["alloc","contains","boxed"],["Box","is a","struct"],["Box","has full name","alloc::boxed::Box"],["Box","has description","A pointer type for heap allocation."],["boxed","contains","Box"],["FnBox","is a","trait"],["FnBox","has full name","alloc::boxed::FnBox"],["FnBox","has stability","Experimental"],["FnBox","has description","FnBox is a version of the FnOnce intended for use with boxed closure objects. The idea is that where one would normally store a Box<FnOnce()> in a data structure, you should use Box<FnBox()>. The two traits behave essentially the same, except that a FnBox closure can only be called if it is boxed."],["alloc","contains","alloc"],["alloc::alloc","has description","Memory allocation APIs"],["alloc","contains","borrow"],["borrow","has description","A module for working with borrowed data."],["alloc","contains","collections"],["collections","has description","Collection types."],["alloc","contains","fmt"],["fmt","has description","Utilities for formatting and printing `String`s."],["alloc","contains","prelude"],["prelude","has description","The alloc Prelude"],["alloc","contains","rc"],["rc","has description","Single-threaded reference-counting pointers. 'Rc' stands for 'Reference Counted'."],["alloc","contains","slice"],["slice","has description","A dynamically-sized view into a contiguous sequence, `[T]`."],["alloc","contains","str"],["str","has description","Unicode string slices."],["alloc","contains","string"],["string","has description","A UTF-8 encoded, growable string."],["alloc","contains","sync"],["sync","has description","Thread-safe reference-counting pointers."],["alloc","contains","task"],["task","has description","Types and Traits for working with asynchronous tasks."],["alloc","contains","vec"],["vec","has description","A contiguous growable array type with heap-allocated contents, written `Vec<T>`."],["alloc","contains","format"],["format","has description","Creates a `String` using interpolation of runtime expressions."],["alloc","contains","vec_macro"],["vec_macro","has description","Creates a [`Vec`] containing the arguments."]],"links":["../../alloc/index.html","../index.html","struct.Box.html","trait.FnBox.html","../../src/alloc/boxed.rs.html","../alloc/index.html","../borrow/index.html","../collections/index.html","../fmt/index.html","../prelude/index.html","../rc/index.html","../slice/index.html","../str/index.html","../string/index.html","../sync/index.html","../task/index.html","../vec/index.html","../macro.format.html","../macro.vec.html"],"create_time":"2025-03-12T15:27:25.861Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/boxed/index.html","id":"4966060b-a698-4f32-b74e-dd4d1129c1fa","model":"deepseek-r1-250120","metrics":{"escapeCount":0,"costTime":127562,"totalUsage":{"prompt_tokens":5070,"completion_tokens":4028,"cached_tokens":0,"reasoning_tokens":3164},"length":7572},"extraInfo":{"startTime":"2025-03-12T15:25:18.090Z","examGroup":"full","sourceId":"4b7525ab-ff22-413a-b712-459b6a3d36cd"}}