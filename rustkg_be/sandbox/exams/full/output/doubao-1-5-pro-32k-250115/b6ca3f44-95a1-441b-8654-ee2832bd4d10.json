{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","requires method","has stability","has argument","has return type","has description","implements","has attribute","has provided method","defined in"],"relation_triples":[["Alloc","is a","Trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has declaration","pub unsafe trait Alloc { unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr>; unsafe fn dealloc(&mut self, ptr: NonNull<u8>, layout: Layout); ... }"],["Alloc","requires method","alloc"],["Alloc","requires method","dealloc"],["Alloc","has stability","This is a nightly-only experimental API. (#32838)"],["alloc","is a","function"],["alloc","has argument","layout"],["alloc","has return type","Result<NonNull<u8>, AllocErr>"],["alloc","has description","Returns a pointer meeting the size and alignment guarantees of layout"],["alloc","has attribute","unsafe"],["dealloc","is a","function"],["dealloc","has argument","ptr"],["dealloc","has argument","layout"],["dealloc","has description","Deallocate the memory referenced by ptr"],["dealloc","has attribute","unsafe"],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["Global","implements","Alloc"],["Layout","is a","struct"],["Layout","has full name","alloc::alloc::Layout"],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["CannotReallocInPlace","is a","struct"],["CannotReallocInPlace","has full name","alloc::alloc::CannotReallocInPlace"],["Excess","is a","struct"],["Excess","has full name","alloc::alloc::Excess"],["usable_size","is a","function"],["usable_size","has argument","layout"],["usable_size","has return type","(usize, usize)"],["usable_size","has description","Returns bounds on the guaranteed usable size of a successful allocation"],["realloc","is a","function"],["realloc","has argument","ptr"],["realloc","has argument","layout"],["realloc","has argument","new_size"],["realloc","has return type","Result<NonNull<u8>, AllocErr>"],["realloc","has description","Returns a pointer suitable for holding data described by a new layout"],["realloc","has attribute","unsafe"],["Alloc","has provided method","alloc_zeroed"],["Alloc","has provided method","alloc_excess"],["Alloc","has provided method","realloc_excess"],["Global","defined in","../../src/core/alloc.rs"]],"links":["struct.AllocErr.html","struct.CannotReallocInPlace.html","struct.Excess.html","struct.Global.html","struct.Layout.html","struct.LayoutErr.html","trait.GlobalAlloc.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","../../src/core/alloc.rs.html","../../src/alloc/alloc.rs.html","../index.html","index.html"],"create_time":"2025-03-12T15:22:33.176Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","id":"b6ca3f44-95a1-441b-8654-ee2832bd4d10","model":"doubao-1-5-pro-32k-250115","metrics":{"escapeCount":0,"costTime":72583,"totalUsage":{"prompt_tokens":22012,"completion_tokens":2276,"cached_tokens":0,"reasoning_tokens":1365},"length":63632},"extraInfo":{"startTime":"2025-03-12T15:21:20.339Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}