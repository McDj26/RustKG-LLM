{"relations":["is a","has full name","stable since","has description","has declaration","has method","has argument","has type","has return type","implements","has attribute"],"relation_triples":[["NonZeroU64","is a","struct"],["NonZeroU64","has full name","std::num::NonZeroU64"],["NonZeroU64","stable since","1.28.0"],["NonZeroU64","has description","An integer that is known not to equal zero."],["NonZeroU64","has declaration","#[repr(transparent)] pub struct NonZeroU64(_);"],["NonZeroU64","has attribute","repr(transparent)"],["NonZeroU64","has method","new_unchecked"],["NonZeroU64","has method","new"],["NonZeroU64","has method","get"],["new_unchecked","is a","function"],["new_unchecked","has full name","std::num::NonZeroU64::new_unchecked"],["new_unchecked","has argument","n"],["n","has type","u64"],["new_unchecked","has return type","NonZeroU64"],["new_unchecked","has description","Create a non-zero without checking the value.\n\n# Safety\n\nThe value must not be zero."],["new","is a","function"],["new","has full name","std::num::NonZeroU64::new"],["new","has argument","n"],["new","has return type","Option<NonZeroU64>"],["new","has description","Create a non-zero if the given value is not zero."],["get","is a","function"],["get","has full name","std::num::NonZeroU64::get"],["get","has argument","self"],["self","has type","NonZeroU64"],["get","has return type","u64"],["get","has description","Returns the value as a primitive type."],["NonZeroU64","implements","UpperHex"],["NonZeroU64","implements","Octal"],["NonZeroU64","implements","Copy"],["NonZeroU64","implements","LowerHex"],["NonZeroU64","implements","Display"],["NonZeroU64","implements","Hash"],["NonZeroU64","implements","Clone"],["NonZeroU64","implements","PartialOrd<NonZeroU64>"],["NonZeroU64","implements","Ord"],["NonZeroU64","implements","Binary"],["NonZeroU64","implements","Debug"],["NonZeroU64","implements","Eq"],["NonZeroU64","implements","PartialEq<NonZeroU64>"],["NonZeroU64","implements","Send"],["NonZeroU64","implements","Sync"]],"links":["../../std/index.html","struct.NonZeroU128.html","struct.NonZeroU16.html","struct.NonZeroU32.html","struct.NonZeroU64.html","struct.NonZeroU8.html","struct.NonZeroUsize.html","struct.ParseFloatError.html","struct.ParseIntError.html","struct.TryFromIntError.html","struct.Wrapping.html","enum.FpCategory.html","../../src/core/num/mod.rs.html","../primitive.u64.html","../../std/convert/trait.From.html","../../std/fmt/trait.UpperHex.html","../../std/fmt/trait.Octal.html","../../std/marker/trait.Copy.html","../../std/fmt/trait.LowerHex.html","../../std/fmt/trait.Display.html","../../std/hash/trait.Hash.html","../../std/clone/trait.Clone.html","../../std/cmp/trait.PartialOrd.html","../../std/cmp/trait.Ord.html","../../std/fmt/trait.Binary.html","../../std/fmt/trait.Debug.html","../../std/cmp/trait.Eq.html","../../std/cmp/trait.PartialEq.html","../../std/marker/trait.Send.html","../../std/marker/trait.Sync.html","../../std/convert/trait.TryFrom.html","../../std/convert/trait.TryInto.html","../../std/convert/trait.Into.html","../../std/borrow/trait.Borrow.html","../../std/borrow/trait.BorrowMut.html","../../std/any/trait.Any.html","../../std/borrow/trait.ToOwned.html","../../std/string/trait.ToString.html"],"create_time":"2025-03-12T15:22:37.812Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/std/num/struct.NonZeroU64.html","id":"e5f6c053-c29a-4a8a-b71a-bd3654d0b076","model":"doubao-1-5-pro-32k-250115","metrics":{"escapeCount":0,"costTime":213656,"totalUsage":{"prompt_tokens":23488,"completion_tokens":6729,"cached_tokens":0,"reasoning_tokens":5590},"length":63566},"extraInfo":{"startTime":"2025-03-12T15:19:03.920Z","examGroup":"full","sourceId":"7c6faca8-74a2-4d34-a56e-3ac3bfeb2137"}}