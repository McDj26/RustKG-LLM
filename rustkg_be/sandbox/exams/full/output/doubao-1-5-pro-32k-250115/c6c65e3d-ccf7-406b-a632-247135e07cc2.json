{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","requires method","provides method","has argument","has type","has return type","has description","implements","has attribute"],"relation_triples":[["Alloc","is a","Trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has declaration","pub unsafe trait Alloc { unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr>; unsafe fn dealloc(&mut self, ptr: NonNull<u8>, layout: Layout); ... }"],["Alloc","has stability","This is a nightly-only experimental API. (`allocator_api` #32838)"],["Alloc","has attribute","unsafe"],["Alloc","has description","An implementation of `Alloc` can allocate, reallocate, and deallocate arbitrary blocks of data described via `Layout`."],["Alloc","requires method","alloc"],["Alloc","requires method","dealloc"],["Alloc","provides method","usable_size"],["Alloc","provides method","realloc"],["Alloc","provides method","alloc_zeroed"],["Alloc","provides method","alloc_excess"],["Alloc","provides method","realloc_excess"],["Alloc","provides method","grow_in_place"],["Alloc","provides method","shrink_in_place"],["Alloc","provides method","alloc_one"],["Alloc","provides method","dealloc_one"],["Alloc","provides method","alloc_array"],["Alloc","provides method","realloc_array"],["Alloc","provides method","dealloc_array"],["alloc","is a","function"],["alloc","has full name","alloc::alloc::alloc"],["alloc","has return type","Result<NonNull<u8>, AllocErr>"],["alloc","has argument","alloc::self"],["alloc","has argument","alloc::layout"],["alloc::self","has type","&mut self"],["alloc::layout","has type","Layout"],["alloc","has description","Returns a pointer meeting the size and alignment guarantees of `layout`."],["alloc","has stability","This is a nightly-only experimental API. (`allocator_api` #32838)"],["dealloc","is a","function"],["dealloc","has full name","alloc::alloc::dealloc"],["dealloc","has argument","dealloc::ptr"],["dealloc","has argument","dealloc::layout"],["dealloc::ptr","has type","NonNull<u8>"],["dealloc::layout","has type","Layout"],["dealloc","has description","Deallocate the memory referenced by `ptr`."],["dealloc","has stability","This is a nightly-only experimental API. (`allocator_api` #32838)"],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["Global","implements","Alloc"],["Global","has description","The global memory allocator."],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["AllocErr","has description","The `AllocErr` error indicates an allocation failure that may be due to resource exhaustion or to something wrong when combining the given input arguments with this allocator."],["CannotReallocInPlace","is a","struct"],["CannotReallocInPlace","has full name","alloc::alloc::CannotReallocInPlace"],["CannotReallocInPlace","has description","The `CannotReallocInPlace` error is used when `grow_in_place` or `shrink_in_place` were unable to reuse the given memory block for a requested layout."],["Layout","is a","struct"],["Layout","has full name","alloc::alloc::Layout"],["Layout","has description","Layout of a block of memory."]],"links":["../../alloc/index.html","struct.AllocErr.html","struct.CannotReallocInPlace.html","struct.Excess.html","struct.Global.html","struct.Layout.html","struct.LayoutErr.html","trait.Alloc.html","trait.GlobalAlloc.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","../../src/core/alloc.rs.html","../index.html","index.html","../../src/alloc/alloc.rs.html"],"create_time":"2025-03-12T15:21:13.238Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","id":"c6c65e3d-ccf7-406b-a632-247135e07cc2","model":"doubao-1-5-pro-32k-250115","metrics":{"escapeCount":0,"costTime":142308,"totalUsage":{"prompt_tokens":22012,"completion_tokens":4745,"cached_tokens":0,"reasoning_tokens":3572},"length":63632},"extraInfo":{"startTime":"2025-03-12T15:18:50.651Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}