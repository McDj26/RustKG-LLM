{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has description","has attribute","is version of","is part of"],"relation_triples":[["boxed","is a","Module"],["boxed","has full name","alloc::boxed"],["boxed","stable since","1.0.0"],["boxed","has description","A pointer type for heap allocation."],["boxed","has description","Box<T>, casually referred to as a 'box', provides the simplest form of heap allocation in Rust. Boxes provide ownership for this allocation, and drop their contents when they go out of scope."],["boxed","is part of","alloc"],["Box","is a","struct"],["Box","has full name","alloc::boxed::Box"],["Box","has description","A pointer type for heap allocation."],["FnBox","is a","trait"],["FnBox","has full name","alloc::boxed::FnBox"],["FnBox","has attribute","Experimental"],["FnBox","has description","FnBox is a version of the FnOnce intended for use with boxed closure objects. The idea is that where one would normally store a Box<FnOnce()> in a data structure, you should use Box<FnBox()>. The two traits behave essentially the same, except that a FnBox closure can only be called if it is boxed. (Note that FnBox may be deprecated in the future if Box<FnOnce()> closures become directly usable.)"],["FnBox","is version of","FnOnce"]],"links":["../../alloc/index.html","../index.html","../alloc/index.html","../borrow/index.html","../collections/index.html","../fmt/index.html","../prelude/index.html","../rc/index.html","../slice/index.html","../str/index.html","../string/index.html","../sync/index.html","../task/index.html","../vec/index.html","struct.Box.html","trait.FnBox.html","../../src/alloc/boxed.rs.html","../../std/ops/trait.Deref.html","../../settings.html"],"create_time":"2025-03-12T15:26:57.004Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/boxed/index.html","id":"75a55176-c98e-4bb6-b8c0-b77edc5ab815","model":"doubao-1-5-pro-32k-250115","metrics":{"escapeCount":0,"costTime":162363,"totalUsage":{"prompt_tokens":5070,"completion_tokens":5268,"cached_tokens":0,"reasoning_tokens":4731},"length":7572},"extraInfo":{"startTime":"2025-03-12T15:24:14.473Z","examGroup":"full","sourceId":"4b7525ab-ff22-413a-b712-459b6a3d36cd"}}