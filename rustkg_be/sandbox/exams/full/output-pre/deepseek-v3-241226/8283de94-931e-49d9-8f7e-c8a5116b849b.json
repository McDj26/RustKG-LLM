{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","requires method","has description","has argument","has type","has return type","implements","has attribute"],"relation_triples":[["Alloc","is a","Trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has declaration","pub unsafe trait Alloc { unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr>; unsafe fn dealloc(&mut self, ptr: NonNull<u8>, layout: Layout); fn usable_size(&self, layout: &Layout) -> (usize, usize); unsafe fn realloc(&mut self, ptr: NonNull<u8>, layout: Layout, new_size: usize) -> Result<NonNull<u8>, AllocErr>; unsafe fn alloc_zeroed(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr>; unsafe fn alloc_excess(&mut self, layout: Layout) -> Result<Excess, AllocErr>; unsafe fn realloc_excess(&mut self, ptr: NonNull<u8>, layout: Layout, new_size: usize) -> Result<Excess, AllocErr>; unsafe fn grow_in_place(&mut self, ptr: NonNull<u8>, layout: Layout, new_size: usize) -> Result<(), CannotReallocInPlace>; unsafe fn shrink_in_place(&mut self, ptr: NonNull<u8>, layout: Layout, new_size: usize) -> Result<(), CannotReallocInPlace>; fn alloc_one<T>(&mut self) -> Result<NonNull<T>, AllocErr>; unsafe fn dealloc_one<T>(&mut self, ptr: NonNull<T>); fn alloc_array<T>(&mut self, n: usize) -> Result<NonNull<T>, AllocErr>; unsafe fn realloc_array<T>(&mut self, ptr: NonNull<T>, n_old: usize, n_new: usize) -> Result<NonNull<T>, AllocErr>; unsafe fn dealloc_array<T>(&mut self, ptr: NonNull<T>, n: usize) -> Result<(), AllocErr>; }"],["Alloc","has stability","This is a nightly-only experimental API. (allocator_api #32838)"],["Alloc","has description","An implementation of `Alloc` can allocate, reallocate, and deallocate arbitrary blocks of data described via `Layout`."],["alloc","is a","function"],["alloc","has full name","alloc::alloc::alloc"],["alloc","has attribute","unsafe"],["dealloc","is a","function"],["dealloc","has full name","alloc::alloc::dealloc"],["dealloc","has attribute","unsafe"],["usable_size","is a","function"],["usable_size","has full name","alloc::alloc::usable_size"],["realloc","is a","function"],["realloc","has full name","alloc::alloc::realloc"],["realloc","has attribute","unsafe"],["alloc_zeroed","is a","function"],["alloc_zeroed","has full name","alloc::alloc::alloc_zeroed"],["alloc_zeroed","has attribute","unsafe"],["alloc_excess","is a","function"],["alloc_excess","has full name","alloc::alloc::alloc_excess"],["alloc_excess","has attribute","unsafe"],["realloc_excess","is a","function"],["realloc_excess","has full name","alloc::alloc::realloc_excess"],["realloc_excess","has attribute","unsafe"],["grow_in_place","is a","function"],["grow_in_place","has full name","alloc::alloc::grow_in_place"],["grow_in_place","has attribute","unsafe"],["shrink_in_place","is a","function"],["shrink_in_place","has full name","alloc::alloc::shrink_in_place"],["shrink_in_place","has attribute","unsafe"],["alloc_one","is a","function"],["alloc_one","has full name","alloc::alloc::alloc_one"],["dealloc_one","is a","function"],["dealloc_one","has full name","alloc::alloc::dealloc_one"],["dealloc_one","has attribute","unsafe"],["alloc_array","is a","function"],["alloc_array","has full name","alloc::alloc::alloc_array"],["realloc_array","is a","function"],["realloc_array","has full name","alloc::alloc::realloc_array"],["realloc_array","has attribute","unsafe"],["dealloc_array","is a","function"],["dealloc_array","has full name","alloc::alloc::dealloc_array"],["dealloc_array","has attribute","unsafe"],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["Global","implements","Alloc"]],"links":["../../alloc/index.html","struct.AllocErr.html","struct.CannotReallocInPlace.html","struct.Excess.html","struct.Global.html","struct.Layout.html","struct.LayoutErr.html","trait.Alloc.html","trait.GlobalAlloc.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","../../src/core/alloc.rs.html","../../src/alloc/alloc.rs.html"],"create_time":"2025-03-14T17:01:27.118Z","id":"8283de94-931e-49d9-8f7e-c8a5116b849b","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","metrics":{"escapeCount":0,"costTime":38687,"totalUsage":{"prompt_tokens":23862,"completion_tokens":1389,"cached_tokens":0,"reasoning_tokens":0},"length":69595},"extraInfo":{"startTime":"2025-03-14T17:00:48.223Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}