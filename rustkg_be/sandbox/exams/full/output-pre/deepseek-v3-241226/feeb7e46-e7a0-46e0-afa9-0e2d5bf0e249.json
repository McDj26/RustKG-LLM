{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has method","implements","has return type","has argument","has description","has attribute","has stability"],"relation_triples":[["AtomicIsize","is a","struct"],["AtomicIsize","has full name","core::sync::atomic::AtomicIsize"],["AtomicIsize","stable since","1.0.0"],["AtomicIsize","has method","new"],["AtomicIsize","has method","get_mut"],["AtomicIsize","has method","into_inner"],["AtomicIsize","has method","load"],["AtomicIsize","has method","store"],["AtomicIsize","has method","swap"],["AtomicIsize","has method","compare_and_swap"],["AtomicIsize","has method","compare_exchange"],["AtomicIsize","has method","compare_exchange_weak"],["AtomicIsize","has method","fetch_add"],["AtomicIsize","has method","fetch_sub"],["AtomicIsize","has method","fetch_and"],["AtomicIsize","has method","fetch_nand"],["AtomicIsize","has method","fetch_or"],["AtomicIsize","has method","fetch_xor"],["AtomicIsize","has method","fetch_update"],["AtomicIsize","has method","fetch_max"],["AtomicIsize","has method","fetch_min"],["AtomicIsize","implements","Sync"],["AtomicIsize","implements","Default"],["AtomicIsize","implements","From<isize>"],["AtomicIsize","implements","Debug"],["AtomicIsize","implements","Send"],["new","has return type","Self"],["new","has argument","v"],["get_mut","has return type","&mut isize"],["get_mut","has argument","self"],["into_inner","has return type","isize"],["into_inner","has argument","self"],["load","has return type","isize"],["load","has argument","self"],["load","has argument","order"],["store","has argument","self"],["store","has argument","val"],["store","has argument","order"],["swap","has return type","isize"],["swap","has argument","self"],["swap","has argument","val"],["swap","has argument","order"],["compare_and_swap","has return type","isize"],["compare_and_swap","has argument","self"],["compare_and_swap","has argument","current"],["compare_and_swap","has argument","new"],["compare_and_swap","has argument","order"],["compare_exchange","has return type","Result<isize, isize>"],["compare_exchange","has argument","self"],["compare_exchange","has argument","current"],["compare_exchange","has argument","new"],["compare_exchange","has argument","success"],["compare_exchange","has argument","failure"],["compare_exchange_weak","has return type","Result<isize, isize>"],["compare_exchange_weak","has argument","self"],["compare_exchange_weak","has argument","current"],["compare_exchange_weak","has argument","new"],["compare_exchange_weak","has argument","success"],["compare_exchange_weak","has argument","failure"],["fetch_add","has return type","isize"],["fetch_add","has argument","self"],["fetch_add","has argument","val"],["fetch_add","has argument","order"],["fetch_sub","has return type","isize"],["fetch_sub","has argument","self"],["fetch_sub","has argument","val"],["fetch_sub","has argument","order"],["fetch_and","has return type","isize"],["fetch_and","has argument","self"],["fetch_and","has argument","val"],["fetch_and","has argument","order"],["fetch_nand","has return type","isize"],["fetch_nand","has argument","self"],["fetch_nand","has argument","val"],["fetch_nand","has argument","order"],["fetch_or","has return type","isize"],["fetch_or","has argument","self"],["fetch_or","has argument","val"],["fetch_or","has argument","order"],["fetch_xor","has return type","isize"],["fetch_xor","has argument","self"],["fetch_xor","has argument","val"],["fetch_xor","has argument","order"],["fetch_update","has return type","Result<isize, isize>"],["fetch_update","has argument","self"],["fetch_update","has argument","f"],["fetch_update","has argument","fetch_order"],["fetch_update","has argument","set_order"],["fetch_max","has return type","isize"],["fetch_max","has argument","self"],["fetch_max","has argument","val"],["fetch_max","has argument","order"],["fetch_min","has return type","isize"],["fetch_min","has argument","self"],["fetch_min","has argument","val"],["fetch_min","has argument","order"],["AtomicIsize","has description","An integer type which can be safely shared between threads."],["AtomicIsize","has stability","This is supported on Windows only."]],"links":["../../../core/index.html","../../index.html","../index.html","index.html","../../../../src/core/sync/atomic.rs.html","../../../std/primitive.isize.html"],"create_time":"2025-03-14T16:59:36.261Z","id":"feeb7e46-e7a0-46e0-afa9-0e2d5bf0e249","model":"deepseek-v3-241226","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/core/sync/atomic/struct.AtomicIsize.html","metrics":{"escapeCount":0,"costTime":47054,"totalUsage":{"prompt_tokens":33384,"completion_tokens":1486,"cached_tokens":0,"reasoning_tokens":0},"length":91529},"extraInfo":{"startTime":"2025-03-14T16:58:48.975Z","examGroup":"full","sourceId":"0e3252a6-fe43-43bd-ad68-ee4ab128985d"}}