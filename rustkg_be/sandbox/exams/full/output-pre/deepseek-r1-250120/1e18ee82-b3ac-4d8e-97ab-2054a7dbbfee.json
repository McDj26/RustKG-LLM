{"relations":["is a","has full name","stable since","implements","requires method","has return type","has argument","has type","has description","has declaration"],"relation_triples":[["ChunksMut","is a","struct"],["ChunksMut","has full name","std::slice::ChunksMut"],["ChunksMut","stable since","1.0.0"],["ChunksMut","has declaration","pub struct ChunksMut<'a, T> where T: 'a + 'a, { /* fields omitted */ }"],["ChunksMut","has description","An iterator over a slice in (non-overlapping) mutable chunks (`chunk_size` elements at a time), starting at the beginning of the slice."],["ChunksMut","implements","ExactSizeIterator"],["ChunksMut","implements","FusedIterator"],["ChunksMut","implements","DoubleEndedIterator"],["ChunksMut","implements","Iterator"],["ChunksMut","implements","TrustedLen"],["ChunksMut","implements","Debug"],["ChunksMut","implements","Send"],["ChunksMut","implements","Sync"],["ExactSizeIterator","requires method","len"],["ExactSizeIterator","requires method","is_empty"],["len","has return type","usize"],["len","has argument","self"],["len::self","has type","&Self"],["len","has description","Returns the exact number of times the iterator will iterate."],["is_empty","has return type","bool"],["is_empty","has argument","self"],["is_empty::self","has type","&Self"],["is_empty","has description","Returns whether the iterator is empty."],["DoubleEndedIterator","requires method","next_back"],["next_back","has return type","Option<&'a mut [T]>"],["next_back","has argument","self"],["next_back::self","has type","&mut Self"],["next_back","has description","Removes and returns an element from the end of the iterator."],["Iterator","requires method","next"],["Iterator","requires method","size_hint"],["Iterator","requires method","count"],["Iterator","requires method","nth"],["Iterator","requires method","last"],["next","has return type","Option<&'a mut [T]>"],["next","has argument","self"],["next::self","has type","&mut Self"],["next","has description","Advances the iterator and returns the next value."],["size_hint","has return type","(usize, Option<usize>)"],["size_hint","has argument","self"],["size_hint::self","has type","&Self"],["size_hint","has description","Returns the bounds on the remaining length of the iterator."],["count","has return type","usize"],["count","has argument","self"],["count::self","has type","Self"],["count","has description","Consumes the iterator, counting the number of iterations and returning it."],["nth","has return type","Option<&'a mut [T]>"],["nth","has argument","n"],["nth::n","has type","usize"],["nth","has description","Returns the `n`th element of the iterator."],["last","has return type","Option<&'a mut [T]>"],["last","has argument","self"],["last::self","has type","Self"],["last","has description","Consumes the iterator, returning the last element."]],"links":["../../std/index.html","struct.Chunks.html","struct.ChunksExact.html","struct.ChunksExactMut.html","struct.Iter.html","struct.IterMut.html","struct.RChunks.html","struct.RChunksExact.html","struct.RChunksExactMut.html","struct.RChunksMut.html","struct.RSplit.html","struct.RSplitMut.html","struct.RSplitN.html","struct.RSplitNMut.html","struct.Split.html","struct.SplitMut.html","struct.SplitN.html","struct.SplitNMut.html","struct.Windows.html","trait.SliceConcatExt.html","trait.SliceIndex.html","fn.from_mut.html","fn.from_raw_parts.html","fn.from_raw_parts_mut.html","fn.from_ref.html","../../src/core/slice/mod.rs.html","../../std/primitive.slice.html","../../std/primitive.usize.html","../../std/primitive.bool.html"],"create_time":"2025-03-14T17:03:39.751Z","id":"1e18ee82-b3ac-4d8e-97ab-2054a7dbbfee","model":"deepseek-r1-250120","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/std/slice/struct.ChunksMut.html","metrics":{"escapeCount":0,"costTime":263503,"totalUsage":{"prompt_tokens":51163,"completion_tokens":7815,"cached_tokens":0,"reasoning_tokens":6634},"length":150404},"extraInfo":{"startTime":"2025-03-14T16:59:16.019Z","examGroup":"full","sourceId":"0c9c4f92-3386-4e7c-a393-6932b6382dc0"}}