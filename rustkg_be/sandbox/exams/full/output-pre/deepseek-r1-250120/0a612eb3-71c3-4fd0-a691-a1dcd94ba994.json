{"relations":["is a","has full name","stable since","contains","has description","has example","has stability","has method","implements","is version of","has argument","has return type"],"relation_triples":[["alloc","contains","alloc"],["alloc","contains","borrow"],["alloc","contains","boxed"],["alloc","contains","collections"],["alloc","contains","fmt"],["alloc","contains","prelude"],["alloc","contains","rc"],["alloc","contains","slice"],["alloc","contains","str"],["alloc","contains","string"],["alloc","contains","sync"],["alloc","contains","task"],["alloc","contains","vec"],["boxed","is a","module"],["Box","is a","struct"],["FnBox","is a","trait"],["boxed","has full name","alloc::boxed"],["Box","has full name","alloc::boxed::Box"],["FnBox","has full name","alloc::boxed::FnBox"],["boxed","stable since","1.0.0"],["boxed","has description","A pointer type for heap allocation."],["Box","has description","A pointer type for heap allocation."],["boxed","has example","let val: u8 = 5; let boxed: Box<u8> = Box::new(val);"],["boxed","has example","let boxed: Box<u8> = Box::new(5); let val: u8 = *boxed;"],["boxed","has example","enum List<T> { Cons(T, Box<List<T>>), Nil, }"],["FnBox","has stability","Experimental"],["FnBox","has description","FnBox is a version of the FnOnce intended for use with boxed closure objects. The two traits behave essentially the same, except that a FnBox closure can only be called if it is boxed."],["Box","has method","new"],["new","has argument","T"],["new","has return type","Box<T>"],["Box","implements","Deref"],["FnBox","is version of","FnOnce"]],"links":["../../alloc/index.html","../index.html","struct.Box.html","trait.FnBox.html","../../std/ops/trait.Deref.html","../../src/alloc/boxed.rs.html","../borrow/index.html","../collections/index.html","../fmt/index.html","../prelude/index.html","../rc/index.html","../slice/index.html","../str/index.html","../string/index.html","../sync/index.html","../task/index.html","../vec/index.html","../macro.format.html","../macro.vec.html"],"create_time":"2025-03-14T16:57:54.937Z","id":"0a612eb3-71c3-4fd0-a691-a1dcd94ba994","model":"deepseek-r1-250120","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/boxed/index.html","metrics":{"escapeCount":0,"costTime":173164,"totalUsage":{"prompt_tokens":5753,"completion_tokens":5966,"cached_tokens":0,"reasoning_tokens":5254},"length":9758},"extraInfo":{"startTime":"2025-03-14T16:55:01.524Z","examGroup":"full","sourceId":"4b7525ab-ff22-413a-b712-459b6a3d36cd"}}