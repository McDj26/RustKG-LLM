{"relations":["is a","has full name","stable since","is successor of","is predecessor of","contains","has description","has attribute"],"relation_triples":[["boxed","is a","module"],["boxed","has full name","alloc::boxed"],["boxed","stable since","1.0.0"],["boxed","has description","A pointer type for heap allocation."],["alloc","contains","boxed"],["alloc","contains","alloc"],["alloc","contains","borrow"],["alloc","contains","collections"],["alloc","contains","fmt"],["alloc","contains","prelude"],["alloc","contains","rc"],["alloc","contains","slice"],["alloc","contains","str"],["alloc","contains","string"],["alloc","contains","sync"],["alloc","contains","task"],["alloc","contains","vec"],["Box","is a","struct"],["Box","has full name","alloc::boxed::Box"],["boxed","contains","Box"],["FnBox","is a","trait"],["FnBox","has full name","alloc::boxed::FnBox"],["boxed","contains","FnBox"],["FnBox","has attribute","Experimental"],["FnBox","has description","FnBox is a version of the FnOnce intended for use with boxed closure objects. The idea is that where one would normally store a Box<FnOnce()> in a data structure, you should use Box<FnBox()>. The two traits behave essentially the same, except that a FnBox closure can only be called if it is boxed. (Note that FnBox may be deprecated in the future if Box<FnOnce()> closures become directly usable.)"],["alloc","contains","format"]],"links":["../../alloc/index.html","../index.html","struct.Box.html","trait.FnBox.html","../../src/alloc/boxed.rs.html","../alloc/index.html","../borrow/index.html","../collections/index.html","../fmt/index.html","../prelude/index.html","../rc/index.html","../slice/index.html","../str/index.html","../string/index.html","../sync/index.html","../task/index.html","../vec/index.html","../macro.format.html","../macro.vec.html"],"create_time":"2025-03-14T17:00:59.151Z","id":"b5acf62e-fb6d-4ffc-8588-8baec3e133df","model":"deepseek-r1-250120","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/boxed/index.html","metrics":{"escapeCount":0,"costTime":91019,"totalUsage":{"prompt_tokens":5753,"completion_tokens":2983,"cached_tokens":0,"reasoning_tokens":2375},"length":9758},"extraInfo":{"startTime":"2025-03-14T16:59:27.951Z","examGroup":"full","sourceId":"4b7525ab-ff22-413a-b712-459b6a3d36cd"}}