{"relations":["is a","has full name","stable since","is successor of","is predecessor of","requires method","provides method","has argument","has return type","has type","has attribute","has stability","has description","has declaration","implements"],"relation_triples":[["Alloc","is a","trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has declaration","pub unsafe trait Alloc { unsafe fn alloc(&mut self, layout: Layout) -> Result<NonNull<u8>, AllocErr>; ... }"],["Alloc","has stability","This is a nightly-only experimental API. (allocator_api #32838)"],["Alloc","has description","An implementation of Alloc can allocate, reallocate, and deallocate arbitrary blocks of data described via Layout."],["Alloc","has attribute","unsafe"],["Alloc","requires method","alloc::alloc::Alloc::alloc"],["alloc::alloc::Alloc::alloc","is a","method"],["alloc::alloc::Alloc::alloc","has full name","alloc::alloc::Alloc::alloc"],["alloc::alloc::Alloc::alloc","has argument","alloc::self"],["alloc::alloc::Alloc::alloc","has argument","alloc::layout"],["alloc::alloc::Alloc::alloc::layout","has type","Layout"],["alloc::alloc::Alloc::alloc","has return type","Result<NonNull<u8>, AllocErr>"],["alloc::alloc::Alloc::alloc","has attribute","unsafe"],["alloc::alloc::Alloc::alloc","has stability","This is a nightly-only experimental API. (allocator_api #32838)"],["alloc::alloc::Alloc::alloc","has description","Returns a pointer meeting the size and alignment guarantees of layout."],["Alloc","requires method","alloc::alloc::Alloc::dealloc"],["alloc::alloc::Alloc::dealloc","is a","method"],["alloc::alloc::Alloc::dealloc","has full name","alloc::alloc::Alloc::dealloc"],["alloc::alloc::Alloc::dealloc","has argument","alloc::self"],["alloc::alloc::Alloc::dealloc","has argument","ptr"],["alloc::alloc::Alloc::dealloc","has argument","layout"],["alloc::alloc::Alloc::dealloc::ptr","has type","NonNull<u8>"],["alloc::alloc::Alloc::dealloc::layout","has type","Layout"],["alloc::alloc::Alloc::dealloc","has attribute","unsafe"],["alloc::alloc::Alloc::dealloc","has stability","This is a nightly-only experimental API. (allocator_api #32838)"],["alloc::alloc::Alloc::dealloc","has description","Deallocate the memory referenced by ptr."],["Alloc","provides method","usable_size"],["usable_size","is a","method"],["usable_size","has full name","alloc::alloc::Alloc::usable_size"],["usable_size","has argument","self"],["usable_size","has argument","layout"],["usable_size::layout","has type","&Layout"],["usable_size","has return type","(usize, usize)"],["usable_size","has stability","This is a nightly-only experimental API. (allocator_api #32838)"],["usable_size","has description","Returns bounds on the guaranteed usable size of a successful allocation created with the specified layout."],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["AllocErr","has description","The AllocErr error indicates an allocation failure that may be due to resource exhaustion or to something wrong when combining the given input arguments with this allocator."],["CannotReallocInPlace","is a","struct"],["CannotReallocInPlace","has full name","alloc::alloc::CannotReallocInPlace"],["CannotReallocInPlace","has description","The CannotReallocInPlace error is used when grow_in_place or shrink_in_place were unable to reuse the given memory block for a requested layout."],["Excess","is a","struct"],["Excess","has full name","alloc::alloc::Excess"],["Excess","has description","Represents the combination of a starting address and a total capacity of the returned block."],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["Global","has description","The global memory allocator."],["Global","implements","Alloc"],["Layout","is a","struct"],["Layout","has full name","alloc::alloc::Layout"],["Layout","has description","Layout of a block of memory."],["LayoutErr","is a","struct"],["LayoutErr","has full name","alloc::alloc::LayoutErr"],["LayoutErr","has description","The parameters given to Layout::from_size_align or some other Layout constructor do not satisfy its documented constraints."],["GlobalAlloc","is a","trait"],["GlobalAlloc","has full name","alloc::alloc::GlobalAlloc"],["GlobalAlloc","has description","A memory allocator that can be registered as the standard libraryâ€™s default though the #[global_allocator] attributes."],["alloc","is a","function"],["alloc","has full name","alloc::alloc::alloc"],["alloc","has description","Allocate memory with the global allocator."],["alloc_zeroed","is a","function"],["alloc_zeroed","has full name","alloc::alloc::alloc_zeroed"],["alloc_zeroed","has description","Allocate zero-initialized memory with the global allocator."],["dealloc","is a","function"],["dealloc","has full name","alloc::alloc::dealloc"],["dealloc","has description","Deallocate memory with the global allocator."],["handle_alloc_error","is a","function"],["handle_alloc_error","has full name","alloc::alloc::handle_alloc_error"],["handle_alloc_error","has description","Abort on memory allocation error or failure."],["realloc","is a","function"],["realloc","has full name","alloc::alloc::realloc"],["realloc","has description","Reallocate memory with the global allocator."]],"links":["struct.AllocErr.html","struct.CannotReallocInPlace.html","struct.Excess.html","struct.Global.html","struct.Layout.html","struct.LayoutErr.html","trait.Alloc.html","trait.GlobalAlloc.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","../../alloc/alloc/struct.Layout.html","../../core/result/enum.Result.html","../../core/ptr/struct.NonNull.html","../../alloc/alloc/struct.AllocErr.html","../../alloc/alloc/struct.CannotReallocInPlace.html","../../alloc/alloc/struct.Excess.html","../../alloc/alloc/struct.Global.html","../../src/core/alloc.rs.html","../../src/alloc/alloc.rs.html","https://github.com/rust-lang/rust/issues/32838","../../alloc/alloc/fn.handle_alloc_error.html"],"create_time":"2025-03-14T16:57:38.096Z","id":"4c5d672f-5c8f-4285-8a1d-51eb631c4ebd","model":"deepseek-r1-250120","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/trait.Alloc.html","metrics":{"escapeCount":0,"costTime":269317,"totalUsage":{"prompt_tokens":23864,"completion_tokens":9411,"cached_tokens":0,"reasoning_tokens":7564},"length":69595},"extraInfo":{"startTime":"2025-03-14T16:53:01.098Z","examGroup":"full","sourceId":"05aff626-3bac-49b0-89ac-cbf16fee709d"}}