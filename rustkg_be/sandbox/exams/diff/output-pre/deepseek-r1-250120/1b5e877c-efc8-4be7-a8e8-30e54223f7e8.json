{"create_time":"2025-03-11T18:59:02.951Z","id":"1b5e877c-efc8-4be7-a8e8-30e54223f7e8","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/std/num/struct.NonZeroU64.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\output\\deepseek-r1-250120\\7c6faca8-74a2-4d34-a56e-3ac3bfeb2137.json","relations":["has argument","has attribute","has declaration","has description","has full name","has return type","has type","implements","is a","is predecessor of","is successor of","stable since"],"delete_triples":[],"add_triples":[["NonZeroU64","implements","From<NonZeroU64>"],["cmp","has argument","other"],["cmp","has argument","self"],["cmp","has description","Returns an Ordering between self and other."],["cmp","has full name","std::cmp::Ord::cmp"],["cmp","has return type","Ordering"],["cmp","is a","function"],["cmp","stable since","1.21.0"],["from","has argument","nonzero"],["from","has description","Performs the conversion."],["from","has full name","std::convert::From<NonZeroU64>::from"],["from","has return type","u64"],["from","is a","function"],["ge","has argument","other"],["ge","has argument","self"],["ge","has full name","std::cmp::PartialOrd::ge"],["ge","has return type","bool"],["ge","is a","function"],["gt","has argument","other"],["gt","has argument","self"],["gt","has full name","std::cmp::PartialOrd::gt"],["gt","has return type","bool"],["gt","is a","function"],["le","has full name","std::cmp::PartialOrd::le"],["le","is a","function"],["lt","has argument","other"],["lt","has argument","self"],["lt","has full name","std::cmp::PartialOrd::lt"],["lt","has return type","bool"],["lt","is a","function"],["max","has argument","other"],["max","has argument","self"],["max","has description","Compares and returns the maximum of two values."],["max","has full name","std::cmp::Ord::max"],["max","has return type","Self"],["max","is a","function"],["max","stable since","1.21.0"],["min","has argument","other"],["min","has argument","self"],["min","has description","Compares and returns the minimum of two values."],["min","has full name","std::cmp::Ord::min"],["min","has return type","Self"],["min","is a","function"],["min","stable since","1.21.0"],["nonzero","has type","NonZeroU64"],["other","has type","&NonZeroU64"],["partial_cmp","has argument","other"],["partial_cmp","has argument","self"],["partial_cmp","has full name","std::cmp::PartialOrd::partial_cmp"],["partial_cmp","has return type","Option<Ordering>"],["partial_cmp","is a","function"],["self","has type","&NonZeroU64"],["u64","implements","From<NonZeroU64>"],["u64","stable since","1.31.0"]],"delete_links":["../../std/fmt/trait.LowerHex.html","../../std/fmt/trait.Octal.html"],"add_links":["../../src/core/cmp.rs.html","../../src/core/num/mod.rs.html","../../std/any/struct.TypeId.html","../../std/cmp/enum.Ordering.html","../../std/cmp/trait.Ord.html","../../std/cmp/trait.PartialOrd.html","../../std/convert/trait.From.html","../../std/fmt/trait.Debug.html","../../std/num/struct.NonZeroU64.html","../../std/option/enum.Option.html","../../std/result/enum.Result.html","../../std/string/struct.String.html","../primitive.u64.html","enum.FpCategory.html"],"metrics":{"escapeCount":1,"costTime":3560746,"totalUsage":{"prompt_tokens":91714,"completion_tokens":131489,"cached_tokens":0,"reasoning_tokens":114546},"chunkLength":21,"chunksInfo":[{"oldContextLength":527,"oldStrLength":474,"newContextLength":527,"newStrLength":537,"costTime":125819},{"oldContextLength":0,"oldStrLength":0,"newContextLength":527,"newStrLength":19,"costTime":63086},{"oldContextLength":527,"oldStrLength":1667,"newContextLength":527,"newStrLength":1999,"costTime":387394},{"oldContextLength":527,"oldStrLength":1671,"newContextLength":527,"newStrLength":1939,"costTime":178134},{"oldContextLength":527,"oldStrLength":1938,"newContextLength":527,"newStrLength":1833,"costTime":186648},{"oldContextLength":527,"oldStrLength":1996,"newContextLength":527,"newStrLength":1731,"costTime":284499},{"oldContextLength":527,"oldStrLength":1977,"newContextLength":527,"newStrLength":1867,"costTime":41990},{"oldContextLength":527,"oldStrLength":1954,"newContextLength":527,"newStrLength":1978,"costTime":60505},{"oldContextLength":527,"oldStrLength":1999,"newContextLength":527,"newStrLength":1988,"costTime":131629},{"oldContextLength":527,"oldStrLength":1618,"newContextLength":527,"newStrLength":1917,"costTime":78191},{"oldContextLength":527,"oldStrLength":1663,"newContextLength":527,"newStrLength":1995,"costTime":44661},{"oldContextLength":527,"oldStrLength":1125,"newContextLength":527,"newStrLength":2000,"costTime":102921},{"oldContextLength":527,"oldStrLength":1701,"newContextLength":527,"newStrLength":1933,"costTime":313688},{"oldContextLength":527,"oldStrLength":1810,"newContextLength":527,"newStrLength":1929,"costTime":278602},{"oldContextLength":527,"oldStrLength":1765,"newContextLength":527,"newStrLength":1761,"costTime":311106},{"oldContextLength":527,"oldStrLength":1983,"newContextLength":527,"newStrLength":1904,"costTime":112297},{"oldContextLength":527,"oldStrLength":1911,"newContextLength":527,"newStrLength":1981,"costTime":192138},{"oldContextLength":527,"oldStrLength":710,"newContextLength":527,"newStrLength":426,"costTime":148739},{"oldContextLength":527,"oldStrLength":33,"newContextLength":527,"newStrLength":37,"costTime":47336},{"oldContextLength":527,"oldStrLength":418,"newContextLength":527,"newStrLength":418,"costTime":244275},{"oldContextLength":527,"oldStrLength":418,"newContextLength":527,"newStrLength":418,"costTime":227088}]},"model":"deepseek-r1-250120","extraInfo":{"startTime":"2025-03-11T17:59:38.584Z","examGroup":"diff","sourceId":"7c6faca8-74a2-4d34-a56e-3ac3bfeb2137"}}