{"create_time":"2025-03-11T17:55:41.300Z","id":"ec1a83fd-edad-4d99-a20b-7f5c8e0a1e8a","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/core/sync/atomic/struct.AtomicIsize.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\output\\deepseek-r1-250120\\0e3252a6-fe43-43bd-ad68-ee4ab128985d.json","relations":["has argument","has declaration","has description","has full name","has return type","has source code","has stability","has type","implements","is a","requires method","returns","stable since"],"delete_triples":[],"add_triples":[["AtomicIsize","has description","This type has the same in - memory representation as the underlying integer type, isize."],["AtomicIsize","implements","Sync"],["AtomicIsize","requires method","fetch_add"],["AtomicIsize","requires method","fetch_and"],["AtomicIsize","requires method","fetch_min"],["AtomicIsize","requires method","fetch_nand"],["AtomicIsize","requires method","fetch_or"],["AtomicIsize","requires method","fetch_sub"],["AtomicIsize","requires method","fetch_xor"],["AtomicIsize","requires method","swap"],["fetch_add","has argument","order: Ordering"],["fetch_add","has argument","val: isize"],["fetch_add","has description","Adds to the current value, returning the previous value."],["fetch_add","has description","This operation wraps around on overflow."],["fetch_add","has description","fetch_add takes an Ordering argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using Acquire makes the store part of this operation Relaxed, and using Release makes the load part Relaxed."],["fetch_add","is a","method"],["fetch_add","returns","isize"],["fetch_and","has argument","order: Ordering"],["fetch_and","has argument","val: isize"],["fetch_and","has description","Bitwise \"and\" with the current value."],["fetch_and","has description","Performs a bitwise \"and\" operation on the current value and the argument val, and sets the new value to the result."],["fetch_and","has description","Returns the previous value."],["fetch_and","has description","fetch_and takes an Ordering argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using Acquire makes the store part of this operation Relaxed, and using Release makes the load part Relaxed."],["fetch_and","is a","method"],["fetch_and","returns","isize"],["fetch_min","has argument","order: Ordering"],["fetch_min","has argument","val: isize"],["fetch_min","has description","Finds the minimum of the current value and the argument val, and sets the new value to the result."],["fetch_min","has description","Minimum with the current value."],["fetch_min","has description","Returns the previous value."],["fetch_min","has description","fetch_min takes an Ordering argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using Acquire makes the store part of this operation Relaxed, and using Release makes the load part Relaxed."],["fetch_min","has source code","src/core/sync/atomic.rs.html#1814 - 1816"],["fetch_min","is a","method"],["fetch_min","returns","isize"],["fetch_nand","has argument","order: Ordering"],["fetch_nand","has argument","val: isize"],["fetch_nand","is a","method"],["fetch_nand","returns","isize"],["fetch_nand","stable since","1.27.0"],["fetch_or","has argument","order: Ordering"],["fetch_or","has argument","val: isize"],["fetch_or","has description","Bitwise \"or\" with the current value."],["fetch_or","has description","Performs a bitwise \"or\" operation on the current value and the argument val, and sets the new value to the result."],["fetch_or","has description","Returns the previous value."],["fetch_or","has description","fetch_or takes an Ordering argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using Acquire makes the store part of this operation Relaxed, and using Release makes the load part Relaxed."],["fetch_or","is a","method"],["fetch_or","returns","isize"],["fetch_sub","has argument","order: Ordering"],["fetch_sub","has argument","val: isize"],["fetch_sub","is a","method"],["fetch_sub","returns","isize"],["fetch_xor","has argument","order: Ordering"],["fetch_xor","has argument","val: isize"],["fetch_xor","is a","method"],["fetch_xor","returns","isize"],["swap","has argument","order: Ordering"],["swap","has argument","val: isize"],["swap","is a","method"],["swap","returns","isize"]],"delete_links":[],"add_links":["../../../core/convert/trait.From.html","../../../core/default/trait.Default.html","../../../core/fmt/trait.Debug.html","../../../core/marker/trait.Sync.html","../../../core/ops/trait.FnMut.html","../../../core/option/enum.Option.html","../../../core/sync/atomic/enum.Ordering.html","../../../index.html","../../../settings.html","../../../src/core/sync/atomic.rs.html","../../../std/primitive.isize.html","../../index.html","../index.html","index.html"],"metrics":{"escapeCount":0,"costTime":414474,"totalUsage":{"prompt_tokens":70925,"completion_tokens":23617,"cached_tokens":0,"reasoning_tokens":0},"chunkLength":17,"chunksInfo":[{"oldContextLength":527,"oldStrLength":135,"newContextLength":527,"newStrLength":135,"costTime":14628},{"oldContextLength":527,"oldStrLength":518,"newContextLength":527,"newStrLength":537,"costTime":15150},{"oldContextLength":527,"oldStrLength":1378,"newContextLength":527,"newStrLength":1378,"costTime":16118},{"oldContextLength":527,"oldStrLength":1050,"newContextLength":527,"newStrLength":1050,"costTime":15433},{"oldContextLength":527,"oldStrLength":1555,"newContextLength":527,"newStrLength":1555,"costTime":17088},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":16433},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":15488},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":17106},{"oldContextLength":527,"oldStrLength":1552,"newContextLength":527,"newStrLength":1552,"costTime":21516},{"oldContextLength":527,"oldStrLength":1734,"newContextLength":527,"newStrLength":1734,"costTime":27116},{"oldContextLength":527,"oldStrLength":1655,"newContextLength":527,"newStrLength":1655,"costTime":29295},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":31172},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":31007},{"oldContextLength":527,"oldStrLength":1827,"newContextLength":527,"newStrLength":1827,"costTime":36183},{"oldContextLength":527,"oldStrLength":1166,"newContextLength":527,"newStrLength":1804,"costTime":35952},{"oldContextLength":527,"oldStrLength":1483,"newContextLength":527,"newStrLength":1483,"costTime":37635},{"oldContextLength":527,"oldStrLength":1001,"newContextLength":527,"newStrLength":363,"costTime":37154}]},"model":"doubao-1-5-pro-32k-250115","extraInfo":{"startTime":"2025-03-11T17:48:46.302Z","examGroup":"diff","sourceId":"0e3252a6-fe43-43bd-ad68-ee4ab128985d"}}