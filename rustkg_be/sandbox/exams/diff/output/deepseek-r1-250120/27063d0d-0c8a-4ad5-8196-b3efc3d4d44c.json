{"create_time":"2025-03-11T18:29:18.470Z","id":"27063d0d-0c8a-4ad5-8196-b3efc3d4d44c","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/core/sync/atomic/struct.AtomicIsize.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\output\\deepseek-r1-250120\\0e3252a6-fe43-43bd-ad68-ee4ab128985d.json","relations":["has argument","has declaration","has description","has full name","has return type","has source code","has stability","has type","implements","is a","requires method","returns","stable since"],"delete_triples":[],"add_triples":[["AtomicIsize","implements","Sync"],["AtomicIsize","requires method","fetch_or"],["AtomicIsize","requires method","fetch_xor"],["fetch_or","has argument","order: Ordering"],["fetch_or","has argument","val: isize"],["fetch_or","has description","Bitwise \"or\" with the current value. Performs a bitwise \"or\" operation on the current value and the argument val, and sets the new value to the result. Returns the previous value. fetch_or takes an Ordering argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using Acquire makes the store part of this operation Relaxed, and using Release makes the load part Relaxed."],["fetch_or","is a","method"],["fetch_or","returns","isize"],["fetch_xor","has argument","order: Ordering"],["fetch_xor","has argument","val: isize"],["fetch_xor","is a","method"],["fetch_xor","returns","isize"]],"delete_links":[],"add_links":["../../../core/marker/trait.Sync.html","../../../src/core/sync/atomic.rs.html"],"metrics":{"escapeCount":0,"costTime":1960047,"totalUsage":{"prompt_tokens":63163,"completion_tokens":70015,"cached_tokens":0,"reasoning_tokens":59506},"chunkLength":17,"chunksInfo":[{"oldContextLength":527,"oldStrLength":135,"newContextLength":527,"newStrLength":135,"costTime":54777},{"oldContextLength":527,"oldStrLength":518,"newContextLength":527,"newStrLength":537,"costTime":27627},{"oldContextLength":527,"oldStrLength":1378,"newContextLength":527,"newStrLength":1378,"costTime":169113},{"oldContextLength":527,"oldStrLength":1050,"newContextLength":527,"newStrLength":1050,"costTime":71368},{"oldContextLength":527,"oldStrLength":1555,"newContextLength":527,"newStrLength":1555,"costTime":139084},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":42843},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":96274},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":137133},{"oldContextLength":527,"oldStrLength":1552,"newContextLength":527,"newStrLength":1552,"costTime":111685},{"oldContextLength":527,"oldStrLength":1734,"newContextLength":527,"newStrLength":1734,"costTime":101755},{"oldContextLength":527,"oldStrLength":1655,"newContextLength":527,"newStrLength":1655,"costTime":243062},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":93317},{"oldContextLength":527,"oldStrLength":9,"newContextLength":527,"newStrLength":9,"costTime":71130},{"oldContextLength":527,"oldStrLength":1827,"newContextLength":527,"newStrLength":1827,"costTime":127470},{"oldContextLength":527,"oldStrLength":1166,"newContextLength":527,"newStrLength":1804,"costTime":43306},{"oldContextLength":527,"oldStrLength":1483,"newContextLength":527,"newStrLength":1483,"costTime":238015},{"oldContextLength":527,"oldStrLength":1001,"newContextLength":527,"newStrLength":363,"costTime":192088}]},"model":"deepseek-r1-250120","extraInfo":{"startTime":"2025-03-11T17:56:37.887Z","examGroup":"diff","sourceId":"0e3252a6-fe43-43bd-ad68-ee4ab128985d"}}