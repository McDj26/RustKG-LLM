{"create_time":"2025-03-23T10:26:02.589Z","id":"00c4dfe7-8ef9-4f74-b6f2-3be0af1e7579","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.31-x86_64-pc-windows-msvc/share/doc/rust/html/std/primitive.slice.html","previous_url":"D:\\Lessons\\projects\\rustKG\\rustkg_be\\sandbox\\exams\\split\\output-primitives\\0d6461a4-e124-4575-9e32-2185b3e54aa1.json","relations":["deprecated","has argument","has associated type","has declaration","has description","has example","has full name","has method","has parameter","has return type","has source code","has stability","has type","implements","is a","related to module","returns","stable since"],"delete_triples":[["&'b [B]","implements","PartialEq<[A; 0]"],["&'b [B]","implements","PartialEq<[A; 11]"],["&'b [B]","implements","PartialEq<[A; 19]"],["&'b [B]","implements","PartialEq<[A; 29]"],["&'b [B]","implements","PartialEq<[A; 5]"],["&'b [B]","implements","PartialEq<[A; 9]"],["&'b mut [B]","implements","PartialEq<[A; 16]"],["&'b mut [B]","implements","PartialEq<[A; 1]"],["&'b mut [B]","implements","PartialEq<[A; 26]"],["&'b mut [B]","implements","PartialEq<[A; 2]"],["&'b mut [B]","implements","PartialEq<[A; 31]"],["&'b mut [B]","implements","PartialEq<[A; 4]"],["[B]","implements","PartialEq<[A; 13]"],["[B]","implements","PartialEq<[A; 24]"],["[B]","implements","PartialEq<[A; 27]"],["[B]","implements","PartialEq<[A; 2]"],["[B]","implements","PartialEq<[A; 4]"],["ptr","has description","Raw, unsafe pointers, *const T, and *mut T"]],"add_triples":[["&'b [B]","implements","PartialEq<[A; 10]"],["&'b [B]","implements","PartialEq<[A; 14]"],["&'b [B]","implements","PartialEq<[A; 15]"],["&'b [B]","implements","PartialEq<[A; 16]"],["&'b [B]","implements","PartialEq<[A; 17]"],["&'b [B]","implements","PartialEq<[A; 18]"],["&'b [B]","implements","PartialEq<[A; 1]"],["&'b [B]","implements","PartialEq<[A; 20]"],["&'b [B]","implements","PartialEq<[A; 21]"],["&'b [B]","implements","PartialEq<[A; 22]"],["&'b [B]","implements","PartialEq<[A; 23]"],["&'b [B]","implements","PartialEq<[A; 24]"],["&'b [B]","implements","PartialEq<[A; 25]"],["&'b [B]","implements","PartialEq<[A; 27]"],["&'b [B]","implements","PartialEq<[A; 2]"],["&'b [B]","implements","PartialEq<[A; 30]"],["&'b [B]","implements","PartialEq<[A; 32]"],["&'b [B]","implements","PartialEq<[A; 3]"],["&'b [B]","implements","PartialEq<[A; 6]"],["&'b [B]","implements","PartialEq<[A; 7]"],["&'b [B]","implements","PartialEq<[A; 8]"],["&'b mut [B]","implements","PartialEq<[A; 10]"],["&'b mut [B]","implements","PartialEq<[A; 13]"],["&'b mut [B]","implements","PartialEq<[A; 15]"],["&'b mut [B]","implements","PartialEq<[A; 17]"],["&'b mut [B]","implements","PartialEq<[A; 19]"],["&'b mut [B]","implements","PartialEq<[A; 23]"],["&'b mut [B]","implements","PartialEq<[A; 24]"],["&'b mut [B]","implements","PartialEq<[A; 25]"],["&'b mut [B]","implements","PartialEq<[A; 27]"],["&'b mut [B]","implements","PartialEq<[A; 28]"],["&'b mut [B]","implements","PartialEq<[A; 29]"],["&'b mut [B]","implements","PartialEq<[A; 30]"],["&'b mut [B]","implements","PartialEq<[A; 32]"],["&'b mut [B]","implements","PartialEq<[A; 5]"],["&'b mut [B]","implements","PartialEq<[A; 6]"],["&'b mut [B]","implements","PartialEq<[A; 7]"],["&'b mut [B]","implements","PartialEq<[A; 8]"],["&[T]","implements","Default"],["&[char]","implements","Pattern"],["AsRef","has method","as_ref"],["Default","has method","default"],["Pattern","has method","into_searcher"],["[B]","implements","PartialEq<[A; 11]"],["[B]","implements","PartialEq<[A; 12]"],["[B]","implements","PartialEq<[A; 14]"],["[B]","implements","PartialEq<[A; 15]"],["[B]","implements","PartialEq<[A; 22]"],["[B]","implements","PartialEq<[A; 25]"],["[B]","implements","PartialEq<[A; 28]"],["[B]","implements","PartialEq<[A; 3]"],["[B]","implements","PartialEq<[A; 6]"],["[B]","implements","PartialEq<[A; 7]"],["[B]","implements","PartialEq<[A; 9]"],["[T]","implements","AsRef<[T]>"],["as_ref","has return type","&[T]"],["as_ref","has source code","../src/core/convert.rs.html"],["binary_search","has description","Binary searches this sorted slice for a given element. If the value is found then Result::Ok is returned, containing the index of the matching element. If there are multiple matches, then any one of the matches could be returned. If the value is not found then Result::Err is returned, containing the index where a matching element could be inserted while maintaining sorted order."],["binary_search","has return type","Result<usize, usize>"],["binary_search","has source code","../src/core/slice/mod.rs.html"],["binary_search_by","has description","Binary searches this sorted slice with a comparator function."],["binary_search_by","has return type","Result<usize, usize>"],["binary_search_by","has source code","../src/core/slice/mod.rs.html"],["binary_search_by_key","has description","Binary searches this sorted slice with a key extraction function."],["binary_search_by_key","has return type","Result<usize, usize>"],["binary_search_by_key","has source code","../src/core/slice/mod.rs.html"],["chunks_exact","has return type","ChunksExact<T>"],["chunks_exact","has source code","../src/core/slice/mod.rs.html"],["chunks_exact","stable since","1.31.0"],["chunks_exact_mut","has return type","ChunksExactMut<T>"],["chunks_exact_mut","has source code","../src/core/slice/mod.rs.html"],["chunks_exact_mut","stable since","1.31.0"],["contains","has description","Returns true if the slice contains an element with the given value."],["contains","has return type","bool"],["contains","has source code","../src/core/slice/mod.rs.html"],["dbg","has description","A macro for quick and dirty debugging with which you can inspect the value of a given expression."],["dbg","is a","macro"],["default","has return type","&[T]"],["default","has source code","../src/core/slice/mod.rs.html"],["ends_with","has description","Returns true if needle is a suffix of the slice."],["ends_with","has return type","bool"],["ends_with","has source code","../src/core/slice/mod.rs.html"],["into_searcher","has description","Constructs the associated searcher from self and the haystack to search in."],["into_searcher","has parameter","haystack: &'a str"],["into_searcher","has return type","CharSliceSearcher<'a, 'b>"],["into_searcher","has source code","../src/core/str/pattern.rs.html"],["keyword.as","has description","The keyword for casting a value to a type."],["keyword.as","is a","keyword"],["keyword.const","has description","The keyword for defining constants."],["keyword.const","is a","keyword"],["keyword.crate","has description","The `crate` keyword."],["keyword.crate","is a","keyword"],["keyword.enum","has description","For defining enumerations."],["keyword.enum","is a","keyword"],["keyword.extern","has description","For external connections in Rust code."],["keyword.extern","is a","keyword"],["keyword.for","has description","The `for` keyword."],["keyword.for","is a","keyword"],["keyword.if","has description","If statements and expressions."],["keyword.if","is a","keyword"],["keyword.impl","has description","The implementation-defining keyword."],["keyword.impl","is a","keyword"],["keyword.loop","has description","The loop-defining keyword."],["keyword.loop","is a","keyword"],["partition_dedup","has description","Moves all consecutive repeated elements to the end of the slice according to the PartialEq trait implementation."],["partition_dedup","has source code","../src/core/slice/mod.rs.html"],["partition_dedup","has stability","nightly"],["partition_dedup_by","has description","Moves all but the first of consecutive elements to the end of the slice satisfying a given equality relation."],["partition_dedup_by","has parameter","same_bucket: F"],["partition_dedup_by","has return type","(&mut [T], &mut [T])"],["partition_dedup_by","has source code","../src/core/slice/mod.rs.html"],["partition_dedup_by","has stability","nightly"],["partition_dedup_by_key","has description","Moves all but the first of consecutive elements to the end of the slice that resolve to the same key."],["partition_dedup_by_key","has parameter","key: F"],["partition_dedup_by_key","has return type","(&mut [T], &mut [T])"],["partition_dedup_by_key","has source code","../src/core/slice/mod.rs.html"],["partition_dedup_by_key","has stability","nightly"],["ptr","has description","Manually manage memory through raw pointers"],["rchunks","has return type","RChunks<T>"],["rchunks","has source code","../src/core/slice/mod.rs.html"],["rchunks","stable since","1.31.0"],["rchunks_exact","has return type","RChunksExact<T>"],["rchunks_exact","has source code","../src/core/slice/mod.rs.html"],["rchunks_exact","stable since","1.31.0"],["rchunks_exact_mut","has return type","RChunksExactMut<T>"],["rchunks_exact_mut","has source code","../src/core/slice/mod.rs.html"],["rchunks_exact_mut","stable since","1.31.0"],["rchunks_mut","has return type","RChunksMut<T>"],["rchunks_mut","has source code","../src/core/slice/mod.rs.html"],["rchunks_mut","stable since","1.31.0"],["sort_unstable","has description","Sorts the slice, but may not preserve the order of equal elements."],["sort_unstable","has source code","../src/core/slice/mod.rs.html"],["sort_unstable","stable since","1.20.0"],["sort_unstable_by","has description","Sorts the slice with a comparator function, but may not preserve the order of equal elements."],["sort_unstable_by","has source code","../src/core/slice/mod.rs.html"],["sort_unstable_by","stable since","1.20.0"],["sort_unstable_by_key","has description","Sorts the slice with a key extraction function, but may not preserve the order of equal elements."],["sort_unstable_by_key","has source code","../src/core/slice/mod.rs.html"],["sort_unstable_by_key","stable since","1.20.0"],["split_at_mut","has argument","mid: usize"],["split_at_mut","has description","Divides one mutable slice into two at an index."],["split_at_mut","has return type","(&mut [T], &mut [T])"],["split_at_mut","has source code","../src/core/slice/mod.rs.html"],["split_last","has return type","Option<(&T, &[T])>"],["split_last","has source code","../src/core/slice/mod.rs.html"],["split_last","stable since","1.5.0"],["split_last_mut","has return type","Option<(&mut T, &mut [T])>"],["split_last_mut","has source code","../src/core/slice/mod.rs.html"],["split_last_mut","stable since","1.5.0"],["starts_with","has description","Returns true if needle is a prefix of the slice."],["starts_with","has return type","bool"],["starts_with","has source code","../src/core/slice/mod.rs.html"],["std","contains","dbg"],["std","contains","keyword.as"],["std","contains","keyword.const"],["std","contains","keyword.crate"],["std","contains","keyword.enum"],["std","contains","keyword.extern"],["std","contains","keyword.for"],["std","contains","keyword.if"],["std","contains","keyword.impl"],["std","contains","keyword.loop"],["std::slice","has method","binary_search"],["std::slice","has method","binary_search_by"],["std::slice","has method","binary_search_by_key"],["std::slice","has method","chunks_exact"],["std::slice","has method","chunks_exact_mut"],["std::slice","has method","contains"],["std::slice","has method","ends_with"],["std::slice","has method","partition_dedup"],["std::slice","has method","partition_dedup_by"],["std::slice","has method","partition_dedup_by_key"],["std::slice","has method","rchunks"],["std::slice","has method","rchunks_exact"],["std::slice","has method","rchunks_exact_mut"],["std::slice","has method","rchunks_mut"],["std::slice","has method","sort_unstable"],["std::slice","has method","sort_unstable_by"],["std::slice","has method","sort_unstable_by_key"],["std::slice","has method","split_at_mut"],["std::slice","has method","split_last"],["std::slice","has method","split_last_mut"],["std::slice","has method","starts_with"]],"delete_links":[],"add_links":["../src/core/array.rs.html","../src/core/slice/mod.rs.html","../src/core/str/pattern.rs.html","../std/cmp/trait.Ord.html","../std/result/enum.Result.html","keyword.as.html","keyword.const.html","keyword.crate.html","keyword.enum.html","keyword.extern.html","keyword.for.html","keyword.if.html","keyword.impl.html","keyword.loop.html","macro.dbg.html"],"metrics":{"escapeCount":2,"costTime":4249364,"totalUsage":{"prompt_tokens":540975,"completion_tokens":100486,"cached_tokens":0,"reasoning_tokens":65739},"chunkLength":18,"chunksInfo":[{"oldContextLength":527,"oldStrLength":36428,"newContextLength":527,"newStrLength":37959,"costTime":128215},{"oldContextLength":527,"oldStrLength":36537,"newContextLength":527,"newStrLength":36531,"costTime":261917},{"oldContextLength":527,"oldStrLength":18147,"newContextLength":527,"newStrLength":37345,"costTime":159026},{"oldContextLength":527,"oldStrLength":38359,"newContextLength":527,"newStrLength":38372,"costTime":291108},{"oldContextLength":527,"oldStrLength":37722,"newContextLength":527,"newStrLength":38440,"costTime":262309},{"oldContextLength":527,"oldStrLength":21126,"newContextLength":527,"newStrLength":35586,"costTime":214235},{"oldContextLength":527,"oldStrLength":39000,"newContextLength":527,"newStrLength":39000,"costTime":163145},{"oldContextLength":527,"oldStrLength":23922,"newContextLength":527,"newStrLength":39000,"costTime":973391},{"oldContextLength":527,"oldStrLength":39000,"newContextLength":527,"newStrLength":38945,"costTime":91700},{"oldContextLength":527,"oldStrLength":38951,"newContextLength":527,"newStrLength":39000,"costTime":175570},{"oldContextLength":527,"oldStrLength":39000,"newContextLength":527,"newStrLength":38994,"costTime":72570},{"oldContextLength":527,"oldStrLength":38854,"newContextLength":527,"newStrLength":38898,"costTime":385576},{"oldContextLength":527,"oldStrLength":39000,"newContextLength":527,"newStrLength":38948,"costTime":159874},{"oldContextLength":527,"oldStrLength":39000,"newContextLength":527,"newStrLength":38965,"costTime":71846},{"oldContextLength":527,"oldStrLength":38829,"newContextLength":527,"newStrLength":39000,"costTime":55637},{"oldContextLength":527,"oldStrLength":39000,"newContextLength":527,"newStrLength":28264,"costTime":322982},{"oldContextLength":527,"oldStrLength":38999,"newContextLength":527,"newStrLength":33840,"costTime":195568},{"oldContextLength":527,"oldStrLength":12951,"newContextLength":527,"newStrLength":13652,"costTime":264695}]},"model":"deepseek-r1-250120","extraInfo":{"startTime":"2025-03-23T09:04:16.824Z","examGroup":"diff","examParams":{"windowLength":39000},"sourceId":"0d6461a4-e124-4575-9e32-2185b3e54aa1"}}