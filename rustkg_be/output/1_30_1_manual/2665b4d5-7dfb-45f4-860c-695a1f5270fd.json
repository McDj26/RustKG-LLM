{"stability":{"stable since":"1.5.0"},"apiName":"std::char::from_u32_unchecked","apiType":"function","apiDocumentation":{"apiDescription":["Converts a u32 to a char, ignoring validity.","Note that all chars are valid u32s, and can be cast to one with as:","let c = 'üíØ'; let i = c as u32; assert_eq!(128175, i);","However, the reverse is not true: not all valid u32s are valid chars. from_u32_unchecked() will ignore this, and blindly cast to char, possibly creating an invalid one.","Safety","This function is unsafe, as it may construct invalid char values.","For a safe version of this function, see the from_u32 function."],"examples":["Basic usage:","use std::char;\n\nlet c = unsafe { char::from_u32_unchecked(0x2764) };\n\nassert_eq!('‚ù§', c);"]}}