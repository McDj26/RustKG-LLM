{"stability":{"stable since":"1.0.0"},"apiName":"std::borrow::ToOwned","apiType":"trait","apiDocumentation":{"apiDescription":["A generalization of Clone to borrowed data.","Some types make it possible to go from borrowed to owned, usually by implementing the Clone trait. But Clone works only for going from &T to T. The ToOwned trait generalizes Clone to construct owned data from any borrow of a given type."]},"trait required methods":[{"name":"[+] Expand attributes#[must_use = \"cloning is often expensive and is not expected to have side effects\"] fn to_owned(&self) -> Self::Owned","details":{"description":"Creates owned data from borrowed data, usually by cloning.","example":["Basic usage:","let s: &str = \"a\";\nlet ss: String = s.to_owned();\n\nlet v: &[i32] = &[1, 2];\nlet vv: Vec<i32> = v.to_owned();"]}}],"trait provided methods":[{"name":"fn clone_into(&self, target: &mut Self::Owned)","stability":["ðŸ”¬ This is a nightly-only experimental API.  (toowned_clone_into #41263)recently added\n"]}]}