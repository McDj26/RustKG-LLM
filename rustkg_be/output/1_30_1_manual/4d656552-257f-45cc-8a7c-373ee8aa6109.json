{"stability":{"stable since":"1.0.0"},"apiName":"std::net::AddrParseError","apiType":"struct","apiDocumentation":{"apiDescription":["An error which can be returned when parsing an IP address or a socket address.","This error is used as the error type for the FromStr implementation for IpAddr, Ipv4Addr, Ipv6Addr, SocketAddr, SocketAddrV4, and SocketAddrV6.","Potential causes","AddrParseError may be thrown because the provided string does not parse as the given type, often because it includes information only handled by a different address type.","use std::net::IpAddr; let _foo: IpAddr = \"127.0.0.1:8080\".parse().expect(\"Cannot handle the socket port\");","IpAddr doesn't handle the port. Use SocketAddr instead.","use std::net::SocketAddr; // No problem, the `panic!` message has disappeared. let _foo: SocketAddr = \"127.0.0.1:8080\".parse().expect(\"unreachable panic\");"]},"trait implementations":[{"name":"impl std::fmt::Debug for std::net::AddrParseError","stable since":"1.0.0"},{"name":"impl std::clone::Clone for std::net::AddrParseError","stable since":"1.0.0"},{"name":"impl std::cmp::PartialEq for std::net::AddrParseError","stable since":"1.0.0"},{"name":"impl std::cmp::Eq for std::net::AddrParseError","stable since":"1.0.0"},{"name":"impl std::fmt::Display for std::net::AddrParseError","stable since":"1.4.0"},{"name":"impl std::error::Error for std::net::AddrParseError","stable since":"1.4.0"},{"name":"impl std::marker::Send for std::net::AddrParseError","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::net::AddrParseError","stable since":"1.0.0"}]}