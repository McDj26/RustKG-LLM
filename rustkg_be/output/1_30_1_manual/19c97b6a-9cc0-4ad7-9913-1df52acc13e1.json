{"stability":{"stable since":"1.26.0"},"apiName":"std::fs::read_to_string","apiType":"function","apiDocumentation":{"apiDescription":["Read the entire contents of a file into a string.","This is a convenience function for using File::open and read_to_string with fewer imports and without an intermediate variable. It pre-allocates a buffer based on the file size when available, so it is generally faster than reading into a string created with String::new().","Errors","This function will return an error if path does not already exist. Other errors may also be returned according to OpenOptions::open.","It will also return an error if it encounters while reading an error of a kind other than ErrorKind::Interrupted, or if the contents of the file are not valid UTF-8."],"examples":["use std::fs;\nuse std::net::SocketAddr;\n\nfn main() -> Result<(), Box<std::error::Error + 'static>> {\n    let foo: SocketAddr = fs::read_to_string(\"address.txt\")?.parse()?;\n    Ok(())\n}"]}}