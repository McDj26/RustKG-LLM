{"stability":{"stable since":"1.0.0"},"apiName":"std::ffi::OsStr","apiType":"struct","apiDocumentation":{"apiDescription":["Borrowed reference to an OS string (see OsString).","This type represents a borrowed reference to a string in the operating system's preferred representation.","&OsStr is to OsString as &str is to String: the former in each pair are borrowed references; the latter are owned strings.","See the module's toplevel documentation about conversions for a discussion on the traits which OsStr implements for conversions from/to native representations."]},"trait implementations":[{"name":"impl<'a> std::convert::From<&'a std::ffi::OsStr> for std::boxed::Box<std::ffi::OsStr>","stable since":"1.17.0"},{"name":"impl<'a> std::convert::From<&'a std::ffi::OsStr> for std::sync::Arc<std::ffi::OsStr>","stable since":"1.24.0"},{"name":"impl<'a> std::convert::From<&'a std::ffi::OsStr> for std::rc::Rc<std::ffi::OsStr>","stable since":"1.24.0"},{"name":"impl<'a> std::convert::From<&'a std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.28.0"},{"name":"impl<'a> std::default::Default for &'a std::ffi::OsStr","stable since":"1.9.0"},{"name":"impl std::cmp::PartialEq for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::cmp::PartialEq<str> for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::cmp::PartialEq<std::ffi::OsStr> for str","stable since":"1.0.0"},{"name":"impl std::cmp::Eq for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::cmp::PartialOrd for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::cmp::PartialOrd<str> for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::cmp::Ord for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsStr> for std::ffi::OsString","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsString> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsStr> for std::ffi::OsString","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsString> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'a std::ffi::OsStr> for std::ffi::OsString","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsString> for &'a std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'a std::ffi::OsStr> for std::ffi::OsString","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsString> for &'a std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::ffi::OsStr>> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::ffi::OsStr>> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'b std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::ffi::OsStr>> for &'b std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'b std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::ffi::OsStr>> for &'b std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl std::hash::Hash for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::fmt::Debug for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::borrow::Borrow<std::ffi::OsStr> for std::ffi::OsString","stable since":"1.0.0"},{"name":"impl std::borrow::ToOwned for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::convert::AsRef<std::ffi::OsStr> for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::convert::AsRef<std::ffi::OsStr> for std::ffi::OsString","stable since":"1.0.0"},{"name":"impl std::convert::AsRef<std::ffi::OsStr> for str","stable since":"1.0.0"},{"name":"impl std::convert::AsRef<std::ffi::OsStr> for std::string::String","stable since":"1.0.0"},{"name":"impl<'a> std::convert::AsRef<std::ffi::OsStr> for std::path::Component<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::convert::AsRef<std::ffi::OsStr> for std::path::Components<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::convert::AsRef<std::ffi::OsStr> for std::path::Iter<'a>","stable since":"1.0.0"},{"name":"impl std::convert::AsRef<std::ffi::OsStr> for std::path::PathBuf","stable since":"1.0.0"},{"name":"impl std::convert::AsRef<std::ffi::OsStr> for std::path::Path","stable since":"1.0.0"},{"name":"impl std::convert::AsRef<std::path::Path> for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsStr> for std::path::PathBuf","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::path::PathBuf> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsStr> for std::path::PathBuf","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::path::PathBuf> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'a std::ffi::OsStr> for std::path::PathBuf","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::path::PathBuf> for &'a std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'a std::ffi::OsStr> for std::path::PathBuf","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::path::PathBuf> for &'a std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsStr> for std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::path::Path> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsStr> for std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::path::Path> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'a std::ffi::OsStr> for std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::path::Path> for &'a std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'a std::ffi::OsStr> for std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::path::Path> for &'a std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsStr> for &'a std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'a std::path::Path> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsStr> for &'a std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'a std::path::Path> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsStr> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::path::Path>> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsStr> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::path::Path>> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'b std::ffi::OsStr> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::path::Path>> for &'b std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'b std::ffi::OsStr> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::path::Path>> for &'b std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl std::os::windows::ffi::OsStrExt for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::os::unix::ffi::OsStrExt for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::marker::Send for std::ffi::OsStr","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::ffi::OsStr","stable since":"1.0.0"}],"methods":[{"name":"pub fn new<S: AsRef<OsStr> + ?Sized>(s: &S) -> &OsStr","details":{"description":["Coerces into an OsStr slice."],"example":["use std::ffi::OsStr;\n\nlet os_str = OsStr::new(\"foo\");"]}},{"name":"pub fn to_str(&self) -> Option<&str>","details":{"description":["Yields a &str slice if the OsStr is valid Unicode.","This conversion may entail doing a check for UTF-8 validity."],"example":["use std::ffi::OsStr;\n\nlet os_str = OsStr::new(\"foo\");\nassert_eq!(os_str.to_str(), Some(\"foo\"));"]}},{"name":"pub fn to_string_lossy(&self) -> Cow<str>","details":{"description":["Converts an OsStr to a Cow<str>.","Any non-Unicode sequences are replaced with U+FFFD REPLACEMENT CHARACTER."],"example":["Calling to_string_lossy on an OsStr with valid unicode:","use std::ffi::OsStr;\n\nlet os_str = OsStr::new(\"foo\");\nassert_eq!(os_str.to_string_lossy(), \"foo\");","Had os_str contained invalid unicode, the to_string_lossy call might\nhave returned \"foï¿½\"."]}},{"name":"pub fn to_os_string(&self) -> OsString","details":{"description":["Copies the slice into an owned OsString."],"example":["use std::ffi::{OsStr, OsString};\n\nlet os_str = OsStr::new(\"foo\");\nlet os_string = os_str.to_os_string();\nassert_eq!(os_string, OsString::from(\"foo\"));"]}},{"name":"pub fn is_empty(&self) -> bool","details":{"description":["Checks whether the OsStr is empty."],"example":["use std::ffi::OsStr;\n\nlet os_str = OsStr::new(\"\");\nassert!(os_str.is_empty());\n\nlet os_str = OsStr::new(\"foo\");\nassert!(!os_str.is_empty());"]}},{"name":"pub fn len(&self) -> usize","details":{"description":["Returns the length of this OsStr.","Note that this does not return the number of bytes in this string as, for example, OS strings on Windows are encoded as a list of u16 rather than a list of bytes. This number is simply useful for passing to other methods like OsString::with_capacity to avoid reallocations.","See OsStr introduction for more information about encoding."],"example":["use std::ffi::OsStr;\n\nlet os_str = OsStr::new(\"\");\nassert_eq!(os_str.len(), 0);\n\nlet os_str = OsStr::new(\"foo\");\nassert_eq!(os_str.len(), 3);"]}},{"name":"pub fn into_os_string(self: Box<OsStr>) -> OsString","details":{"description":["Converts a Box<OsStr> into an OsString without copying or allocating."]}}]}