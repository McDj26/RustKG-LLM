{"stability":{"stable since":"1.0.0"},"apiName":"std::borrow::BorrowMut","apiType":"trait","apiDocumentation":{"apiDescription":["A trait for mutably borrowing data.","As a companion to Borrow<T> this trait allows a type to borrow as an underlying type by providing a mutable reference. See Borrow<T> for more information on borrowing as another type."]},"trait required methods":[{"name":"fn borrow_mut(&mut self) -> &mut Borrowed","details":{"description":"Mutably borrows from an owned value.","example":["use std::borrow::BorrowMut;\n\nfn check<T: BorrowMut<[i32]>>(mut v: T) {\n    assert_eq!(&mut [1, 2, 3], v.borrow_mut());\n}\n\nlet v = vec![1, 2, 3];\n\ncheck(v);"]}}]}