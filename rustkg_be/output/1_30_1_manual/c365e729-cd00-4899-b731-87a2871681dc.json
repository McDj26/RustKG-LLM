{"stability":{"unstable":"ðŸ”¬ This is a nightly-only experimental API.  (pin #49150)"},"apiName":"std::pin::PinMut","apiType":"struct","apiDocumentation":{"apiDescription":["A pinned reference.","This type is similar to a mutable reference, except that it pins its value, which prevents it from moving out of the reference, unless it implements Unpin.","See the pin module documentation for furthur explanation on pinning."]},"trait implementations":[{"name":"impl<'a, T, F> std::future::UnsafeFutureObj<'a, T> for std::pin::PinMut<'a, F> where F: std::future::Future<Output = T> + 'a","stable since":"1.0.0"},{"name":"impl<'a, T> std::fmt::Pointer for std::pin::PinMut<'a, T> where T: ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, T> std::fmt::Debug for std::pin::PinMut<'a, T> where T: std::fmt::Debug + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, T, U> std::ops::CoerceUnsized<std::pin::PinMut<'a, U>> for std::pin::PinMut<'a, T> where T: std::marker::Unsize<U> + ?std::marker::Sized, U: ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, T> std::pin::Unpin for std::pin::PinMut<'a, T> where T: ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, F> std::future::Future for std::pin::PinMut<'a, F> where F: std::future::Future + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, T> std::ops::DerefMut for std::pin::PinMut<'a, T> where T: std::pin::Unpin + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, T> std::ops::Deref for std::pin::PinMut<'a, T> where T: ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, T> std::fmt::Display for std::pin::PinMut<'a, T> where T: std::fmt::Display + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, T: ?std::marker::Sized> std::marker::Send for std::pin::PinMut<'a, T> where T: std::marker::Send","stable since":"1.0.0"},{"name":"impl<'a, T: ?std::marker::Sized> std::marker::Sync for std::pin::PinMut<'a, T> where T: std::marker::Sync","stable since":"1.0.0"}],"methods":[{"name":"pub fn new(reference: &'a mut T) -> PinMut<'a, T>","stability":["ðŸ”¬ This is a nightly-only experimental API.  (pin #49150)"]},{"name":"pub fn get_mut(this: PinMut<'a, T>) -> &'a mut T","stability":["ðŸ”¬ This is a nightly-only experimental API.  (pin #49150)"]},{"name":"pub unsafe fn new_unchecked(reference: &'a mut T) -> PinMut<'a, T>","stability":["ðŸ”¬ This is a nightly-only experimental API.  (pin #49150)"]},{"name":"pub fn reborrow(&'b mut self) -> PinMut<'b, T>","stability":["ðŸ”¬ This is a nightly-only experimental API.  (pin #49150)"]},{"name":"pub unsafe fn get_mut_unchecked(this: PinMut<'a, T>) -> &'a mut T","stability":["ðŸ”¬ This is a nightly-only experimental API.  (pin #49150)"]},{"name":"pub unsafe fn map_unchecked<U, F>(this: PinMut<'a, T>, f: F) -> PinMut<'a, U> where F: FnOnce(&mut T) -> &mut U","stability":["ðŸ”¬ This is a nightly-only experimental API.  (pin #49150)"]},{"name":"pub fn set(this: PinMut<'a, T>, value: T)","stability":["ðŸ”¬ This is a nightly-only experimental API.  (pin #49150)"]}]}