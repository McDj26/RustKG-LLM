{"stability":{"stable since":"1.0.0"},"apiName":"std::fmt::LowerExp","apiType":"trait","apiDocumentation":{"apiDescription":["e formatting.","The LowerExp trait should format its output in scientific notation with a lower-case e.","For more information on formatters, see the module-level documentation."],"examples":["Basic usage with i32:","let x = 42.0; // 42.0 is '4.2e1' in scientific notation\n\nassert_eq!(format!(\"{:e}\", x), \"4.2e1\");","Implementing LowerExp on a type:","use std::fmt;\n\nstruct Length(i32);\n\nimpl fmt::LowerExp for Length {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        let val = self.0;\n        write!(f, \"{}e1\", val / 10)\n    }\n}\n\nlet l = Length(100);\n\nprintln!(\"l in scientific notation is: {:e}\", l);"]},"trait required methods":[{"name":"fn fmt(&self, f: &mut Formatter) -> Result<(), Error>","details":{"description":"Formats the value using the given formatter."}}]}