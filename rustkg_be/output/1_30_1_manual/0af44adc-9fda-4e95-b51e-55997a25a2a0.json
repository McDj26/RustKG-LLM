{"stability":{"stable since":"1.0.0"},"apiName":"std::path::PrefixComponent","apiType":"struct","apiDocumentation":{"apiDescription":["A structure wrapping a Windows path prefix as well as its unparsed string representation.","In addition to the parsed Prefix information returned by kind, PrefixComponent also holds the raw and unparsed OsStr slice, returned by as_os_str.","Instances of this struct can be obtained by matching against the Prefix variant on Component.","Does not occur on Unix."],"examples":["use std::path::{Component, Path, Prefix};\nuse std::ffi::OsStr;\n\nlet path = Path::new(r\"c:\\you\\later\\\");\nmatch path.components().next().unwrap() {\n    Component::Prefix(prefix_component) => {\n        assert_eq!(Prefix::Disk(b'C'), prefix_component.kind());\n        assert_eq!(OsStr::new(\"c:\"), prefix_component.as_os_str());\n    }\n    _ => unreachable!(),\n}"]},"trait implementations":[{"name":"impl<'a> std::marker::Copy for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::clone::Clone for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::cmp::Eq for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::fmt::Debug for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::cmp::PartialEq for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::cmp::PartialOrd for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::cmp::Ord for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::hash::Hash for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::marker::Send for std::path::PrefixComponent<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::marker::Sync for std::path::PrefixComponent<'a>","stable since":"1.0.0"}],"methods":[{"name":"pub fn kind(&self) -> Prefix<'a>","details":{"description":["Returns the parsed prefix data.","See Prefix's documentation for more information on the different kinds of prefixes."]}},{"name":"pub fn as_os_str(&self) -> &'a OsStr","details":{"description":["Returns the raw OsStr slice for this prefix."]}}]}