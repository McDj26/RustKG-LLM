{"stability":{"stable since":"1.0.0"},"apiName":"std::env::set_var","apiType":"function","apiDocumentation":{"apiDescription":["Sets the environment variable k to the value v for the currently running process.","Note that while concurrent access to environment variables is safe in Rust, some platforms only expose inherently unsafe non-threadsafe APIs for inspecting the environment. As a result extra care needs to be taken when auditing calls to unsafe external FFI functions to ensure that any external environment accesses are properly synchronized with accesses in Rust.","Discussion of this unsafety on Unix may be found in:","Austin Group Bugzilla GNU C library Bugzilla","Panics","This function may panic if key is empty, contains an ASCII equals sign '=' or the NUL character '\\0', or when the value contains the NUL character."],"examples":["use std::env;\n\nlet key = \"KEY\";\nenv::set_var(key, \"VALUE\");\nassert_eq!(env::var(key), Ok(\"VALUE\".to_string()));"]}}