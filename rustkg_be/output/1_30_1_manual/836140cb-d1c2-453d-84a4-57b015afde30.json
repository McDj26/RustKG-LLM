{"stability":{"stable since":"1.0.0"},"apiName":"std::sync::BarrierWaitResult","apiType":"struct","apiDocumentation":{"apiDescription":["A BarrierWaitResult is returned by wait when all threads in the Barrier have rendezvoused."],"examples":["use std::sync::Barrier;\n\nlet barrier = Barrier::new(1);\nlet barrier_wait_result = barrier.wait();"]},"trait implementations":[{"name":"impl std::fmt::Debug for std::sync::BarrierWaitResult","stable since":"1.16.0"},{"name":"impl std::marker::Send for std::sync::BarrierWaitResult","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::sync::BarrierWaitResult","stable since":"1.0.0"}],"methods":[{"name":"pub fn is_leader(&self) -> bool","details":{"description":["Returns whether this thread from wait is the \"leader thread\".","Only one thread will have true returned from their result, all other threads will have false returned."],"example":["use std::sync::Barrier;\n\nlet barrier = Barrier::new(1);\nlet barrier_wait_result = barrier.wait();\nprintln!(\"{:?}\", barrier_wait_result.is_leader());"]}}]}