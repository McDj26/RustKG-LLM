{"stability":{"unstable":"ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"},"apiName":"std::task::Waker","apiType":"struct","apiDocumentation":{"apiDescription":["A Waker is a handle for waking up a task by notifying its executor that it is ready to be run.","This handle contains a trait object pointing to an instance of the UnsafeWake trait, allowing notifications to get routed through it."]},"trait implementations":[{"name":"impl std::clone::Clone for std::task::Waker","stable since":"1.0.0"},{"name":"impl std::fmt::Debug for std::task::Waker","stable since":"1.0.0"},{"name":"impl std::convert::From<std::task::LocalWaker> for std::task::Waker","stable since":"1.0.0"},{"name":"impl std::ops::Drop for std::task::Waker","stable since":"1.0.0"},{"name":"impl std::pin::Unpin for std::task::Waker","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::task::Waker","stable since":"1.0.0"},{"name":"impl std::marker::Send for std::task::Waker","stable since":"1.0.0"},{"name":"impl<T> std::convert::From<std::sync::Arc<T>> for std::task::Waker where T: std::task::Wake + 'static","stable since":"1.0.0"}],"methods":[{"name":"pub unsafe fn new(inner: NonNull<UnsafeWake + 'static>) -> Waker","stability":["ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"]},{"name":"pub fn wake(&self)","stability":["ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"]},{"name":"pub fn will_wake(&self, other: &Waker) -> bool","stability":["ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"]}]}