{"stability":{"stable since":"1.0.0"},"apiName":"std::sync::MutexGuard","apiType":"struct","apiDocumentation":{"apiDescription":["An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.","The data protected by the mutex can be accessed through this guard via its Deref and DerefMut implementations.","This structure is created by the lock and try_lock methods on Mutex."]},"trait implementations":[{"name":"impl<'a, T: ?std::marker::Sized> !std::marker::Send for std::sync::MutexGuard<'a, T>","stable since":"1.0.0"},{"name":"impl<'a, T: ?std::marker::Sized + std::marker::Sync> std::marker::Sync for std::sync::MutexGuard<'a, T>","stable since":"1.19.0"},{"name":"impl<'mutex, T: ?std::marker::Sized> std::ops::Deref for std::sync::MutexGuard<'mutex, T>","stable since":"1.0.0"},{"name":"impl<'mutex, T: ?std::marker::Sized> std::ops::DerefMut for std::sync::MutexGuard<'mutex, T>","stable since":"1.0.0"},{"name":"impl<'a, T: ?std::marker::Sized> std::ops::Drop for std::sync::MutexGuard<'a, T>","stable since":"1.0.0"},{"name":"impl<'a, T: ?std::marker::Sized + std::fmt::Debug> std::fmt::Debug for std::sync::MutexGuard<'a, T>","stable since":"1.16.0"},{"name":"impl<'a, T: ?std::marker::Sized + std::fmt::Display> std::fmt::Display for std::sync::MutexGuard<'a, T>","stable since":"1.20.0"}]}