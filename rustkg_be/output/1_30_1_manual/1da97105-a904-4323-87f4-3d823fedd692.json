{"stability":{"stable since":"1.0.0"},"apiName":"std::char::from_u32","apiType":"function","apiDocumentation":{"apiDescription":["Converts a u32 to a char.","Note that all chars are valid u32s, and can be cast to one with as:","let c = 'üíØ'; let i = c as u32; assert_eq!(128175, i);","However, the reverse is not true: not all valid u32s are valid chars. from_u32() will return None if the input is not a valid value for a char.","For an unsafe version of this function which ignores these checks, see from_u32_unchecked."],"examples":["Basic usage:","use std::char;\n\nlet c = char::from_u32(0x2764);\n\nassert_eq!(Some('‚ù§'), c);","Returning None when the input is not a valid char:","use std::char;\n\nlet c = char::from_u32(0x110000);\n\nassert_eq!(None, c);"]}}