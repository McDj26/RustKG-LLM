{"stability":{"stable since":"1.0.0"},"apiName":"std::borrow::Cow","apiType":"enum","apiDocumentation":{"apiDescription":["A clone-on-write smart pointer.","The type Cow is a smart pointer providing clone-on-write functionality: it can enclose and provide immutable access to borrowed data, and clone the data lazily when mutation or ownership is required. The type is designed to work with general borrowed data via the Borrow trait.","Cow implements Deref, which means that you can call non-mutating methods directly on the data it encloses. If mutation is desired, to_mut will obtain a mutable reference to an owned value, cloning if necessary."],"examples":["use std::borrow::Cow;\n\nfn abs_all(input: &mut Cow<[i32]>) {\n    for i in 0..input.len() {\n        let v = input[i];\n        if v < 0 {\n            // Clones into a vector if not already owned.\n            input.to_mut()[i] = -v;\n        }\n    }\n}\n\n// No clone occurs because `input` doesn't need to be mutated.\nlet slice = [0, 1, 2];\nlet mut input = Cow::from(&slice[..]);\nabs_all(&mut input);\n\n// Clone occurs because `input` needs to be mutated.\nlet slice = [-1, 0, 1];\nlet mut input = Cow::from(&slice[..]);\nabs_all(&mut input);\n\n// No clone occurs because `input` is already owned.\nlet mut input = Cow::from(vec![-1, 0, 1]);\nabs_all(&mut input);","Another example showing how to keep Cow in a struct:","use std::borrow::{Cow, ToOwned};\n\nstruct Items<'a, X: 'a> where [X]: ToOwned<Owned=Vec<X>> {\n    values: Cow<'a, [X]>,\n}\n\nimpl<'a, X: Clone + 'a> Items<'a, X> where [X]: ToOwned<Owned=Vec<X>> {\n    fn new(v: Cow<'a, [X]>) -> Self {\n        Items { values: v }\n    }\n}\n\n// Creates a container from borrowed values of a slice\nlet readonly = [1, 2];\nlet borrowed = Items::new((&readonly[..]).into());\nmatch borrowed {\n    Items { values: Cow::Borrowed(b) } => println!(\"borrowed {:?}\", b),\n    _ => panic!(\"expect borrowed value\"),\n}\n\nlet mut clone_on_write = borrowed;\n// Mutates the data from slice into owned vec and pushes a new value on top\nclone_on_write.values.to_mut().push(3);\nprintln!(\"clone_on_write = {:?}\", clone_on_write.values);\n\n// The data was mutated. Let check it out.\nmatch clone_on_write {\n    Items { values: Cow::Owned(_) } => println!(\"clone_on_write contains owned data\"),\n    _ => panic!(\"expect owned data\"),\n}"]},"enum variants":["Borrowed(&'a B)","Borrowed data.\n","Owned(<B as ToOwned>::Owned)","Owned data.\n"],"trait implementations":[{"name":"impl<'a> std::ops::Add<std::borrow::Cow<'a, str>> for std::borrow::Cow<'a, str>","stable since":"1.14.0"},{"name":"impl<'a> std::ops::Add<&'a str> for std::borrow::Cow<'a, str>","stable since":"1.14.0"},{"name":"impl<'a, B> std::cmp::PartialOrd<std::borrow::Cow<'a, B>> for std::borrow::Cow<'a, B> where B: std::cmp::PartialOrd<B> + std::borrow::ToOwned + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, T> std::convert::AsRef<T> for std::borrow::Cow<'a, T> where T: std::borrow::ToOwned + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, B> std::cmp::Eq for std::borrow::Cow<'a, B> where B: std::cmp::Eq + std::borrow::ToOwned + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, B> std::ops::Deref for std::borrow::Cow<'a, B> where B: std::borrow::ToOwned + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, B> std::borrow::Borrow<B> for std::borrow::Cow<'a, B> where B: std::borrow::ToOwned + ?std::marker::Sized, <B as std::borrow::ToOwned>::std::borrow::ToOwned::Owned: 'a","stable since":"1.0.0"},{"name":"impl<'a, B> std::default::Default for std::borrow::Cow<'a, B> where B: std::borrow::ToOwned + ?std::marker::Sized, <B as std::borrow::ToOwned>::std::borrow::ToOwned::Owned: std::default::Default","stable since":"1.11.0"},{"name":"impl<'a> std::iter::FromIterator<char> for std::borrow::Cow<'a, str>","stable since":"1.12.0"},{"name":"impl<'a> std::iter::FromIterator<std::string::String> for std::borrow::Cow<'a, str>","stable since":"1.12.0"},{"name":"impl<'a, T> std::iter::FromIterator<T> for std::borrow::Cow<'a, [T]> where T: std::clone::Clone","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::iter::FromIterator<&'b str> for std::borrow::Cow<'a, str>","stable since":"1.12.0"},{"name":"impl<'a> std::iter::FromIterator<std::borrow::Cow<'a, str>> for std::string::String","stable since":"1.19.0"},{"name":"impl<'a, B> std::fmt::Display for std::borrow::Cow<'a, B> where B: std::fmt::Display + std::borrow::ToOwned + ?std::marker::Sized, <B as std::borrow::ToOwned>::std::borrow::ToOwned::Owned: std::fmt::Display","stable since":"1.0.0"},{"name":"impl<'a, T> std::convert::From<std::borrow::Cow<'a, [T]>> for std::vec::Vec<T> where [T]: std::borrow::ToOwned, <[T] as std::borrow::ToOwned>::std::borrow::ToOwned::Owned == std::vec::Vec<T>","stable since":"1.14.0"},{"name":"impl<'a, T> std::convert::From<&'a [T]> for std::borrow::Cow<'a, [T]> where T: std::clone::Clone","stable since":"1.8.0"},{"name":"impl<'a> std::convert::From<&'a std::string::String> for std::borrow::Cow<'a, str>","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<std::borrow::Cow<'a, str>> for std::string::String","stable since":"1.14.0"},{"name":"impl<'a, T> std::convert::From<std::vec::Vec<T>> for std::borrow::Cow<'a, [T]> where T: std::clone::Clone","stable since":"1.8.0"},{"name":"impl<'a> std::convert::From<std::string::String> for std::borrow::Cow<'a, str>","stable since":"1.0.0"},{"name":"impl<'a> std::convert::From<&'a str> for std::borrow::Cow<'a, str>","stable since":"1.0.0"},{"name":"impl<'a, T> std::convert::From<&'a std::vec::Vec<T>> for std::borrow::Cow<'a, [T]> where T: std::clone::Clone","stable since":"1.28.0"},{"name":"impl<'a> std::string::ToString for std::borrow::Cow<'a, str>","stable since":"1.17.0"},{"name":"impl<'a, B> std::clone::Clone for std::borrow::Cow<'a, B> where B: std::borrow::ToOwned + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a> std::iter::Extend<std::borrow::Cow<'a, str>> for std::string::String","stable since":"1.19.0"},{"name":"impl<'a> std::ops::AddAssign<&'a str> for std::borrow::Cow<'a, str>","stable since":"1.14.0"},{"name":"impl<'a> std::ops::AddAssign<std::borrow::Cow<'a, str>> for std::borrow::Cow<'a, str>","stable since":"1.14.0"},{"name":"impl<'a, B> std::hash::Hash for std::borrow::Cow<'a, B> where B: std::hash::Hash + std::borrow::ToOwned + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, B> std::fmt::Debug for std::borrow::Cow<'a, B> where B: std::fmt::Debug + std::borrow::ToOwned + ?std::marker::Sized, <B as std::borrow::ToOwned>::std::borrow::ToOwned::Owned: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, str>> for &'b str","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'b str> for std::borrow::Cow<'a, str>","stable since":"1.0.0"},{"name":"impl<'a, 'b, B, C> std::cmp::PartialEq<std::borrow::Cow<'b, C>> for std::borrow::Cow<'a, B> where B: std::cmp::PartialEq<C> + std::borrow::ToOwned + ?std::marker::Sized, C: std::borrow::ToOwned + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::string::String> for std::borrow::Cow<'a, str>","stable since":"1.0.0"},{"name":"impl<'a, 'b, A, B> std::cmp::PartialEq<&'b [B]> for std::borrow::Cow<'a, [A]> where A: std::clone::Clone + std::cmp::PartialEq<B>","stable since":"1.0.0"},{"name":"impl<'a, 'b, A, B> std::cmp::PartialEq<&'b mut [B]> for std::borrow::Cow<'a, [A]> where A: std::clone::Clone + std::cmp::PartialEq<B>","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<str> for std::borrow::Cow<'a, str>","stable since":"1.0.0"},{"name":"impl<'a, 'b, A, B> std::cmp::PartialEq<std::vec::Vec<B>> for std::borrow::Cow<'a, [A]> where A: std::clone::Clone + std::cmp::PartialEq<B>","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, str>> for std::string::String","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, str>> for str","stable since":"1.0.0"},{"name":"impl<'a, B> std::cmp::Ord for std::borrow::Cow<'a, B> where B: std::cmp::Ord + std::borrow::ToOwned + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<'a, 'b> std::convert::From<std::borrow::Cow<'b, str>> for std::boxed::Box<std::error::Error + std::marker::Send + std::marker::Sync + 'a>","stable since":"1.22.0"},{"name":"impl<'a> std::convert::From<std::borrow::Cow<'a, str>> for std::boxed::Box<std::error::Error>","stable since":"1.22.0"},{"name":"impl<'a> std::convert::From<std::borrow::Cow<'a, std::ffi::CStr>> for std::ffi::CString","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<std::ffi::CString> for std::borrow::Cow<'a, std::ffi::CStr>","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<&'a std::ffi::CStr> for std::borrow::Cow<'a, std::ffi::CStr>","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<&'a std::ffi::CString> for std::borrow::Cow<'a, std::ffi::CStr>","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<std::ffi::OsString> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<&'a std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<&'a std::ffi::OsString> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<std::borrow::Cow<'a, std::ffi::OsStr>> for std::ffi::OsString","stable since":"1.28.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::ffi::OsStr>> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::ffi::OsStr>> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'b std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::ffi::OsStr>> for &'b std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'b std::ffi::OsStr> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::ffi::OsStr>> for &'b std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsString> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::ffi::OsStr>> for std::ffi::OsString","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsString> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::ffi::OsStr>> for std::ffi::OsString","stable since":"1.8.0"},{"name":"impl<'a> std::convert::From<&'a std::path::Path> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.6.0"},{"name":"impl<'a> std::convert::From<std::path::PathBuf> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.6.0"},{"name":"impl<'a> std::convert::From<&'a std::path::PathBuf> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.28.0"},{"name":"impl<'a> std::convert::From<std::borrow::Cow<'a, std::path::Path>> for std::path::PathBuf","stable since":"1.28.0"},{"name":"impl<'a> std::convert::AsRef<std::path::Path> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::path::Path> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.6.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::path::Path>> for std::path::Path","stable since":"1.6.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::path::Path> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::path::Path>> for std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'b std::path::Path> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.6.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::path::Path>> for &'b std::path::Path","stable since":"1.6.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'b std::path::Path> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::path::Path>> for &'b std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::path::PathBuf> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.6.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::path::Path>> for std::path::PathBuf","stable since":"1.6.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::path::PathBuf> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::path::Path>> for std::path::PathBuf","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::ffi::OsStr>> for std::path::PathBuf","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::path::PathBuf> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::ffi::OsStr>> for std::path::PathBuf","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::path::PathBuf> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::ffi::OsStr>> for std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::path::Path> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::ffi::OsStr>> for std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::path::Path> for std::borrow::Cow<'a, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'b, std::ffi::OsStr>> for &'a std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'a std::path::Path> for std::borrow::Cow<'b, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'b, std::ffi::OsStr>> for &'a std::path::Path","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'a std::path::Path> for std::borrow::Cow<'b, std::ffi::OsStr>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsStr> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::path::Path>> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsStr> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::path::Path>> for std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<&'b std::ffi::OsStr> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::path::Path>> for &'b std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<&'b std::ffi::OsStr> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::path::Path>> for &'b std::ffi::OsStr","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::ffi::OsString> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialEq<std::borrow::Cow<'a, std::path::Path>> for std::ffi::OsString","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::ffi::OsString> for std::borrow::Cow<'a, std::path::Path>","stable since":"1.8.0"},{"name":"impl<'a, 'b> std::cmp::PartialOrd<std::borrow::Cow<'a, std::path::Path>> for std::ffi::OsString","stable since":"1.8.0"},{"name":"impl<'a, B: ?std::marker::Sized> std::marker::Send for std::borrow::Cow<'a, B> where B: std::marker::Sync, <B as std::borrow::ToOwned>::std::borrow::ToOwned::Owned: std::marker::Send","stable since":"1.0.0"},{"name":"impl<'a, B: ?std::marker::Sized> std::marker::Sync for std::borrow::Cow<'a, B> where B: std::marker::Sync, <B as std::borrow::ToOwned>::std::borrow::ToOwned::Owned: std::marker::Sync","stable since":"1.0.0"}],"methods":[{"name":"pub fn to_mut(&mut self) -> &mut <B as ToOwned>::Owned","details":{"description":["Acquires a mutable reference to the owned form of the data.","Clones the data if it is not already owned."],"example":["use std::borrow::Cow;\n\nlet mut cow = Cow::Borrowed(\"foo\");\ncow.to_mut().make_ascii_uppercase();\n\nassert_eq!(\n  cow,\n  Cow::Owned(String::from(\"FOO\")) as Cow<str>\n);"]}},{"name":"pub fn into_owned(self) -> <B as ToOwned>::Owned","details":{"description":["Extracts the owned data.","Clones the data if it is not already owned."],"example":["Calling into_owned on a Cow::Borrowed clones the underlying data\nand becomes a Cow::Owned:","use std::borrow::Cow;\n\nlet s = \"Hello world!\";\nlet cow = Cow::Borrowed(s);\n\nassert_eq!(\n  cow.into_owned(),\n  String::from(s)\n);","Calling into_owned on a Cow::Owned is a no-op:","use std::borrow::Cow;\n\nlet s = \"Hello world!\";\nlet cow: Cow<str> = Cow::Owned(String::from(s));\n\nassert_eq!(\n  cow.into_owned(),\n  String::from(s)\n);"]}}]}