{"stability":{"stable since":"1.0.0"},"apiName":"unit","apiType":"primitive","apiDocumentation":{"apiDescription":["The () type, sometimes called \"unit\" or \"nil\".","The () type has exactly one value (), and is used when there is no other meaningful value that could be returned. () is most commonly seen implicitly: functions without a -> ... implicitly have return type (), that is, these are equivalent:","fn long() -> () {} fn short() {}","The semicolon ; can be used to discard the result of an expression at the end of a block, making the expression (and thus the block) evaluate to (). For example,","fn returns_i64() -> i64 { 1i64 } fn returns_unit() { 1i64; } let is_i64 = { returns_i64() }; let is_unit = { returns_i64(); };"]},"trait implementations":[{"name":"impl std::hash::Hash for ()","stable since":"1.0.0"},{"name":"impl std::cmp::PartialOrd<()> for ()","stable since":"1.0.0"},{"name":"impl std::cmp::Ord for ()","stable since":"1.0.0"},{"name":"impl std::fmt::Debug for ()","stable since":"1.0.0"},{"name":"impl std::cmp::Eq for ()","stable since":"1.0.0"},{"name":"impl std::cmp::PartialEq<()> for ()","stable since":"1.0.0"},{"name":"impl std::iter::FromIterator<()> for ()","stable since":"1.23.0"},{"name":"impl std::iter::Extend<()> for ()","stable since":"1.28.0"},{"name":"impl std::default::Default for ()","stable since":"1.0.0"},{"name":"impl std::process::Termination for ()","stable since":"1.0.0"}]}