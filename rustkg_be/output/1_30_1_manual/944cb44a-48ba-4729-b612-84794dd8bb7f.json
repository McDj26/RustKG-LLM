{"stability":{"stable since":"1.2.0"},"apiName":"std::fmt::DebugTuple","apiType":"struct","apiDocumentation":{"apiDescription":["A struct to help with fmt::Debug implementations.","This is useful when you wish to output a formatted tuple as a part of your Debug::fmt implementation.","This can be constructed by the Formatter::debug_tuple method."],"examples":["use std::fmt;\n\nstruct Foo(i32, String);\n\nimpl fmt::Debug for Foo {\n    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n        fmt.debug_tuple(\"Foo\")\n           .field(&self.0)\n           .field(&self.1)\n           .finish()\n    }\n}\n\n// prints \"Foo(10, \"Hello World\")\"\nprintln!(\"{:?}\", Foo(10, \"Hello World\".to_string()));"]},"trait implementations":[{"name":"impl<'a, 'b> !std::marker::Send for std::fmt::DebugTuple<'a, 'b>","stable since":"1.0.0"},{"name":"impl<'a, 'b> !std::marker::Sync for std::fmt::DebugTuple<'a, 'b>","stable since":"1.0.0"}],"methods":[{"name":"pub fn field(&mut self, value: &Debug) -> &mut DebugTuple<'a, 'b>","details":{"description":["Adds a new field to the generated tuple struct output."]}},{"name":"pub fn finish(&mut self) -> Result<(), Error>","details":{"description":["Finishes output and returns any error encountered."]}}]}