{"stability":{"stable since":"1.0.0"},"apiName":"std::io::Result","apiType":"type","apiDocumentation":{"apiDescription":["A specialized Result type for I/O operations.","This type is broadly used across std::io for any operation which may produce an error.","This typedef is generally used to avoid writing out io::Error directly and is otherwise a direct mapping to Result.","While usual Rust style is to import types directly, aliases of Result often are not, to make it easier to distinguish between them. Result is generally assumed to be std::result::Result, and so users of this alias will generally use io::Result instead of shadowing the prelude's import of std::result::Result."],"examples":["A convenience function that bubbles an io::Result to its caller:","use std::io;\n\nfn get_string() -> io::Result<String> {\n    let mut buffer = String::new();\n\n    io::stdin().read_line(&mut buffer)?;\n\n    Ok(buffer)\n}"]}}