{"stability":{"stable since":"1.0.0"},"apiName":"tuple","apiType":"primitive","apiDocumentation":{"apiDescription":["A finite heterogeneous sequence, (T, U, ..).","Let's cover each of those in turn:","Tuples are finite. In other words, a tuple has a length. Here's a tuple of length 3:","(\"hello\", 5, 'c');","'Length' is also sometimes called 'arity' here; each tuple of a different length is a different, distinct type.","Tuples are heterogeneous. This means that each element of the tuple can have a different type. In that tuple above, it has the type:","(&'static str, i32, char)","Tuples are a sequence. This means that they can be accessed by position; this is called 'tuple indexing', and it looks like this:","let tuple = (\"hello\", 5, 'c'); assert_eq!(tuple.0, \"hello\"); assert_eq!(tuple.1, 5); assert_eq!(tuple.2, 'c');","For more about tuples, see the book.","Trait implementations","If every type inside a tuple implements one of the following traits, then a tuple itself also implements it.","Clone Copy PartialEq Eq PartialOrd Ord Debug Default Hash","Due to a temporary restriction in Rust's type system, these traits are only implemented on tuples of arity 12 or less. In the future, this may change."],"examples":["Basic usage:","let tuple = (\"hello\", 5, 'c');\n\nassert_eq!(tuple.0, \"hello\");","Tuples are often used as a return type when you want to return more than\none value:","fn calculate_point() -> (i32, i32) {\n    // Don't do a calculation, that's not the point of the example\n    (4, 5)\n}\n\nlet point = calculate_point();\n\nassert_eq!(point.0, 4);\nassert_eq!(point.1, 5);\n\n// Combining this with patterns can be nicer.\n\nlet (x, y) = calculate_point();\n\nassert_eq!(x, 4);\nassert_eq!(y, 5);"]},"trait implementations":[{"name":"impl<A, B, C, D> std::hash::Hash for (A, B, C, D) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I> std::hash::Hash for (A, B, C, D, E, F, G, H, I) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash, E: std::hash::Hash, F: std::hash::Hash, G: std::hash::Hash, H: std::hash::Hash, I: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K> std::hash::Hash for (A, B, C, D, E, F, G, H, I, J, K) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash, E: std::hash::Hash, F: std::hash::Hash, G: std::hash::Hash, H: std::hash::Hash, I: std::hash::Hash, J: std::hash::Hash, K: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F> std::hash::Hash for (A, B, C, D, E, F) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash, E: std::hash::Hash, F: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K, L> std::hash::Hash for (A, B, C, D, E, F, G, H, I, J, K, L) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash, E: std::hash::Hash, F: std::hash::Hash, G: std::hash::Hash, H: std::hash::Hash, I: std::hash::Hash, J: std::hash::Hash, K: std::hash::Hash, L: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C> std::hash::Hash for (A, B, C) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H> std::hash::Hash for (A, B, C, D, E, F, G, H) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash, E: std::hash::Hash, F: std::hash::Hash, G: std::hash::Hash, H: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J> std::hash::Hash for (A, B, C, D, E, F, G, H, I, J) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash, E: std::hash::Hash, F: std::hash::Hash, G: std::hash::Hash, H: std::hash::Hash, I: std::hash::Hash, J: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E> std::hash::Hash for (A, B, C, D, E) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash, E: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G> std::hash::Hash for (A, B, C, D, E, F, G) where A: std::hash::Hash, B: std::hash::Hash, C: std::hash::Hash, D: std::hash::Hash, E: std::hash::Hash, F: std::hash::Hash, G: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A> std::hash::Hash for (A,) where A: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B> std::hash::Hash for (A, B) where A: std::hash::Hash, B: std::hash::Hash + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D> std::cmp::PartialOrd<(A, B, C, D)> for (A, B, C, D) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I> std::cmp::PartialOrd<(A, B, C, D, E, F, G, H, I)> for (A, B, C, D, E, F, G, H, I) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D>, E: std::cmp::PartialEq<E> + std::cmp::PartialOrd<E>, F: std::cmp::PartialEq<F> + std::cmp::PartialOrd<F>, G: std::cmp::PartialEq<G> + std::cmp::PartialOrd<G>, H: std::cmp::PartialEq<H> + std::cmp::PartialOrd<H>, I: std::cmp::PartialEq<I> + std::cmp::PartialOrd<I> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J> std::cmp::PartialOrd<(A, B, C, D, E, F, G, H, I, J)> for (A, B, C, D, E, F, G, H, I, J) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D>, E: std::cmp::PartialEq<E> + std::cmp::PartialOrd<E>, F: std::cmp::PartialEq<F> + std::cmp::PartialOrd<F>, G: std::cmp::PartialEq<G> + std::cmp::PartialOrd<G>, H: std::cmp::PartialEq<H> + std::cmp::PartialOrd<H>, I: std::cmp::PartialEq<I> + std::cmp::PartialOrd<I>, J: std::cmp::PartialEq<J> + std::cmp::PartialOrd<J> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E> std::cmp::PartialOrd<(A, B, C, D, E)> for (A, B, C, D, E) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D>, E: std::cmp::PartialEq<E> + std::cmp::PartialOrd<E> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A> std::cmp::PartialOrd<(A,)> for (A,) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H> std::cmp::PartialOrd<(A, B, C, D, E, F, G, H)> for (A, B, C, D, E, F, G, H) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D>, E: std::cmp::PartialEq<E> + std::cmp::PartialOrd<E>, F: std::cmp::PartialEq<F> + std::cmp::PartialOrd<F>, G: std::cmp::PartialEq<G> + std::cmp::PartialOrd<G>, H: std::cmp::PartialEq<H> + std::cmp::PartialOrd<H> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B> std::cmp::PartialOrd<(A, B)> for (A, B) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C> std::cmp::PartialOrd<(A, B, C)> for (A, B, C) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K> std::cmp::PartialOrd<(A, B, C, D, E, F, G, H, I, J, K)> for (A, B, C, D, E, F, G, H, I, J, K) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D>, E: std::cmp::PartialEq<E> + std::cmp::PartialOrd<E>, F: std::cmp::PartialEq<F> + std::cmp::PartialOrd<F>, G: std::cmp::PartialEq<G> + std::cmp::PartialOrd<G>, H: std::cmp::PartialEq<H> + std::cmp::PartialOrd<H>, I: std::cmp::PartialEq<I> + std::cmp::PartialOrd<I>, J: std::cmp::PartialEq<J> + std::cmp::PartialOrd<J>, K: std::cmp::PartialEq<K> + std::cmp::PartialOrd<K> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K, L> std::cmp::PartialOrd<(A, B, C, D, E, F, G, H, I, J, K, L)> for (A, B, C, D, E, F, G, H, I, J, K, L) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D>, E: std::cmp::PartialEq<E> + std::cmp::PartialOrd<E>, F: std::cmp::PartialEq<F> + std::cmp::PartialOrd<F>, G: std::cmp::PartialEq<G> + std::cmp::PartialOrd<G>, H: std::cmp::PartialEq<H> + std::cmp::PartialOrd<H>, I: std::cmp::PartialEq<I> + std::cmp::PartialOrd<I>, J: std::cmp::PartialEq<J> + std::cmp::PartialOrd<J>, K: std::cmp::PartialEq<K> + std::cmp::PartialOrd<K>, L: std::cmp::PartialEq<L> + std::cmp::PartialOrd<L> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G> std::cmp::PartialOrd<(A, B, C, D, E, F, G)> for (A, B, C, D, E, F, G) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D>, E: std::cmp::PartialEq<E> + std::cmp::PartialOrd<E>, F: std::cmp::PartialEq<F> + std::cmp::PartialOrd<F>, G: std::cmp::PartialEq<G> + std::cmp::PartialOrd<G> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F> std::cmp::PartialOrd<(A, B, C, D, E, F)> for (A, B, C, D, E, F) where A: std::cmp::PartialEq<A> + std::cmp::PartialOrd<A>, B: std::cmp::PartialEq<B> + std::cmp::PartialOrd<B>, C: std::cmp::PartialEq<C> + std::cmp::PartialOrd<C>, D: std::cmp::PartialEq<D> + std::cmp::PartialOrd<D>, E: std::cmp::PartialEq<E> + std::cmp::PartialOrd<E>, F: std::cmp::PartialEq<F> + std::cmp::PartialOrd<F> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K, L> std::cmp::Ord for (A, B, C, D, E, F, G, H, I, J, K, L) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord, E: std::cmp::Ord, F: std::cmp::Ord, G: std::cmp::Ord, H: std::cmp::Ord, I: std::cmp::Ord, J: std::cmp::Ord, K: std::cmp::Ord, L: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C> std::cmp::Ord for (A, B, C) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J> std::cmp::Ord for (A, B, C, D, E, F, G, H, I, J) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord, E: std::cmp::Ord, F: std::cmp::Ord, G: std::cmp::Ord, H: std::cmp::Ord, I: std::cmp::Ord, J: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F> std::cmp::Ord for (A, B, C, D, E, F) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord, E: std::cmp::Ord, F: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D> std::cmp::Ord for (A, B, C, D) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K> std::cmp::Ord for (A, B, C, D, E, F, G, H, I, J, K) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord, E: std::cmp::Ord, F: std::cmp::Ord, G: std::cmp::Ord, H: std::cmp::Ord, I: std::cmp::Ord, J: std::cmp::Ord, K: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E> std::cmp::Ord for (A, B, C, D, E) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord, E: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H> std::cmp::Ord for (A, B, C, D, E, F, G, H) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord, E: std::cmp::Ord, F: std::cmp::Ord, G: std::cmp::Ord, H: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I> std::cmp::Ord for (A, B, C, D, E, F, G, H, I) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord, E: std::cmp::Ord, F: std::cmp::Ord, G: std::cmp::Ord, H: std::cmp::Ord, I: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A> std::cmp::Ord for (A,) where A: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G> std::cmp::Ord for (A, B, C, D, E, F, G) where A: std::cmp::Ord, B: std::cmp::Ord, C: std::cmp::Ord, D: std::cmp::Ord, E: std::cmp::Ord, F: std::cmp::Ord, G: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B> std::cmp::Ord for (A, B) where A: std::cmp::Ord, B: std::cmp::Ord + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<T3, T4, T5, T6, T7, T8, T9, T10, T11> std::fmt::Debug for (T3, T4, T5, T6, T7, T8, T9, T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T3: std::fmt::Debug, T4: std::fmt::Debug, T5: std::fmt::Debug, T6: std::fmt::Debug, T7: std::fmt::Debug, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T5, T6, T7, T8, T9, T10, T11> std::fmt::Debug for (T5, T6, T7, T8, T9, T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T5: std::fmt::Debug, T6: std::fmt::Debug, T7: std::fmt::Debug, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T9, T10, T11> std::fmt::Debug for (T9, T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T11> std::fmt::Debug for (T11,) where T11: std::fmt::Debug + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<T6, T7, T8, T9, T10, T11> std::fmt::Debug for (T6, T7, T8, T9, T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T6: std::fmt::Debug, T7: std::fmt::Debug, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> std::fmt::Debug for (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T2: std::fmt::Debug, T3: std::fmt::Debug, T4: std::fmt::Debug, T5: std::fmt::Debug, T6: std::fmt::Debug, T7: std::fmt::Debug, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> std::fmt::Debug for (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) where T1: std::fmt::Debug, T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T2: std::fmt::Debug, T3: std::fmt::Debug, T4: std::fmt::Debug, T5: std::fmt::Debug, T6: std::fmt::Debug, T7: std::fmt::Debug, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T7, T8, T9, T10, T11> std::fmt::Debug for (T7, T8, T9, T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T7: std::fmt::Debug, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T10, T11> std::fmt::Debug for (T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<T4, T5, T6, T7, T8, T9, T10, T11> std::fmt::Debug for (T4, T5, T6, T7, T8, T9, T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T4: std::fmt::Debug, T5: std::fmt::Debug, T6: std::fmt::Debug, T7: std::fmt::Debug, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> std::fmt::Debug for (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) where T0: std::fmt::Debug, T1: std::fmt::Debug, T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T2: std::fmt::Debug, T3: std::fmt::Debug, T4: std::fmt::Debug, T5: std::fmt::Debug, T6: std::fmt::Debug, T7: std::fmt::Debug, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T8, T9, T10, T11> std::fmt::Debug for (T8, T9, T10, T11) where T10: std::fmt::Debug, T11: std::fmt::Debug + ?std::marker::Sized, T8: std::fmt::Debug, T9: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<A, B> std::cmp::Eq for (A, B) where A: std::cmp::Eq, B: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J> std::cmp::Eq for (A, B, C, D, E, F, G, H, I, J) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq, E: std::cmp::Eq, F: std::cmp::Eq, G: std::cmp::Eq, H: std::cmp::Eq, I: std::cmp::Eq, J: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H> std::cmp::Eq for (A, B, C, D, E, F, G, H) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq, E: std::cmp::Eq, F: std::cmp::Eq, G: std::cmp::Eq, H: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E> std::cmp::Eq for (A, B, C, D, E) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq, E: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K> std::cmp::Eq for (A, B, C, D, E, F, G, H, I, J, K) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq, E: std::cmp::Eq, F: std::cmp::Eq, G: std::cmp::Eq, H: std::cmp::Eq, I: std::cmp::Eq, J: std::cmp::Eq, K: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A> std::cmp::Eq for (A,) where A: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K, L> std::cmp::Eq for (A, B, C, D, E, F, G, H, I, J, K, L) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq, E: std::cmp::Eq, F: std::cmp::Eq, G: std::cmp::Eq, H: std::cmp::Eq, I: std::cmp::Eq, J: std::cmp::Eq, K: std::cmp::Eq, L: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C> std::cmp::Eq for (A, B, C) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I> std::cmp::Eq for (A, B, C, D, E, F, G, H, I) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq, E: std::cmp::Eq, F: std::cmp::Eq, G: std::cmp::Eq, H: std::cmp::Eq, I: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F> std::cmp::Eq for (A, B, C, D, E, F) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq, E: std::cmp::Eq, F: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G> std::cmp::Eq for (A, B, C, D, E, F, G) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq, E: std::cmp::Eq, F: std::cmp::Eq, G: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D> std::cmp::Eq for (A, B, C, D) where A: std::cmp::Eq, B: std::cmp::Eq, C: std::cmp::Eq, D: std::cmp::Eq + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J> std::cmp::PartialEq<(A, B, C, D, E, F, G, H, I, J)> for (A, B, C, D, E, F, G, H, I, J) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D>, E: std::cmp::PartialEq<E>, F: std::cmp::PartialEq<F>, G: std::cmp::PartialEq<G>, H: std::cmp::PartialEq<H>, I: std::cmp::PartialEq<I>, J: std::cmp::PartialEq<J> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E> std::cmp::PartialEq<(A, B, C, D, E)> for (A, B, C, D, E) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D>, E: std::cmp::PartialEq<E> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K> std::cmp::PartialEq<(A, B, C, D, E, F, G, H, I, J, K)> for (A, B, C, D, E, F, G, H, I, J, K) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D>, E: std::cmp::PartialEq<E>, F: std::cmp::PartialEq<F>, G: std::cmp::PartialEq<G>, H: std::cmp::PartialEq<H>, I: std::cmp::PartialEq<I>, J: std::cmp::PartialEq<J>, K: std::cmp::PartialEq<K> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C> std::cmp::PartialEq<(A, B, C)> for (A, B, C) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D> std::cmp::PartialEq<(A, B, C, D)> for (A, B, C, D) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F> std::cmp::PartialEq<(A, B, C, D, E, F)> for (A, B, C, D, E, F) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D>, E: std::cmp::PartialEq<E>, F: std::cmp::PartialEq<F> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H> std::cmp::PartialEq<(A, B, C, D, E, F, G, H)> for (A, B, C, D, E, F, G, H) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D>, E: std::cmp::PartialEq<E>, F: std::cmp::PartialEq<F>, G: std::cmp::PartialEq<G>, H: std::cmp::PartialEq<H> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B> std::cmp::PartialEq<(A, B)> for (A, B) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K, L> std::cmp::PartialEq<(A, B, C, D, E, F, G, H, I, J, K, L)> for (A, B, C, D, E, F, G, H, I, J, K, L) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D>, E: std::cmp::PartialEq<E>, F: std::cmp::PartialEq<F>, G: std::cmp::PartialEq<G>, H: std::cmp::PartialEq<H>, I: std::cmp::PartialEq<I>, J: std::cmp::PartialEq<J>, K: std::cmp::PartialEq<K>, L: std::cmp::PartialEq<L> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G> std::cmp::PartialEq<(A, B, C, D, E, F, G)> for (A, B, C, D, E, F, G) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D>, E: std::cmp::PartialEq<E>, F: std::cmp::PartialEq<F>, G: std::cmp::PartialEq<G> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I> std::cmp::PartialEq<(A, B, C, D, E, F, G, H, I)> for (A, B, C, D, E, F, G, H, I) where A: std::cmp::PartialEq<A>, B: std::cmp::PartialEq<B>, C: std::cmp::PartialEq<C>, D: std::cmp::PartialEq<D>, E: std::cmp::PartialEq<E>, F: std::cmp::PartialEq<F>, G: std::cmp::PartialEq<G>, H: std::cmp::PartialEq<H>, I: std::cmp::PartialEq<I> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A> std::cmp::PartialEq<(A,)> for (A,) where A: std::cmp::PartialEq<A> + ?std::marker::Sized","stable since":"1.0.0"},{"name":"impl<A, B> std::default::Default for (A, B) where A: std::default::Default, B: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K, L> std::default::Default for (A, B, C, D, E, F, G, H, I, J, K, L) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default, E: std::default::Default, F: std::default::Default, G: std::default::Default, H: std::default::Default, I: std::default::Default, J: std::default::Default, K: std::default::Default, L: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J, K> std::default::Default for (A, B, C, D, E, F, G, H, I, J, K) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default, E: std::default::Default, F: std::default::Default, G: std::default::Default, H: std::default::Default, I: std::default::Default, J: std::default::Default, K: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G> std::default::Default for (A, B, C, D, E, F, G) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default, E: std::default::Default, F: std::default::Default, G: std::default::Default","stable since":"1.0.0"},{"name":"impl<A> std::default::Default for (A,) where A: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I, J> std::default::Default for (A, B, C, D, E, F, G, H, I, J) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default, E: std::default::Default, F: std::default::Default, G: std::default::Default, H: std::default::Default, I: std::default::Default, J: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H> std::default::Default for (A, B, C, D, E, F, G, H) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default, E: std::default::Default, F: std::default::Default, G: std::default::Default, H: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E> std::default::Default for (A, B, C, D, E) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default, E: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D> std::default::Default for (A, B, C, D) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F> std::default::Default for (A, B, C, D, E, F) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default, E: std::default::Default, F: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C> std::default::Default for (A, B, C) where A: std::default::Default, B: std::default::Default, C: std::default::Default","stable since":"1.0.0"},{"name":"impl<A, B, C, D, E, F, G, H, I> std::default::Default for (A, B, C, D, E, F, G, H, I) where A: std::default::Default, B: std::default::Default, C: std::default::Default, D: std::default::Default, E: std::default::Default, F: std::default::Default, G: std::default::Default, H: std::default::Default, I: std::default::Default","stable since":"1.0.0"},{"name":"impl<'a, T> std::ops::RangeBounds<T> for (std::ops::Bound<&'a T>, std::ops::Bound<&'a T>) where T: 'a + ?std::marker::Sized","stable since":"1.28.0"},{"name":"impl<T> std::ops::RangeBounds<T> for (std::ops::Bound<T>, std::ops::Bound<T>)","stable since":"1.28.0"},{"name":"impl std::net::ToSocketAddrs for (std::net::IpAddr, u16)","stable since":"1.0.0"},{"name":"impl std::net::ToSocketAddrs for (std::net::Ipv4Addr, u16)","stable since":"1.0.0"},{"name":"impl std::net::ToSocketAddrs for (std::net::Ipv6Addr, u16)","stable since":"1.0.0"},{"name":"impl<'a> std::net::ToSocketAddrs for (&'a str, u16)","stable since":"1.0.0"}]}