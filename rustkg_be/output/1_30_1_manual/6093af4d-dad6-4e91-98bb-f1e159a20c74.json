{"stability":{"stable since":"1.10.0","others":["This is supported on Unix only."]},"apiName":"std::os::unix::net::UnixDatagram","apiType":"struct","apiDocumentation":{"apiDescription":["A Unix datagram socket."],"examples":["use std::os::unix::net::UnixDatagram;\n\nlet socket = UnixDatagram::bind(\"/path/to/my/socket\").unwrap();\nsocket.send_to(b\"hello world\", \"/path/to/other/socket\").unwrap();\nlet mut buf = [0; 100];\nlet (count, address) = socket.recv_from(&mut buf).unwrap();\nprintln!(\"socket {:?} sent {:?}\", address, &buf[..count]);"]},"trait implementations":[{"name":"impl std::fmt::Debug for std::os::unix::net::UnixDatagram","stable since":"1.0.0"},{"name":"impl std::os::unix::io::AsRawFd for std::os::unix::net::UnixDatagram","stable since":"1.0.0"},{"name":"impl std::os::unix::io::FromRawFd for std::os::unix::net::UnixDatagram","stable since":"1.0.0"},{"name":"impl std::os::unix::io::IntoRawFd for std::os::unix::net::UnixDatagram","stable since":"1.0.0"},{"name":"impl std::marker::Send for std::os::unix::net::UnixDatagram","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::os::unix::net::UnixDatagram","stable since":"1.0.0"}],"methods":[{"name":"pub fn bind<P: AsRef<Path>>(path: P) -> Result<UnixDatagram>","stability":["This is supported on Unix only."]},{"name":"pub fn unbound() -> Result<UnixDatagram>","stability":["This is supported on Unix only."]},{"name":"pub fn pair() -> Result<(UnixDatagram, UnixDatagram)>","stability":["This is supported on Unix only."]},{"name":"pub fn connect<P: AsRef<Path>>(&self, path: P) -> Result<()>","stability":["This is supported on Unix only."]},{"name":"pub fn try_clone(&self) -> Result<UnixDatagram>","stability":["This is supported on Unix only."]},{"name":"pub fn local_addr(&self) -> Result<SocketAddr>","stability":["This is supported on Unix only."]},{"name":"pub fn peer_addr(&self) -> Result<SocketAddr>","stability":["This is supported on Unix only."]},{"name":"pub fn recv_from(&self, buf: &mut [u8]) -> Result<(usize, SocketAddr)>","stability":["This is supported on Unix only."]},{"name":"pub fn recv(&self, buf: &mut [u8]) -> Result<usize>","stability":["This is supported on Unix only."]},{"name":"pub fn send_to<P: AsRef<Path>>(&self, buf: &[u8], path: P) -> Result<usize>","stability":["This is supported on Unix only."]},{"name":"pub fn send(&self, buf: &[u8]) -> Result<usize>","stability":["This is supported on Unix only."]},{"name":"pub fn set_read_timeout(&self, timeout: Option<Duration>) -> Result<()>","stability":["This is supported on Unix only."]},{"name":"pub fn set_write_timeout(&self, timeout: Option<Duration>) -> Result<()>","stability":["This is supported on Unix only."]},{"name":"pub fn read_timeout(&self) -> Result<Option<Duration>>","stability":["This is supported on Unix only."]},{"name":"pub fn write_timeout(&self) -> Result<Option<Duration>>","stability":["This is supported on Unix only."]},{"name":"pub fn set_nonblocking(&self, nonblocking: bool) -> Result<()>","stability":["This is supported on Unix only."]},{"name":"pub fn take_error(&self) -> Result<Option<Error>>","stability":["This is supported on Unix only."]},{"name":"pub fn shutdown(&self, how: Shutdown) -> Result<()>","stability":["This is supported on Unix only."]}]}