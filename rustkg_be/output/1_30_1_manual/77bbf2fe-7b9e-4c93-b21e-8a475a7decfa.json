{"stability":{"unstable":"ðŸ”¬ This is a nightly-only experimental API.  (mpsc_select #27800)This implementation, while likely sufficient, is unsafe and likely to be error prone. At some point in the future this module will likely be replaced, and it is currently unknown how much API breakage that will cause. The ability to select over a number of channels will remain forever, but no guarantees beyond this are being made\n"},"apiName":"std::sync::mpsc::Handle","apiType":"struct","apiDocumentation":{"apiDescription":["A handle to a receiver which is currently a member of a Select set of receivers. This handle is used to keep the receiver in the set as well as interact with the underlying receiver."]},"trait implementations":[{"name":"impl<'rx, T: std::marker::Send> std::ops::Drop for std::sync::mpsc::Handle<'rx, T>","stable since":"1.0.0"},{"name":"impl<'rx, T: std::marker::Send + 'rx> std::fmt::Debug for std::sync::mpsc::Handle<'rx, T>","stable since":"1.0.0"},{"name":"impl<'rx, T> !std::marker::Send for std::sync::mpsc::Handle<'rx, T>","stable since":"1.0.0"},{"name":"impl<'rx, T> !std::marker::Sync for std::sync::mpsc::Handle<'rx, T>","stable since":"1.0.0"}],"methods":[{"name":"pub fn id(&self) -> usize","stability":["ðŸ”¬ This is a nightly-only experimental API.  (mpsc_select #27800)This implementation, while likely sufficient, is unsafe and likely to be error prone. At some point in the future this module will likely be replaced, and it is currently unknown how much API breakage that will cause. The ability to select over a number of channels will remain forever, but no guarantees beyond this are being made\n"]},{"name":"pub fn recv(&mut self) -> Result<T, RecvError>","stability":["ðŸ”¬ This is a nightly-only experimental API.  (mpsc_select #27800)This implementation, while likely sufficient, is unsafe and likely to be error prone. At some point in the future this module will likely be replaced, and it is currently unknown how much API breakage that will cause. The ability to select over a number of channels will remain forever, but no guarantees beyond this are being made\n"]},{"name":"pub unsafe fn add(&mut self)","stability":["ðŸ”¬ This is a nightly-only experimental API.  (mpsc_select #27800)This implementation, while likely sufficient, is unsafe and likely to be error prone. At some point in the future this module will likely be replaced, and it is currently unknown how much API breakage that will cause. The ability to select over a number of channels will remain forever, but no guarantees beyond this are being made\n"]},{"name":"pub unsafe fn remove(&mut self)","stability":["ðŸ”¬ This is a nightly-only experimental API.  (mpsc_select #27800)This implementation, while likely sufficient, is unsafe and likely to be error prone. At some point in the future this module will likely be replaced, and it is currently unknown how much API breakage that will cause. The ability to select over a number of channels will remain forever, but no guarantees beyond this are being made\n"]}]}