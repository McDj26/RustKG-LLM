{"stability":{"stable since":"1.0.0"},"apiName":"std::option_env","apiType":"macro","apiDocumentation":{"apiDescription":["Optionally inspect an environment variable at compile time.","If the named environment variable is present at compile time, this will expand into an expression of type Option<&'static str> whose value is Some of the value of the environment variable. If the environment variable is not present, then this will expand to None. See Option<T> for more information on this type.","A compile time error is never emitted when using this macro regardless of whether the environment variable is present or not."],"examples":["let key: Option<&'static str> = option_env!(\"SECRET_KEY\");\nprintln!(\"the secret key might be: {:?}\", key);"]}}