{"stability":{"stable since":"1.0.0"},"apiName":"std::str::from_utf8_unchecked","apiType":"function","apiDocumentation":{"apiDescription":["Converts a slice of bytes to a string slice without checking that the string contains valid UTF-8.","See the safe version, from_utf8, for more information.","Safety","This function is unsafe because it does not check that the bytes passed to it are valid UTF-8. If this constraint is violated, undefined behavior results, as the rest of Rust assumes that &strs are valid UTF-8."],"examples":["Basic usage:","use std::str;\n\n// some bytes, in a vector\nlet sparkle_heart = vec![240, 159, 146, 150];\n\nlet sparkle_heart = unsafe {\n    str::from_utf8_unchecked(&sparkle_heart)\n};\n\nassert_eq!(\"ðŸ’–\", sparkle_heart);"]}}