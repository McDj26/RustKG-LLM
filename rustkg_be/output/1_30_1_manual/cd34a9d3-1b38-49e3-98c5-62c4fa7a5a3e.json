{"stability":{"stable since":"1.9.0"},"apiName":"std::panic::resume_unwind","apiType":"function","apiDocumentation":{"apiDescription":["Triggers a panic without invoking the panic hook.","This is designed to be used in conjunction with catch_unwind to, for example, carry a panic across a layer of C code.","Notes","Note that panics in Rust are not always implemented via unwinding, but they may be implemented by aborting the process. If this function is called when panics are implemented this way then this function will abort the process, not trigger an unwind."],"examples":["use std::panic;\n\nlet result = panic::catch_unwind(|| {\n    panic!(\"oh no!\");\n});\n\nif let Err(err) = result {\n    panic::resume_unwind(err);\n}"]}}