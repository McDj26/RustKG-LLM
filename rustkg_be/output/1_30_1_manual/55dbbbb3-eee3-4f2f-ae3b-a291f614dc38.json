{"stability":{"stable since":"1.7.0"},"apiName":"std::collections::hash_map::RandomState","apiType":"struct","apiDocumentation":{"apiDescription":["RandomState is the default state for HashMap types.","A particular instance RandomState will create the same instances of Hasher, but the hashers created by two different RandomState instances are unlikely to produce the same result for the same values."],"examples":["use std::collections::HashMap;\nuse std::collections::hash_map::RandomState;\n\nlet s = RandomState::new();\nlet mut map = HashMap::with_hasher(s);\nmap.insert(1, 2);"]},"trait implementations":[{"name":"impl std::clone::Clone for std::collections::hash_map::RandomState","stable since":"1.0.0"},{"name":"impl std::hash::BuildHasher for std::collections::hash_map::RandomState","stable since":"1.0.0"},{"name":"impl std::default::Default for std::collections::hash_map::RandomState","stable since":"1.0.0"},{"name":"impl std::fmt::Debug for std::collections::hash_map::RandomState","stable since":"1.16.0"},{"name":"impl std::marker::Send for std::collections::hash_map::RandomState","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::collections::hash_map::RandomState","stable since":"1.0.0"}],"methods":[{"name":"pub fn new() -> RandomState","details":{"description":["Constructs a new RandomState that is initialized with random keys."],"example":["use std::collections::hash_map::RandomState;\n\nlet s = RandomState::new();"]}}]}