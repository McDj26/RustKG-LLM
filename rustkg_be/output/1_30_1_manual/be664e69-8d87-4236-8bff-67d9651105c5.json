{"stability":{"stable since":"1.7.0"},"apiName":"std::hash::BuildHasherDefault","apiType":"struct","apiDocumentation":{"apiDescription":["Used to create a default BuildHasher instance for types that implement Hasher and Default.","BuildHasherDefault<H> can be used when a type H implements Hasher and Default, and you need a corresponding BuildHasher instance, but none is defined.","Any BuildHasherDefault is zero-sized. It can be created with default. When using BuildHasherDefault with HashMap or HashSet, this doesn't need to be done, since they implement appropriate Default instances themselves."],"examples":["Using BuildHasherDefault to specify a custom BuildHasher for\nHashMap:","use std::collections::HashMap;\nuse std::hash::{BuildHasherDefault, Hasher};\n\n#[derive(Default)]\nstruct MyHasher;\n\nimpl Hasher for MyHasher {\n    fn write(&mut self, bytes: &[u8]) {\n        // Your hashing algorithm goes here!\n       unimplemented!()\n    }\n\n    fn finish(&self) -> u64 {\n        // Your hashing algorithm goes here!\n        unimplemented!()\n    }\n}\n\ntype MyBuildHasher = BuildHasherDefault<MyHasher>;\n\nlet hash_map = HashMap::<u32, u32, MyBuildHasher>::default();"]},"trait implementations":[{"name":"impl<H> std::clone::Clone for std::hash::BuildHasherDefault<H>","stable since":"1.0.0"},{"name":"impl<H> std::fmt::Debug for std::hash::BuildHasherDefault<H>","stable since":"1.9.0"},{"name":"impl<H> std::cmp::Eq for std::hash::BuildHasherDefault<H>","stable since":"1.29.0"},{"name":"impl<H> std::cmp::PartialEq<std::hash::BuildHasherDefault<H>> for std::hash::BuildHasherDefault<H>","stable since":"1.29.0"},{"name":"impl<H> std::default::Default for std::hash::BuildHasherDefault<H>","stable since":"1.0.0"},{"name":"impl<H> std::hash::BuildHasher for std::hash::BuildHasherDefault<H> where H: std::default::Default + std::hash::Hasher","stable since":"1.0.0"},{"name":"impl<H> std::marker::Send for std::hash::BuildHasherDefault<H> where H: std::marker::Send","stable since":"1.0.0"},{"name":"impl<H> std::marker::Sync for std::hash::BuildHasherDefault<H> where H: std::marker::Sync","stable since":"1.0.0"}]}