{"stability":{"unstable":"ğŸ”¬ This is a nightly-only experimental API.  (core_intrinsics)intrinsics are unlikely to ever be stabilized, instead they should be used through stabilized interfaces in the rest of the standard library\n"},"apiName":"std::intrinsics::cttz","apiType":"function","apiDocumentation":{"apiDescription":["Returns the number of trailing unset bits (zeroes) in an integer type T."],"examples":["#![feature(core_intrinsics)]\n\nuse std::intrinsics::cttz;\n\nlet x = 0b0011_1000_u8;\nlet num_trailing = unsafe { cttz(x) };\nassert_eq!(num_trailing, 3);","An x with value 0 will return the bit width of T:","#![feature(core_intrinsics)]\n\nuse std::intrinsics::cttz;\n\nlet x = 0u16;\nlet num_trailing = unsafe { cttz(x) };\nassert_eq!(num_trailing, 16);"]}}