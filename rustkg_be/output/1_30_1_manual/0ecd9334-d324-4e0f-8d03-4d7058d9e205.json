{"stability":{"unstable":"ğŸ”¬ This is a nightly-only experimental API.  (core_intrinsics)intrinsics are unlikely to ever be stabilized, instead they should be used through stabilized interfaces in the rest of the standard library\n"},"apiName":"std::intrinsics::ctlz","apiType":"function","apiDocumentation":{"apiDescription":["Returns the number of leading unset bits (zeroes) in an integer type T."],"examples":["#![feature(core_intrinsics)]\n\nuse std::intrinsics::ctlz;\n\nlet x = 0b0001_1100_u8;\nlet num_leading = unsafe { ctlz(x) };\nassert_eq!(num_leading, 3);","An x with value 0 will return the bit width of T.","#![feature(core_intrinsics)]\n\nuse std::intrinsics::ctlz;\n\nlet x = 0u16;\nlet num_leading = unsafe { ctlz(x) };\nassert_eq!(num_leading, 16);"]}}