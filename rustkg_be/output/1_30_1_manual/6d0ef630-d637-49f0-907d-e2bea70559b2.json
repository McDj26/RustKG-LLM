{"stability":{"stable since":"1.0.0"},"apiName":"std::io::stdout","apiType":"function","apiDocumentation":{"apiDescription":["Constructs a new handle to the standard output of the current process.","Each handle returned is a reference to a shared global buffer whose access is synchronized via a mutex. If you need more explicit control over locking, see the Stdout::lock method."],"examples":["Using implicit synchronization:","use std::io::{self, Write};\n\nfn main() -> io::Result<()> {\n    io::stdout().write(b\"hello world\")?;\n\n    Ok(())\n}","Using explicit synchronization:","use std::io::{self, Write};\n\nfn main() -> io::Result<()> {\n    let stdout = io::stdout();\n    let mut handle = stdout.lock();\n\n    handle.write(b\"hello world\")?;\n\n    Ok(())\n}"]}}