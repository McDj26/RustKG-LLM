{"stability":{"stable since":"1.12.0"},"apiName":"std::iter::Sum","apiType":"trait","apiDocumentation":{"apiDescription":["Trait to represent types that can be created by summing up an iterator.","This trait is used to implement the sum method on iterators. Types which implement the trait can be generated by the sum method. Like FromIterator this trait should rarely be called directly and instead interacted with through Iterator::sum."]},"trait required methods":[{"name":"fn sum<I>(iter: I) -> Self where I: Iterator<Item = A>","details":{"description":"Method which takes an iterator and generates Self from the elements by\n\"summing up\" the items."}}]}