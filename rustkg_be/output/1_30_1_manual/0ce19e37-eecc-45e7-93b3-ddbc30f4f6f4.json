{"stability":{"stable since":"1.6.0"},"apiName":"std::fs::DirBuilder","apiType":"struct","apiDocumentation":{"apiDescription":["A builder used to create directories in various manners.","This builder also supports platform-specific options."]},"trait implementations":[{"name":"impl std::fmt::Debug for std::fs::DirBuilder","stable since":"1.0.0"},{"name":"impl std::os::unix::fs::DirBuilderExt for std::fs::DirBuilder","stable since":"1.0.0"},{"name":"impl std::marker::Send for std::fs::DirBuilder","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::fs::DirBuilder","stable since":"1.0.0"}],"methods":[{"name":"pub fn new() -> DirBuilder","details":{"description":["Creates a new set of options with default mode/security settings for all platforms and also non-recursive."],"example":["use std::fs::DirBuilder;\n\nlet builder = DirBuilder::new();"]}},{"name":"pub fn recursive(&mut self, recursive: bool) -> &mut Self","details":{"description":["Indicates that directories should be created recursively, creating all parent directories. Parents that do not exist are created with the same security and permissions settings.","This option defaults to false."],"example":["use std::fs::DirBuilder;\n\nlet mut builder = DirBuilder::new();\nbuilder.recursive(true);"]}},{"name":"pub fn create<P: AsRef<Path>>(&self, path: P) -> Result<()>","details":{"description":["Create the specified directory with the options configured in this builder.","It is considered an error if the directory already exists unless recursive mode is enabled."],"example":["use std::fs::{self, DirBuilder};\n\nlet path = \"/tmp/foo/bar/baz\";\nDirBuilder::new()\n    .recursive(true)\n    .create(path).unwrap();\n\nassert!(fs::metadata(path).unwrap().is_dir());"]}}]}