{"stability":{"stable since":"1.0.0"},"apiName":"std::ops::Range","apiType":"struct","apiDocumentation":{"apiDescription":["A (half-open) range bounded inclusively below and exclusively above (start..end).","The Range start..end contains all values with x >= start and x < end. It is empty unless start < end."],"examples":["assert_eq!((3..5), std::ops::Range { start: 3, end: 5 });\nassert_eq!(3 + 4 + 5, (3..6).sum());\n\nlet arr = ['a', 'b', 'c', 'd'];\nassert_eq!(arr[ .. ], ['a', 'b', 'c', 'd']);\nassert_eq!(arr[ ..3], ['a', 'b', 'c',    ]);\nassert_eq!(arr[1.. ], [     'b', 'c', 'd']);\nassert_eq!(arr[1..3], [     'b', 'c'     ]);  // Range"]},"trait implementations":[{"name":"impl<A> std::iter::Iterator for std::ops::Range<A> where A: std::iter::Step","stable since":"1.0.0"},{"name":"impl<A> std::iter::DoubleEndedIterator for std::ops::Range<A> where A: std::iter::Step","stable since":"1.0.0"},{"name":"impl<T> std::slice::SliceIndex<[T]> for std::ops::Range<usize>","stable since":"1.15.0"},{"name":"impl std::slice::SliceIndex<str> for std::ops::Range<usize>","stable since":"1.20.0"},{"name":"impl<Idx> std::hash::Hash for std::ops::Range<Idx> where Idx: std::hash::Hash","stable since":"1.0.0"},{"name":"impl<Idx> std::clone::Clone for std::ops::Range<Idx> where Idx: std::clone::Clone","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<u8>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<u32>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<u64>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<i16>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<i32>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<i64>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<i8>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<u16>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<usize>","stable since":"1.0.0"},{"name":"impl std::iter::TrustedLen for std::ops::Range<isize>","stable since":"1.0.0"},{"name":"impl std::ops::IndexMut<std::ops::Range<usize>> for str","stable since":"1.3.0"},{"name":"impl std::ops::Index<std::ops::Range<usize>> for str","stable since":"1.0.0"},{"name":"impl<Idx> std::fmt::Debug for std::ops::Range<Idx> where Idx: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl std::iter::ExactSizeIterator for std::ops::Range<u32>","stable since":"1.0.0"},{"name":"impl std::iter::ExactSizeIterator for std::ops::Range<u16>","stable since":"1.0.0"},{"name":"impl std::iter::ExactSizeIterator for std::ops::Range<isize>","stable since":"1.0.0"},{"name":"impl std::iter::ExactSizeIterator for std::ops::Range<usize>","stable since":"1.0.0"},{"name":"impl std::iter::ExactSizeIterator for std::ops::Range<i16>","stable since":"1.0.0"},{"name":"impl std::iter::ExactSizeIterator for std::ops::Range<i32>","stable since":"1.0.0"},{"name":"impl std::iter::ExactSizeIterator for std::ops::Range<i8>","stable since":"1.0.0"},{"name":"impl std::iter::ExactSizeIterator for std::ops::Range<u8>","stable since":"1.0.0"},{"name":"impl<Idx> std::cmp::Eq for std::ops::Range<Idx> where Idx: std::cmp::Eq","stable since":"1.0.0"},{"name":"impl<Idx> std::cmp::PartialEq<std::ops::Range<Idx>> for std::ops::Range<Idx> where Idx: std::cmp::PartialEq<Idx>","stable since":"1.0.0"},{"name":"impl<A> std::iter::FusedIterator for std::ops::Range<A> where A: std::iter::Step","stable since":"1.26.0"},{"name":"impl<T> std::ops::RangeBounds<T> for std::ops::Range<T>","stable since":"1.28.0"},{"name":"impl<'a, T> std::ops::RangeBounds<T> for std::ops::Range<&'a T>","stable since":"1.28.0"},{"name":"impl std::ops::IndexMut<std::ops::Range<usize>> for std::string::String","stable since":"1.3.0"},{"name":"impl std::ops::Index<std::ops::Range<usize>> for std::string::String","stable since":"1.0.0"},{"name":"impl<Idx> std::marker::Send for std::ops::Range<Idx> where Idx: std::marker::Send","stable since":"1.0.0"},{"name":"impl<Idx> std::marker::Sync for std::ops::Range<Idx> where Idx: std::marker::Sync","stable since":"1.0.0"}],"methods":[{"name":"pub fn contains<U>(&self, item: &U) -> bool where Idx: PartialOrd<U>, U: PartialOrd<Idx> + ?Sized","stability":["ðŸ”¬ This is a nightly-only experimental API.  (range_contains #32311)recently added as per RFC\n"]},{"name":"pub fn is_empty(&self) -> bool","stability":["ðŸ”¬ This is a nightly-only experimental API.  (range_is_empty #48111)recently added\n"]}]}