{"stability":{"unstable":"ğŸ”¬ This is a nightly-only experimental API.  (pattern #27721)API not fully fleshed out and ready to be stabilized\n"},"apiName":"std::str::pattern::Pattern","apiType":"trait","apiDocumentation":{"apiDescription":["A string pattern.","A Pattern<'a> expresses that the implementing type can be used as a string pattern for searching in a &'a str.","For example, both 'a' and \"aa\" are patterns that would match at index 1 in the string \"baaaab\".","The trait itself acts as a builder for an associated Searcher type, which does the actual work of finding occurrences of the pattern in a string."]},"trait required methods":[{"name":"fn into_searcher(self, haystack: &'a str) -> Self::Searcher","stability":["ğŸ”¬ This is a nightly-only experimental API.  (pattern #27721)API not fully fleshed out and ready to be stabilized\n"]}],"trait provided methods":[{"name":"fn is_contained_in(self, haystack: &'a str) -> bool","stability":["ğŸ”¬ This is a nightly-only experimental API.  (pattern #27721)API not fully fleshed out and ready to be stabilized\n"]},{"name":"fn is_prefix_of(self, haystack: &'a str) -> bool","stability":["ğŸ”¬ This is a nightly-only experimental API.  (pattern #27721)API not fully fleshed out and ready to be stabilized\n"]},{"name":"fn is_suffix_of(self, haystack: &'a str) -> bool where Self::Searcher: ReverseSearcher<'a>","stability":["ğŸ”¬ This is a nightly-only experimental API.  (pattern #27721)API not fully fleshed out and ready to be stabilized\n"]}]}