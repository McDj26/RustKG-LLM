{"stability":{"stable since":"1.15.0"},"apiName":"std::sync::mpsc::TryIter","apiType":"struct","apiDocumentation":{"apiDescription":["An iterator that attempts to yield all pending values for a Receiver, created by try_iter.","None will be returned when there are no pending values remaining or if the corresponding channel has hung up.","This iterator will never block the caller in order to wait for data to become available. Instead, it will return None."],"examples":["use std::sync::mpsc::channel;\nuse std::thread;\nuse std::time::Duration;\n\nlet (sender, receiver) = channel();\n\n// Nothing is in the buffer yet\nassert!(receiver.try_iter().next().is_none());\nprintln!(\"Nothing in the buffer...\");\n\nthread::spawn(move || {\n    sender.send(1).unwrap();\n    sender.send(2).unwrap();\n    sender.send(3).unwrap();\n});\n\nprintln!(\"Going to sleep...\");\nthread::sleep(Duration::from_secs(2)); // block for two seconds\n\nfor x in receiver.try_iter() {\n    println!(\"Got: {}\", x);\n}"]},"trait implementations":[{"name":"impl<'a, T: std::fmt::Debug + 'a> std::fmt::Debug for std::sync::mpsc::TryIter<'a, T>","stable since":"1.0.0"},{"name":"impl<'a, T> std::iter::Iterator for std::sync::mpsc::TryIter<'a, T>","stable since":"1.0.0"},{"name":"impl<'a, T> !std::marker::Send for std::sync::mpsc::TryIter<'a, T>","stable since":"1.0.0"},{"name":"impl<'a, T> !std::marker::Sync for std::sync::mpsc::TryIter<'a, T>","stable since":"1.0.0"}]}