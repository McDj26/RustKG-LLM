{"stability":{"stable since":"1.0.0"},"apiName":"std::char::from_digit","apiType":"function","apiDocumentation":{"apiDescription":["Converts a digit in the given radix to a char.","A 'radix' here is sometimes also called a 'base'. A radix of two indicates a binary number, a radix of ten, decimal, and a radix of sixteen, hexadecimal, to give some common values. Arbitrary radices are supported.","from_digit() will return None if the input is not a digit in the given radix.","Panics","Panics if given a radix larger than 36."],"examples":["Basic usage:","use std::char;\n\nlet c = char::from_digit(4, 10);\n\nassert_eq!(Some('4'), c);\n\n// Decimal 11 is a single digit in base 16\nlet c = char::from_digit(11, 16);\n\nassert_eq!(Some('b'), c);","Returning None when the input is not a digit:","use std::char;\n\nlet c = char::from_digit(20, 10);\n\nassert_eq!(None, c);","Passing a large radix, causing a panic:","use std::thread;\nuse std::char;\n\nlet result = thread::spawn(|| {\n    // this panics\n    let c = char::from_digit(1, 37);\n}).join();\n\nassert!(result.is_err());"]}}