{"stability":{"stable since":"1.2.0"},"apiName":"std::fmt::DebugStruct","apiType":"struct","apiDocumentation":{"apiDescription":["A struct to help with fmt::Debug implementations.","This is useful when you wish to output a formatted struct as a part of your Debug::fmt implementation.","This can be constructed by the Formatter::debug_struct method."],"examples":["use std::fmt;\n\nstruct Foo {\n    bar: i32,\n    baz: String,\n}\n\nimpl fmt::Debug for Foo {\n    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n        fmt.debug_struct(\"Foo\")\n           .field(\"bar\", &self.bar)\n           .field(\"baz\", &self.baz)\n           .finish()\n    }\n}\n\n// prints \"Foo { bar: 10, baz: \"Hello World\" }\"\nprintln!(\"{:?}\", Foo { bar: 10, baz: \"Hello World\".to_string() });"]},"trait implementations":[{"name":"impl<'a, 'b> !std::marker::Send for std::fmt::DebugStruct<'a, 'b>","stable since":"1.0.0"},{"name":"impl<'a, 'b> !std::marker::Sync for std::fmt::DebugStruct<'a, 'b>","stable since":"1.0.0"}],"methods":[{"name":"pub fn field(&mut self, name: &str, value: &Debug) -> &mut DebugStruct<'a, 'b>","details":{"description":["Adds a new field to the generated struct output."]}},{"name":"pub fn finish(&mut self) -> Result<(), Error>","details":{"description":["Finishes output and returns any error encountered."]}}]}