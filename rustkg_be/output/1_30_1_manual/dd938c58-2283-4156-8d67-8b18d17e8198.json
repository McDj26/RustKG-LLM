{"stability":{"unstable":"ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"},"apiName":"std::task::Poll","apiType":"enum","apiDocumentation":{"apiDescription":["Indicates whether a value is available or if the current task has been scheduled to receive a wakeup instead."]},"enum variants":["Ready(T)","Represents that a value is immediately ready.\n","Pending","Represents that a value is not ready yet.\nWhen a function returns Pending, the function must also\nensure that the current task is scheduled to be awoken when\nprogress can be made.\n"],"trait implementations":[{"name":"impl<T> std::hash::Hash for std::task::Poll<T> where T: std::hash::Hash","stable since":"1.0.0"},{"name":"impl<T> std::clone::Clone for std::task::Poll<T> where T: std::clone::Clone","stable since":"1.0.0"},{"name":"impl<T> std::cmp::PartialOrd<std::task::Poll<T>> for std::task::Poll<T> where T: std::cmp::PartialOrd<T>","stable since":"1.0.0"},{"name":"impl<T> std::cmp::Ord for std::task::Poll<T> where T: std::cmp::Ord","stable since":"1.0.0"},{"name":"impl<T> std::fmt::Debug for std::task::Poll<T> where T: std::fmt::Debug","stable since":"1.0.0"},{"name":"impl<T> std::cmp::Eq for std::task::Poll<T> where T: std::cmp::Eq","stable since":"1.0.0"},{"name":"impl<T> std::cmp::PartialEq<std::task::Poll<T>> for std::task::Poll<T> where T: std::cmp::PartialEq<T>","stable since":"1.0.0"},{"name":"impl<T> std::convert::From<T> for std::task::Poll<T>","stable since":"1.0.0"},{"name":"impl<T> std::marker::Copy for std::task::Poll<T> where T: std::marker::Copy","stable since":"1.0.0"},{"name":"impl<T, E> std::ops::Try for std::task::Poll<std::result::Result<T, E>>","stable since":"1.0.0"},{"name":"impl<T, E> std::ops::Try for std::task::Poll<std::option::Option<std::result::Result<T, E>>>","stable since":"1.0.0"},{"name":"impl<T> std::marker::Send for std::task::Poll<T> where T: std::marker::Send","stable since":"1.0.0"},{"name":"impl<T> std::marker::Sync for std::task::Poll<T> where T: std::marker::Sync","stable since":"1.0.0"}],"methods":[{"name":"pub fn map<U, F>(self, f: F) -> Poll<U> where F: FnOnce(T) -> U","stability":["ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"]},{"name":"pub fn is_ready(&self) -> bool","stability":["ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"]},{"name":"pub fn is_pending(&self) -> bool","stability":["ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"]},{"name":"pub fn map_ok<U, F>(self, f: F) -> Poll<Result<U, E>> where F: FnOnce(T) -> U","stability":["ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"]},{"name":"pub fn map_err<U, F>(self, f: F) -> Poll<Result<T, U>> where F: FnOnce(E) -> U","stability":["ðŸ”¬ This is a nightly-only experimental API.  (futures_api #50547)futures in libcore are unstable\n"]}]}