{"stability":{"stable since":"1.0.0"},"apiName":"std::ops::Neg","apiType":"trait","apiDocumentation":{"apiDescription":["The unary negation operator -."],"examples":["An implementation of Neg for Sign, which allows the use of - to\nnegate its value.","use std::ops::Neg;\n\n#[derive(Debug, PartialEq)]\nenum Sign {\n    Negative,\n    Zero,\n    Positive,\n}\n\nimpl Neg for Sign {\n    type Output = Sign;\n\n    fn neg(self) -> Sign {\n        match self {\n            Sign::Negative => Sign::Positive,\n            Sign::Zero => Sign::Zero,\n            Sign::Positive => Sign::Negative,\n        }\n    }\n}\n\n// A negative positive is a negative.\nassert_eq!(-Sign::Positive, Sign::Negative);\n// A double negative is a positive.\nassert_eq!(-Sign::Negative, Sign::Positive);\n// Zero is its own negation.\nassert_eq!(-Sign::Zero, Sign::Zero);"]},"trait required methods":[{"name":"[+] Expand attributes#[must_use] fn neg(self) -> Self::Output","details":{"description":"Performs the unary - operation."}}]}