{"stability":{"unstable":"ðŸ”¬ This is a nightly-only experimental API.  (concat_idents_macro #29599)"},"apiName":"std::concat_idents","apiType":"macro","apiDocumentation":{"apiDescription":["Concatenate identifiers into one identifier.","This macro takes any number of comma-separated identifiers, and concatenates them all into one, yielding an expression which is a new identifier. Note that hygiene makes it such that this macro cannot capture local variables. Also, as a general rule, macros are only allowed in item, statement or expression position. That means while you may use this macro for referring to existing variables, functions or modules etc, you cannot define a new one with it."],"examples":["#![feature(concat_idents)]\n\nfn foobar() -> u32 { 23 }\n\nlet f = concat_idents!(foo, bar);\nprintln!(\"{}\", f());\n\n// fn concat_idents!(new, fun, name) { } // not usable in this way!"]}}