{"stability":{"stable since":"1.0.0","others":["This is supported on Unix only."]},"apiName":"std::os::unix","apiType":"module","apiDocumentation":{"apiDescription":["Experimental extensions to std for Unix platforms.","Provides access to platform-level information on Unix platforms, and exposes Unix-specific functions that would otherwise be inappropriate as part of the core std library.","It exposes more ways to deal with platform-specific strings (OsStr, OsString), allows to set permissions more granularly, extract low-level file descriptors from files and sockets, and has platform-specific helpers for spawning processes."],"examples":["use std::fs::File;\nuse std::os::unix::prelude::*;\n\nfn main() {\n    let f = File::create(\"foo.txt\").unwrap();\n    let fd = f.as_raw_fd();\n\n    // use fd with native unix bindings\n}"]},"children":["std::os::unix::ffi","std::os::unix::fs","std::os::unix::io","std::os::unix::net","std::os::unix::prelude","std::os::unix::process","std::os::unix::raw","std::os::unix::thread"]}