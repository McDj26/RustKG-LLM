{"stability":{"stable since":"1.0.0"},"apiName":"std::num::FpCategory","apiType":"enum","apiDocumentation":{"apiDescription":["A classification of floating point numbers.","This enum is used as the return type for f32::classify and f64::classify. See their documentation for more."],"examples":["use std::num::FpCategory;\nuse std::f32;\n\nlet num = 12.4_f32;\nlet inf = f32::INFINITY;\nlet zero = 0f32;\nlet sub: f32 = 1.1754942e-38;\nlet nan = f32::NAN;\n\nassert_eq!(num.classify(), FpCategory::Normal);\nassert_eq!(inf.classify(), FpCategory::Infinite);\nassert_eq!(zero.classify(), FpCategory::Zero);\nassert_eq!(nan.classify(), FpCategory::Nan);\nassert_eq!(sub.classify(), FpCategory::Subnormal);"]},"enum variants":["Nan","\"Not a Number\", often obtained by dividing by zero.\n","Infinite","Positive or negative infinity.\n","Zero","Positive or negative zero.\n","Subnormal","De-normalized floating point representation (less precise than Normal).\n","Normal","A regular floating point number.\n"],"trait implementations":[{"name":"impl std::clone::Clone for std::num::FpCategory","stable since":"1.0.0"},{"name":"impl std::fmt::Debug for std::num::FpCategory","stable since":"1.0.0"},{"name":"impl std::cmp::Eq for std::num::FpCategory","stable since":"1.0.0"},{"name":"impl std::cmp::PartialEq<std::num::FpCategory> for std::num::FpCategory","stable since":"1.0.0"},{"name":"impl std::marker::Copy for std::num::FpCategory","stable since":"1.0.0"},{"name":"impl std::marker::Send for std::num::FpCategory","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::num::FpCategory","stable since":"1.0.0"}]}