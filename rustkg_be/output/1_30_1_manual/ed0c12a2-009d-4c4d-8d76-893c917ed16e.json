{"stability":{"stable since":"1.10.0","others":["This is supported on Unix only."]},"apiName":"std::os::unix::net::SocketAddr","apiType":"struct","apiDocumentation":{"apiDescription":["An address associated with a Unix socket."],"examples":["use std::os::unix::net::UnixListener;\n\nlet socket = match UnixListener::bind(\"/tmp/sock\") {\n    Ok(sock) => sock,\n    Err(e) => {\n        println!(\"Couldn't bind: {:?}\", e);\n        return\n    }\n};\nlet addr = socket.local_addr().expect(\"Couldn't get local address\");"]},"trait implementations":[{"name":"impl std::clone::Clone for std::os::unix::net::SocketAddr","stable since":"1.0.0"},{"name":"impl std::fmt::Debug for std::os::unix::net::SocketAddr","stable since":"1.0.0"},{"name":"impl std::marker::Send for std::os::unix::net::SocketAddr","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::os::unix::net::SocketAddr","stable since":"1.0.0"}],"methods":[{"name":"pub fn is_unnamed(&self) -> bool","stability":["This is supported on Unix only."]},{"name":"pub fn as_pathname(&self) -> Option<&Path>","stability":["This is supported on Unix only."]}]}