{"stability":{"stable since":"1.0.0"},"apiName":"std::fmt::UpperExp","apiType":"trait","apiDocumentation":{"apiDescription":["E formatting.","The UpperExp trait should format its output in scientific notation with an upper-case E.","For more information on formatters, see the module-level documentation."],"examples":["Basic usage with f32:","let x = 42.0; // 42.0 is '4.2E1' in scientific notation\n\nassert_eq!(format!(\"{:E}\", x), \"4.2E1\");","Implementing UpperExp on a type:","use std::fmt;\n\nstruct Length(i32);\n\nimpl fmt::UpperExp for Length {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        let val = self.0;\n        write!(f, \"{}E1\", val / 10)\n    }\n}\n\nlet l = Length(100);\n\nprintln!(\"l in scientific notation is: {:E}\", l);"]},"trait required methods":[{"name":"fn fmt(&self, f: &mut Formatter) -> Result<(), Error>","details":{"description":"Formats the value using the given formatter."}}]}