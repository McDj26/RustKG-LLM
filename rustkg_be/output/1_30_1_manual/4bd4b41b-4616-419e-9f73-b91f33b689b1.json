{"stability":{"stable since":"1.8.0"},"apiName":"std::ops::SubAssign","apiType":"trait","apiDocumentation":{"apiDescription":["The subtraction assignment operator -=."],"examples":["This example creates a Point struct that implements the SubAssign\ntrait, and then demonstrates sub-assigning to a mutable Point.","use std::ops::SubAssign;\n\n#[derive(Debug, PartialEq)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nimpl SubAssign for Point {\n    fn sub_assign(&mut self, other: Point) {\n        *self = Point {\n            x: self.x - other.x,\n            y: self.y - other.y,\n        };\n    }\n}\n\nlet mut point = Point { x: 3, y: 3 };\npoint -= Point { x: 2, y: 3 };\nassert_eq!(point, Point {x: 1, y: 0});"]},"trait required methods":[{"name":"fn sub_assign(&mut self, rhs: Rhs)","details":{"description":"Performs the -= operation."}}]}