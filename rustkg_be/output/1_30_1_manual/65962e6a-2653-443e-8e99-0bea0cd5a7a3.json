{"stability":{"stable since":"1.10.0","others":["This is supported on Unix only."]},"apiName":"std::os::unix::net::Incoming","apiType":"struct","apiDocumentation":{"apiDescription":["An iterator over incoming connections to a UnixListener.","It will never return None."],"examples":["use std::thread;\nuse std::os::unix::net::{UnixStream, UnixListener};\n\nfn handle_client(stream: UnixStream) {\n    // ...\n}\n\nlet listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();\n\nfor stream in listener.incoming() {\n    match stream {\n        Ok(stream) => {\n            thread::spawn(|| handle_client(stream));\n        }\n        Err(err) => {\n            break;\n        }\n    }\n}"]},"trait implementations":[{"name":"impl<'a> std::fmt::Debug for std::os::unix::net::Incoming<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::iter::Iterator for std::os::unix::net::Incoming<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::marker::Send for std::os::unix::net::Incoming<'a>","stable since":"1.0.0"},{"name":"impl<'a> std::marker::Sync for std::os::unix::net::Incoming<'a>","stable since":"1.0.0"}]}