{"stability":{"stable since":"1.0.0"},"apiName":"std::io::ErrorKind","apiType":"enum","apiDocumentation":{"apiDescription":["A list specifying general categories of I/O error.","This list is intended to grow over time and it is not recommended to exhaustively match against it.","It is used with the io::Error type."]},"enum variants":["Non-exhaustive enums could have additional variants added in future. Therefore, when matching against variants of non-exhaustive enums, an extra wildcard arm must be added to account for any future variants.","NotFound","An entity was not found, often a file.\n","PermissionDenied","The operation lacked the necessary privileges to complete.\n","ConnectionRefused","The connection was refused by the remote server.\n","ConnectionReset","The connection was reset by the remote server.\n","ConnectionAborted","The connection was aborted (terminated) by the remote server.\n","NotConnected","The network operation failed because it was not connected yet.\n","AddrInUse","A socket address could not be bound because the address is already in\nuse elsewhere.\n","AddrNotAvailable","A nonexistent interface was requested or the requested address was not\nlocal.\n","BrokenPipe","The operation failed because a pipe was closed.\n","AlreadyExists","An entity already exists, often a file.\n","WouldBlock","The operation needs to block to complete, but the blocking operation was\nrequested to not occur.\n","InvalidInput","A parameter was incorrect.\n","InvalidData","Data not valid for the operation were encountered.\nUnlike InvalidInput, this typically means that the operation\nparameters were valid, however the error was caused by malformed\ninput data.\nFor example, a function that reads a file into a string will error with\nInvalidData if the file's contents are not valid UTF-8.\n","TimedOut","The I/O operation's timeout expired, causing it to be canceled.\n","WriteZero","An error returned when an operation could not be completed because a\ncall to write returned Ok(0).\nThis typically means that an operation could only succeed if it wrote a\nparticular number of bytes but only a smaller number of bytes could be\nwritten.\n","Interrupted","This operation was interrupted.\nInterrupted operations can typically be retried.\n","Other","Any I/O error not part of this list.\n","UnexpectedEof","An error returned when an operation could not be completed because an\n\"end of file\" was reached prematurely.\nThis typically means that an operation could only succeed if it read a\nparticular number of bytes but only a smaller number of bytes could be\nread.\n"],"trait implementations":[{"name":"impl std::clone::Clone for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::marker::Copy for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::fmt::Debug for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::cmp::Eq for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::hash::Hash for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::cmp::Ord for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::cmp::PartialEq for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::cmp::PartialOrd for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::convert::From<std::io::ErrorKind> for std::io::Error","stable since":"1.14.0"},{"name":"impl std::marker::Send for std::io::ErrorKind","stable since":"1.0.0"},{"name":"impl std::marker::Sync for std::io::ErrorKind","stable since":"1.0.0"}]}