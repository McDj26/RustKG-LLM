{"relations":["is a","has full name","stable since","requires method","has declaration","has description","has argument","has type","has return type","implements"],"relation_pairs":[["Seek","is a","Trait"],["Seek","has full name","std::io::Seek"],["Seek","stable since","1.0.0"],["Seek","has declaration","pub trait Seek { fn seek(&mut self, pos: SeekFrom) -> Result<u64>; }"],["Seek","has description","The Seek trait provides a cursor which can be moved within a stream of bytes. The stream typically has a fixed size, allowing seeking relative to either end or the current offset."],["seek","is a","function"],["seek","has full name","std::io::Seek::seek"],["seek","has argument","pos"],["pos","has type","SeekFrom"],["seek","has return type","Result<u64>"],["seek","has description","Seek to an offset, in bytes, in a stream. A seek beyond the end of a stream is allowed, but implementation defined. If the seek operation completed successfully, this method returns the new position from the start of the stream. That position can be used later with SeekFrom::Start. Seeking to a negative offset is considered an error."],["File","is a","struct"],["File","has full name","std::fs::File"],["File","implements","Seek"],["&File","implements","Seek"],["BufReader<R>","implements","Seek"],["Box<S>","implements","Seek"],["Cursor<T>","implements","Seek"],["BufWriter<W>","implements","Seek"]],"links":["../../src/std/io/mod.rs.html","../../std/fs/struct.File.html","../../std/io/enum.SeekFrom.html","../../std/io/type.Result.html","../primitive.u64.html","../../src/std/fs.rs.html","../../src/std/io/impls.rs.html","../../src/std/io/buffered.rs.html","../../src/std/io/cursor.rs.html"],"create_time":"2025-03-02T03:58:49.373Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/trait.Seek.html","id":"199e6f25-8eaf-49da-b667-cba55cfe8a6f","model":"deepseek-r1-250120"}