{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has attribute","has argument","has type","has description","has safety note"],"relation_pairs":[["swap","is a","Function"],["swap","has full name","std::ptr::swap"],["swap","stable since","1.0.0"],["swap","has declaration","pub unsafe fn swap<T>(x: *mut T, y: *mut T)"],["swap","has attribute","unsafe"],["swap","has argument","x"],["swap","has argument","y"],["x","has type","*mut T"],["y","has type","*mut T"],["swap","has description","Swaps the values at two mutable locations of the same type, without deinitializing either."],["swap","has description","The values pointed at by x and y may overlap, unlike mem::swap which is otherwise equivalent. If the values do overlap, then the overlapping region of memory from x will be used. This is demonstrated in the examples section below."],["swap","has safety note","This function copies the memory through the raw pointers passed to it as arguments. Ensure that these pointers are valid before calling swap."]],"links":["../../src/core/ptr.rs.html","../index.html","index.html"],"create_time":"2025-03-01T18:00:28.222Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/ptr/fn.swap.html","id":"c43538cb-0962-4184-8b28-b8c8d67b09cb","model":"deepseek-r1-250120"}