{"relations":["is a","has full name","stable since","has declaration","has description","requires method","has argument","has type","implements"],"relation_pairs":[["Drop","is a","Trait"],["Drop","has full name","core::ops::Drop"],["Drop","stable since","1.0.0"],["Drop","has declaration","pub trait Drop { fn drop(&mut self); }"],["Drop","has description","Used to run some code when a value goes out of scope. This is sometimes called a 'destructor'."],["Drop","requires method","drop"],["drop","is a","function"],["drop","has full name","core::ops::Drop::drop"],["drop","has argument","self"],["self","has type","&mut Self"],["LocalWaker","implements","Drop"],["Waker","implements","Drop"],["LocalFutureObj","implements","Drop"],["Range","is a","struct"],["Range","has description","A (half-open) range bounded inclusively below and exclusively above (`start..end`)."],["RangeFrom","is a","struct"],["RangeFrom","has description","A range only bounded inclusively below (`start..`)."],["RangeFull","is a","struct"],["RangeFull","has description","An unbounded range (`..`)."],["RangeInclusive","is a","struct"],["RangeInclusive","has description","An range bounded inclusively below and above (`start..=end`)."],["RangeTo","is a","struct"],["RangeTo","has description","A range only bounded exclusively above (`..end`)."],["RangeToInclusive","is a","struct"],["RangeToInclusive","has description","A range only bounded inclusively above (`..=end`)."],["Bound","is a","enum"],["Bound","has description","An endpoint of a range of keys."],["GeneratorState","is a","enum"],["GeneratorState","has description","The result of a generator resumption."],["Add","is a","trait"],["Add","has description","The addition operator `+`."],["AddAssign","is a","trait"],["AddAssign","has description","The addition assignment operator `+=`."]],"links":["struct.Range.html","struct.RangeFrom.html","struct.RangeFull.html","struct.RangeInclusive.html","struct.RangeTo.html","struct.RangeToInclusive.html","enum.Bound.html","enum.GeneratorState.html","trait.Add.html","trait.AddAssign.html","trait.BitAnd.html","trait.BitAndAssign.html","trait.BitOr.html","trait.BitOrAssign.html","trait.BitXor.html","trait.BitXorAssign.html","trait.CoerceUnsized.html","trait.Deref.html","trait.DerefMut.html","trait.Div.html","trait.DivAssign.html","trait.Drop.html","trait.Fn.html","trait.FnMut.html","trait.FnOnce.html","trait.Generator.html","trait.Index.html","trait.IndexMut.html","trait.Mul.html","trait.MulAssign.html","trait.Neg.html","trait.Not.html","trait.RangeBounds.html","trait.Rem.html","trait.RemAssign.html","trait.Shl.html","trait.ShlAssign.html","trait.Shr.html","trait.ShrAssign.html","trait.Sub.html","trait.SubAssign.html","trait.Try.html","../../src/core/ops/drop.rs.html","../../book/second-edition/ch15-03-drop.html","../../error-index.html","../../std/mem/fn.drop.html","../macro.panic.html","../../core/task/struct.LocalWaker.html","../../core/task/struct.Waker.html","../../core/future/struct.LocalFutureObj.html"],"create_time":"2025-03-02T05:09:27.695Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/ops/drop/trait.Drop.html","id":"6748764a-8769-431f-a344-c4f43b720b36","model":"deepseek-r1-250120"}