{"relations":["is a","has full name","stable since","is successor of","is predecessor of","requires method","provides method","has argument","has return type","has description","has declaration","implements","has type","is similar to"],"relation_pairs":[["Write","is a","Trait"],["Write","has full name","core::fmt::Write"],["Write","stable since","1.0.0"],["Write","has declaration","pub trait Write {\n    fn write_str(&mut self, s: &str) -> Result;\n    fn write_char(&mut self, c: char) -> Result { ... }\n    fn write_fmt(&mut self, args: Arguments) -> Result { ... }\n}"],["Write","has description","A collection of methods that are required to format a message into a stream."],["Write","is similar to","std::io::Write"],["write_str","is a","function"],["write_str","has full name","core::fmt::Write::write_str"],["Write","requires method","write_str"],["write_str","has argument","self"],["write_str","has argument","s"],["s","has type","&str"],["write_str","has return type","Result"],["write_str","has description","Writes a slice of bytes into this writer, returning whether the write succeeded.\nThis method can only succeed if the entire byte slice was successfully written, and this method will not return until all data has been written or an error occurs."],["write_char","is a","function"],["write_char","has full name","core::fmt::Write::write_char"],["Write","provides method","write_char"],["write_char","stable since","1.1.0"],["write_char","has argument","self"],["write_char","has argument","c"],["c","has type","char"],["write_char","has return type","Result"],["write_char","has description","Writes a char into this writer, returning whether the write succeeded. A single char may be encoded as more than one byte."],["write_fmt","is a","function"],["write_fmt","has full name","core::fmt::Write::write_fmt"],["Write","provides method","write_fmt"],["write_fmt","has argument","self"],["write_fmt","has argument","args"],["args","has type","core::fmt::Arguments"],["write_fmt","has return type","Result"],["write_fmt","has description","Glue for usage of the write! macro with implementors of this trait. This method should generally not be invoked manually, but rather through the write! macro itself."],["core::fmt::Formatter","implements","Write"],["&mut W","implements","Write"]],"links":["../../src/core/fmt/mod.rs.html","../index.html","index.html","../../std/io/trait.Write.html","../../std/macro.write.html","struct.Error.html","../../core/fmt/struct.Formatter.html","../../core/fmt/struct.Arguments.html","../../core/fmt/type.Result.html","../../std/primitive.char.html"],"create_time":"2025-03-01T17:29:41.590Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/fmt/trait.Write.html","id":"f2132d9f-b2e6-4705-851f-37ee81fdff0b","model":"deepseek-r1-250120"}