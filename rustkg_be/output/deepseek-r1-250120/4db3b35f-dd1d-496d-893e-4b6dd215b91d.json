{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has description","has argument","has type","has return type","has related function"],"relation pairs":[["from_u32","is a","function"],["from_u32","has full name","std::char::from_u32"],["from_u32","stable since","1.0.0"],["from_u32","has declaration","pub fn from_u32(i: u32) -> Option<char>"],["from_u32","has description","Converts a u32 to a char."],["from_u32","has description","Note that all chars are valid u32s, and can be cast to one with as:"],["from_u32","has description","However, the reverse is not true: not all valid u32s are valid chars. from_u32() will return None if the input is not a valid value for a char."],["from_u32","has description","For an unsafe version of this function which ignores these checks, see from_u32_unchecked."],["from_u32","has argument","from_u32::i"],["from_u32::i","has type","u32"],["from_u32","has return type","Option<char>"],["char","is a","primitive type"],["u32","is a","primitive type"],["from_u32","has related function","from_u32_unchecked"]],"links":["../../src/core/char/convert.rs.html","fn.from_u32_unchecked.html","../../std/primitive.char.html","../../std/primitive.u32.html","../../book/first-edition/casting-between-types.html"],"create_time":"2025-03-01T16:38:48.339Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/char/fn.from_u32.html","id":"4db3b35f-dd1d-496d-893e-4b6dd215b91d","model":"deepseek-r1-250120"}