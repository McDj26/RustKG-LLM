{"relations":["is a","has full name","stable since","is successor of","is predecessor of","requires method","has return type","has description","implements","has declaration","has example","has trait bound","has generic parameter"],"relation_pairs":[["Borrow","is a","Trait"],["Borrow","has full name","alloc::borrow::Borrow"],["Borrow","stable since","1.0.0"],["Borrow","has declaration","pub trait Borrow<Borrowed> where Borrowed: ?Sized, { fn borrow(&self) -> &Borrowed; }"],["Borrow","requires method","borrow"],["Borrow","has description","A trait for borrowing data."],["Borrow","has description","In Rust, it is common to provide different representations of a type..."],["borrow","is a","function"],["borrow","has return type","&Borrowed"],["String","implements","Borrow<str>"],["Cow<'a, B>","implements","Borrow<B>"],["&'a T","implements","Borrow<T>"],["&'a mut T","implements","Borrow<T>"],["T","implements","Borrow<T>"],["Vec<T>","implements","Borrow<[T]>"],["Box<T>","implements","Borrow<T>"],["Rc<T>","implements","Borrow<T>"],["Arc<T>","implements","Borrow<T>"],["Borrow","has generic parameter","Borrowed"],["Borrow","has trait bound","Borrowed: ?Sized"],["HashMap<K, V>","has description","requires K: Borrow<Q> with Q: Hash + Eq"]],"links":["../../src/core/borrow.rs.html","../index.html","index.html","../../alloc/string/struct.String.html","../../alloc/borrow/enum.Cow.html","../../alloc/boxed/struct.Box.html","../../alloc/rc/struct.Rc.html","../../alloc/sync/struct.Arc.html","../../alloc/vec/struct.Vec.html","trait.BorrowMut.html","../../std/convert/trait.AsRef.html","../../std/collections/struct.HashMap.html","../../std/primitive.str.html"],"create_time":"2025-03-01T17:37:01.998Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/borrow/trait.Borrow.html","id":"59f2e3e0-0e10-4604-962f-0891aa5cbe30","model":"deepseek-r1-250120"}