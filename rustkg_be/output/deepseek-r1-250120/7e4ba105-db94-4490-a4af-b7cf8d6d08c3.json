{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","requires method","has associated type","has type","has return type","has argument","implements","has description","has example","has stability","has source code"],"relation_pairs":[["Index","is a","Trait"],["Index","has full name","std::ops::Index"],["Index","stable since","1.0.0"],["Index","has declaration","pub trait Index<Idx> where Idx: ?Sized, { type Output: ?Sized; fn index(&self, index: Idx) -> &Self::Output; }"],["Index","has description","Used for indexing operations (container[index]) in immutable contexts."],["Index","requires method","index"],["Index","has associated type","Output"],["Output","has type","?Sized"],["index","has argument","self"],["index","has argument","index: Idx"],["index","has return type","&Self::Output"],["index","has description","Performs the indexing (container[index]) operation."],["str","implements","Index<Range<usize>>"],["str::index","has return type","&str"],["String","implements","Index<Range<usize>>"],["String::index","has return type","&str"],["str","implements","Index<RangeFrom<usize>>"],["str::index","has return type","&str"],["String","implements","Index<RangeFrom<usize>>"],["String::index","has return type","&str"],["str","implements","Index<RangeFull>"],["str::index","has return type","&str"],["CString","implements","Index<RangeFull>"],["CString::index","has return type","&CStr"],["OsString","implements","Index<RangeFull>"],["OsString::index","has return type","&OsStr"],["String","implements","Index<RangeFull>"],["String::index","has return type","&str"],["str","implements","Index<RangeInclusive<usize>>"],["str::index","has return type","&str"],["String","implements","Index<RangeInclusive<usize>>"],["String::index","has return type","&str"],["str","implements","Index<RangeTo<usize>>"],["str::index","has return type","&str"],["String","implements","Index<RangeTo<usize>>"],["String::index","has return type","&str"],["str","implements","Index<RangeToInclusive<usize>>"],["str::index","has return type","&str"],["String","implements","Index<RangeToInclusive<usize>>"],["String::index","has return type","&str"],["BTreeMap","implements","Index<&Q>"],["BTreeMap::index","has return type","&V"],["HashMap","implements","Index<&Q>"],["HashMap::index","has return type","&V"],["VecDeque","implements","Index<usize>"],["VecDeque::index","has return type","&A"],["[T]","implements","Index<I>"],["Vec<T>","implements","Index<I>"]],"links":["../../src/core/ops/index.rs.html","../../std/ops/struct.Range.html","../../std/string/struct.String.html","../../std/ffi/struct.CString.html","../../std/ffi/struct.CStr.html","../../std/ffi/struct.OsString.html","../../std/ffi/struct.OsStr.html","../../std/collections/btree_map/struct.BTreeMap.html","../../std/collections/struct.HashMap.html","../../std/collections/vec_deque/struct.VecDeque.html","../../std/vec/struct.Vec.html","../../std/ops/trait.IndexMut.html","../../std/marker/trait.Copy.html","../../std/marker/trait.Sized.html","../../std/cmp/trait.Ord.html","../../std/borrow/trait.Borrow.html","../../std/hash/trait.Hash.html","../../std/hash/trait.BuildHasher.html","../../std/slice/trait.SliceIndex.html"],"create_time":"2025-03-01T15:18:35.070Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/ops/trait.Index.html","id":"7e4ba105-db94-4490-a4af-b7cf8d6d08c3","model":"deepseek-r1-250120"}