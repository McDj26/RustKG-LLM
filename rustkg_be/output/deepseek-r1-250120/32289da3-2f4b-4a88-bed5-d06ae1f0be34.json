{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has description","requires method","has argument","has type","has return type","implements"],"relation_pairs":[["Display","is a","Trait"],["Display","has full name","std::fmt::Display"],["Display","stable since","1.0.0"],["Display","has declaration","pub trait Display { fn fmt(&self, f: &mut Formatter) -> Result<(), Error>; }"],["Display","has description","Format trait for an empty format, `{}`."],["Display","has description","`Display` is similar to `Debug`, but `Display` is for user-facing output, and so cannot be derived."],["Display","has description","For more information on formatters, see the module-level documentation."],["fmt","is a","function"],["fmt","has full name","std::fmt::Display::fmt"],["fmt","requires method","fmt"],["fmt","has argument","self"],["fmt","has argument","f"],["fmt","has return type","Result<(), Error>"],["fmt","has description","Formats the value using the given formatter."],["f","has type","Formatter"],["Formatter","is a","struct"],["Formatter","has full name","std::fmt::Formatter"],["Result<(), Error>","is a","enum"],["Result","has full name","std::result::Result"],["Error","is a","struct"],["Error","has full name","std::fmt::Error"],["std::env::VarError","implements","Display"],["std::net::IpAddr","implements","Display"],["std::net::SocketAddr","implements","Display"],["std::string::ParseError","implements","Display"],["std::sync::mpsc::RecvTimeoutError","implements","Display"],["std::sync::mpsc::TryRecvError","implements","Display"],["bool","implements","Display"],["char","implements","Display"],["f32","implements","Display"],["f64","implements","Display"],["i128","implements","Display"],["i16","implements","Display"],["i32","implements","Display"],["i64","implements","Display"],["i8","implements","Display"],["isize","implements","Display"],["!","implements","Display"],["str","implements","Display"],["u128","implements","Display"],["u16","implements","Display"],["u32","implements","Display"],["u64","implements","Display"],["u8","implements","Display"],["usize","implements","Display"],["std::alloc::AllocErr","implements","Display"],["std::alloc::CannotReallocInPlace","implements","Display"],["std::alloc::LayoutErr","implements","Display"],["std::cell::BorrowError","implements","Display"],["std::cell::BorrowMutError","implements","Display"],["std::char::CharTryFromError","implements","Display"],["std::char::DecodeUtf16Error","implements","Display"],["std::char::EscapeDebug","implements","Display"],["std::char::EscapeDefault","implements","Display"],["std::char::EscapeUnicode","implements","Display"],["std::char::ParseCharError","implements","Display"],["std::char::ToLowercase","implements","Display"],["std::char::ToUppercase","implements","Display"],["std::env::JoinPathsError","implements","Display"],["std::ffi::FromBytesWithNulError","implements","Display"],["std::ffi::IntoStringError","implements","Display"],["std::ffi::NulError","implements","Display"],["std::fmt::Error","implements","Display"],["std::io::Error","implements","Display"],["std::net::AddrParseError","implements","Display"],["std::net::Ipv4Addr","implements","Display"],["std::net::Ipv6Addr","implements","Display"],["std::net::SocketAddrV4","implements","Display"],["std::net::SocketAddrV6","implements","Display"],["std::num::NonZeroU128","implements","Display"],["std::num::NonZeroU16","implements","Display"],["std::num::NonZeroU32","implements","Display"],["std::num::NonZeroU64","implements","Display"],["std::num::NonZeroU8","implements","Display"],["std::num::NonZeroUsize","implements","Display"],["std::num::ParseFloatError","implements","Display"],["std::num::ParseIntError","implements","Display"],["std::num::TryFromIntError","implements","Display"],["std::path::StripPrefixError","implements","Display"],["std::process::ExitStatus","implements","Display"],["std::str::ParseBoolError","implements","Display"],["std::str::Utf8Error","implements","Display"],["std::string::FromUtf16Error","implements","Display"],["std::string::FromUtf8Error","implements","Display"],["std::string::String","implements","Display"],["std::sync::mpsc::RecvError","implements","Display"],["std::sync::TryLockError","implements","Display"],["std::thread::AccessError","implements","Display"],["std::time::SystemTimeError","implements","Display"]],"links":["../../src/core/fmt/mod.rs.html","../index.html","index.html","../../std/fmt/struct.Formatter.html","../../std/result/enum.Result.html","../../std/fmt/struct.Error.html","../../src/std/env.rs.html","../../src/std/net/ip.rs.html","../../src/std/net/addr.rs.html","../../src/alloc/string.rs.html","../../src/std/sync/mpsc/mod.rs.html","../../src/core/fmt/float.rs.html","../../src/core/fmt/num.rs.html","../../src/core/char/convert.rs.html","../../src/core/char/decode.rs.html","../../src/core/char/mod.rs.html","../../src/std/ffi/c_str.rs.html","../../src/std/net/parser.rs.html","../../src/std/num/mod.rs.html","../../src/std/path.rs.html","../../src/std/process.rs.html","../../src/std/sync/mutex.rs.html","../../src/std/sync/rwlock.rs.html","../../src/std/sys_common/poison.rs.html","../../src/alloc/boxed.rs.html","../../src/alloc/pin.rs.html","../../src/alloc/rc.rs.html","../../src/alloc/sync.rs.html","../../src/core/panic.rs.html","../../src/core/alloc.rs.html","../../src/core/cell.rs.html","../../src/core/num/dec2flt/mod.rs.html","../../src/std/io/error.rs.html","../../src/std/thread/local.rs.html","../../src/std/time.rs.html"],"create_time":"2025-03-01T15:46:05.653Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/fmt/trait.Display.html","id":"32289da3-2f4b-4a88-bed5-d06ae1f0be34","model":"deepseek-r1-250120"}