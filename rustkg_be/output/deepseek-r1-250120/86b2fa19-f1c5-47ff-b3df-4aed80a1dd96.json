{"relations":["is a","has full name","stable since","has declaration","requires method","has associated type","implements","has return type","has argument","has description","has type","has example"],"relation_pairs":[["BuildHasher","is a","Trait"],["BuildHasher","has full name","std::hash::BuildHasher"],["BuildHasher","stable since","1.7.0"],["BuildHasher","has declaration","pub trait BuildHasher { type Hasher: Hasher; fn build_hasher(&self) -> Self::Hasher; }"],["BuildHasher","requires method","build_hasher"],["BuildHasher","has associated type","Hasher"],["BuildHasher::Hasher","implements","Hasher"],["build_hasher","has return type","Self::Hasher"],["build_hasher","has argument","self"],["BuildHasher","has description","A trait for creating instances of Hasher."],["BuildHasher","has description","A BuildHasher is typically used (e.g. by HashMap) to create Hashers for each key such that they are hashed independently of one another, since Hashers contain state."],["RandomState","implements","BuildHasher"],["BuildHasherDefault<H>","implements","BuildHasher"],["RandomState::Hasher","is","DefaultHasher"],["BuildHasherDefault<H>::Hasher","is","H"],["H","implements","Default"],["H","implements","Hasher"],["RandomState::build_hasher","has return type","DefaultHasher"],["BuildHasherDefault<H>::build_hasher","has return type","H"]],"links":["../index.html","index.html","trait.Hasher.html","../../std/collections/struct.HashMap.html","struct.RandomState.html","struct.BuildHasherDefault.html","../../std/default/trait.Default.html","../../std/hash/trait.Hasher.html","../../src/core/hash/mod.rs.html","src/std/collections/hash/map.rs.html"],"create_time":"2025-03-01T16:35:08.626Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/hash/trait.BuildHasher.html","id":"86b2fa19-f1c5-47ff-b3df-4aed80a1dd96","model":"deepseek-r1-250120"}