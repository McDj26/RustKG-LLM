{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has attribute","has description","has argument","has type","has return type"],"relation pairs":[["replace","is a","Function"],["replace","has full name","std::ptr::replace"],["replace","stable since","1.0.0"],["replace","has declaration","pub unsafe fn replace<T>(dest: *mut T, src: T) -> T"],["replace","has attribute","unsafe"],["replace","has description","Moves src into the pointed dest, returning the previous dest value. Neither value is dropped. This is only unsafe because it accepts a raw pointer. Otherwise, this operation is identical to mem::replace."],["replace","has argument","dest"],["replace","has argument","src"],["dest","has type","*mut T"],["src","has type","T"],["replace","has return type","T"]],"links":["../../src/core/ptr.rs.html","../index.html","index.html"],"create_time":"2025-03-01T18:00:18.731Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/ptr/fn.replace.html","id":"553bd943-4496-4e5c-a059-b08848cf9af3","model":"deepseek-r1-250120"}