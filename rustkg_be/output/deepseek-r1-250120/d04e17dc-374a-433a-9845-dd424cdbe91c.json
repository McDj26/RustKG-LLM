{"relations":["is a","has full name","stable since","contains","has description","has method","implements","requires method"],"relation_pairs":[["std::iter","is a","Module"],["std::iter","has full name","std::iter"],["std::iter","stable since","1.0.0"],["std::iter","has description","Composable external iteration."],["Chain","is a","struct"],["Chain","has description","An iterator that strings two iterators together."],["std::iter","contains","Chain"],["Cloned","is a","struct"],["Cloned","has description","An iterator that clones the elements of an underlying iterator."],["std::iter","contains","Cloned"],["Cycle","is a","struct"],["Cycle","has description","An iterator that repeats endlessly."],["std::iter","contains","Cycle"],["Empty","is a","struct"],["Empty","has description","An iterator that yields nothing."],["std::iter","contains","Empty"],["Enumerate","is a","struct"],["Enumerate","has description","An iterator that yields the current count and the element during iteration."],["std::iter","contains","Enumerate"],["Filter","is a","struct"],["Filter","has description","An iterator that filters the elements of iter with predicate."],["std::iter","contains","Filter"],["FilterMap","is a","struct"],["FilterMap","has description","An iterator that uses f to both filter and map elements from iter."],["std::iter","contains","FilterMap"],["FlatMap","is a","struct"],["FlatMap","has description","An iterator that maps each element to an iterator, and yields the elements of the produced iterators."],["std::iter","contains","FlatMap"],["Flatten","is a","struct"],["Flatten","has description","An iterator that flattens one level of nesting in an iterator of things that can be turned into iterators."],["std::iter","contains","Flatten"],["Fuse","is a","struct"],["Fuse","has description","An iterator that yields None forever after the underlying iterator yields None once."],["std::iter","contains","Fuse"],["Inspect","is a","struct"],["Inspect","has description","An iterator that calls a function with a reference to each element before yielding it."],["std::iter","contains","Inspect"],["Map","is a","struct"],["Map","has description","An iterator that maps the values of iter with f."],["std::iter","contains","Map"],["Once","is a","struct"],["Once","has description","An iterator that yields an element exactly once."],["std::iter","contains","Once"],["Peekable","is a","struct"],["Peekable","has description","An iterator with a peek() that returns an optional reference to the next element."],["std::iter","contains","Peekable"],["Repeat","is a","struct"],["Repeat","has description","An iterator that repeats an element endlessly."],["std::iter","contains","Repeat"],["RepeatWith","is a","struct"],["RepeatWith","has description","An iterator that repeats elements of type A endlessly by applying the provided closure F: FnMut() -> A."],["std::iter","contains","RepeatWith"],["Rev","is a","struct"],["Rev","has description","A double-ended iterator with the direction inverted."],["std::iter","contains","Rev"],["Scan","is a","struct"],["Scan","has description","An iterator to maintain state while iterating another iterator."],["std::iter","contains","Scan"],["Skip","is a","struct"],["Skip","has description","An iterator that skips over n elements of iter."],["std::iter","contains","Skip"],["SkipWhile","is a","struct"],["SkipWhile","has description","An iterator that rejects elements while predicate is true."],["std::iter","contains","SkipWhile"],["StepBy","is a","struct"],["StepBy","has description","An iterator for stepping iterators by a custom amount."],["std::iter","contains","StepBy"],["Take","is a","struct"],["Take","has description","An iterator that only iterates over the first n iterations of iter."],["std::iter","contains","Take"],["TakeWhile","is a","struct"],["TakeWhile","has description","An iterator that only accepts elements while predicate is true."],["std::iter","contains","TakeWhile"],["Zip","is a","struct"],["Zip","has description","An iterator that iterates two other iterators simultaneously."],["std::iter","contains","Zip"],["DoubleEndedIterator","is a","trait"],["DoubleEndedIterator","has description","An iterator able to yield elements from both ends."],["std::iter","contains","DoubleEndedIterator"],["ExactSizeIterator","is a","trait"],["ExactSizeIterator","has description","An iterator that knows its exact length."],["std::iter","contains","ExactSizeIterator"],["Extend","is a","trait"],["Extend","has description","Extend a collection with the contents of an iterator."],["std::iter","contains","Extend"],["FromIterator","is a","trait"],["FromIterator","has description","Conversion from an Iterator."],["std::iter","contains","FromIterator"],["FusedIterator","is a","trait"],["FusedIterator","has description","An iterator that always continues to yield None when exhausted."],["std::iter","contains","FusedIterator"],["IntoIterator","is a","trait"],["IntoIterator","has description","Conversion into an Iterator."],["std::iter","contains","IntoIterator"],["Iterator","is a","trait"],["Iterator","has description","An interface for dealing with iterators."],["std::iter","contains","Iterator"],["Iterator","requires method","next"],["Product","is a","trait"],["Product","has description","Trait to represent types that can be created by multiplying elements of an iterator."],["std::iter","contains","Product"],["Sum","is a","trait"],["Sum","has description","Trait to represent types that can be created by summing up an iterator."],["std::iter","contains","Sum"],["Step","is a","trait"],["Step","has description","Objects that can be stepped over in both directions."],["std::iter","contains","Step"],["TrustedLen","is a","trait"],["TrustedLen","has description","An iterator that reports an accurate length using size_hint."],["std::iter","contains","TrustedLen"],["empty","is a","function"],["empty","has description","Creates an iterator that yields nothing."],["std::iter","contains","empty"],["once","is a","function"],["once","has description","Creates an iterator that yields an element exactly once."],["std::iter","contains","once"],["repeat","is a","function"],["repeat","has description","Creates a new iterator that endlessly repeats a single element."],["std::iter","contains","repeat"],["repeat_with","is a","function"],["repeat_with","has description","Creates a new iterator that repeats elements of type A endlessly by applying the provided closure, the repeater, F: FnMut() -> A."],["std::iter","contains","repeat_with"]],"links":["../index.html","struct.Chain.html","struct.Cloned.html","struct.Cycle.html","struct.Empty.html","struct.Enumerate.html","struct.Filter.html","struct.FilterMap.html","struct.FlatMap.html","struct.Flatten.html","struct.Fuse.html","struct.Inspect.html","struct.Map.html","struct.Once.html","struct.Peekable.html","struct.Repeat.html","struct.RepeatWith.html","struct.Rev.html","struct.Scan.html","struct.Skip.html","struct.SkipWhile.html","struct.StepBy.html","struct.Take.html","struct.TakeWhile.html","struct.Zip.html","trait.DoubleEndedIterator.html","trait.ExactSizeIterator.html","trait.Extend.html","trait.FromIterator.html","trait.FusedIterator.html","trait.IntoIterator.html","trait.Iterator.html","trait.Product.html","trait.Sum.html","trait.Step.html","trait.TrustedLen.html","fn.empty.html","fn.once.html","fn.repeat.html","fn.repeat_with.html"],"create_time":"2025-03-01T15:10:58.225Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/iter/index.html","id":"d04e17dc-374a-433a-9845-dd424cdbe91c","model":"deepseek-r1-250120"}