{"relations":["is a","has full name","stable since","has declaration","has stability","has description","has method","has argument","has return type","requires","has associated type","implements","has example","has source link","has trait implementation"],"relation_pairs":[["AtomicU32","is a","Struct"],["AtomicU32","has full name","core::sync::atomic::AtomicU32"],["AtomicU32","stable since",""],["AtomicU32","has declaration","pub struct AtomicU32 { /* fields omitted */ }"],["AtomicU32","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["AtomicU32","has description","An integer type which can be safely shared between threads."],["AtomicU32","has method","new"],["AtomicU32","has method","get_mut"],["AtomicU32","has method","into_inner"],["AtomicU32","has method","load"],["AtomicU32","has method","store"],["AtomicU32","has method","swap"],["AtomicU32","has method","compare_and_swap"],["AtomicU32","has method","compare_exchange"],["AtomicU32","has method","compare_exchange_weak"],["AtomicU32","has method","fetch_add"],["AtomicU32","has method","fetch_sub"],["AtomicU32","has method","fetch_and"],["AtomicU32","has method","fetch_nand"],["AtomicU32","has method","fetch_or"],["AtomicU32","has method","fetch_xor"],["AtomicU32","has method","fetch_update"],["AtomicU32","has method","fetch_max"],["AtomicU32","has method","fetch_min"],["new","has argument","v"],["new","has return type","Self"],["new","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["get_mut","has return type","&mut u32"],["get_mut","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["into_inner","has return type","u32"],["into_inner","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["load","has argument","order"],["load","has return type","u32"],["load","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["store","has argument","val"],["store","has argument","order"],["store","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["swap","has argument","val"],["swap","has argument","order"],["swap","has return type","u32"],["swap","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["compare_and_swap","has argument","current"],["compare_and_swap","has argument","new"],["compare_and_swap","has argument","order"],["compare_and_swap","has return type","u32"],["compare_and_swap","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["compare_exchange","has argument","current"],["compare_exchange","has argument","new"],["compare_exchange","has argument","success"],["compare_exchange","has argument","failure"],["compare_exchange","has return type","Result<u32, u32>"],["compare_exchange","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["compare_exchange_weak","has argument","current"],["compare_exchange_weak","has argument","new"],["compare_exchange_weak","has argument","success"],["compare_exchange_weak","has argument","failure"],["compare_exchange_weak","has return type","Result<u32, u32>"],["compare_exchange_weak","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["fetch_add","has argument","val"],["fetch_add","has argument","order"],["fetch_add","has return type","u32"],["fetch_add","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["fetch_sub","has argument","val"],["fetch_sub","has argument","order"],["fetch_sub","has return type","u32"],["fetch_sub","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["fetch_and","has argument","val"],["fetch_and","has argument","order"],["fetch_and","has return type","u32"],["fetch_and","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["fetch_nand","has argument","val"],["fetch_nand","has argument","order"],["fetch_nand","has return type","u32"],["fetch_nand","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["fetch_or","has argument","val"],["fetch_or","has argument","order"],["fetch_or","has return type","u32"],["fetch_or","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["fetch_xor","has argument","val"],["fetch_xor","has argument","order"],["fetch_xor","has return type","u32"],["fetch_xor","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["fetch_update","has argument","f"],["fetch_update","has argument","fetch_order"],["fetch_update","has argument","set_order"],["fetch_update","has return type","Result<u32, u32>"],["fetch_update","has stability","This is a nightly-only experimental API. (no_more_cas #48655)"],["fetch_max","has argument","val"],["fetch_max","has argument","order"],["fetch_max","has return type","u32"],["fetch_max","has stability","This is a nightly-only experimental API. (atomic_min_max #48655)"],["fetch_min","has argument","val"],["fetch_min","has argument","order"],["fetch_min","has return type","u32"],["fetch_min","has stability","This is a nightly-only experimental API. (atomic_min_max #48655)"],["AtomicU32","implements","Default"],["AtomicU32","implements","From<u32>"],["AtomicU32","implements","Debug"],["AtomicU32","implements","Sync"],["Default","has method","default"],["From<u32>","has method","from"],["Debug","has method","fmt"],["default","has return type","Self"],["from","has argument","v"],["from","has return type","Self"],["fmt","has argument","f"],["fmt","has return type","Result"]],"links":["../../index.html","../index.html","index.html","../../../src/core/sync/atomic.rs.html","../../../std/primitive.u32.html","enum.Ordering.html","https://github.com/rust-lang/rust/issues/32976","https://github.com/rust-lang/rust/issues/48655"],"create_time":"2025-03-01T17:26:27.233Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/sync/atomic/struct.AtomicU32.html","id":"d0b21c6d-7b31-4d38-8da0-afa22e99930b","model":"deepseek-r1-250120"}