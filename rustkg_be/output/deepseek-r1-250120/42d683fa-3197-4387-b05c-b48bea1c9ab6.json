{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","has description","implements","has argument","has return type","requires method"],"relation_pairs":[["Unpin","is a","Trait"],["Unpin","has full name","std::pin::Unpin"],["Unpin","has declaration","pub auto trait Unpin { }"],["Unpin","has stability","This is a nightly-only experimental API. (pin #49150)"],["Unpin","has description","Types which can be safely moved after being pinned."],["Unpin","has description","Since Rust itself has no notion of immovable types, and will consider moves to always be safe, this trait cannot prevent types from moving by itself."],["Unpin","has description","Instead it can be used to prevent moves through the type system, by controlling the behavior of special pointer types like PinMut, which \"pin\" the type in place by not allowing it to be moved out of them."],["Unpin","has description","See the pin module documentation for more information on pinning."],["Unpin","has description","Implementing this trait lifts the restrictions of pinning off a type, which then allows it to be moved out with functions such as replace."],["Unpin","has description","This trait is automatically implemented for almost every type."],["LocalWaker","is a","struct"],["LocalWaker","has full name","std::task::LocalWaker"],["LocalWaker","implements","Unpin"],["Waker","is a","struct"],["Waker","has full name","std::task::Waker"],["Waker","implements","Unpin"],["&'a T","implements","Unpin"],["&'a mut T","implements","Unpin"],["FutureObj<'a, T>","implements","Unpin"],["LocalFutureObj<'a, T>","implements","Unpin"],["PinMut<'a, T>","implements","Unpin"],["Box<T>","implements","Unpin"],["PinBox<T>","implements","Unpin"],["Rc<T>","implements","Unpin"],["Arc<T>","implements","Unpin"],["PinBox","is a","struct"],["PinBox","has full name","std::pin::PinBox"],["PinBox","has description","A pinned, heap allocated reference."],["PinMut","is a","struct"],["PinMut","has full name","std::pin::PinMut"],["PinMut","has description","A pinned reference."],["Pinned","is a","struct"],["Pinned","has full name","std::marker::Pinned"]],"links":["../../std/index.html","struct.PinBox.html","struct.PinMut.html","trait.Unpin.html","../../std/pin/struct.PinMut.html","../../std/pin/index.html","../../std/mem/fn.replace.html","../../std/marker/struct.Pinned.html","../../std/task/struct.LocalWaker.html","../../std/task/struct.Waker.html","../primitive.reference.html","../../std/future/struct.FutureObj.html","../../std/future/struct.LocalFutureObj.html","../../std/boxed/struct.Box.html","../../std/rc/struct.Rc.html","../../std/sync/struct.Arc.html","../../src/core/marker.rs.html"],"create_time":"2025-03-02T04:50:19.861Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/pin/trait.Unpin.html","id":"42d683fa-3197-4387-b05c-b48bea1c9ab6","model":"deepseek-r1-250120"}