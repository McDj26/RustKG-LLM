{"relations":["is a","has full name","stable since","has declaration","has associated type","requires method","has return type","has description","is supertrait of","implements","has stability","has argument","has type","has example"],"relation_pairs":[["FnOnce","is a","Trait"],["FnOnce","has full name","std::ops::FnOnce"],["FnOnce","stable since","1.0.0"],["FnOnce","has declaration","pub trait FnOnce<Args> { type Output; extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output; }"],["FnOnce","has associated type","Output"],["Output","stable since","1.12.0"],["FnOnce","requires method","call_once"],["call_once","has return type","Self::Output"],["FnOnce","has description","The version of the call operator that takes a by-value receiver"],["FnOnce","is supertrait of","FnMut"],["FnOnce","is supertrait of","Fn"],["&F","implements","FnOnce"],["&mut F","implements","FnOnce"],["Box<FnBox<A, Output=R>>","implements","FnOnce"],["AssertUnwindSafe<F>","implements","FnOnce"],["call_once","has argument","self"],["call_once","has argument","args"],["FnMut","has description","closure that might consume captured variables"],["call_once","has stability","nightly-only experimental API (fn_traits #29625)"]],"links":["../index.html","index.html","../../src/core/ops/function.rs.html","trait.FnMut.html","trait.Fn.html","../../std/primitive.fn.html","../../book/second-edition/ch13-01-closures.html","../../nomicon/hrtb.html","../../std/boxed/struct.Box.html","../../std/panic/struct.AssertUnwindSafe.html","../../std/ops/trait.Fn.html","../../std/ops/trait.FnMut.html","../../std/marker/trait.Sized.html","../../std/marker/trait.Send.html","../../src/alloc/boxed.rs.html","../../src/std/panic.rs.html"],"create_time":"2025-03-01T15:31:35.338Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/ops/trait.FnOnce.html","id":"435f5c12-142b-4e49-8b69-ede76c7e2eac","model":"deepseek-r1-250120"}