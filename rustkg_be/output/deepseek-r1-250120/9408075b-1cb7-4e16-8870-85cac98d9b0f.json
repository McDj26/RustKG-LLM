{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has variant","has method","has return type","has argument","has description","implements","has declaration","has example","has stability","has type","has associated type","has trait implementation","has source code"],"relation_pairs":[["Option","is a","Enum"],["Option","has full name","std::option::Option"],["Option","stable since","1.0.0"],["Option","has variant","None"],["Option","has variant","Some"],["None","has description","No value"],["Some","has description","Some value T"],["Option","has method","is_some"],["is_some","has return type","bool"],["is_some","has description","Returns true if the option is a Some value."],["is_some","has example","pub enum Option<T> { None, Some(T), }"],["Option","has method","is_none"],["is_none","has return type","bool"],["is_none","has description","Returns true if the option is a None value."],["Option","has method","as_ref"],["as_ref","has return type","Option<&T>"],["as_ref","has description","Converts from Option<T> to Option<&T>."],["Option","has method","as_mut"],["as_mut","has return type","Option<&mut T>"],["as_mut","has description","Converts from Option<T> to Option<&mut T>."],["Option","has method","expect"],["expect","has argument","msg: &str"],["expect","has return type","T"],["expect","has description","Unwraps an option, yielding the content of a Some. Panics if None."],["Option","has method","unwrap"],["unwrap","has return type","T"],["unwrap","has description","Moves the value out of the Option<T> if Some. Panics if None."],["Option","has method","map"],["map","has return type","Option<U>"],["map","has description","Maps an Option<T> to Option<U> by applying a function."],["Option","implements","IntoIterator"],["Option","implements","Clone"],["Option","implements","PartialEq"],["Option","implements","Default"],["Option<T>","has associated type","Item = T"],["Option<T>","has trait implementation","FromIterator<Option<A>>"],["Option","has source code","../../src/core/option.rs.html#160-167"],["is_some","has source code","../../src/core/option.rs.html#193-198"],["is_none","has source code","../../src/core/option.rs.html#215-217"],["as_ref","has source code","../../src/core/option.rs.html#245-250"],["as_mut","has source code","../../src/core/option.rs.html#266-271"],["expect","has source code","../../src/core/option.rs.html#309-314"],["unwrap","has source code","../../src/core/option.rs.html#342-347"],["map","has source code","../../src/core/option.rs.html#412-417"]],"links":["../../src/core/option.rs.html","../index.html","index.html","../../std/string/struct.String.html","../../std/primitive.usize.html","../../std/result/enum.Result.html","../../std/pin/struct.PinMut.html","../../std/process/struct.Command.html","../../std/iter/trait.Iterator.html","../../std/ops/trait.FnOnce.html","../../std/clone/trait.Clone.html","../../std/cmp/trait.PartialOrd.html","../../std/fmt/trait.Debug.html","../../std/hash/trait.Hash.html","../../std/default/trait.Default.html","../../std/borrow/trait.Borrow.html"],"create_time":"2025-03-01T15:19:58.629Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/option/enum.Option.html","id":"9408075b-1cb7-4e16-8870-85cac98d9b0f","model":"deepseek-r1-250120"}