{"relations":["is a","has full name","stable since","has declaration","has stability","has description","has attribute","has method","has argument","has return type","requires method","implements","has associated type","has implementation","has trait"],"relation_pairs":[["Layout","is a","Struct"],["Layout","has full name","core::alloc::Layout"],["Layout","stable since","1.28.0"],["Layout","has declaration","pub struct Layout { /* fields omitted */ }"],["Layout","has attribute","alloc_layout"],["Layout","has description","Layout of a block of memory. An instance of Layout describes a particular layout of memory. You build a Layout up as an input to give to an allocator. All layouts have an associated non-negative size and a power-of-two alignment."],["from_size_align","is a","function"],["from_size_align","has argument","size: usize"],["from_size_align","has argument","align: usize"],["from_size_align","has return type","Result<Self, LayoutErr>"],["Layout","has method","from_size_align"],["from_size_align_unchecked","is a","function"],["from_size_align_unchecked","has attribute","unsafe"],["from_size_align_unchecked","has argument","size: usize"],["from_size_align_unchecked","has argument","align: usize"],["Layout","has method","from_size_align_unchecked"],["size","is a","function"],["size","has return type","usize"],["Layout","has method","size"],["align","is a","function"],["align","has return type","usize"],["Layout","has method","align"],["new","is a","function"],["new","has return type","Self"],["Layout","has method","new"],["for_value","is a","function"],["for_value","has argument","t: &T"],["for_value","has return type","Self"],["Layout","has method","for_value"],["align_to","is a","function"],["align_to","has argument","align: usize"],["align_to","has return type","Self"],["align_to","has stability","nightly-only experimental (allocator_api #32838)"],["Layout","has method","align_to"],["padding_needed_for","is a","function"],["padding_needed_for","has argument","align: usize"],["padding_needed_for","has return type","usize"],["padding_needed_for","has stability","nightly-only experimental (allocator_api #32838)"],["Layout","has method","padding_needed_for"],["repeat","is a","function"],["repeat","has argument","n: usize"],["repeat","has return type","Result<(Self, usize), LayoutErr>"],["repeat","has stability","nightly-only experimental (allocator_api #32838)"],["Layout","has method","repeat"],["extend","is a","function"],["extend","has argument","next: Self"],["extend","has return type","Result<(Self, usize), LayoutErr>"],["extend","has stability","nightly-only experimental (allocator_api #32838)"],["Layout","has method","extend"],["repeat_packed","is a","function"],["repeat_packed","has argument","n: usize"],["repeat_packed","has return type","Result<Self, LayoutErr>"],["repeat_packed","has stability","nightly-only experimental (allocator_api #32838)"],["Layout","has method","repeat_packed"],["extend_packed","is a","function"],["extend_packed","has argument","next: Self"],["extend_packed","has return type","Result<(Self, usize), LayoutErr>"],["extend_packed","has stability","nightly-only experimental (allocator_api #32838)"],["Layout","has method","extend_packed"],["array","is a","function"],["array","has argument","n: usize"],["array","has return type","Result<Self, LayoutErr>"],["array","has stability","nightly-only experimental (allocator_api #32838)"],["Layout","has method","array"],["Layout","implements","Copy"],["Layout","implements","Clone"],["Layout","implements","Debug"],["Layout","implements","PartialEq"],["Layout","implements","Eq"],["clone","is a","method"],["clone","has return type","Layout"],["Layout","has method","clone"],["fmt","is a","method"],["fmt","has argument","f: &mut Formatter"],["fmt","has return type","Result"],["Layout","has method","fmt"]],"links":["../../src/core/alloc.rs.html","../../core/result/enum.Result.html","../../core/alloc/struct.LayoutErr.html","../../core/marker/trait.Sized.html","../../core/marker/trait.Copy.html","../../core/clone/trait.Clone.html","../../core/fmt/trait.Debug.html","../../core/cmp/trait.PartialEq.html"],"create_time":"2025-03-01T15:00:39.560Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/alloc/struct.Layout.html","id":"b09f5182-3cff-4fc0-951a-07febba960e1","model":"deepseek-r1-250120"}