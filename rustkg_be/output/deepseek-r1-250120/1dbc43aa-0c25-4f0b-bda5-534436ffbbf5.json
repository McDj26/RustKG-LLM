{"relations":["is a","has full name","stable since","has declaration","has description","implements","has associated type","has return type","has argument","has type","requires method","has stability"],"relation_pairs":[["Once<T>","is a","struct"],["Once<T>","has full name","std::iter::Once<T>"],["Once<T>","stable since","1.2.0"],["Once<T>","has declaration","pub struct Once<T> { /* fields omitted */ }"],["Once<T>","has description","An iterator that yields an element exactly once."],["Once<T>","has description","This struct is created by the once function. See its documentation for more."],["Once<T>","implements","Iterator"],["Once<T>","implements","DoubleEndedIterator"],["Once<T>","implements","Clone"],["Once<T>","implements","Debug"],["Once<T>","implements","ExactSizeIterator"],["Once<T>","implements","FusedIterator"],["Once<T>","has associated type","Item = T"],["Iterator::Item","is","T"],["next","is a","function"],["next","has full name","std::iter::Once<T>::next"],["next","has return type","Option<T>"],["next","has argument","next::self"],["next","has description","Advances the iterator and returns the next value."],["size_hint","is a","function"],["size_hint","has full name","std::iter::Once<T>::size_hint"],["size_hint","has return type","(usize, Option<usize>)"],["size_hint","has argument","size_hint::self"],["size_hint","has description","Returns the bounds on the remaining length of the iterator."],["count","is a","function"],["count","has full name","std::iter::Once<T>::count"],["count","stable since","1.0.0"],["count","has return type","usize"],["count","has argument","count::self"],["count","has description","Consumes the iterator, counting the number of iterations and returning it."],["last","is a","function"],["last","has full name","std::iter::Once<T>::last"],["last","stable since","1.0.0"],["last","has return type","Option<Self::Item>"],["last","has argument","last::self"],["last","has description","Consumes the iterator, returning the last element."],["nth","is a","function"],["nth","has full name","std::iter::Once<T>::nth"],["nth","stable since","1.0.0"],["nth","has return type","Option<Self::Item>"],["nth","has argument","nth::self"],["nth","has argument","nth::n"],["nth::n","has type","usize"],["nth","has description","Returns the nth element of the iterator."],["step_by","is a","function"],["step_by","has full name","std::iter::Once<T>::step_by"],["step_by","stable since","1.28.0"],["step_by","has return type","StepBy<Self>"],["step_by","has argument","step_by::self"],["step_by","has argument","step_by::step"],["step_by::step","has type","usize"],["step_by","has description","Creates an iterator starting at the same point, but stepping by the given amount at each iteration."],["chain","is a","function"],["chain","has full name","std::iter::Once<T>::chain"],["chain","stable since","1.0.0"],["chain","has return type","Chain<Self, <U as IntoIterator>::IntoIter>"],["chain","has argument","chain::self"],["chain","has argument","chain::other"],["chain","has description","Takes two iterators and creates a new iterator over both in sequence."],["zip","is a","function"],["zip","has full name","std::iter::Once<T>::zip"],["zip","stable since","1.0.0"],["zip","has return type","Zip<Self, <U as IntoIterator>::IntoIter>"],["zip","has argument","zip::self"],["zip","has argument","zip::other"],["zip","has description","'Zips up' two iterators into a single iterator of pairs."]],"links":["../index.html","index.html","fn.once.html","../../src/core/iter/sources.rs.html","../../std/iter/trait.Iterator.html","../../std/option/enum.Option.html","../primitive.usize.html","../primitive.tuple.html","../../std/iter/struct.StepBy.html","../../std/iter/struct.Chain.html","../../std/iter/struct.Zip.html"],"create_time":"2025-03-01T17:06:51.211Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/iter/struct.Once.html","id":"1dbc43aa-0c25-4f0b-bda5-534436ffbbf5","model":"deepseek-r1-250120"}