{"relations":["is a","has full name","stable since","contains","has description","has stability","initializes"],"relation_pairs":[["atomic","is a","Module"],["atomic","has full name","core::sync::atomic"],["atomic","stable since","1.0.0"],["atomic","has description","Atomic types"],["atomic","has description","Atomic types provide primitive shared-memory communication between threads, and are the building blocks of other concurrent types."],["atomic","contains","AtomicBool"],["atomic","contains","AtomicIsize"],["atomic","contains","AtomicPtr"],["atomic","contains","AtomicUsize"],["atomic","contains","AtomicI8"],["atomic","contains","AtomicI16"],["atomic","contains","AtomicI32"],["atomic","contains","AtomicI64"],["atomic","contains","AtomicU8"],["atomic","contains","AtomicU16"],["atomic","contains","AtomicU32"],["atomic","contains","AtomicU64"],["atomic","contains","Ordering"],["atomic","contains","ATOMIC_BOOL_INIT"],["atomic","contains","ATOMIC_ISIZE_INIT"],["atomic","contains","ATOMIC_USIZE_INIT"],["atomic","contains","ATOMIC_I8_INIT"],["atomic","contains","ATOMIC_I16_INIT"],["atomic","contains","ATOMIC_I32_INIT"],["atomic","contains","ATOMIC_I64_INIT"],["atomic","contains","ATOMIC_U8_INIT"],["atomic","contains","ATOMIC_U16_INIT"],["atomic","contains","ATOMIC_U32_INIT"],["atomic","contains","ATOMIC_U64_INIT"],["atomic","contains","compiler_fence"],["atomic","contains","fence"],["atomic","contains","spin_loop_hint"],["AtomicBool","is a","struct"],["AtomicBool","has description","A boolean type which can be safely shared between threads."],["AtomicIsize","is a","struct"],["AtomicIsize","has description","An integer type which can be safely shared between threads."],["AtomicPtr","is a","struct"],["AtomicPtr","has description","A raw pointer type which can be safely shared between threads."],["AtomicUsize","is a","struct"],["AtomicUsize","has description","An integer type which can be safely shared between threads."],["AtomicI8","is a","struct"],["AtomicI8","has description","An integer type which can be safely shared between threads."],["AtomicI8","has stability","Experimental"],["AtomicI16","is a","struct"],["AtomicI16","has description","An integer type which can be safely shared between threads."],["AtomicI16","has stability","Experimental"],["AtomicI32","is a","struct"],["AtomicI32","has description","An integer type which can be safely shared between threads."],["AtomicI32","has stability","Experimental"],["AtomicI64","is a","struct"],["AtomicI64","has description","An integer type which can be safely shared between threads."],["AtomicI64","has stability","Experimental"],["AtomicU8","is a","struct"],["AtomicU8","has description","An integer type which can be safely shared between threads."],["AtomicU8","has stability","Experimental"],["AtomicU16","is a","struct"],["AtomicU16","has description","An integer type which can be safely shared between threads."],["AtomicU16","has stability","Experimental"],["AtomicU32","is a","struct"],["AtomicU32","has description","An integer type which can be safely shared between threads."],["AtomicU32","has stability","Experimental"],["AtomicU64","is a","struct"],["AtomicU64","has description","An integer type which can be safely shared between threads."],["AtomicU64","has stability","Experimental"],["Ordering","is a","enum"],["Ordering","has description","Atomic memory orderings"],["ATOMIC_BOOL_INIT","is a","constant"],["ATOMIC_BOOL_INIT","initializes","AtomicBool"],["ATOMIC_ISIZE_INIT","is a","constant"],["ATOMIC_ISIZE_INIT","initializes","AtomicIsize"],["ATOMIC_USIZE_INIT","is a","constant"],["ATOMIC_USIZE_INIT","initializes","AtomicUsize"],["ATOMIC_I8_INIT","is a","constant"],["ATOMIC_I8_INIT","initializes","AtomicI8"],["ATOMIC_I16_INIT","is a","constant"],["ATOMIC_I16_INIT","initializes","AtomicI16"],["ATOMIC_I32_INIT","is a","constant"],["ATOMIC_I32_INIT","initializes","AtomicI32"],["ATOMIC_I64_INIT","is a","constant"],["ATOMIC_I64_INIT","initializes","AtomicI64"],["ATOMIC_U8_INIT","is a","constant"],["ATOMIC_U8_INIT","initializes","AtomicU8"],["ATOMIC_U16_INIT","is a","constant"],["ATOMIC_U16_INIT","initializes","AtomicU16"],["ATOMIC_U32_INIT","is a","constant"],["ATOMIC_U32_INIT","initializes","AtomicU32"],["ATOMIC_U64_INIT","is a","constant"],["ATOMIC_U64_INIT","initializes","AtomicU64"],["compiler_fence","is a","function"],["compiler_fence","has description","A compiler memory fence."],["fence","is a","function"],["fence","has description","An atomic fence."],["spin_loop_hint","is a","function"],["spin_loop_hint","has description","Save power or switch hyperthreads in a busy-wait spin-loop."]],"links":["struct.AtomicBool.html","struct.AtomicIsize.html","struct.AtomicPtr.html","struct.AtomicUsize.html","struct.AtomicI8.html","struct.AtomicI16.html","struct.AtomicI32.html","struct.AtomicI64.html","struct.AtomicU8.html","struct.AtomicU16.html","struct.AtomicU32.html","struct.AtomicU64.html","enum.Ordering.html","constant.ATOMIC_BOOL_INIT.html","constant.ATOMIC_ISIZE_INIT.html","constant.ATOMIC_USIZE_INIT.html","constant.ATOMIC_I8_INIT.html","constant.ATOMIC_I16_INIT.html","constant.ATOMIC_I32_INIT.html","constant.ATOMIC_I64_INIT.html","constant.ATOMIC_U8_INIT.html","constant.ATOMIC_U16_INIT.html","constant.ATOMIC_U32_INIT.html","constant.ATOMIC_U64_INIT.html","fn.compiler_fence.html","fn.fence.html","fn.spin_loop_hint.html","../../index.html","../index.html","../../../nomicon/atomics.html","../../marker/trait.Sync.html","../../../std/thread/index.html","../../../std/sync/struct.Arc.html","https://llvm.org/docs/LangRef.html"],"create_time":"2025-03-01T17:24:11.192Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/sync/atomic/index.html","id":"ad457fe4-25ad-41e6-be6a-331aa28c3289","model":"deepseek-r1-250120"}