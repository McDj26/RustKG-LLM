{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","requires method","has description","has return type","provides method","has argument","implements"],"relation pairs":[["UnsafeWake","is a","Trait"],["UnsafeWake","has full name","core::task::UnsafeWake"],["UnsafeWake","has declaration","pub unsafe trait UnsafeWake: Send + Sync { unsafe fn clone_raw(&self) -> Waker; unsafe fn drop_raw(&self); unsafe fn wake(&self); unsafe fn wake_local(&self) { ... } }"],["UnsafeWake","has stability","This is a nightly-only experimental API. (futures_api #50547)"],["UnsafeWake","has description","An unsafe trait for implementing custom memory management for a `Waker` or `LocalWaker`."],["UnsafeWake","requires method","clone_raw"],["UnsafeWake","requires method","drop_raw"],["UnsafeWake","requires method","wake"],["UnsafeWake","provides method","wake_local"],["clone_raw","is a","function"],["clone_raw","has return type","Waker"],["clone_raw","has stability","This is a nightly-only experimental API. (futures_api #50547)"],["clone_raw","has description","Creates a clone of this UnsafeWake and stores it behind a Waker. This function is unsafe to call because it's asserting the UnsafeWake value is in a consistent state."],["drop_raw","is a","function"],["drop_raw","has stability","This is a nightly-only experimental API. (futures_api #50547)"],["drop_raw","has description","Drops this instance of UnsafeWake, deallocating resources associated with it. This function is unsafe to call because it's asserting the UnsafeWake value is in a consistent state."],["wake","is a","function"],["wake","has stability","This is a nightly-only experimental API. (futures_api #50547)"],["wake","has description","Indicates that the associated task is ready to make progress and should be polled. This function is unsafe to call because it's asserting the UnsafeWake value is in a consistent state."],["wake_local","is a","function"],["wake_local","has stability","This is a nightly-only experimental API. (futures_api #50547)"],["wake_local","has description","Indicates that the associated task is ready to make progress and should be polled. This function is the same as wake but can only be called from the thread that this UnsafeWake is \"local\" to."],["Context","is a","struct"],["LocalWaker","is a","struct"],["SpawnErrorKind","is a","struct"],["SpawnLocalObjError","is a","struct"],["SpawnObjError","is a","struct"],["Waker","is a","struct"],["Poll","is a","enum"],["Spawn","is a","trait"]],"links":["../../core/index.html","struct.Context.html","struct.LocalWaker.html","struct.SpawnErrorKind.html","struct.SpawnLocalObjError.html","struct.SpawnObjError.html","struct.Waker.html","enum.Poll.html","trait.Spawn.html","trait.UnsafeWake.html","../../src/core/task/wake.rs.html","../index.html","index.html","https://github.com/rust-lang/rust/issues/50547"],"create_time":"2025-03-02T05:13:25.243Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/task/trait.UnsafeWake.html","id":"b7e96139-2edb-453f-a666-5a3eff966408","model":"deepseek-r1-250120"}