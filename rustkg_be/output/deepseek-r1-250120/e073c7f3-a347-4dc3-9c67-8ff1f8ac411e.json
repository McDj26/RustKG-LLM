{"relations":["is a","has full name","stable since","is successor of","is predecessor of","contains module","has description","supports platform","has source","has primitive type","has macro","has keyword"],"relation pairs":[["os","is a","Module"],["os","has full name","std::os"],["os","stable since","1.0.0"],["os","has description","OS-specific functionality."],["os","has source","../../src/std/os/mod.rs.html"],["os","contains module","linux"],["linux","is a","Module"],["linux","has full name","std::os::linux"],["linux","has description","Linux-specific definitions"],["linux","supports platform","Linux"],["os","contains module","raw"],["raw","is a","Module"],["raw","has full name","std::os::raw"],["raw","has description","Platform-specific types, as defined by C."],["os","contains module","unix"],["unix","is a","Module"],["unix","has full name","std::os::unix"],["unix","has description","Experimental extensions to `std` for Unix platforms."],["unix","supports platform","Unix"],["os","contains module","windows"],["windows","is a","Module"],["windows","has full name","std::os::windows"],["windows","has description","Platform-specific extensions to `std` for Windows."],["windows","supports platform","Windows"],["array","is a","primitive type"],["array","has description","A fixed-size array, denoted `[T; N]`, for the element type, `T`, and the non-negative compile-time constant size, `N`."],["bool","is a","primitive type"],["bool","has description","The boolean type."],["char","is a","primitive type"],["char","has description","A character type."],["f32","is a","primitive type"],["f32","has description","The 32-bit floating point type."],["f64","is a","primitive type"],["f64","has description","The 64-bit floating point type."],["fn","is a","primitive type"],["fn","has description","Function pointers, like `fn(usize) -> bool`."],["i128","is a","primitive type"],["i128","has description","The 128-bit signed integer type."],["i16","is a","primitive type"],["i16","has description","The 16-bit signed integer type."],["i32","is a","primitive type"],["i32","has description","The 32-bit signed integer type."],["i64","is a","primitive type"],["i64","has description","The 64-bit signed integer type."],["i8","is a","primitive type"],["i8","has description","The 8-bit signed integer type."],["isize","is a","primitive type"],["isize","has description","The pointer-sized signed integer type."],["never","is a","primitive type"],["never","has description","The `!` type, also called \"never\"."],["pointer","is a","primitive type"],["pointer","has description","Raw, unsafe pointers, `*const T`, and `*mut T`."],["reference","is a","primitive type"],["reference","has description","References, both shared and mutable."],["slice","is a","primitive type"],["slice","has description","A dynamically-sized view into a contiguous sequence, `[T]`."],["str","is a","primitive type"],["str","has description","String slices."],["tuple","is a","primitive type"],["tuple","has description","A finite heterogeneous sequence, `(T, U, ..)`."],["u128","is a","primitive type"],["u128","has description","The 128-bit unsigned integer type."],["u16","is a","primitive type"],["u16","has description","The 16-bit unsigned integer type."],["u32","is a","primitive type"],["u32","has description","The 32-bit unsigned integer type."],["u64","is a","primitive type"],["u64","has description","The 64-bit unsigned integer type."],["u8","is a","primitive type"],["u8","has description","The 8-bit unsigned integer type."],["unit","is a","primitive type"],["unit","has description","The `()` type, sometimes called \"unit\" or \"nil\"."],["usize","is a","primitive type"],["usize","has description","The pointer-sized unsigned integer type."],["assert","is a","macro"],["assert","has description","Ensure that a boolean expression is `true` at runtime."],["assert_eq","is a","macro"],["assert_eq","has description","Asserts that two expressions are equal to each other (using [`PartialEq`])."],["assert_ne","is a","macro"],["assert_ne","has description","Asserts that two expressions are not equal to each other (using [`PartialEq`])."],["cfg","is a","macro"],["cfg","has description","Boolean evaluation of configuration flags, at compile-time."],["column","is a","macro"],["column","has description","A macro which expands to the column number on which it was invoked."],["compile_error","is a","macro"],["compile_error","has description","Unconditionally causes compilation to fail with the given error message when encountered."],["concat","is a","macro"],["concat","has description","Concatenates literals into a static string slice."],["concat_idents","is a","macro"],["concat_idents","has description","Concatenate identifiers into one identifier."],["debug_assert","is a","macro"],["debug_assert","has description","Ensure that a boolean expression is `true` at runtime."],["debug_assert_eq","is a","macro"],["debug_assert_eq","has description","Asserts that two expressions are equal to each other."],["debug_assert_ne","is a","macro"],["debug_assert_ne","has description","Asserts that two expressions are not equal to each other."],["env","is a","macro"],["env","has description","Inspect an environment variable at compile time."],["eprint","is a","macro"],["eprint","has description","Macro for printing to the standard error."],["eprintln","is a","macro"],["eprintln","has description","Macro for printing to the standard error, with a newline."],["file","is a","macro"],["file","has description","A macro which expands to the file name from which it was invoked."],["format","is a","macro"],["format","has description","Creates a `String` using interpolation of runtime expressions."],["format_args","is a","macro"],["format_args","has description","The core macro for formatted string creation & output."],["include","is a","macro"],["include","has description","Parse a file as an expression or an item according to the context."],["include_bytes","is a","macro"],["include_bytes","has description","Includes a file as a reference to a byte array."],["include_str","is a","macro"],["include_str","has description","Includes a utf8-encoded file as a string."],["is_x86_feature_detected","is a","macro"],["is_x86_feature_detected","has description","A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms."],["line","is a","macro"],["line","has description","A macro which expands to the line number on which it was invoked."],["module_path","is a","macro"],["module_path","has description","Expands to a string that represents the current module path."],["option_env","is a","macro"],["option_env","has description","Optionally inspect an environment variable at compile time."],["panic","is a","macro"],["panic","has description","The entry point for panic of Rust threads."],["print","is a","macro"],["print","has description","Macro for printing to the standard output."],["println","is a","macro"],["println","has description","Macro for printing to the standard output, with a newline."],["select","is a","macro"],["select","has description","A macro to select an event from a number of receivers."],["stringify","is a","macro"],["stringify","has description","A macro which stringifies its arguments."],["thread_local","is a","macro"],["thread_local","has description","Declare a new thread local storage key of type [`std::thread::LocalKey`]."],["try","is a","macro"],["try","has description","Helper macro for reducing boilerplate code for matching `Result` together with converting downstream errors."],["unimplemented","is a","macro"],["unimplemented","has description","A standardized placeholder for marking unfinished code."],["unreachable","is a","macro"],["unreachable","has description","A utility macro for indicating unreachable code."],["vec","is a","macro"],["vec","has description","Creates a [`Vec`] containing the arguments."],["write","is a","macro"],["write","has description","Write formatted data into a buffer."],["writeln","is a","macro"],["writeln","has description","Write formatted data into a buffer, with a newline appended."],["fn","is a","keyword"],["fn","has description","The `fn` keyword."],["let","is a","keyword"],["let","has description","The `let` keyword."],["struct","is a","keyword"],["struct","has description","The `struct` keyword."]],"links":["../../src/std/os/mod.rs.html","linux/index.html","raw/index.html","unix/index.html","windows/index.html","../primitive.array.html","../primitive.bool.html","../primitive.char.html","../primitive.f32.html","../primitive.f64.html","../primitive.fn.html","../primitive.i128.html","../primitive.i16.html","../primitive.i32.html","../primitive.i64.html","../primitive.i8.html","../primitive.isize.html","../primitive.never.html","../primitive.pointer.html","../primitive.reference.html","../primitive.slice.html","../primitive.str.html","../primitive.tuple.html","../primitive.u128.html","../primitive.u16.html","../primitive.u32.html","../primitive.u64.html","../primitive.u8.html","../primitive.unit.html","../primitive.usize.html","../macro.assert.html","../macro.assert_eq.html","../macro.assert_ne.html","../macro.cfg.html","../macro.column.html","../macro.compile_error.html","../macro.concat.html","../macro.concat_idents.html","../macro.debug_assert.html","../macro.debug_assert_eq.html","../macro.debug_assert_ne.html","../macro.env.html","../macro.eprint.html","../macro.eprintln.html","../macro.file.html","../macro.format.html","../macro.format_args.html","../macro.include.html","../macro.include_bytes.html","../macro.include_str.html","../macro.is_x86_feature_detected.html","../macro.line.html","../macro.module_path.html","../macro.option_env.html","../macro.panic.html","../macro.print.html","../macro.println.html","../macro.select.html","../macro.stringify.html","../macro.thread_local.html","../macro.try.html","../macro.unimplemented.html","../macro.unreachable.html","../macro.vec.html","../macro.write.html","../macro.writeln.html","../keyword.fn.html","../keyword.let.html","../keyword.struct.html","../../std/index.html","../alloc/index.html","../any/index.html","../arch/index.html","../ascii/index.html","../borrow/index.html","../boxed/index.html","../cell/index.html","../char/index.html","../clone/index.html","../cmp/index.html","../collections/index.html","../convert/index.html","../default/index.html","../env/index.html","../error/index.html","../f32/index.html","../f64/index.html","../ffi/index.html","../fmt/index.html","../fs/index.html","../future/index.html","../hash/index.html","../hint/index.html","../i128/index.html","../i16/index.html","../i32/index.html","../i64/index.html","../i8/index.html","../intrinsics/index.html","../io/index.html","../isize/index.html","../iter/index.html","../marker/index.html","../mem/index.html","../net/index.html","../num/index.html","../ops/index.html","../option/index.html","../os/index.html","../panic/index.html","../path/index.html","../pin/index.html","../prelude/index.html","../process/index.html","../ptr/index.html","../raw/index.html","../rc/index.html","../result/index.html","../slice/index.html","../str/index.html","../string/index.html","../sync/index.html","../task/index.html","../thread/index.html","../time/index.html","../u128/index.html","../u16/index.html","../u32/index.html","../u64/index.html","../u8/index.html","../usize/index.html","../vec/index.html"],"create_time":"2025-03-02T04:54:00.478Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/os/index.html","id":"e073c7f3-a347-4dc3-9c67-8ff1f8ac411e","model":"deepseek-r1-250120"}