{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has argument","has return type","has description","has type"],"relation_pairs":[["eq","is a","Function"],["eq","has full name","std::ptr::eq"],["eq","stable since","1.17.0"],["eq","has argument","a"],["eq","has argument","b"],["eq","has return type","bool"],["eq","has description","Compare raw pointers for equality.\nThis is the same as using the == operator, but less generic:\nthe arguments have to be *const T raw pointers,\nnot anything that implements PartialEq.\nThis can be used to compare &T references (which coerce to *const T implicitly)\nby their address rather than comparing the values they point to\n(which is what the PartialEq for &T implementation does)."],["a","has type","*const T"],["b","has type","*const T"]],"links":["../index.html","index.html","../../src/core/ptr.rs.html"],"create_time":"2025-03-01T17:59:20.247Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/ptr/fn.eq.html","id":"63bfd7ad-1edf-4314-bc23-590c84f610a7","model":"deepseek-r1-250120"}