{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has description","has method","has parameter","has type","has return type","implements","has size","has stability"],"relation_pairs":[["char","is a","Primitive Type"],["char","stable since","1.0.0"],["char","has description","A character type."],["char","has description","The char type represents a single character. More specifically, since 'character' isn't a well-defined concept in Unicode, char is a 'Unicode scalar value'."],["char","has size","four bytes"],["char","implements","TryFrom<u32>"],["char","implements","FromStr"],["char","implements","Hash"],["char","implements","Clone"],["char","implements","PartialOrd<char>"],["char","implements","Ord"],["char","implements","Debug"],["char","implements","Eq"],["char","implements","PartialEq<char>"],["char","implements","From<u8>"],["char","implements","Copy"],["char","implements","Default"],["char","implements","Display"],["char","implements","Pattern"],["char","implements","Any"],["char","implements","ToString"],["is_digit","is a","function"],["is_digit","has parameter","self"],["is_digit","has parameter","radix"],["radix","has type","u32"],["is_digit","has return type","bool"],["is_digit","has description","Checks if a char is a digit in the given radix."],["to_digit","is a","function"],["to_digit","has parameter","self"],["to_digit","has parameter","radix"],["to_digit","has return type","Option<u32>"],["to_digit","has description","Converts a char to a digit in the given radix."],["escape_unicode","is a","function"],["escape_unicode","has return type","EscapeUnicode"],["escape_unicode","has description","Returns an iterator that yields the hexadecimal Unicode escape of a character as chars."],["escape_debug","stable since","1.20.0"],["escape_debug","has description","Returns an iterator that yields the literal escape code of a character as chars."],["escape_default","has description","Returns an iterator that yields the literal escape code of a character as chars."],["len_utf8","has description","Returns the number of bytes this char would need if encoded in UTF-8."],["len_utf8","has return type","usize"],["len_utf16","has return type","usize"],["encode_utf8","stable since","1.15.0"],["encode_utf8","has parameter","dst"],["encode_utf16","stable since","1.15.0"],["is_xid_start","has stability","nightly-only experimental API"],["is_xid_continue","has stability","nightly-only experimental API"],["is_ascii","stable since","1.23.0"]],"links":["char/index.html","../../../primitive.u32.html","../std/option/enum.Option.html","../std/char/struct.EscapeUnicode.html","../std/char/struct.EscapeDebug.html","../std/char/struct.EscapeDefault.html","../std/char/struct.ToLowercase.html","../std/char/struct.ToUppercase.html","primitive.slice.html","primitive.u16.html","primitive.str.html","primitive.never.html","https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx","http://www.unicode.org/glossary/","ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt","ftp://ftp.unicode.org/Public/UNIDATA/SpecialCasing.txt","http://www.unicode.org/versions/Unicode7.0.0/ch03.pdf"],"create_time":"2025-03-01T11:01:33.551Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/primitive.char.html","id":"d0f197cf-7a82-4ba7-ac0b-d986b12eb844","model":"deepseek-r1-250120"}