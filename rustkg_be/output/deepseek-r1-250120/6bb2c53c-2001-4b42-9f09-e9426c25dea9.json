{"relations":["is a","has full name","stable since","has declaration","has description","requires method","has argument","has return type","implements","has type","has stability","has platform specificity","has source"],"relation_pairs":[["TcpStream","is a","Struct"],["TcpStream","has full name","std::net::TcpStream"],["TcpStream","stable since","1.0.0"],["TcpStream","has declaration","pub struct TcpStream(_);"],["TcpStream","has description","A TCP stream between a local and a remote socket."],["TcpStream","has description","The Transmission Control Protocol is specified in IETF RFC 793."],["TcpStream","requires method","connect"],["connect","is a","function"],["connect","has full name","std::net::TcpStream::connect"],["connect","has argument","addr"],["addr","has type","A: ToSocketAddrs"],["connect","has return type","Result<TcpStream>"],["connect","has description","Opens a TCP connection to a remote host."],["TcpStream","requires method","connect_timeout"],["connect_timeout","stable since","1.21.0"],["connect_timeout","has argument","addr: &SocketAddr"],["connect_timeout","has argument","timeout: Duration"],["connect_timeout","has return type","Result<TcpStream>"],["connect_timeout","has description","Opens a TCP connection to a remote host with a timeout."],["TcpStream","requires method","peer_addr"],["peer_addr","has return type","Result<SocketAddr>"],["peer_addr","has description","Returns the socket address of the remote peer of this TCP connection."],["TcpStream","requires method","local_addr"],["local_addr","has return type","Result<SocketAddr>"],["local_addr","has description","Returns the socket address of the local half of this TCP connection."],["TcpStream","requires method","shutdown"],["shutdown","has argument","how: Shutdown"],["shutdown","has description","Shuts down the read, write, or both halves of this connection."],["TcpStream","requires method","try_clone"],["try_clone","has return type","Result<TcpStream>"],["try_clone","has description","Creates a new independently owned handle to the underlying socket."],["TcpStream","requires method","set_read_timeout"],["set_read_timeout","stable since","1.4.0"],["set_read_timeout","has argument","dur: Option<Duration>"],["set_read_timeout","has description","Sets the read timeout to the timeout specified."],["TcpStream","requires method","set_write_timeout"],["set_write_timeout","stable since","1.4.0"],["set_write_timeout","has argument","dur: Option<Duration>"],["set_write_timeout","has description","Sets the write timeout to the timeout specified."],["TcpStream","requires method","read_timeout"],["read_timeout","stable since","1.4.0"],["read_timeout","has return type","Result<Option<Duration>>"],["read_timeout","has description","Returns the read timeout of this socket."],["TcpStream","requires method","write_timeout"],["write_timeout","stable since","1.4.0"],["write_timeout","has return type","Result<Option<Duration>>"],["write_timeout","has description","Returns the write timeout of this socket."],["TcpStream","requires method","peek"],["peek","stable since","1.18.0"],["peek","has argument","buf: &mut [u8]"],["peek","has return type","Result<usize>"],["peek","has description","Receives data on the socket without removing it from the queue."],["TcpStream","requires method","set_nodelay"],["set_nodelay","stable since","1.9.0"],["set_nodelay","has argument","nodelay: bool"],["set_nodelay","has description","Sets the TCP_NODELAY option."],["TcpStream","requires method","nodelay"],["nodelay","stable since","1.9.0"],["nodelay","has return type","Result<bool>"],["nodelay","has description","Gets the TCP_NODELAY option value."],["TcpStream","requires method","set_ttl"],["set_ttl","stable since","1.9.0"],["set_ttl","has argument","ttl: u32"],["set_ttl","has description","Sets the IP_TTL option."],["TcpStream","requires method","ttl"],["ttl","stable since","1.9.0"],["ttl","has return type","Result<u32>"],["ttl","has description","Gets the IP_TTL option value."],["TcpStream","requires method","take_error"],["take_error","stable since","1.9.0"],["take_error","has return type","Result<Option<Error>>"],["take_error","has description","Get the SO_ERROR option value."],["TcpStream","requires method","set_nonblocking"],["set_nonblocking","stable since","1.9.0"],["set_nonblocking","has argument","nonblocking: bool"],["set_nonblocking","has description","Moves the stream into or out of nonblocking mode."],["TcpStream","implements","Read"],["TcpStream","implements","Write"],["TcpStream","implements","Debug"],["TcpStream","implements","AsRawSocket"],["TcpStream","implements","FromRawSocket"],["TcpStream","implements","IntoRawSocket"],["TcpStream","implements","AsRawFd"],["TcpStream","implements","FromRawFd"],["TcpStream","implements","IntoRawFd"],["TcpStream","has source","../../src/std/net/tcp.rs.html"]],"links":["../../std/index.html","struct.AddrParseError.html","struct.Incoming.html","struct.Ipv4Addr.html","struct.Ipv6Addr.html","struct.SocketAddrV4.html","struct.SocketAddrV6.html","struct.TcpListener.html","struct.UdpSocket.html","enum.IpAddr.html","enum.Ipv6MulticastScope.html","enum.Shutdown.html","enum.SocketAddr.html","trait.ToSocketAddrs.html","../../src/std/net/tcp.rs.html","../../std/process/struct.Command.html","../../std/time/struct.Duration.html","../../std/io/type.Result.html","https://tools.ietf.org/html/rfc793","../../std/io/trait.Read.html","../../std/io/trait.Write.html","../../std/fmt/trait.Debug.html","../../std/os/windows/io/trait.AsRawSocket.html","../../std/os/windows/io/trait.FromRawSocket.html","../../std/os/windows/io/trait.IntoRawSocket.html","../../std/os/unix/io/trait.AsRawFd.html","../../std/os/unix/io/trait.FromRawFd.html","../../std/os/unix/io/trait.IntoRawFd.html"],"create_time":"2025-03-02T04:59:25.225Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/net/struct.TcpStream.html","id":"6bb2c53c-2001-4b42-9f09-e9426c25dea9","model":"deepseek-r1-250120"}