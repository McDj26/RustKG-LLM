{"relations":["is a","has full name","stable since","has declaration","has description","has associated type","requires method","has argument","has type","has return type","implements","has example"],"relation pairs":[["FromStr","is a","Trait"],["FromStr","has full name","std::str::FromStr"],["FromStr","stable since","1.0.0"],["FromStr","has declaration","pub trait FromStr { type Err; fn from_str(s: &str) -> Result<Self, Self::Err>; }"],["FromStr","has description","A trait to abstract the idea of creating a new instance of a type from a string."],["FromStr","has associated type","Err"],["Err","has description","The associated error which can be returned from parsing."],["FromStr","requires method","from_str"],["from_str","has argument","s"],["s","has type","&str"],["from_str","has return type","Result<Self, Self::Err>"],["IpAddr","implements","FromStr"],["IpAddr","has associated type","Err = AddrParseError"],["IpAddr::from_str","has return type","Result<IpAddr, AddrParseError>"],["SocketAddr","implements","FromStr"],["SocketAddr","has associated type","Err = AddrParseError"],["SocketAddr::from_str","has return type","Result<SocketAddr, AddrParseError>"],["bool","implements","FromStr"],["bool","has associated type","Err = ParseBoolError"],["bool::from_str","has return type","Result<bool, ParseBoolError>"],["bool::from_str","has description","Parse a bool from a string. Yields a Result<bool, ParseBoolError>"],["char","implements","FromStr"],["char","has associated type","Err = ParseCharError"],["char::from_str","has return type","Result<char, ParseCharError>"],["f32","implements","FromStr"],["f32","has associated type","Err = ParseFloatError"],["f32::from_str","has return type","Result<f32, ParseFloatError>"],["f64","implements","FromStr"],["f64","has associated type","Err = ParseFloatError"],["f64::from_str","has return type","Result<f64, ParseFloatError>"],["i128","implements","FromStr"],["i128","has associated type","Err = ParseIntError"],["i128::from_str","has return type","Result<i128, ParseIntError>"],["String","implements","FromStr"],["String","has associated type","Err = ParseError"],["String::from_str","has return type","Result<String, ParseError>"]],"links":["../../src/core/str/mod.rs.html","../../std/result/enum.Result.html","../../std/net/enum.IpAddr.html","../../std/net/struct.AddrParseError.html","../../std/net/enum.SocketAddr.html","../../std/str/struct.ParseBoolError.html","../../std/char/struct.ParseCharError.html","../../std/num/struct.ParseFloatError.html","../../std/num/struct.ParseIntError.html","../../std/string/enum.ParseError.html","../primitive.str.html","../primitive.bool.html","../primitive.char.html","../primitive.i128.html","../primitive.i16.html","../primitive.i32.html","../primitive.i64.html","../primitive.i8.html","../primitive.isize.html","../primitive.u128.html","../primitive.u16.html","../primitive.u32.html","../primitive.u64.html","../primitive.u8.html","../primitive.usize.html","../../std/net/struct.Ipv4Addr.html","../../std/net/struct.Ipv6Addr.html","../../std/net/struct.SocketAddrV4.html","../../std/net/struct.SocketAddrV6.html","../../std/string/struct.String.html"],"create_time":"2025-03-01T15:13:18.363Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/str/trait.FromStr.html","id":"12c8102e-58a6-4f3a-b56c-a03ca7b94da8","model":"deepseek-r1-250120"}