{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has description","created by","has method","has return type","has argument","has type","implements","has portability","has stability"],"relation_pairs":[["Stdout","is a","Struct"],["Stdout","has full name","std::io::Stdout"],["Stdout","stable since","1.0.0"],["Stdout","has declaration","pub struct Stdout { /* fields omitted */ }"],["Stdout","has description","A handle to the global standard output stream of the current process."],["Stdout","has description","Each handle shares a global buffer of data to be written to the standard output stream. Access is also synchronized via a lock and explicit control over locking is available via the lock method."],["Stdout","has description","Created by the io::stdout method."],["Stdout","created by","io::stdout"],["lock","is a","function"],["lock","has full name","std::io::Stdout::lock"],["Stdout","has method","lock"],["lock","has return type","StdoutLock"],["lock","has description","Locks this handle to the standard output stream, returning a writable guard."],["lock","has description","The lock is released when the returned lock goes out of scope."],["lock","has description","The returned guard also implements the Write trait for writing data."],["lock","has argument","self"],["self","has type","&Self"],["Stdout","implements","Debug"],["fmt","is a","function"],["fmt","has full name","std::fmt::Debug::fmt"],["fmt","has argument","self"],["fmt","has argument","f"],["f","has type","&mut Formatter"],["fmt","has return type","Result"],["fmt","has description","Formats the value using the given formatter."],["fmt","stable since","1.16.0"],["Stdout","implements","Write"],["write","is a","function"],["write","has full name","std::io::Write::write"],["write","has argument","&mut self"],["write","has argument","buf"],["buf","has type","&[u8]"],["write","has return type","Result<usize>"],["write","has description","Write a buffer into this object, returning how many bytes were written."],["flush","is a","function"],["flush","has full name","std::io::Write::flush"],["flush","has return type","Result<()>"],["flush","has description","Flush this output stream, ensuring that all intermediately buffered contents reach their destination."],["write_all","is a","function"],["write_all","has full name","std::io::Write::write_all"],["write_all","has argument","buf"],["write_all","has return type","Result<()>"],["write_all","has description","Attempts to write an entire buffer into this write."],["write_fmt","is a","function"],["write_fmt","has full name","std::io::Write::write_fmt"],["write_fmt","has argument","args"],["args","has type","Arguments"],["write_fmt","has return type","Result<()>"],["write_fmt","has description","Writes a formatted string into this writer, returning any error encountered."],["by_ref","is a","function"],["by_ref","has full name","std::io::Write::by_ref"],["by_ref","has return type","&mut Self"],["by_ref","has description","Creates a \"by reference\" adaptor for this instance of Write."],["Stdout","implements","AsRawHandle"],["as_raw_handle","is a","function"],["as_raw_handle","has full name","std::os::windows::io::AsRawHandle::as_raw_handle"],["as_raw_handle","has return type","RawHandle"],["as_raw_handle","has description","Extracts the raw handle, without taking any ownership."],["as_raw_handle","has stability","This is supported on Windows only."],["Stdout","implements","AsRawFd"],["as_raw_fd","is a","function"],["as_raw_fd","has full name","std::os::unix::io::AsRawFd::as_raw_fd"],["as_raw_fd","has return type","RawFd"],["as_raw_fd","has description","Extracts the raw file descriptor."],["as_raw_fd","has stability","This is supported on Unix only."],["Stdout","implements","Send"],["Stdout","implements","Sync"]],"links":["fn.stdout.html","../../src/std/io/stdio.rs.html","../../std/io/struct.StdoutLock.html","../../std/fmt/trait.Debug.html","../../std/io/trait.Write.html","../../std/os/windows/io/trait.AsRawHandle.html","../../std/os/unix/io/trait.AsRawFd.html","../../std/primitive.u8.html","../../std/primitive.slice.html","../../std/primitive.usize.html","../../std/primitive.unit.html","https://github.com/rust-lang/rust/issues/33417"],"create_time":"2025-03-02T04:02:13.179Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/struct.Stdout.html","id":"04839858-a096-40cf-8b3c-7fa0f112480d","model":"deepseek-r1-250120"}