{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has description","has attribute","implies","is reciprocal of","is reflexive"],"relation_pairs":[["convert","is a","Module"],["convert","has full name","std::convert"],["convert","stable since","1.0.0"],["convert","has description","Traits for conversions between types."],["convert","has description","The traits in this module provide a general way to talk about conversions from one type to another."],["convert","has description","They follow the standard Rust conventions of as/into/from."],["convert","has description","Like many traits, these are often used as bounds for generic functions, to support arguments of multiple types."],["convert","has description","Implement the As* traits for reference-to-reference conversions"],["convert","has description","Implement the Into trait when you want to consume the value in the conversion"],["convert","has description","The From trait is the most flexible, useful for value and reference conversions"],["convert","has description","The TryFrom and TryInto traits behave like From and Into, but allow for the conversion to fail"],["convert","has description","As a library author, you should prefer implementing From<T> or TryFrom<T> rather than Into<U> or TryInto<U>..."],["convert","has description","AsRef and AsMut auto-dereference if the inner type is a reference"],["convert","has description","From<U> for T implies Into<T> for U"],["convert","has description","TryFrom<U> for T implies TryInto<T> for U"],["convert","has description","From and Into are reflexive, which means that all types can into themselves and from themselves"],["AsMut","is a","trait"],["AsMut","has description","A cheap, mutable reference-to-mutable reference conversion."],["AsRef","is a","trait"],["AsRef","has description","A cheap reference-to-reference conversion. Used to convert a value to a reference value within generic code."],["From","is a","trait"],["From","has description","Simple and safe type conversions in to Self. It is the reciprocal of Into."],["From","is reciprocal of","Into"],["Into","is a","trait"],["Into","has description","A conversion that consumes self, which may or may not be expensive. The reciprocal of From."],["Into","is reciprocal of","From"],["TryFrom","is a","trait"],["TryFrom","has description","Attempt to construct Self via a conversion."],["TryFrom","has attribute","Experimental"],["TryInto","is a","trait"],["TryInto","has description","An attempted conversion that consumes self, which may or may not be expensive."],["TryInto","has attribute","Experimental"],["From","implies","Into"],["TryFrom","implies","TryInto"],["From","is reflexive","true"],["Into","is reflexive","true"],["identity","is a","function"],["identity","has full name","std::convert::identity"],["identity","has description","An identity function."],["identity","has attribute","Experimental"]],"links":["../../src/core/lib.rs.html","trait.AsMut.html","trait.AsRef.html","trait.From.html","trait.Into.html","trait.TryFrom.html","trait.TryInto.html","fn.identity.html","../index.html","../../index.html","index.html"],"create_time":"2025-03-01T16:11:56.981Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/convert/index.html","id":"9a486a4f-f667-4469-ba1c-02b44c4a7b69","model":"deepseek-r1-250120"}