{"relations":["is a","has full name","stable since","has declaration","has variant","has description","has method","returns","has argument","has type","implements","has attribute","has example","has stability","requires"],"relation_pairs":[["Option","is a","Enum"],["Option","has full name","std::option::Option"],["Option","stable since","1.0.0"],["Option","has declaration","pub enum Option<T> { None, Some(T), }"],["Option","has description","The Option type. See the module level documentation for more."],["None","is a","variant"],["Option","has variant","None"],["None","has description","No value"],["Some","is a","variant"],["Option","has variant","Some"],["Some","has description","Some value T"],["is_some","is a","method"],["Option","has method","is_some"],["is_some","returns","bool"],["is_some","has argument","self"],["is_some","has description","Returns true if the option is a Some value."],["is_none","is a","method"],["Option","has method","is_none"],["is_none","returns","bool"],["is_none","has argument","self"],["is_none","has description","Returns true if the option is a None value."],["as_ref","is a","method"],["Option","has method","as_ref"],["as_ref","returns","Option<&T>"],["as_ref","has argument","self"],["as_ref","has description","Converts from Option<T> to Option<&T>."],["as_mut","is a","method"],["Option","has method","as_mut"],["as_mut","returns","Option<&mut T>"],["as_mut","has argument","self"],["as_mut","has description","Converts from Option<T> to Option<&mut T>."],["expect","is a","method"],["Option","has method","expect"],["expect","has argument","self"],["expect","has argument","msg"],["expect","returns","T"],["expect","has description","Unwraps an option, yielding the content of a Some. Panics if the value is a None with a custom message."],["unwrap","is a","method"],["Option","has method","unwrap"],["unwrap","returns","T"],["unwrap","has argument","self"],["unwrap","has description","Moves the value out of the Option<T> if it is Some(v). Panics if self is None."],["unwrap_or","is a","method"],["Option","has method","unwrap_or"],["unwrap_or","has argument","self"],["unwrap_or","has argument","def"],["unwrap_or","returns","T"],["unwrap_or","has description","Returns the contained value or a default."],["map","is a","method"],["Option","has method","map"],["map","has argument","self"],["map","has argument","f"],["map","returns","Option<U>"],["map","has description","Maps an Option<T> to Option<U> by applying a function to a contained value."],["ok_or","is a","method"],["Option","has method","ok_or"],["ok_or","returns","Result<T, E>"],["ok_or","has argument","self"],["ok_or","has argument","err"],["ok_or","has description","Transforms Option<T> into Result<T, E>, mapping Some(v) to Ok(v) and None to Err(err)."],["iter","is a","method"],["Option","has method","iter"],["iter","returns","Iter<T>"],["iter","has argument","self"],["iter","has description","Returns an iterator over the possibly contained value."],["and_then","is a","method"],["Option","has method","and_then"],["and_then","has argument","self"],["and_then","has argument","f"],["and_then","returns","Option<U>"],["and_then","has description","Returns None if the option is None, otherwise calls f with the wrapped value."],["or_else","is a","method"],["Option","has method","or_else"],["or_else","has argument","self"],["or_else","has argument","f"],["or_else","returns","Option<T>"],["or_else","has description","Returns the option if it contains a value, otherwise calls f."],["CommandExt","implements","Command"],["as_pin_mut","has attribute","unstable"],["xor","has attribute","unstable"],["replace","has attribute","unstable"],["Option<T>","implements","IntoIterator"],["Option<T>","implements","Hash"],["Option<T>","implements","Clone"],["Option<T>","implements","PartialOrd"],["Option<T>","implements","Ord"],["Option<T>","implements","Debug"],["Option<T>","implements","PartialEq"],["Option<T>","implements","Default"]],"links":["../../src/core/option.rs.html","../index.html","index.html","../../std/string/struct.String.html","../../std/primitive.usize.html","../../std/result/enum.Result.html","../../std/pin/struct.PinMut.html","../../std/ops/trait.FnOnce.html","../../std/process/struct.Command.html","../../std/option/struct.Iter.html","../../std/option/struct.IterMut.html","../../std/option/struct.NoneError.html","../../std/convert/trait.TryFrom.html","../../std/iter/trait.IntoIterator.html","../../std/hash/trait.Hash.html","../../std/clone/trait.Clone.html","../../std/cmp/trait.PartialOrd.html","../../std/cmp/trait.Ord.html","../../std/fmt/trait.Debug.html","../../std/cmp/trait.PartialEq.html","../../std/default/trait.Default.html"],"create_time":"2025-03-01T15:38:56.549Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/option/enum.Option.html","id":"8779480c-c62f-486f-bebb-cc52a34511cb","model":"deepseek-r1-250120"}