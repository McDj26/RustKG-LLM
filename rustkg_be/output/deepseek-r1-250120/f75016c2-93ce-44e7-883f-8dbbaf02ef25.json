{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","requires method","has description","has argument","has return type","implements","has constraint","see also"],"relation pairs":[["FromIterator","is a","Trait"],["FromIterator","has full name","std::iter::FromIterator"],["FromIterator","stable since","1.0.0"],["FromIterator","has declaration","pub trait FromIterator<A> { fn from_iter<T>(iter: T) -> Self where T: IntoIterator<Item = A>; }"],["FromIterator","has description","Conversion from an Iterator. By implementing FromIterator for a type, you define how it will be created from an iterator. This is common for types which describe a collection of some kind."],["FromIterator","requires method","from_iter"],["from_iter","is a","function"],["from_iter","has full name","std::iter::FromIterator::from_iter"],["from_iter","has argument","iter: T"],["from_iter","has return type","Self"],["from_iter","has constraint","T: IntoIterator<Item = A>"],["from_iter","has description","Creates a value from an iterator. See the module-level documentation for more."],["String","implements","FromIterator<char>"],["()","implements","FromIterator<()>"],["String","implements","FromIterator<String>"],["String","implements","FromIterator<&'a str>"],["Cow<'a, str>","implements","FromIterator<char>"],["Cow<'a, str>","implements","FromIterator<String>"],["Cow<'a, str>","implements","FromIterator<&'b str>"],["VecDeque<A>","implements","FromIterator<A>"],["BTreeMap<K, V>","implements","FromIterator<(K, V)>"],["HashMap<K, V, S>","implements","FromIterator<(K, V)>"],["PathBuf","implements","FromIterator<P>"],["BinaryHeap<T>","implements","FromIterator<T>"],["BTreeSet<T>","implements","FromIterator<T>"],["LinkedList<T>","implements","FromIterator<T>"],["Vec<T>","implements","FromIterator<T>"],["HashSet<T, S>","implements","FromIterator<T>"],["FromIterator","see also","IntoIterator"]],"links":["../../src/core/iter/traits.rs.html","../index.html","index.html","../../std/string/struct.String.html","../../std/borrow/enum.Cow.html","../../src/alloc/string.rs.html","../../src/core/unit.rs.html","../../src/alloc/collections/vec_deque.rs.html","../../src/core/result.rs.html","../../src/core/option.rs.html","../../src/alloc/collections/btree/map.rs.html","../../src/std/collections/hash/map.rs.html","../../src/std/path.rs.html","../../src/alloc/collections/binary_heap.rs.html","../../src/alloc/collections/btree/set.rs.html","../../src/alloc/collections/linked_list.rs.html","../../src/alloc/vec.rs.html","../../src/std/collections/hash/set.rs.html"],"create_time":"2025-03-01T16:10:09.410Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/iter/trait.FromIterator.html","id":"f75016c2-93ce-44e7-883f-8dbbaf02ef25","model":"deepseek-r1-250120"}