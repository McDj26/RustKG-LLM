{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","requires method","has description","has argument","has return type","implements","has associated type","has attribute","has stability","has type"],"relation_pairs":[["SliceIndex","is a","Trait"],["SliceIndex","has full name","alloc::slice::SliceIndex"],["SliceIndex","stable since","1.28.0"],["SliceIndex","has declaration","pub trait SliceIndex<T>: Sealed where T: ?Sized { type Output: ?Sized; fn get(self, slice: &T) -> Option<&Self::Output>; fn get_mut(self, slice: &mut T) -> Option<&mut Self::Output>; unsafe fn get_unchecked(self, slice: &T) -> &Self::Output; unsafe fn get_unchecked_mut(self, slice: &mut T) -> &mut Self::Output; fn index(self, slice: &T) -> &Self::Output; fn index_mut(self, slice: &mut T) -> &mut Self::Output; }"],["SliceIndex","has description","A helper trait used for indexing operations."],["SliceIndex","has associated type","Output"],["SliceIndex::Output","has description","The output type returned by methods."],["SliceIndex","requires method","get"],["get","has argument","self"],["get","has argument","slice: &T"],["get","has return type","Option<&Self::Output>"],["get","has stability","This is a nightly-only experimental API. (slice_index_methods)"],["SliceIndex","requires method","get_mut"],["get_mut","has argument","self"],["get_mut","has argument","slice: &mut T"],["get_mut","has return type","Option<&mut Self::Output>"],["get_mut","has stability","This is a nightly-only experimental API. (slice_index_methods)"],["SliceIndex","requires method","get_unchecked"],["get_unchecked","has attribute","unsafe"],["get_unchecked","has argument","self"],["get_unchecked","has argument","slice: &T"],["get_unchecked","has return type","&Self::Output"],["get_unchecked","has stability","This is a nightly-only experimental API. (slice_index_methods)"],["SliceIndex","requires method","get_unchecked_mut"],["get_unchecked_mut","has attribute","unsafe"],["get_unchecked_mut","has argument","self"],["get_unchecked_mut","has argument","slice: &mut T"],["get_unchecked_mut","has return type","&mut Self::Output"],["get_unchecked_mut","has stability","This is a nightly-only experimental API. (slice_index_methods)"],["SliceIndex","requires method","index"],["index","has argument","self"],["index","has argument","slice: &T"],["index","has return type","&Self::Output"],["index","has stability","This is a nightly-only experimental API. (slice_index_methods)"],["SliceIndex","requires method","index_mut"],["index_mut","has argument","self"],["index_mut","has argument","slice: &mut T"],["index_mut","has return type","&mut Self::Output"],["index_mut","has stability","This is a nightly-only experimental API. (slice_index_methods)"],["Range<usize>","implements","SliceIndex"],["RangeInclusive<usize>","implements","SliceIndex"],["RangeTo<usize>","implements","SliceIndex"],["RangeFull","implements","SliceIndex"],["RangeToInclusive<usize>","implements","SliceIndex"],["usize","implements","SliceIndex"]],"links":["../../src/core/slice/mod.rs.html","../../core/option/enum.Option.html","../../core/marker/trait.Sized.html","../../core/ops/range/struct.Range.html","../../core/ops/range/struct.RangeInclusive.html","../../core/ops/range/struct.RangeTo.html","../../core/ops/range/struct.RangeFull.html","../../core/ops/range/struct.RangeToInclusive.html","../../core/ops/range/struct.RangeFrom.html","../../core/str/mod.rs.html"],"create_time":"2025-03-01T17:47:52.831Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/slice/trait.SliceIndex.html","id":"0ee3ebde-56a5-4f50-a3ca-4680a7fb0ee3","model":"deepseek-r1-250120"}