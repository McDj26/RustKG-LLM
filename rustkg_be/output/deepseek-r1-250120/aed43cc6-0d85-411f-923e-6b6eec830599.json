{"relations":["is a","has full name","stable since","has declaration","has description","has argument","has type","calls","related to","can release"],"relation_pairs":[["drop","is a","Function"],["drop","has full name","std::mem::drop"],["drop","stable since","1.0.0"],["drop","has declaration","pub fn drop<T>(_x: T)"],["drop","has description","Disposes of a value. While this does call the argument's implementation of Drop, it will not release any borrows, as borrows are based on lexical scope. This effectively does nothing for types which implement Copy, e.g. integers. Such values are copied and then moved into the function, so the value persists after this function call. Because _x is moved into the function, it is automatically dropped before the function returns. Examples: Basic usage, Borrows based on lexical scope, RefCell example."],["drop","has argument","_x"],["_x","has type","T"],["drop","calls","Drop"],["drop","related to","Copy"],["drop","can release","RefCell borrow"]],"links":["../ops/trait.Drop.html","../../std/cell/struct.RefCell.html","../../std/marker/trait.Copy.html","../../src/core/mem.rs.html","../index.html","index.html"],"create_time":"2025-03-01T16:06:32.022Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/mem/fn.drop.html","id":"aed43cc6-0d85-411f-923e-6b6eec830599","model":"deepseek-r1-250120"}