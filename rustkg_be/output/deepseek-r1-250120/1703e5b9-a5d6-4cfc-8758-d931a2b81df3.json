{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has attribute","extends","implements","has stability","has safety note","has description"],"relation pairs":[["TrustedLen","is a","Trait"],["TrustedLen","has full name","std::iter::TrustedLen"],["TrustedLen","has attribute","unsafe"],["TrustedLen","extends","Iterator"],["TrustedLen","has stability","This is a nightly-only experimental API. (#37572)"],["TrustedLen","has description","An iterator that reports an accurate length using size_hint."],["TrustedLen","has safety note","This trait must only be implemented when the contract is upheld. Consumers of this trait must inspect .size_hintâ€™s upper bound."],["std::ops::Range<i16>","implements","TrustedLen"],["std::ops::Range<i16>","is a","struct"],["std::ops::Range<i16>","has full name","std::ops::Range<i16>"],["std::ops::Range<i32>","implements","TrustedLen"],["std::ops::Range<i32>","is a","struct"],["std::ops::Range<i32>","has full name","std::ops::Range<i32>"],["std::ops::Range<i64>","implements","TrustedLen"],["std::ops::Range<i64>","is a","struct"],["std::ops::Range<i64>","has full name","std::ops::Range<i64>"],["std::ops::Range<i8>","implements","TrustedLen"],["std::ops::Range<i8>","is a","struct"],["std::ops::Range<i8>","has full name","std::ops::Range<i8>"],["std::ops::Range<isize>","implements","TrustedLen"],["std::ops::Range<isize>","is a","struct"],["std::ops::Range<isize>","has full name","std::ops::Range<isize>"],["std::ops::Range<u16>","implements","TrustedLen"],["std::ops::Range<u16>","is a","struct"],["std::ops::Range<u16>","has full name","std::ops::Range<u16>"],["std::ops::Range<u32>","implements","TrustedLen"],["std::ops::Range<u32>","is a","struct"],["std::ops::Range<u32>","has full name","std::ops::Range<u32>"],["std::ops::Range<u64>","implements","TrustedLen"],["std::ops::Range<u64>","is a","struct"],["std::ops::Range<u64>","has full name","std::ops::Range<u64>"],["std::ops::Range<u8>","implements","TrustedLen"],["std::ops::Range<u8>","is a","struct"],["std::ops::Range<u8>","has full name","std::ops::Range<u8>"],["std::ops::Range<usize>","implements","TrustedLen"],["std::ops::Range<usize>","is a","struct"],["std::ops::Range<usize>","has full name","std::ops::Range<usize>"],["std::ops::RangeInclusive<i16>","implements","TrustedLen"],["std::ops::RangeInclusive<i16>","is a","struct"],["std::ops::RangeInclusive<i16>","has full name","std::ops::RangeInclusive<i16>"],["std::ops::RangeInclusive<i32>","implements","TrustedLen"],["std::ops::RangeInclusive<i32>","is a","struct"],["std::ops::RangeInclusive<i32>","has full name","std::ops::RangeInclusive<i32>"],["std::ops::RangeInclusive<i64>","implements","TrustedLen"],["std::ops::RangeInclusive<i64>","is a","struct"],["std::ops::RangeInclusive<i64>","has full name","std::ops::RangeInclusive<i64>"],["std::ops::RangeInclusive<i8>","implements","TrustedLen"],["std::ops::RangeInclusive<i8>","is a","struct"],["std::ops::RangeInclusive<i8>","has full name","std::ops::RangeInclusive<i8>"],["std::ops::RangeInclusive<isize>","implements","TrustedLen"],["std::ops::RangeInclusive<isize>","is a","struct"],["std::ops::RangeInclusive<isize>","has full name","std::ops::RangeInclusive<isize>"],["std::ops::RangeInclusive<u16>","implements","TrustedLen"],["std::ops::RangeInclusive<u16>","is a","struct"],["std::ops::RangeInclusive<u16>","has full name","std::ops::RangeInclusive<u16>"],["std::ops::RangeInclusive<u32>","implements","TrustedLen"],["std::ops::RangeInclusive<u32>","is a","struct"],["std::ops::RangeInclusive<u32>","has full name","std::ops::RangeInclusive<u32>"],["std::ops::RangeInclusive<u64>","implements","TrustedLen"],["std::ops::RangeInclusive<u64>","is a","struct"],["std::ops::RangeInclusive<u64>","has full name","std::ops::RangeInclusive<u64>"],["std::ops::RangeInclusive<u8>","implements","TrustedLen"],["std::ops::RangeInclusive<u8>","is a","struct"],["std::ops::RangeInclusive<u8>","has full name","std::ops::RangeInclusive<u8>"],["std::ops::RangeInclusive<usize>","implements","TrustedLen"],["std::ops::RangeInclusive<usize>","is a","struct"],["std::ops::RangeInclusive<usize>","has full name","std::ops::RangeInclusive<usize>"],["std::str::Bytes<'a>","implements","TrustedLen"],["std::str::Bytes<'a>","is a","struct"],["std::str::Bytes<'a>","has full name","std::str::Bytes<'a>"],["std::option::Iter<'a, A>","implements","TrustedLen"],["std::option::Iter<'a, A>","is a","struct"],["std::option::Iter<'a, A>","has full name","std::option::Iter<'a, A>"],["std::option::IterMut<'a, A>","implements","TrustedLen"],["std::option::IterMut<'a, A>","is a","struct"],["std::option::IterMut<'a, A>","has full name","std::option::IterMut<'a, A>"],["std::result::Iter<'a, A>","implements","TrustedLen"],["std::result::Iter<'a, A>","is a","struct"],["std::result::Iter<'a, A>","has full name","std::result::Iter<'a, A>"],["std::result::IterMut<'a, A>","implements","TrustedLen"],["std::result::IterMut<'a, A>","is a","struct"],["std::result::IterMut<'a, A>","has full name","std::result::IterMut<'a, A>"],["&'a mut I","implements","TrustedLen"],["&'a mut I","is a","reference"],["std::iter::Cloned<I>","implements","TrustedLen"],["std::iter::Cloned<I>","is a","struct"],["std::iter::Cloned<I>","has full name","std::iter::Cloned<I>"],["std::slice::Chunks<'a, T>","implements","TrustedLen"],["std::slice::Chunks<'a, T>","is a","struct"],["std::slice::Chunks<'a, T>","has full name","std::slice::Chunks<'a, T>"],["std::slice::ChunksMut<'a, T>","implements","TrustedLen"],["std::slice::ChunksMut<'a, T>","is a","struct"],["std::slice::ChunksMut<'a, T>","has full name","std::slice::ChunksMut<'a, T>"],["std::slice::ExactChunks<'a, T>","implements","TrustedLen"],["std::slice::ExactChunks<'a, T>","is a","struct"],["std::slice::ExactChunks<'a, T>","has full name","std::slice::ExactChunks<'a, T>"],["std::slice::ExactChunksMut<'a, T>","implements","TrustedLen"],["std::slice::ExactChunksMut<'a, T>","is a","struct"],["std::slice::ExactChunksMut<'a, T>","has full name","std::slice::ExactChunksMut<'a, T>"],["std::slice::Iter<'a, T>","implements","TrustedLen"],["std::slice::Iter<'a, T>","is a","struct"],["std::slice::Iter<'a, T>","has full name","std::slice::Iter<'a, T>"],["std::slice::IterMut<'a, T>","implements","TrustedLen"],["std::slice::IterMut<'a, T>","is a","struct"],["std::slice::IterMut<'a, T>","has full name","std::slice::IterMut<'a, T>"],["std::slice::Windows<'a, T>","implements","TrustedLen"],["std::slice::Windows<'a, T>","is a","struct"],["std::slice::Windows<'a, T>","has full name","std::slice::Windows<'a, T>"],["std::iter::Repeat<A>","implements","TrustedLen"],["std::iter::Repeat<A>","is a","struct"],["std::iter::Repeat<A>","has full name","std::iter::Repeat<A>"],["std::iter::Chain<A, B>","implements","TrustedLen"],["std::iter::Chain<A, B>","is a","struct"],["std::iter::Chain<A, B>","has full name","std::iter::Chain<A, B>"],["std::iter::Zip<A, B>","implements","TrustedLen"],["std::iter::Zip<A, B>","is a","struct"],["std::iter::Zip<A, B>","has full name","std::iter::Zip<A, B>"],["std::iter::RepeatWith<F>","implements","TrustedLen"],["std::iter::RepeatWith<F>","is a","struct"],["std::iter::RepeatWith<F>","has full name","std::iter::RepeatWith<F>"],["std::iter::Map<I, F>","implements","TrustedLen"],["std::iter::Map<I, F>","is a","struct"],["std::iter::Map<I, F>","has full name","std::iter::Map<I, F>"],["std::iter::Enumerate<I>","implements","TrustedLen"],["std::iter::Enumerate<I>","is a","struct"],["std::iter::Enumerate<I>","has full name","std::iter::Enumerate<I>"],["std::iter::Rev<I>","implements","TrustedLen"],["std::iter::Rev<I>","is a","struct"],["std::iter::Rev<I>","has full name","std::iter::Rev<I>"],["std::iter::Take<I>","implements","TrustedLen"],["std::iter::Take<I>","is a","struct"],["std::iter::Take<I>","has full name","std::iter::Take<I>"],["std::iter::Empty<T>","implements","TrustedLen"],["std::iter::Empty<T>","is a","struct"],["std::iter::Empty<T>","has full name","std::iter::Empty<T>"],["std::iter::Once<T>","implements","TrustedLen"],["std::iter::Once<T>","is a","struct"],["std::iter::Once<T>","has full name","std::iter::Once<T>"],["std::vec::IntoIter<T>","implements","TrustedLen"],["std::vec::IntoIter<T>","is a","struct"],["std::vec::IntoIter<T>","has full name","std::vec::IntoIter<T>"]],"links":["../../src/core/iter/traits.rs.html","../../src/core/iter/range.rs.html","../../std/ops/struct.Range.html","../../std/option/enum.Option.html","../../std/iter/trait.Iterator.html","../../std/str/struct.Bytes.html","../../std/option/struct.Iter.html","../../std/option/struct.IterMut.html","../../std/result/struct.Iter.html","../../std/result/struct.IterMut.html","../../std/iter/struct.Cloned.html","../../std/slice/struct.Chunks.html","../../std/slice/struct.ChunksMut.html","../../std/slice/struct.ExactChunks.html","../../std/slice/struct.ExactChunksMut.html","../../std/slice/struct.Iter.html","../../std/slice/struct.IterMut.html","../../std/slice/struct.Windows.html","../../std/iter/struct.Repeat.html","../../std/iter/struct.Chain.html","../../std/iter/struct.Zip.html","../../std/iter/struct.RepeatWith.html","../../std/iter/struct.Map.html","../../std/iter/struct.Enumerate.html","../../std/iter/struct.Rev.html","../../std/iter/struct.Take.html","../../std/iter/struct.Empty.html","../../std/iter/struct.Once.html","../../std/vec/struct.IntoIter.html","../primitive.i16.html","../primitive.i32.html","../primitive.i64.html","../primitive.i8.html","../primitive.isize.html","../primitive.u16.html","../primitive.u32.html","../primitive.u64.html","../primitive.u8.html","../primitive.usize.html"],"create_time":"2025-03-01T17:09:27.489Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/iter/trait.TrustedLen.html","id":"1703e5b9-a5d6-4cfc-8758-d931a2b81df3","model":"deepseek-r1-250120"}