{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has description","requires method","provides method","has argument","has type","has return type","implements","is similar to"],"relation pairs":[["Write","is a","Trait"],["Write","has full name","std::fmt::Write"],["Write","stable since","1.0.0"],["Write","has declaration","pub trait Write { fn write_str(&mut self, s: &str) -> Result<(), Error>; fn write_char(&mut self, c: char) -> Result<(), Error> { ... } fn write_fmt(&mut self, args: Arguments) -> Result<(), Error> { ... } }"],["Write","has description","A collection of methods that are required to format a message into a stream."],["Write","is similar to","io::Write"],["Write","requires method","write_str"],["write_str","is a","function"],["write_str","has argument","write_str::self"],["write_str","has argument","write_str::s"],["write_str::s","has type","&str"],["write_str","has return type","Result<(), Error>"],["write_str","has description","Writes a slice of bytes into this writer, returning whether the write succeeded. This method can only succeed if the entire byte slice was successfully written."],["Write","provides method","write_char"],["write_char","stable since","1.1.0"],["write_char","has argument","write_char::self"],["write_char","has argument","write_char::c"],["write_char::c","has type","char"],["write_char","has return type","Result<(), Error>"],["write_char","has description","Writes a char into this writer, returning whether the write succeeded."],["Write","provides method","write_fmt"],["write_fmt","has argument","write_fmt::self"],["write_fmt","has argument","write_fmt::args"],["write_fmt::args","has type","Arguments"],["write_fmt","has return type","Result<(), Error>"],["write_fmt","has description","Glue for usage of the write! macro with implementors of this trait."],["String","implements","Write"],["String","has full name","std::string::String"],["Formatter","implements","Write"],["Formatter","has full name","std::fmt::Formatter"],["&mut W","implements","Write"],["Error","is a","struct"],["Error","has full name","std::fmt::Error"],["Arguments","is a","struct"],["Arguments","has full name","std::fmt::Arguments"],["Result","is a","enum"],["Result","has full name","std::result::Result"],["io::Write","is a","trait"],["io::Write","has full name","std::io::Write"]],"links":["../../src/core/fmt/mod.rs.html","../index.html","index.html","../../std/io/trait.Write.html","../../std/macro.write.html","../../std/result/enum.Result.html","../../std/fmt/struct.Error.html","../../std/fmt/struct.Arguments.html","../../src/alloc/string.rs.html"],"create_time":"2025-03-01T16:32:27.719Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/fmt/trait.Write.html","id":"4fab4d75-3031-45fb-9ca2-ecade6594d37","model":"deepseek-r1-250120"}