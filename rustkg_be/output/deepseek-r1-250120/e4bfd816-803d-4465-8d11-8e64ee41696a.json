{"relations":["is a","has full name","stable since","is successor of","is predecessor of","implements","has description","has declaration","has method","has return type","has argument","created by","has stability"],"relation_pairs":[["Enumerate","is a","Struct"],["Enumerate","has full name","core::iter::Enumerate"],["Enumerate","stable since","1.0.0"],["Enumerate","has declaration","pub struct Enumerate<I> { /* fields omitted */ }"],["Enumerate","has description","An iterator that yields the current count and the element during iteration."],["Enumerate","implements","Clone"],["Enumerate","implements","Debug"],["Enumerate","implements","Iterator"],["Enumerate","implements","DoubleEndedIterator"],["Enumerate","implements","ExactSizeIterator"],["Enumerate","implements","FusedIterator"],["Enumerate","implements","TrustedLen"],["Enumerate","implements","Send"],["Enumerate","implements","Sync"],["Enumerate","implements","Into"],["Enumerate","implements","From"],["Enumerate","implements","TryInto"],["Enumerate","implements","TryFrom"],["Enumerate","implements","Borrow"],["Enumerate","implements","BorrowMut"],["Enumerate","implements","Any"],["Enumerate","created by","Iterator::enumerate"],["Iterator","has method","enumerate"],["enumerate","has return type","Enumerate<Self>"],["clone","is a","method"],["clone","has full name","core::iter::Enumerate::clone"],["clone","has declaration","fn clone(&self) -> Enumerate<I>"],["clone","has description","Returns a copy of the value."],["fmt","is a","method"],["fmt","has full name","core::iter::Enumerate::fmt"],["fmt","has declaration","fn fmt(&self, f: &mut Formatter) -> Result"],["fmt","has description","Formats the value using the given formatter."],["next","is a","method"],["next","has full name","core::iter::Enumerate::next"],["next","has declaration","fn next(&mut self) -> Option<(usize, I::Item)>"],["next","has description","Advances the iterator and returns the next value. May panic if index overflows usize."]],"links":["struct.Chain.html","struct.Cloned.html","struct.Cycle.html","struct.Empty.html","struct.Enumerate.html","struct.Filter.html","struct.FilterMap.html","struct.FlatMap.html","struct.Flatten.html","struct.Fuse.html","struct.Inspect.html","struct.Map.html","struct.Once.html","struct.Peekable.html","struct.Repeat.html","struct.RepeatWith.html","struct.Rev.html","struct.Scan.html","struct.Skip.html","struct.SkipWhile.html","struct.StepBy.html","struct.Take.html","struct.TakeWhile.html","struct.Zip.html","trait.DoubleEndedIterator.html","trait.ExactSizeIterator.html","trait.Extend.html","trait.FromIterator.html","trait.FusedIterator.html","trait.IntoIterator.html","trait.Iterator.html","trait.Product.html","trait.Step.html","trait.Sum.html","trait.TrustedLen.html","fn.empty.html","fn.once.html","fn.repeat.html","fn.repeat_with.html","../../../primitive.u32.html","src/core/iter/mod.rs.html","src/core/clone.rs.html","src/core/iter/iterator.rs.html","src/core/any.rs.html","src/core/convert.rs.html","src/core/borrow.rs.html"],"create_time":"2025-03-02T06:25:35.173Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/iter/struct.Enumerate.html","id":"e4bfd816-803d-4465-8d11-8e64ee41696a","model":"deepseek-r1-250120"}