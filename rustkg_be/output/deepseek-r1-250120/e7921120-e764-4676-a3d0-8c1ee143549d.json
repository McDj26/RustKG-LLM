{"relations":["is a","has full name","stable since","has declaration","has description","implements","references","related to","has example","see also","requires","has implementation"],"relation_pairs":[["UnwindSafe","is a","Trait"],["UnwindSafe","has full name","std::panic::UnwindSafe"],["UnwindSafe","stable since","1.9.0"],["UnwindSafe","has declaration","pub auto trait UnwindSafe { }"],["UnwindSafe","has description","A marker trait which represents \"panic safe\" types in Rust."],["UnwindSafe","has description","This trait is implemented by default for many types and behaves similarly in terms of inference of implementation to the Send and Sync traits."],["UnwindSafe","references","catch_unwind"],["UnwindSafe","see also","https://github.com/rust-lang/rfcs/blob/master/text/1236-stabilize-catch-panic.md"],["AssertUnwindSafe","is a","struct"],["AssertUnwindSafe","has full name","std::panic::AssertUnwindSafe"],["Unique<T>","implements","UnwindSafe"],["&T","implements","UnwindSafe"],["&mut T","!implements","UnwindSafe"],["*const T","implements","UnwindSafe"],["*mut T","implements","UnwindSafe"],["NonNull<T>","implements","UnwindSafe"],["Rc<T>","implements","UnwindSafe"],["Arc<T>","implements","UnwindSafe"],["Mutex<T>","implements","UnwindSafe"],["RwLock<T>","implements","UnwindSafe"],["CommandExt","requires method","creation_flags"],["catch_unwind","is a","function"],["catch_unwind","has full name","std::panic::catch_unwind"]],"links":["../../std/index.html","struct.AssertUnwindSafe.html","trait.RefUnwindSafe.html","fn.catch_unwind.html","fn.resume_unwind.html","fn.set_hook.html","fn.take_hook.html","../../src/std/panic.rs.html","../marker/trait.Send.html","../marker/trait.Sync.html"],"create_time":"2025-03-02T04:55:39.436Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/panic/trait.UnwindSafe.html","id":"e7921120-e764-4676-a3d0-8c1ee143549d","model":"deepseek-r1-250120"}