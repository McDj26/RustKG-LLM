{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has description","has method","has return type","has argument","implements","has stability"],"relation_pairs":[["FromUtf8Error","is a","Struct"],["FromUtf8Error","has full name","std::string::FromUtf8Error"],["FromUtf8Error","stable since","1.0.0"],["FromUtf8Error","has declaration","pub struct FromUtf8Error { /* fields omitted */ }"],["FromUtf8Error","has description","A possible error value when converting a String from a UTF-8 byte vector."],["FromUtf8Error","has description","This type is the error type for the from_utf8 method on String. It is designed in such a way to carefully avoid reallocations: the into_bytes method will give back the byte vector that was used in the conversion attempt."],["FromUtf8Error","has description","The Utf8Error type provided by std::str represents an error that may occur when converting a slice of u8s to a &str. In this sense, it's an analogue to FromUtf8Error, and you can get one from a FromUtf8Error through the utf8_error method."],["FromUtf8Error","implements","Display"],["FromUtf8Error","implements","Debug"],["FromUtf8Error","implements","Error"],["FromUtf8Error","has method","as_bytes"],["FromUtf8Error","has method","into_bytes"],["FromUtf8Error","has method","utf8_error"],["as_bytes","is a","function"],["as_bytes","has full name","std::string::FromUtf8Error::as_bytes"],["as_bytes","stable since","1.26.0"],["as_bytes","has return type","&[u8]"],["as_bytes","has argument","self"],["as_bytes","has description","Returns a slice of u8s bytes that were attempted to convert to a String."],["into_bytes","is a","function"],["into_bytes","has full name","std::string::FromUtf8Error::into_bytes"],["into_bytes","has return type","Vec<u8>"],["into_bytes","has argument","self"],["into_bytes","has description","Returns the bytes that were attempted to convert to a String. This method is carefully constructed to avoid allocation. It will consume the error, moving out the bytes, so that a copy of the bytes does not need to be made."],["utf8_error","is a","function"],["utf8_error","has full name","std::string::FromUtf8Error::utf8_error"],["utf8_error","has return type","Utf8Error"],["utf8_error","has argument","self"],["utf8_error","has description","Fetch a Utf8Error to get more details about the conversion failure. The Utf8Error type provided by std::str represents an error that may occur when converting a slice of u8s to a &str. In this sense, it's an analogue to FromUtf8Error. See its documentation for more details on using it."]],"links":["../index.html","index.html","struct.String.html","../../std/str/struct.Utf8Error.html","../../std/primitive.u8.html","../../std/primitive.str.html","../../std/vec/struct.Vec.html","../../std/str/index.html","../../src/alloc/string.rs.html","../../src/std/error.rs.html","struct.FromUtf8Error.html","trait.Display.html","trait.Debug.html","trait.Error.html","../../std/fmt/trait.Display.html","../../std/fmt/struct.Formatter.html","../../std/fmt/struct.Error.html","../../std/error/trait.Error.html","../../std/marker/trait.Send.html","../../std/marker/trait.Sync.html","../../std/convert/trait.TryFrom.html","../../std/convert/trait.From.html","../../std/convert/trait.TryInto.html","../../std/convert/trait.Into.html","../../std/borrow/trait.Borrow.html","../../std/borrow/trait.BorrowMut.html","../../std/any/trait.Any.html","../../std/any/struct.TypeId.html","../../std/string/trait.ToString.html"],"create_time":"2025-03-01T17:00:35.810Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/string/struct.FromUtf8Error.html","id":"00b7b1e6-799f-4094-a07f-7b7687a59368","model":"deepseek-r1-250120"}