{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","has description","has argument","has type","has return type","implements","is similar to","has lifetime"],"relation pairs":[["local_waker_from_nonlocal","is a","function"],["local_waker_from_nonlocal","has full name","alloc::task::local_waker_from_nonlocal"],["local_waker_from_nonlocal","has declaration","pub fn local_waker_from_nonlocal<W: Wake + 'static>(wake: Arc<W>) -> LocalWaker"],["local_waker_from_nonlocal","has stability","nightly-only experimental API (futures_api #50547)"],["local_waker_from_nonlocal","has description","Creates a LocalWaker from a non-local wake."],["local_waker_from_nonlocal","has description","This function is similar to local_waker, but does not require that wake is local to the current thread. The resulting LocalWaker will call wake.wake() when awoken."],["local_waker_from_nonlocal","has argument","wake"],["local_waker_from_nonlocal::wake","has type","Arc<W>"],["local_waker_from_nonlocal","has return type","LocalWaker"],["local_waker_from_nonlocal::W","implements","Wake"],["local_waker_from_nonlocal::W","has lifetime","'static"],["local_waker_from_nonlocal","is similar to","local_waker"],["Context","is a","struct"],["Context","has full name","alloc::task::Context"],["Context","has description","Information about the currently-running task."],["LocalWaker","is a","struct"],["LocalWaker","has full name","alloc::task::LocalWaker"],["LocalWaker","has description","A `LocalWaker` is a handle for waking up a task by notifying its executor that it is ready to be run."],["SpawnErrorKind","is a","struct"],["SpawnErrorKind","has full name","alloc::task::SpawnErrorKind"],["SpawnErrorKind","has description","Provides the reason that an executor was unable to spawn."],["SpawnLocalObjError","is a","struct"],["SpawnLocalObjError","has full name","alloc::task::SpawnLocalObjError"],["SpawnLocalObjError","has description","The result of a failed spawn"],["SpawnObjError","is a","struct"],["SpawnObjError","has full name","alloc::task::SpawnObjError"],["SpawnObjError","has description","The result of a failed spawn"],["Waker","is a","struct"],["Waker","has full name","alloc::task::Waker"],["Waker","has description","A `Waker` is a handle for waking up a task by notifying its executor that it is ready to be run."],["Poll","is a","enum"],["Poll","has full name","alloc::task::Poll"],["Poll","has description","Indicates whether a value is available or if the current task has been scheduled to receive a wakeup instead."],["Spawn","is a","trait"],["Spawn","has full name","alloc::task::Spawn"],["Spawn","has description","Spawns tasks that poll futures to completion onto its associated task executor."],["UnsafeWake","is a","trait"],["UnsafeWake","has full name","alloc::task::UnsafeWake"],["UnsafeWake","has description","An unsafe trait for implementing custom memory management for a `Waker` or `LocalWaker`."],["Wake","is a","trait"],["Wake","has full name","alloc::task::Wake"],["Wake","has description","A way of waking up a specific task."],["local_waker","is a","function"],["local_waker","has full name","alloc::task::local_waker"],["local_waker","has description","Creates a `LocalWaker` from a local `wake`."]],"links":["struct.Context.html","struct.LocalWaker.html","struct.SpawnErrorKind.html","struct.SpawnLocalObjError.html","struct.SpawnObjError.html","struct.Waker.html","enum.Poll.html","trait.Spawn.html","trait.UnsafeWake.html","trait.Wake.html","fn.local_waker.html","fn.local_waker_from_nonlocal.html","../../src/alloc/task.rs.html","../../alloc/index.html","../../settings.html"],"create_time":"2025-03-02T04:40:49.795Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/task/fn.local_waker_from_nonlocal.html","id":"c796002e-37d5-40a5-9e21-d69dd3922bb9","model":"deepseek-r1-250120"}