{"relations":["is a","has full name","stable since","has declaration","has associated type","requires method","has argument","has return type","has stability","implements","has description","is subtrait of"],"relation_pairs":[["FnOnce","is a","Trait"],["FnOnce","has full name","core::ops::FnOnce"],["FnOnce","stable since","1.0.0"],["FnOnce","has declaration","pub trait FnOnce<Args> { type Output; extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output; }"],["FnOnce","has associated type","Output"],["Output","stable since","1.12.0"],["FnOnce","requires method","call_once"],["call_once","is a","function"],["call_once","has argument","self"],["call_once","has argument","args"],["call_once","has return type","Self::Output"],["call_once","has stability","This is a nightly-only experimental API. (fn_traits #29625)"],["&F","implements","FnOnce<A>"],["&mut F","implements","FnOnce<A>"],["FnOnce","has description","The version of the call operator that takes a by-value receiver. Instances of FnOnce can be called, but might not be callable multiple times. Because of this, if the only thing known about a type is that it implements FnOnce, it can only be called once. FnOnce is implemented automatically by closure that might consume captured variables, as well as all types that implement FnMut, e.g. (safe) function pointers (since FnOnce is a supertrait of FnMut). Since both Fn and FnMut are subtraits of FnOnce, any instance of Fn or FnMut can be used where a FnOnce is expected. Use FnOnce as a bound when you want to accept a parameter of function-like type and only need to call it once. If you need to call the parameter repeatedly, use FnMut as a bound; if you also need it to not mutate state, use Fn."],["FnMut","is subtrait of","FnOnce"],["Fn","is subtrait of","FnOnce"]],"links":["struct.Range.html","struct.RangeFrom.html","struct.RangeFull.html","struct.RangeInclusive.html","struct.RangeTo.html","struct.RangeToInclusive.html","enum.Bound.html","enum.GeneratorState.html","trait.Add.html","trait.AddAssign.html","trait.BitAnd.html","trait.BitAndAssign.html","trait.BitOr.html","trait.BitOrAssign.html","trait.BitXor.html","trait.BitXorAssign.html","trait.CoerceUnsized.html","trait.Deref.html","trait.DerefMut.html","trait.Div.html","trait.DivAssign.html","trait.Drop.html","trait.Fn.html","trait.FnMut.html","trait.Generator.html","trait.Index.html","trait.IndexMut.html","trait.Mul.html","trait.MulAssign.html","trait.Neg.html","trait.Not.html","trait.RangeBounds.html","trait.Rem.html","trait.RemAssign.html","trait.Shl.html","trait.ShlAssign.html","trait.Shr.html","trait.ShrAssign.html","trait.Sub.html","trait.SubAssign.html","trait.Try.html","../../src/core/ops/function.rs.html","../../core/index.html","../index.html","index.html"],"create_time":"2025-03-02T05:15:36.105Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/ops/function/trait.FnOnce.html","id":"eea6d8f8-6c5b-4ef3-ae6c-d73cfef29568","model":"deepseek-r1-250120"}