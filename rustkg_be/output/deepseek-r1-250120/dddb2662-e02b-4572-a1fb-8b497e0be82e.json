{"relations":["is a","has full name","stable since","has declaration","has description","has method","has argument","has return type","implements","has stability","has type","requires method","has property","has trait implementation","has source code"],"relation_pairs":[["Mutex","is a","Struct"],["Mutex","has full name","std::sync::Mutex"],["Mutex","stable since","1.0.0"],["Mutex","has declaration","pub struct Mutex<T: ?Sized> { /* fields omitted */ }"],["Mutex","has description","A mutual exclusion primitive useful for protecting shared data"],["Mutex","has description","This mutex will block threads waiting for the lock to become available"],["Mutex","has property","poisoning"],["Mutex","has method","new"],["new","has argument","t"],["t","has type","T"],["new","has return type","Mutex<T>"],["new","has description","Creates a new mutex in an unlocked state ready for use"],["Mutex","has method","lock"],["lock","has return type","LockResult<MutexGuard<T>>"],["lock","has description","Acquires a mutex, blocking the current thread until it is able to do so"],["Mutex","has method","try_lock"],["try_lock","has return type","TryLockResult<MutexGuard<T>>"],["try_lock","has description","Attempts to acquire this lock"],["Mutex","has method","is_poisoned"],["is_poisoned","stable since","1.2.0"],["is_poisoned","has return type","bool"],["is_poisoned","has description","Determines whether the mutex is poisoned"],["Mutex","has method","into_inner"],["into_inner","stable since","1.6.0"],["into_inner","has return type","LockResult<T>"],["into_inner","has description","Consumes this mutex, returning the underlying data"],["Mutex","has method","get_mut"],["get_mut","stable since","1.6.0"],["get_mut","has return type","LockResult<&mut T>"],["get_mut","has description","Returns a mutable reference to the underlying data"],["Mutex<T>","implements","UnwindSafe"],["Mutex<T>","stable since","1.9.0"],["Mutex<T>","implements","RefUnwindSafe"],["Mutex<T>","stable since","1.12.0"],["Mutex<T>","implements","Send"],["Mutex<T>","implements","Sync"],["Mutex<T>","implements","Drop"],["Mutex<T>","implements","From<T>"],["From<T>","stable since","1.24.0"],["Mutex<T>","implements","Default"],["Default","stable since","1.10.0"],["Mutex<T>","implements","Debug"],["Mutex","has source code","../../src/std/sync/mutex.rs.html#121-130"]],"links":["../../src/std/sync/mutex.rs.html","../../std/sync/struct.Mutex.html","../primitive.u32.html","../../std/result/enum.Result.html","../../std/sync/struct.MutexGuard.html","../../std/marker/trait.Sized.html","../../std/panic/trait.UnwindSafe.html","../../std/panic/trait.RefUnwindSafe.html","../../std/marker/trait.Send.html","../../std/marker/trait.Sync.html","../../std/ops/trait.Drop.html","../../std/convert/trait.From.html","../../std/default/trait.Default.html","../../std/fmt/trait.Debug.html"],"create_time":"2025-03-01T17:22:58.128Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/struct.Mutex.html","id":"dddb2662-e02b-4572-a1fb-8b497e0be82e","model":"deepseek-r1-250120"}