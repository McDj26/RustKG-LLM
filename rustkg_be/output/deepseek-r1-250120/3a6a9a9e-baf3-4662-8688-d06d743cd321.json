{"relations":["is a","has full name","stable since","has declaration","has description","has method","has argument","has type","has return type","has stability","implements","requires method","has attribute"],"relation_pairs":[["Layout","is a","Struct"],["Layout","has full name","alloc::alloc::Layout"],["Layout","stable since","1.28.0"],["Layout","has declaration","pub struct Layout { /* fields omitted */ }"],["Layout","has attribute","alloc_layout"],["Layout","has description","Layout of a block of memory. An instance of Layout describes a particular layout of memory..."],["from_size_align","is a","function"],["Layout","has method","from_size_align"],["from_size_align","has argument","size"],["from_size_align::size","has type","usize"],["from_size_align","has argument","align"],["from_size_align::align","has type","usize"],["from_size_align","has return type","Result<Layout, LayoutErr>"],["from_size_align","has description","Constructs a Layout from a given size and align..."],["from_size_align_unchecked","is a","function"],["Layout","has method","from_size_align_unchecked"],["from_size_align_unchecked","has argument","size"],["from_size_align_unchecked::size","has type","usize"],["from_size_align_unchecked","has argument","align"],["from_size_align_unchecked::align","has type","usize"],["from_size_align_unchecked","has return type","Layout"],["from_size_align_unchecked","has description","Creates a layout bypassing all checks"],["size","is a","function"],["Layout","has method","size"],["size","has return type","usize"],["size","has description","The minimum size in bytes for a memory block of this layout"],["align","is a","function"],["Layout","has method","align"],["align","has return type","usize"],["align","has description","The minimum byte alignment for a memory block of this layout"],["new","is a","function"],["Layout","has method","new"],["new","has return type","Layout"],["new","has description","Constructs a Layout suitable for holding a value of type T"],["align_to","is a","function"],["Layout","has method","align_to"],["align_to","has argument","align"],["align_to::align","has type","usize"],["align_to","has return type","Layout"],["align_to","has stability","ðŸ”¬ This is a nightly-only experimental API. (allocator_api #32838)"],["Layout","implements","Clone"],["Layout","implements","Debug"],["Layout","implements","Eq"],["Layout","implements","Copy"]],"links":["../../src/core/alloc.rs.html","../../alloc/alloc/struct.Layout.html","../../core/clone/trait.Clone.html","../../core/fmt/trait.Debug.html","../../core/cmp/trait.Eq.html","../../core/marker/trait.Copy.html","../../core/result/enum.Result.html","../../alloc/alloc/struct.LayoutErr.html"],"create_time":"2025-03-01T16:49:55.753Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/struct.Layout.html","id":"3a6a9a9e-baf3-4662-8688-d06d743cd321","model":"deepseek-r1-250120"}