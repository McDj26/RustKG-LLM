{"relations":["is a","has full name","stable since","requires method","has return type","has argument","implements","has description","has declaration","has stability"],"relation_pairs":[["BufRead","is a","Trait"],["BufRead","has full name","std::io::BufRead"],["BufRead","stable since","1.0.0"],["BufRead","requires method","fill_buf"],["BufRead","requires method","consume"],["fill_buf","has return type","Result<&[u8]>"],["consume","has argument","amt"],["amt","has type","usize"],["read_until","has argument","byte"],["byte","has type","u8"],["read_until","has argument","buf"],["buf","has type","&mut Vec<u8>"],["read_line","has argument","buf"],["buf","has type","&mut String"],["Empty","implements","BufRead"],["&[u8]","implements","BufRead"],["StdinLock","implements","BufRead"],["Box<B>","implements","BufRead"],["BufReader<R>","implements","BufRead"],["Cursor<T>","implements","BufRead"],["Take<T>","implements","BufRead"],["Chain<T, U>","implements","BufRead"],["BufRead","has description","A BufRead is a type of Reader which has an internal buffer, allowing it to perform extra ways of reading."],["read_line","has description","Read all bytes until a newline (the 0xA byte) is reached, and append them to the provided buffer."],["split","returns","Split<Self>"],["lines","returns","Lines<Self>"]],"links":["struct.BufReader.html","struct.Cursor.html","struct.Empty.html","struct.StdinLock.html","struct.Chain.html","struct.Take.html","../../../primitive.usize.html","../../../primitive.u8.html","trait.Read.html","trait.Write.html","trait.Seek.html","fn.copy.html","fn.sink.html","fn.stderr.html","fn.stdin.html","fn.stdout.html","type.Result.html"],"create_time":"2025-03-02T04:28:03.381Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/io/trait.BufRead.html","id":"19b5be9a-bf4e-43b2-8137-945f85409a1c","model":"deepseek-r1-250120"}