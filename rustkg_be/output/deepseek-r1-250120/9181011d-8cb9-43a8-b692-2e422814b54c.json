{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","has description","has argument","has return type","implements","has underlying type","has type"],"relation_pairs":[["AtomicI8","is a","Struct"],["AtomicI8","has full name","core::sync::atomic::AtomicI8"],["AtomicI8","has declaration","pub struct AtomicI8 { /* fields omitted */ }"],["AtomicI8","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["AtomicI8","has description","An integer type which can be safely shared between threads."],["AtomicI8","has underlying type","i8"],["new","is a","function"],["new","has full name","core::sync::atomic::AtomicI8::new"],["new","has argument","v"],["v","has type","i8"],["new","has return type","AtomicI8"],["new","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["new","has description","Creates a new atomic integer."],["get_mut","is a","function"],["get_mut","has full name","core::sync::atomic::AtomicI8::get_mut"],["get_mut","has argument","self"],["self","has type","&mut AtomicI8"],["get_mut","has return type","&mut i8"],["get_mut","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["get_mut","has description","Returns a mutable reference to the underlying integer."],["into_inner","is a","function"],["into_inner","has full name","core::sync::atomic::AtomicI8::into_inner"],["into_inner","has return type","i8"],["into_inner","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["into_inner","has description","Consumes the atomic and returns the contained value."],["load","is a","function"],["load","has full name","core::sync::atomic::AtomicI8::load"],["load","has argument","self"],["load","has argument","order"],["order","has type","Ordering"],["load","has return type","i8"],["load","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["load","has description","Loads a value from the atomic integer."],["store","is a","function"],["store","has full name","core::sync::atomic::AtomicI8::store"],["store","has argument","self"],["store","has argument","val"],["val","has type","i8"],["store","has argument","order"],["order","has type","Ordering"],["store","has stability","This is a nightly-only experimental API. (integer_atomics #32976)"],["store","has description","Stores a value into the atomic integer."],["AtomicI8","implements","Default"],["AtomicI8","implements","From<i8>"],["AtomicI8","implements","Debug"],["AtomicI8","implements","Sync"]],"links":["../../../src/core/sync/atomic.rs.html","../../../std/primitive.i8.html","enum.Ordering.html","../../../core/default/trait.Default.html","../../../core/convert/trait.From.html","../../../core/fmt/trait.Debug.html","../../../core/marker/trait.Sync.html","../../../core/result/enum.Result.html","../../../core/option/enum.Option.html","../../../core/ops/trait.FnMut.html","https://github.com/rust-lang/rust/issues/32976","https://github.com/rust-lang/rust/issues/48655"],"create_time":"2025-03-01T17:25:37.473Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/sync/atomic/struct.AtomicI8.html","id":"9181011d-8cb9-43a8-b692-2e422814b54c","model":"deepseek-r1-250120"}