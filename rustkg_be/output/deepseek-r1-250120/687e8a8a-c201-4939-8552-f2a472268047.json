{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has variant","has type","has description","has method","has return type","has argument","has attribute","implements","has declaration","has stability"],"relation_pairs":[["IpAddr","is a","Enum"],["IpAddr","has full name","std::net::IpAddr"],["IpAddr","stable since","1.7.0"],["IpAddr","has declaration","pub enum IpAddr { V4(Ipv4Addr), V6(Ipv6Addr) }"],["IpAddr","has description","An IP address, either IPv4 or IPv6."],["IpAddr","has variant","V4"],["V4","has type","Ipv4Addr"],["V4","has description","An IPv4 address."],["IpAddr","has variant","V6"],["V6","has type","Ipv6Addr"],["V6","has description","An IPv6 address."],["IpAddr","has method","is_unspecified"],["is_unspecified","is a","function"],["is_unspecified","has return type","bool"],["is_unspecified","stable since","1.12.0"],["is_unspecified","has argument","is_unspecified::self"],["is_unspecified","has description","Returns true for the special 'unspecified' address. See the documentation for Ipv4Addr::is_unspecified and Ipv6Addr::is_unspecified for more details."],["IpAddr","has method","is_loopback"],["is_loopback","is a","function"],["is_loopback","has return type","bool"],["is_loopback","stable since","1.12.0"],["is_loopback","has argument","is_loopback::self"],["is_loopback","has description","Returns true if this is a loopback address. See the documentation for Ipv4Addr::is_loopback and Ipv6Addr::is_loopback for more details."],["IpAddr","has method","is_global"],["is_global","is a","function"],["is_global","has return type","bool"],["is_global","has attribute","unstable"],["is_global","has description","Returns true if the address appears to be globally routable. See the documentation for Ipv4Addr::is_global and Ipv6Addr::is_global for more details."],["IpAddr","has method","is_multicast"],["is_multicast","is a","function"],["is_multicast","has return type","bool"],["is_multicast","stable since","1.12.0"],["is_multicast","has argument","is_multicast::self"],["is_multicast","has description","Returns true if this is a multicast address. See the documentation for Ipv4Addr::is_multicast and Ipv6Addr::is_multicast for more details."],["IpAddr","has method","is_documentation"],["is_documentation","is a","function"],["is_documentation","has return type","bool"],["is_documentation","has attribute","unstable"],["is_documentation","has description","Returns true if this address is in a range designated for documentation. See the documentation for Ipv4Addr::is_documentation and Ipv6Addr::is_documentation for more details."],["IpAddr","has method","is_ipv4"],["is_ipv4","is a","function"],["is_ipv4","has return type","bool"],["is_ipv4","stable since","1.16.0"],["is_ipv4","has argument","is_ipv4::self"],["is_ipv4","has description","Returns true if this address is an IPv4 address, and false otherwise."],["IpAddr","has method","is_ipv6"],["is_ipv6","is a","function"],["is_ipv6","has return type","bool"],["is_ipv6","stable since","1.16.0"],["is_ipv6","has argument","is_ipv6::self"],["is_ipv6","has description","Returns true if this address is an IPv6 address, and false otherwise."],["IpAddr","implements","Copy"],["IpAddr","implements","Clone"],["IpAddr","implements","Eq"],["IpAddr","implements","PartialEq"],["IpAddr","implements","Debug"],["IpAddr","implements","Hash"],["IpAddr","implements","PartialOrd"],["IpAddr","implements","Ord"],["IpAddr","implements","Display"],["IpAddr","implements","From<Ipv4Addr>"],["IpAddr","implements","From<Ipv6Addr>"],["IpAddr","implements","From<[u8; 4]>"],["IpAddr","implements","From<[u8; 16]>"],["IpAddr","implements","FromStr"]],"links":["../../src/std/net/ip.rs.html","../../std/net/struct.Ipv4Addr.html","../../std/net/struct.Ipv6Addr.html","../../std/convert/trait.From.html","../../std/primitive.bool.html","../../std/str/trait.FromStr.html","../../std/marker/trait.Copy.html","../../std/clone/trait.Clone.html","../../std/cmp/trait.Eq.html","../../std/cmp/trait.PartialEq.html","../../std/fmt/trait.Debug.html","../../std/hash/trait.Hash.html","../../std/cmp/trait.PartialOrd.html","../../std/cmp/trait.Ord.html","../../std/fmt/trait.Display.html","../../std/net/struct.AddrParseError.html","../../std/primitive.u8.html","../../std/primitive.u16.html"],"create_time":"2025-03-01T16:05:13.439Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/net/enum.IpAddr.html","id":"687e8a8a-c201-4939-8552-f2a472268047","model":"deepseek-r1-250120"}