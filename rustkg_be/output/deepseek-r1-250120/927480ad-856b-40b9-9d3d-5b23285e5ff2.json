{"relations":["is a","has full name","stable since","has description","has stability","has attribute"],"relation_pairs":[["alloc::alloc","is a","Module"],["alloc::alloc","has full name","alloc::alloc"],["alloc::alloc","stable since","1.28.0"],["alloc::alloc","has description","Memory allocation APIs"],["Layout","is a","struct"],["Layout","has full name","alloc::alloc::Layout"],["Layout","has description","Layout of a block of memory."],["LayoutErr","is a","struct"],["LayoutErr","has full name","alloc::alloc::LayoutErr"],["LayoutErr","has description","The parameters given to Layout::from_size_align or some other Layout constructor do not satisfy its documented constraints."],["AllocErr","is a","struct"],["AllocErr","has full name","alloc::alloc::AllocErr"],["AllocErr","has stability","Experimental"],["AllocErr","has description","The AllocErr error indicates an allocation failure that may be due to resource exhaustion or to something wrong when combining the given input arguments with this allocator."],["CannotReallocInPlace","is a","struct"],["CannotReallocInPlace","has full name","alloc::alloc::CannotReallocInPlace"],["CannotReallocInPlace","has stability","Experimental"],["CannotReallocInPlace","has description","The CannotReallocInPlace error is used when grow_in_place or shrink_in_place were unable to reuse the given memory block for a requested layout."],["Excess","is a","struct"],["Excess","has full name","alloc::alloc::Excess"],["Excess","has stability","Experimental"],["Excess","has description","Represents the combination of a starting address and a total capacity of the returned block."],["Global","is a","struct"],["Global","has full name","alloc::alloc::Global"],["Global","has stability","Experimental"],["Global","has description","The global memory allocator."],["GlobalAlloc","is a","trait"],["GlobalAlloc","has full name","alloc::alloc::GlobalAlloc"],["GlobalAlloc","has description","A memory allocator that can be registered as the standard libraryâ€™s default though the #[global_allocator] attributes."],["Alloc","is a","trait"],["Alloc","has full name","alloc::alloc::Alloc"],["Alloc","has stability","Experimental"],["Alloc","has description","An implementation of Alloc can allocate, reallocate, and deallocate arbitrary blocks of data described via Layout."],["alloc","is a","function"],["alloc","has full name","alloc::alloc::alloc"],["alloc","has attribute","unsafe"],["alloc","has description","Allocate memory with the global allocator."],["alloc_zeroed","is a","function"],["alloc_zeroed","has full name","alloc::alloc::alloc_zeroed"],["alloc_zeroed","has attribute","unsafe"],["alloc_zeroed","has description","Allocate zero-initialized memory with the global allocator."],["dealloc","is a","function"],["dealloc","has full name","alloc::alloc::dealloc"],["dealloc","has attribute","unsafe"],["dealloc","has description","Deallocate memory with the global allocator."],["handle_alloc_error","is a","function"],["handle_alloc_error","has full name","alloc::alloc::handle_alloc_error"],["handle_alloc_error","has description","Abort on memory allocation error or failure."],["realloc","is a","function"],["realloc","has full name","alloc::alloc::realloc"],["realloc","has attribute","unsafe"],["realloc","has description","Reallocate memory with the global allocator."]],"links":["../index.html","struct.Layout.html","struct.LayoutErr.html","struct.AllocErr.html","struct.CannotReallocInPlace.html","struct.Excess.html","struct.Global.html","trait.GlobalAlloc.html","trait.Alloc.html","fn.alloc.html","fn.alloc_zeroed.html","fn.dealloc.html","fn.handle_alloc_error.html","fn.realloc.html","../../src/alloc/alloc.rs.html"],"create_time":"2025-03-01T15:37:43.113Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/alloc/alloc/index.html","id":"927480ad-856b-40b9-9d3d-5b23285e5ff2","model":"deepseek-r1-250120"}