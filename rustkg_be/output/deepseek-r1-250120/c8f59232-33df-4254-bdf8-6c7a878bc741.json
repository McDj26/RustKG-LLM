{"relations":["is a","has full name","stable since","deprecated since","has associated type","requires method","has return type","has argument","has type","has description","implements","has deprecation reason","has declaration","has example"],"relation pairs":[["AsciiExt","is a","Trait"],["AsciiExt","has full name","std::ascii::AsciiExt"],["AsciiExt","stable since","1.0.0"],["AsciiExt","deprecated since","1.26.0"],["AsciiExt","has deprecation reason","use inherent methods instead"],["AsciiExt","has declaration","pub trait AsciiExt { type Owned; fn is_ascii(&self) -> bool; ... }"],["AsciiExt","has associated type","Owned"],["Owned","has description","Container type for copied ASCII characters."],["AsciiExt","requires method","is_ascii"],["is_ascii","has return type","bool"],["is_ascii","deprecated since","1.26.0"],["is_ascii","has description","Checks if the value is within the ASCII range."],["AsciiExt","requires method","to_ascii_uppercase"],["to_ascii_uppercase","has return type","Self::Owned"],["to_ascii_uppercase","deprecated since","1.26.0"],["to_ascii_uppercase","has description","Makes a copy of the value in its ASCII upper case equivalent."],["AsciiExt","requires method","to_ascii_lowercase"],["to_ascii_lowercase","has return type","Self::Owned"],["to_ascii_lowercase","deprecated since","1.26.0"],["to_ascii_lowercase","has description","Makes a copy of the value in its ASCII lower case equivalent."],["AsciiExt","requires method","eq_ignore_ascii_case"],["eq_ignore_ascii_case","has return type","bool"],["eq_ignore_ascii_case","deprecated since","1.26.0"],["eq_ignore_ascii_case","has description","Checks that two values are an ASCII case-insensitive match."],["AsciiExt","requires method","make_ascii_uppercase"],["make_ascii_uppercase","deprecated since","1.26.0"],["make_ascii_uppercase","has description","Converts this type to its ASCII upper case equivalent in-place."],["AsciiExt","requires method","make_ascii_lowercase"],["make_ascii_lowercase","deprecated since","1.26.0"],["make_ascii_lowercase","has description","Converts this type to its ASCII lower case equivalent in-place."],["char","implements","AsciiExt"],["char::AsciiExt::Owned","is","char"],["[u8]","implements","AsciiExt"],["[u8]::AsciiExt::Owned","is","Vec<u8>"],["str","implements","AsciiExt"],["str::AsciiExt::Owned","is","String"],["u8","implements","AsciiExt"],["u8::AsciiExt::Owned","is","u8"],["make_ascii_uppercase","stable since","1.9.0"],["make_ascii_lowercase","stable since","1.9.0"],["AsciiExt","has example","<pre class=\"rust rust-example-rendered\">..."]],"links":["../../src/std/ascii.rs.html","../index.html","index.html","../../std/string/struct.String.html","../primitive.char.html","../primitive.slice.html","../primitive.str.html","../primitive.u8.html","../primitive.reference.html","../primitive.bool.html","https://en.wikipedia.org/wiki/Combining_character"],"create_time":"2025-03-01T11:17:43.570Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/ascii/trait.AsciiExt.html","id":"c8f59232-33df-4254-bdf8-6c7a878bc741","model":"deepseek-r1-250120"}