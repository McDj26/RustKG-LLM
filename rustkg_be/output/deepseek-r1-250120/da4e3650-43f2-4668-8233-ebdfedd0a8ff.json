{"relations":["is a","has full name","stable since","has declaration","has description","has method","has argument","has return type","has stability","implements","requires","has type","supports","defined in","has example"],"relation_pairs":[["AtomicPtr","is a","Struct"],["AtomicPtr","has full name","std::sync::atomic::AtomicPtr"],["AtomicPtr","stable since","1.0.0"],["AtomicPtr","has declaration","pub struct AtomicPtr<T> { /* fields omitted */ }"],["AtomicPtr","has description","A raw pointer type which can be safely shared between threads."],["AtomicPtr","has description","This type has the same in-memory representation as a *mut T."],["new","is a","method"],["new","has argument","p"],["new","has return type","AtomicPtr<T>"],["new","has description","Creates a new AtomicPtr."],["get_mut","is a","method"],["get_mut","stable since","1.15.0"],["get_mut","has return type","&mut *mut T"],["get_mut","has description","Returns a mutable reference to the underlying pointer."],["into_inner","is a","method"],["into_inner","stable since","1.15.0"],["into_inner","has return type","*mut T"],["into_inner","has description","Consumes the atomic and returns the contained value."],["load","is a","method"],["load","has argument","order"],["load","has return type","*mut T"],["load","has description","Loads a value from the pointer."],["store","is a","method"],["store","has argument","ptr"],["store","has argument","order"],["store","has description","Stores a value into the pointer."],["swap","is a","method"],["swap","has argument","ptr"],["swap","has argument","order"],["swap","has return type","*mut T"],["swap","has description","Stores a value into the pointer, returning the previous value."],["compare_and_swap","is a","method"],["compare_and_swap","has argument","current"],["compare_and_swap","has argument","new"],["compare_and_swap","has argument","order"],["compare_and_swap","has return type","*mut T"],["compare_and_swap","has description","Stores a value into the pointer if the current value is the same as the current value."],["compare_exchange","is a","method"],["compare_exchange","stable since","1.10.0"],["compare_exchange","has argument","current"],["compare_exchange","has argument","new"],["compare_exchange","has argument","success"],["compare_exchange","has argument","failure"],["compare_exchange","has return type","Result<*mut T, *mut T>"],["compare_exchange","has description","Stores a value into the pointer if the current value is the same as the current value."],["compare_exchange_weak","is a","method"],["compare_exchange_weak","stable since","1.10.0"],["compare_exchange_weak","has argument","current"],["compare_exchange_weak","has argument","new"],["compare_exchange_weak","has argument","success"],["compare_exchange_weak","has argument","failure"],["compare_exchange_weak","has return type","Result<*mut T, *mut T>"],["compare_exchange_weak","has description","Stores a value into the pointer if the current value is the same as the current value."],["AtomicPtr","implements","Pointer"],["AtomicPtr","implements","Debug"],["AtomicPtr","implements","From<*mut T>"],["AtomicPtr","implements","Sync"],["AtomicPtr","implements","Default"],["AtomicPtr","implements","Send"],["AtomicPtr","implements","RefUnwindSafe"],["p","has type","*mut T"],["self","has type","AtomicPtr<T>"],["ptr","has type","*mut T"],["current","has type","*mut T"],["new","has type","*mut T"],["order","has type","Ordering"],["success","has type","Ordering"],["failure","has type","Ordering"]],"links":["../../../src/core/sync/atomic.rs.html","../../../src/std/panic.rs.html","../../../std/fmt/trait.Pointer.html","../../../std/fmt/trait.Debug.html","../../../std/convert/trait.From.html","../../../std/marker/trait.Sync.html","../../../std/default/trait.Default.html","../../../std/marker/trait.Send.html","../../../std/panic/trait.RefUnwindSafe.html","../../../std/primitive.pointer.html","../../../std/sync/atomic/enum.Ordering.html","../../../std/result/enum.Result.html"],"create_time":"2025-03-01T16:27:21.313Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/sync/atomic/struct.AtomicPtr.html","id":"da4e3650-43f2-4668-8233-ebdfedd0a8ff","model":"deepseek-r1-250120"}