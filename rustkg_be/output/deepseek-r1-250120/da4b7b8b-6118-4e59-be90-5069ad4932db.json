{"relations":["is a","has full name","stable since","is successor of","is predecessor of","implements","has declaration","has description","requires method","has argument","has return type","has type","has method","has stability"],"relation_pairs":[["LayoutErr","is a","struct"],["LayoutErr","has full name","core::alloc::LayoutErr"],["LayoutErr","stable since","1.28.0"],["LayoutErr","has declaration","pub struct LayoutErr { /* fields omitted */ }"],["LayoutErr","has description","The parameters given to Layout::from_size_align or some other Layout constructor do not satisfy its documented constraints."],["LayoutErr","implements","Clone"],["LayoutErr","implements","PartialEq"],["LayoutErr","implements","Eq"],["LayoutErr","implements","Debug"],["LayoutErr","implements","Display"],["LayoutErr","implements","Send"],["LayoutErr","implements","Sync"],["clone","is a","function"],["clone","has full name","core::alloc::LayoutErr::clone"],["clone","has return type","LayoutErr"],["clone","has argument","clone::self"],["clone::self","has type","&Self"],["clone","has description","Returns a copy of the value."],["clone_from","is a","function"],["clone_from","has full name","core::alloc::LayoutErr::clone_from"],["clone_from","stable since","1.0.0"],["clone_from","has argument","clone_from::self"],["clone_from::self","has type","&mut self"],["clone_from","has argument","clone_from::source"],["clone_from::source","has type","&Self"],["clone_from","has description","Performs copy-assignment from source."],["eq","is a","function"],["eq","has full name","core::alloc::LayoutErr::eq"],["eq","has return type","bool"],["eq","has argument","eq::self"],["eq::self","has type","&self"],["eq","has argument","eq::other"],["eq::other","has type","&LayoutErr"],["eq","has description","This method tests for self and other values to be equal, and is used by ==."],["ne","is a","function"],["ne","has full name","core::alloc::LayoutErr::ne"],["ne","has return type","bool"],["ne","has argument","ne::self"],["ne::self","has type","&self"],["ne","has argument","ne::other"],["ne::other","has type","&LayoutErr"],["ne","has description","This method tests for !=."],["fmt (Debug)","is a","function"],["fmt (Debug)","has full name","core::alloc::LayoutErr::fmt"],["fmt (Debug)","has return type","Result"],["fmt (Debug)","has argument","fmt::self"],["fmt (Debug)::self","has type","&self"],["fmt (Debug)","has argument","fmt::f"],["fmt (Debug)::f","has type","&mut Formatter"],["fmt (Debug)","has description","Formats the value using the given formatter."],["fmt (Display)","is a","function"],["fmt (Display)","has full name","core::alloc::LayoutErr::fmt"],["fmt (Display)","has return type","Result"],["fmt (Display)","has argument","fmt::self"],["fmt (Display)::self","has type","&self"],["fmt (Display)","has argument","fmt::f"],["fmt (Display)::f","has type","&mut Formatter"],["fmt (Display)","has description","Formats the value using the given formatter."]],"links":["../../src/core/alloc.rs.html","../../core/clone/trait.Clone.html","../../core/alloc/struct.LayoutErr.html","../../core/cmp/trait.PartialEq.html","../../core/cmp/trait.Eq.html","../../core/fmt/trait.Debug.html","../../core/fmt/trait.Display.html","../../core/marker/trait.Send.html","../../core/marker/trait.Sync.html","../../core/convert/trait.Into.html","../../core/convert/trait.From.html","../../core/convert/trait.TryInto.html","../../core/convert/trait.TryFrom.html","../../core/borrow/trait.Borrow.html","../../core/borrow/trait.BorrowMut.html","../../core/any/trait.Any.html","../../core/fmt/struct.Formatter.html"],"create_time":"2025-03-01T15:36:50.591Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/alloc/struct.LayoutErr.html","id":"da4b7b8b-6118-4e59-be90-5069ad4932db","model":"deepseek-r1-250120"}