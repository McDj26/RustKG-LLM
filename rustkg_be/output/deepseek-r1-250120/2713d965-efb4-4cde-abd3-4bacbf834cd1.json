{"relations":["is a","has full name","stable since","is successor of","is predecessor of","has declaration","has stability","has portability","has description","has attribute","has argument","has type","has return type"],"relation_pairs":[["__msa_add_a_b","is a","Function"],["__msa_add_a_b","has full name","core::arch::mips64::__msa_add_a_b"],["__msa_add_a_b","has declaration","pub unsafe fn __msa_add_a_b(a: i8x16, b: i8x16) -> i8x16"],["__msa_add_a_b","has stability","This is a nightly-only experimental API. (stdsimd #48556)"],["__msa_add_a_b","has portability","This is supported on MIPS-64 and target feature msa only."],["__msa_add_a_b","has description","Vector Add Absolute Values."],["__msa_add_a_b","has description","Adds the absolute values of the elements in `a` and `b` into the result vector."],["__msa_add_a_b","has attribute","unsafe"],["__msa_add_a_b","has argument","a"],["a","has type","i8x16"],["__msa_add_a_b","has argument","b"],["b","has type","i8x16"],["__msa_add_a_b","has return type","i8x16"],["i8x16","is a","struct"],["i8x16","has full name","core::arch::mips64::i8x16"],["i8x16","has description","MIPS-specific 128-bit wide vector of 16 packed `i8`."]],"links":["struct.i8x16.html","../../../src/core/up/stdsimd/coresimd/mips/msa.rs.html","../../index.html","../index.html","index.html","../../../settings.html","../../../core/index.html"],"create_time":"2025-03-02T05:04:36.381Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/core/arch/mips64/fn.__msa_add_a_b.html","id":"2713d965-efb4-4cde-abd3-4bacbf834cd1","model":"deepseek-r1-250120"}