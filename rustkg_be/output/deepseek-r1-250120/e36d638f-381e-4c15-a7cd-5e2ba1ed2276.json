{"relations":["is a","has full name","stable since","has declaration","has description","has variant","implements","has stability","requires method","has argument","has return type","is successor of","is predecessor of"],"relation_pairs":[["Bound","is a","Enum"],["Bound","has full name","std::ops::Bound"],["Bound","stable since","1.17.0"],["Bound","has declaration","pub enum Bound<T> { Included(T), Excluded(T), Unbounded }"],["Bound","has description","An endpoint of a range of keys."],["Included","is a","variant"],["Bound","has variant","Included"],["Included","has description","An inclusive bound."],["Excluded","is a","variant"],["Bound","has variant","Excluded"],["Excluded","has description","An exclusive bound."],["Unbounded","is a","variant"],["Bound","has variant","Unbounded"],["Unbounded","has description","An infinite endpoint. Indicates that there is no bound in this direction."],["Bound","implements","Hash"],["Bound","implements","Clone"],["Bound","implements","Debug"],["Bound","implements","Eq"],["Bound","implements","PartialEq<Bound<T>>"],["Bound","implements","Copy"],["Bound","implements","Send"],["Bound","implements","Sync"],["Range","is a","struct"],["Range","has description","A (half-open) range bounded inclusively below and exclusively above (`start..end`)."],["Range","has full name","std::ops::Range"],["RangeFrom","is a","struct"],["RangeFrom","has description","A range only bounded inclusively below (`start..`)."],["RangeFrom","has full name","std::ops::RangeFrom"],["RangeFull","is a","struct"],["RangeFull","has description","An unbounded range (`..`)."],["RangeFull","has full name","std::ops::RangeFull"],["RangeInclusive","is a","struct"],["RangeInclusive","has description","An range bounded inclusively below and above (`start..=end`)."],["RangeInclusive","has full name","std::ops::RangeInclusive"],["RangeTo","is a","struct"],["RangeTo","has description","A range only bounded exclusively above (`..end`)."],["RangeTo","has full name","std::ops::RangeTo"],["RangeToInclusive","is a","struct"],["RangeToInclusive","has description","A range only bounded inclusively above (`..=end`)."],["RangeToInclusive","has full name","std::ops::RangeToInclusive"],["GeneratorState","is a","enum"],["GeneratorState","has description","The result of a generator resumption."],["GeneratorState","has full name","std::ops::GeneratorState"],["Add","is a","trait"],["Add","has description","The addition operator `+`."],["Add","has full name","std::ops::Add"]],"links":["struct.Range.html","enum.GeneratorState.html","trait.Add.html","../../std/collections/btree_map/struct.BTreeMap.html","../../src/core/ops/range.rs.html","../../std/hash/trait.Hash.html","../../std/clone/trait.Clone.html","../../std/fmt/trait.Debug.html","../../std/cmp/trait.Eq.html","../../std/cmp/trait.PartialEq.html","../../std/marker/trait.Copy.html","../../std/marker/trait.Send.html","../../std/marker/trait.Sync.html"],"create_time":"2025-03-02T05:13:54.544Z","source_url":"file:///C:/Users/Dj/.rustup/toolchains/1.30-x86_64-pc-windows-msvc/share/doc/rust/html/std/ops/enum.Bound.html","id":"e36d638f-381e-4c15-a7cd-5e2ba1ed2276","model":"deepseek-r1-250120"}